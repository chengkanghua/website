{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"1 web\u5e94\u7528 Web\u5e94\u7528\u7a0b\u5e8f\u662f\u4e00\u79cd\u53ef\u4ee5\u901a\u8fc7Web\u8bbf\u95ee\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u7684\u6700\u5927\u597d\u5904\u662f\u7528\u6237\u5f88\u5bb9\u6613\u8bbf\u95ee\u5e94\u7528\u7a0b\u5e8f\uff0c\u7528\u6237\u53ea\u9700\u8981\u6709\u6d4f\u89c8\u5668\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u518d\u5b89\u88c5\u5176\u4ed6\u8f6f\u4ef6\u3002\u5e94\u7528\u7a0b\u5e8f\u6709\u4e24\u79cd\u6a21\u5f0fC/S\u3001B/S\u3002C/S\u662f\u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u7aef\u7a0b\u5e8f\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u7c7b\u7a0b\u5e8f\u4e00\u822c\u72ec\u7acb\u8fd0\u884c\u3002\u800cB/S\u5c31\u662f\u6d4f\u89c8\u5668\u7aef/\u670d\u52a1\u5668\u7aef\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u7c7b\u5e94\u7528\u7a0b\u5e8f\u4e00\u822c\u501f\u52a9\u8c37\u6b4c\uff0c\u706b\u72d0\u7b49\u6d4f\u89c8\u5668\u6765\u8fd0\u884c\u3002WEB\u5e94\u7528\u7a0b\u5e8f\u4e00\u822c\u662fB/S\u6a21\u5f0f\u3002Web\u5e94\u7528\u7a0b\u5e8f\u9996\u5148\u662f\u201c\u5e94\u7528\u7a0b\u5e8f\u201d\uff0c\u548c\u7528\u6807\u51c6\u7684\u7a0b\u5e8f\u8bed\u8a00\uff0c\u5982java\uff0cpython\u7b49\u7f16\u5199\u51fa\u6765\u7684\u7a0b\u5e8f\u6ca1\u6709\u4ec0\u4e48\u672c\u8d28\u4e0a\u7684\u4e0d\u540c\u3002\u5728\u7f51\u7edc\u7f16\u7a0b\u7684\u610f\u4e49\u4e0b\uff0c\u6d4f\u89c8\u5668\u662f\u4e00\u4e2asocket\u5ba2\u6237\u7aef\uff0c\u670d\u52a1\u5668\u662f\u4e00\u4e2asocket\u670d\u52a1\u7aef\u3002 import socket def handle_request(client): request_data = client.recv(1024) print(\"request_data: \",request_data) client.send(\"HTTP/1.1 200 OK\\r\\nstatus: 200\\r\\nContent-Type:text/html\\r\\n\\r\\n\".encode(\"utf8\")) client.send(\"<h1>Hello, luffycity!</h1><img src=''>\".encode(\"utf8\")) def main(): sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind(('localhost',8812)) sock.listen(5) while True: print(\"the server is waiting for client-connection....\") connection, address = sock.accept() handle_request(connection) connection.close() if __name__ == '__main__': main() 2 http\u534f\u8bae http\u534f\u8bae\u7b80\u4ecb HTTP\u534f\u8bae\u662fHyper Text Transfer Protocol\uff08\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09\u7684\u7f29\u5199,\u662f\u7528\u4e8e\u4e07\u7ef4\u7f51\uff08WWW:World Wide Web \uff09\u670d\u52a1\u5668\u4e0e\u672c\u5730\u6d4f\u89c8\u5668\u4e4b\u95f4\u4f20\u8f93\u8d85\u6587\u672c\u7684\u4f20\u9001\u534f\u8bae\u3002 HTTP\u662f\u4e00\u4e2a\u5c5e\u4e8e\u5e94\u7528\u5c42\u7684\u9762\u5411\u5bf9\u8c61\u7684\u534f\u8bae\uff0c\u7531\u4e8e\u5176\u7b80\u6377\u3001\u5feb\u901f\u7684\u65b9\u5f0f\uff0c\u9002\u7528\u4e8e\u5206\u5e03\u5f0f\u8d85\u5a92\u4f53\u4fe1\u606f\u7cfb\u7edf\u3002\u5b83\u4e8e1990\u5e74\u63d0\u51fa\uff0c\u7ecf\u8fc7\u51e0\u5e74\u7684\u4f7f\u7528\u4e0e\u53d1\u5c55\uff0c\u5f97\u5230\u4e0d\u65ad\u5730\u5b8c\u5584\u548c\u6269\u5c55\u3002HTTP\u534f\u8bae\u5de5\u4f5c\u4e8e\u5ba2\u6237\u7aef-\u670d\u52a1\u7aef\u67b6\u6784\u4e3a\u4e0a\u3002\u6d4f\u89c8\u5668\u4f5c\u4e3aHTTP\u5ba2\u6237\u7aef\u901a\u8fc7URL\u5411HTTP\u670d\u52a1\u7aef\u5373WEB\u670d\u52a1\u5668\u53d1\u9001\u6240\u6709\u8bf7\u6c42\u3002Web\u670d\u52a1\u5668\u6839\u636e\u63a5\u6536\u5230\u7684\u8bf7\u6c42\u540e\uff0c\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u54cd\u5e94\u4fe1\u606f\u3002 http\u534f\u8bae\u7279\u6027 (1) \u57fa\u4e8eTCP/IP http\u534f\u8bae\u662f\u57fa\u4e8eTCP/IP\u534f\u8bae\u4e4b\u4e0a\u7684\u5e94\u7528\u5c42\u534f\u8bae\u3002 (2) \u57fa\u4e8e\u8bf7\u6c42\uff0d\u54cd\u5e94\u6a21\u5f0f HTTP\u534f\u8bae\u89c4\u5b9a,\u8bf7\u6c42\u4ece\u5ba2\u6237\u7aef\u53d1\u51fa,\u6700\u540e\u670d\u52a1\u5668\u7aef\u54cd\u5e94\u8be5\u8bf7\u6c42\u5e76 \u8fd4\u56de\u3002\u6362\u53e5\u8bdd\u8bf4,\u80af\u5b9a\u662f\u5148\u4ece\u5ba2\u6237\u7aef\u5f00\u59cb\u5efa\u7acb\u901a\u4fe1\u7684,\u670d\u52a1\u5668\u7aef\u5728\u6ca1\u6709 \u63a5\u6536\u5230\u8bf7\u6c42\u4e4b\u524d\u4e0d\u4f1a\u53d1\u9001\u54cd\u5e94 (3) \u65e0\u72b6\u6001\u4fdd\u5b58 HTTP\u662f\u4e00\u79cd\u4e0d\u4fdd\u5b58\u72b6\u6001,\u5373\u65e0\u72b6\u6001(stateless)\u534f\u8bae\u3002HTTP\u534f\u8bae \u81ea\u8eab\u4e0d\u5bf9\u8bf7\u6c42\u548c\u54cd\u5e94\u4e4b\u95f4\u7684\u901a\u4fe1\u72b6\u6001\u8fdb\u884c\u4fdd\u5b58\u3002\u4e5f\u5c31\u662f\u8bf4\u5728HTTP\u8fd9\u4e2a \u7ea7\u522b,\u534f\u8bae\u5bf9\u4e8e\u53d1\u9001\u8fc7\u7684\u8bf7\u6c42\u6216\u54cd\u5e94\u90fd\u4e0d\u505a\u6301\u4e45\u5316\u5904\u7406\u3002 \u4f7f\u7528HTTP\u534f\u8bae,\u6bcf\u5f53\u6709\u65b0\u7684\u8bf7\u6c42\u53d1\u9001\u65f6,\u5c31\u4f1a\u6709\u5bf9\u5e94\u7684\u65b0\u54cd\u5e94\u4ea7 \u751f\u3002\u534f\u8bae\u672c\u8eab\u5e76\u4e0d\u4fdd\u7559\u4e4b\u524d\u4e00\u5207\u7684\u8bf7\u6c42\u6216\u54cd\u5e94\u62a5\u6587\u7684\u4fe1\u606f\u3002\u8fd9\u662f\u4e3a\u4e86\u66f4\u5feb\u5730\u5904\u7406\u5927\u91cf\u4e8b\u52a1,\u786e\u4fdd\u534f\u8bae\u7684\u53ef\u4f38\u7f29\u6027,\u800c\u7279\u610f\u628aHTTP\u534f\u8bae\u8bbe\u8ba1\u6210 \u5982\u6b64\u7b80\u5355\u7684\u3002\u53ef\u662f,\u968f\u7740Web\u7684\u4e0d\u65ad\u53d1\u5c55,\u56e0\u65e0\u72b6\u6001\u800c\u5bfc\u81f4\u4e1a\u52a1\u5904\u7406\u53d8\u5f97\u68d8\u624b \u7684\u60c5\u51b5\u589e\u591a\u4e86\u3002\u6bd4\u5982,\u7528\u6237\u767b\u5f55\u5230\u4e00\u5bb6\u8d2d\u7269\u7f51\u7ad9,\u5373\u4f7f\u4ed6\u8df3\u8f6c\u5230\u8be5\u7ad9\u7684 \u5176\u4ed6\u9875\u9762\u540e,\u4e5f\u9700\u8981\u80fd\u7ee7\u7eed\u4fdd\u6301\u767b\u5f55\u72b6\u6001\u3002\u9488\u5bf9\u8fd9\u4e2a\u5b9e\u4f8b,\u7f51\u7ad9\u4e3a\u4e86\u80fd \u591f\u638c\u63e1\u662f\u8c01\u9001\u51fa\u7684\u8bf7\u6c42,\u9700\u8981\u4fdd\u5b58\u7528\u6237\u7684\u72b6\u6001\u3002HTTP/1.1\u867d\u7136\u662f\u65e0\u72b6\u6001\u534f\u8bae,\u4f46\u4e3a\u4e86\u5b9e\u73b0\u671f\u671b\u7684\u4fdd\u6301\u72b6\u6001\u529f\u80fd, \u4e8e\u662f\u5f15\u5165\u4e86Cookie\u6280\u672f\u3002\u6709\u4e86Cookie\u518d\u7528HTTP\u534f\u8bae\u901a\u4fe1,\u5c31\u53ef\u4ee5\u7ba1 \u7406\u72b6\u6001\u4e86\u3002\u6709\u5173Cookie\u7684\u8be6\u7ec6\u5185\u5bb9\u7a0d\u540e\u8bb2\u89e3\u3002 \u65e0\u8fde\u63a5 \u65e0\u8fde\u63a5\u7684\u542b\u4e49\u662f\u9650\u5236\u6bcf\u6b21\u8fde\u63a5\u53ea\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\u3002\u670d\u52a1\u5668\u5904\u7406\u5b8c\u5ba2\u6237\u7684\u8bf7\u6c42\uff0c\u5e76\u6536\u5230\u5ba2\u6237\u7684\u5e94\u7b54\u540e\uff0c\u5373\u65ad\u5f00\u8fde\u63a5\u3002\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8282\u7701\u4f20\u8f93\u65f6\u95f4\u3002 http\u8bf7\u6c42\u534f\u8bae\u4e0e\u54cd\u5e94\u534f\u8bae http\u534f\u8bae\u5305\u542b\u7531\u6d4f\u89c8\u5668\u53d1\u9001\u6570\u636e\u5230\u670d\u52a1\u5668\u9700\u8981\u9075\u5faa\u7684\u8bf7\u6c42\u534f\u8bae\u4e0e\u670d\u52a1\u5668\u53d1\u9001\u6570\u636e\u5230\u6d4f\u89c8\u5668\u9700\u8981\u9075\u5faa\u7684\u8bf7\u6c42\u534f\u8bae\u3002\u7528\u4e8eHTTP\u534f\u8bae\u4ea4\u4e92\u7684\u4fe1\u88ab\u4e3aHTTP\u62a5\u6587\u3002\u8bf7\u6c42\u7aef(\u5ba2\u6237\u7aef)\u7684HTTP\u62a5\u6587 \u505a\u8bf7\u6c42\u62a5\u6587,\u54cd\u5e94\u7aef(\u670d\u52a1\u5668\u7aef)\u7684 \u505a\u54cd\u5e94\u62a5\u6587\u3002HTTP\u62a5\u6587\u672c\u8eab\u662f\u7531\u591a\u884c\u6570\u636e\u6784\u6210\u7684\u5b57 \u6587\u672c\u3002 \u8bf7\u6c42\u534f\u8bae \u8bf7\u6c42\u683c\u5f0f \u8bf7\u6c42\u65b9\u5f0f: get\u4e0epost\u8bf7\u6c42 GET\u63d0\u4ea4\u7684\u6570\u636e\u4f1a\u653e\u5728URL\u4e4b\u540e\uff0c\u4ee5?\u5206\u5272URL\u548c\u4f20\u8f93\u6570\u636e\uff0c\u53c2\u6570\u4e4b\u95f4\u4ee5&\u76f8\u8fde\uff0c\u5982EditBook?name=test1&id=123456. POST\u65b9\u6cd5\u662f\u628a\u63d0\u4ea4\u7684\u6570\u636e\u653e\u5728HTTP\u5305\u7684\u8bf7\u6c42\u4f53\u4e2d. GET\u63d0\u4ea4\u7684\u6570\u636e\u5927\u5c0f\u6709\u9650\u5236\uff08\u56e0\u4e3a\u6d4f\u89c8\u5668\u5bf9URL\u7684\u957f\u5ea6\u6709\u9650\u5236\uff09\uff0c\u800cPOST\u65b9\u6cd5\u63d0\u4ea4\u7684\u6570\u636e\u6ca1\u6709\u9650\u5236. GET\u4e0ePOST\u8bf7\u6c42\u5728\u670d\u52a1\u7aef\u83b7\u53d6\u8bf7\u6c42\u6570\u636e\u65b9\u5f0f\u4e0d\u540c\u3002 \u54cd\u5e94\u534f\u8bae \u54cd\u5e94\u683c\u5f0f \u54cd\u5e94\u72b6\u6001\u7801 \u72b6\u6001\u7801\u7684\u804c \u662f\u5f53\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u7aef\u53d1\u9001\u8bf7\u6c42\u65f6, \u8fd4\u56de\u7684\u8bf7\u6c42 \u7ed3\u679c\u3002\u501f\u52a9\u72b6\u6001\u7801,\u7528\u6237\u53ef\u4ee5\u77e5\u9053\u670d\u52a1\u5668\u7aef\u662f\u6b63\u5e38 \u7406\u4e86\u8bf7\u6c42,\u8fd8\u662f\u51fa \u73b0\u4e86 \u3002\u72b6\u6001\u7801\u5982200 OK,\u4ee53\u4f4d\u6570\u5b57\u548c\u539f\u56e0 \u6210\u3002\u6570\u5b57\u4e2d\u7684 \u4e00\u4f4d\u6307\u5b9a\u4e86\u54cd\u5e94 \u522b,\u540e\u4e24\u4f4d\u65e0\u5206 \u3002\u54cd\u5e94 \u522b\u6709\u4ee55\u79cd\u3002 import socket sock=socket.socket() sock.bind((\"127.0.0.1\",8808)) sock.listen(5) while 1: print(\"server waiting.....\") conn,addr=sock.accept() data=conn.recv(1024) print(\"data\",data) # \u8bfb\u53d6html\u6587\u4ef6 with open(\"login.html\",\"rb\") as f: data=f.read() conn.send((b\"HTTP/1.1 200 OK\\r\\n\\r\\n%s\"%data)) conn.close() login.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <form action=\"\" method=\"post\"> \u7528\u6237\u540d <input type=\"text\" name=\"user\"> \u5bc6\u7801 <input type=\"password\" name=\"pwd\"> <input type=\"submit\"> </form> </body> </html> 3 web\u6846\u67b6 Web\u6846\u67b6\uff08Web framework\uff09\u662f\u4e00\u79cd\u5f00\u53d1\u6846\u67b6\uff0c\u7528\u6765\u652f\u6301\u52a8\u6001\u7f51\u7ad9\u3001\u7f51\u7edc\u5e94\u7528\u548c\u7f51\u7edc\u670d\u52a1\u7684\u5f00\u53d1\u3002\u8fd9\u5927\u591a\u6570\u7684web\u6846\u67b6\u63d0\u4f9b\u4e86\u4e00\u5957\u5f00\u53d1\u548c\u90e8\u7f72\u7f51\u7ad9\u7684\u65b9\u5f0f\uff0c\u4e5f\u4e3aweb\u884c\u4e3a\u63d0\u4f9b\u4e86\u4e00\u5957\u901a\u7528\u7684\u65b9\u6cd5\u3002web\u6846\u67b6\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5f88\u591a\u529f\u80fd\uff0c\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u6846\u67b6\u63d0\u4f9b\u7684\u65b9\u6cd5\u5e76\u4e14\u5b8c\u6210\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u5c31\u80fd\u5feb\u901f\u5f00\u53d1web\u5e94\u7528\u4e86\u3002\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u7684\u662f\u57fa\u4e8eHTTP\u534f\u8bae\u8fdb\u884c\u901a\u4fe1\u7684\u3002\u4e5f\u53ef\u4ee5\u8bf4web\u6846\u67b6\u5c31\u662f\u5728\u4ee5\u4e0a\u5341\u51e0\u884c\u4ee3\u7801\u57fa\u7840\u5f20\u6269\u5c55\u51fa\u6765\u7684\uff0c\u6709\u5f88\u591a\u7b80\u5355\u65b9\u4fbf\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u5f00\u53d1\u7684\u6548\u7387\u3002 wsgiref\u6a21\u5757 \u6700\u7b80\u5355\u7684Web\u5e94\u7528\u5c31\u662f\u5148\u628aHTML\u7528\u6587\u4ef6\u4fdd\u5b58\u597d\uff0c\u7528\u4e00\u4e2a\u73b0\u6210\u7684HTTP\u670d\u52a1\u5668\u8f6f\u4ef6\uff0c\u63a5\u6536\u7528\u6237\u8bf7\u6c42\uff0c\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6HTML\uff0c\u8fd4\u56de\u3002 \u5982\u679c\u8981\u52a8\u6001\u751f\u6210HTML\uff0c\u5c31\u9700\u8981\u628a\u4e0a\u8ff0\u6b65\u9aa4\u81ea\u5df1\u6765\u5b9e\u73b0\u3002\u4e0d\u8fc7\uff0c\u63a5\u53d7HTTP\u8bf7\u6c42\u3001\u89e3\u6790HTTP\u8bf7\u6c42\u3001\u53d1\u9001HTTP\u54cd\u5e94\u90fd\u662f\u82e6\u529b\u6d3b\uff0c\u5982\u679c\u6211\u4eec\u81ea\u5df1\u6765\u5199\u8fd9\u4e9b\u5e95\u5c42\u4ee3\u7801\uff0c\u8fd8\u6ca1\u5f00\u59cb\u5199\u52a8\u6001HTML\u5462\uff0c\u5c31\u5f97\u82b1\u4e2a\u628a\u6708\u53bb\u8bfbHTTP\u89c4\u8303\u3002 \u6b63\u786e\u7684\u505a\u6cd5\u662f\u5e95\u5c42\u4ee3\u7801\u7531\u4e13\u95e8\u7684\u670d\u52a1\u5668\u8f6f\u4ef6\u5b9e\u73b0\uff0c\u6211\u4eec\u7528Python\u4e13\u6ce8\u4e8e\u751f\u6210HTML\u6587\u6863\u3002\u56e0\u4e3a\u6211\u4eec\u4e0d\u5e0c\u671b\u63a5\u89e6\u5230TCP\u8fde\u63a5\u3001HTTP\u539f\u59cb\u8bf7\u6c42\u548c\u54cd\u5e94\u683c\u5f0f\uff0c\u6240\u4ee5\uff0c\u9700\u8981\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\u534f\u8bae\u6765\u5b9e\u73b0\u8fd9\u6837\u7684\u670d\u52a1\u5668\u8f6f\u4ef6\uff0c\u8ba9\u6211\u4eec\u4e13\u5fc3\u7528Python\u7f16\u5199Web\u4e1a\u52a1\u3002\u8fd9\u4e2a\u63a5\u53e3\u5c31\u662fWSGI\uff1aWeb Server Gateway Interface\u3002\u800cwsgiref\u6a21\u5757\u5c31\u662fpython\u57fa\u4e8ewsgi\u534f\u8bae\u5f00\u53d1\u7684\u670d\u52a1\u6a21\u5757\u3002 from wsgiref.simple_server import make_server def application(environ, start_response): start_response('200 OK', [('Content-Type', 'text/html')]) return [b'<h1>Hello, web!</h1>'] httpd = make_server('', 8080, application) print('Serving HTTP on port 8000...') # \u5f00\u59cb\u76d1\u542cHTTP\u8bf7\u6c42: httpd.serve_forever() DIY\u4e00\u4e2aweb\u6846\u67b6 models.py import pymysql #\u8fde\u63a5\u6570\u636e\u5e93 conn = pymysql.connect(host='127.0.0.1',port= 3306,user = 'root',passwd='',db='web') #db\uff1a\u5e93\u540d #\u521b\u5efa\u6e38\u6807 cur = conn.cursor() sql=''' create table userinfo( id INT PRIMARY KEY , name VARCHAR(32) , password VARCHAR(32) ) ''' cur.execute(sql) #\u63d0\u4ea4 conn.commit() #\u5173\u95ed\u6307\u9488\u5bf9\u8c61 cur.close() #\u5173\u95ed\u8fde\u63a5\u5bf9\u8c61 conn.close() \u542f\u52a8\u6587\u4ef6manage.py from wsgiref.simple_server import make_server from app01.views import * import urls def routers(): URLpattern=urls.URLpattern return URLpattern def applications(environ,start_response): path=environ.get(\"PATH_INFO\") start_response('200 OK', [('Content-Type', 'text/html'),('Charset', 'utf8')]) urlpattern=routers() func=None for item in urlpattern: if path==item[0]: func=item[1] break if func: return [func(environ)] else: return [b\"<h1>404!<h1>\"] if __name__ == '__main__': server=make_server(\"\",8889,applications) print(\"server is working...\") server.serve_forever() urls.py from app01.views import * URLpattern = ( (\"/login/\", login), ) views import pymysql from urllib.parse import parse_qs def login(request): if request.get(\"REQUEST_METHOD\")==\"POST\": try: request_body_size = int(request.get('CONTENT_LENGTH', 0)) except (ValueError): request_body_size = 0 request_body = request['wsgi.input'].read(request_body_size) data = parse_qs(request_body) user=data.get(b\"user\")[0].decode(\"utf8\") pwd=data.get(b\"pwd\")[0].decode(\"utf8\") #\u8fde\u63a5\u6570\u636e\u5e93 conn = pymysql.connect(host='127.0.0.1',port= 3306,user = 'root',passwd='',db='web') # db\uff1a\u5e93\u540d #\u521b\u5efa\u6e38\u6807 cur = conn.cursor() SQL=\"select * from userinfo WHERE NAME ='%s' AND PASSWORD ='%s'\"%(user,pwd) cur.execute(SQL) if cur.fetchone(): f=open(\"templates/backend.html\",\"rb\") data=f.read() data=data.decode(\"utf8\") return data.encode(\"utf8\") else: print(\"OK456\") return b\"user or pwd is wrong\" else: f = open(\"templates/login.html\", \"rb\") data = f.read() f.close() return data login.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h4>\u767b\u5f55\u9875\u9762</h4> <form action=\"\" method=\"post\"> \u7528\u6237\u540d <input type=\"text\" name=\"user\"> \u5bc6\u7801 <input type=\"text\" name=\"pwd\"> <input type=\"submit\"> </form> </body> </html> backend.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h4>welcome to oldboy!</h4> </body> </html> yuan\u8fd9\u4e2apackage\u5c31\u662f\u4e00\u4e2aweb\u6846\u67b6\uff0c\u4e0b\u8f7d\u8fd9\u4e2aweb\u6846\u67b6\u5c31\u53ef\u4ee5\u5feb\u901f\u5b9e\u73b0\u4e00\u4e9b\u7b80\u5355\u7684web\u529f\u80fd\uff0c\u6bd4\u5982\u67e5\u770b\u65f6\u95f4\u3002 4 4 Django\u7b80\u4ecb MVC\u4e0eMTV\u6a21\u578b MVC Web\u670d\u52a1\u5668\u5f00\u53d1\u9886\u57df\u91cc\u8457\u540d\u7684MVC\u6a21\u5f0f\uff0c\u6240\u8c13MVC\u5c31\u662f\u628aWeb\u5e94\u7528\u5206\u4e3a\u6a21\u578b(M)\uff0c\u63a7\u5236\u5668(C)\u548c\u89c6\u56fe(V)\u4e09\u5c42\uff0c\u4ed6\u4eec\u4e4b\u95f4\u4ee5\u4e00\u79cd\u63d2\u4ef6\u5f0f\u7684\u3001\u677e\u8026\u5408\u7684\u65b9\u5f0f\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u6a21\u578b\u8d1f\u8d23\u4e1a\u52a1\u5bf9\u8c61\u4e0e\u6570\u636e\u5e93\u7684\u6620\u5c04(ORM)\uff0c\u89c6\u56fe\u8d1f\u8d23\u4e0e\u7528\u6237\u7684\u4ea4\u4e92(\u9875\u9762)\uff0c\u63a7\u5236\u5668\u63a5\u53d7\u7528\u6237\u7684\u8f93\u5165\u8c03\u7528\u6a21\u578b\u548c\u89c6\u56fe\u5b8c\u6210\u7528\u6237\u7684\u8bf7\u6c42\uff0c\u5176\u793a\u610f\u56fe\u5982\u4e0b\u6240\u793a\uff1a MTV Django\u7684MTV\u6a21\u5f0f\u672c\u8d28\u4e0a\u548cMVC\u662f\u4e00\u6837\u7684\uff0c\u4e5f\u662f\u4e3a\u4e86\u5404\u7ec4\u4ef6\u95f4\u4fdd\u6301\u677e\u8026\u5408\u5173\u7cfb\uff0c\u53ea\u662f\u5b9a\u4e49\u4e0a\u6709\u4e9b\u8bb8\u4e0d\u540c\uff0cDjango\u7684MTV\u5206\u522b\u662f\u503c\uff1a M \u4ee3\u8868\u6a21\u578b\uff08Model\uff09\uff1a \u8d1f\u8d23\u4e1a\u52a1\u5bf9\u8c61\u548c\u6570\u636e\u5e93\u7684\u5173\u7cfb\u6620\u5c04(ORM)\u3002 T \u4ee3\u8868\u6a21\u677f (Template)\uff1a\u8d1f\u8d23\u5982\u4f55\u628a\u9875\u9762\u5c55\u793a\u7ed9\u7528\u6237(html)\u3002 V \u4ee3\u8868\u89c6\u56fe\uff08View\uff09\uff1a \u8d1f\u8d23\u4e1a\u52a1\u903b\u8f91\uff0c\u5e76\u5728\u9002\u5f53\u65f6\u5019\u8c03\u7528Model\u548cTemplate\u3002 \u9664\u4e86\u4ee5\u4e0a\u4e09\u5c42\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u4e00\u4e2aURL\u5206\u53d1\u5668\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5c06\u4e00\u4e2a\u4e2aURL\u7684\u9875\u9762\u8bf7\u6c42\u5206\u53d1\u7ed9\u4e0d\u540c\u7684View\u5904\u7406\uff0cView\u518d\u8c03\u7528\u76f8\u5e94\u7684Model\u548cTemplate\uff0cMTV\u7684\u54cd\u5e94\u6a21\u5f0f\u5982\u4e0b\u6240\u793a\uff1a \u4e00\u822c\u662f\u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u5411\u6211\u4eec\u7684\u670d\u52a1\u5668\u53d1\u8d77\u4e00\u4e2a\u8bf7\u6c42(request)\uff0c\u8fd9\u4e2a\u8bf7\u6c42\u56de\u53bb\u8bbf\u95ee\u89c6\u56fe\u51fd\u6570\uff0c\uff08\u5982\u679c\u4e0d\u6d89\u53ca\u5230\u6570\u636e\u8c03\u7528\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u89c6\u56fe\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6a21\u677f\u4e5f\u5c31\u662f\u4e00\u4e2a\u7f51\u9875\u7ed9\u7528\u6237\uff09\uff0c\u89c6\u56fe\u51fd\u6570\u8c03\u7528\u6a21\u578b\uff0c\u6a21\u578b\u53bb\u6570\u636e\u5e93\u67e5\u627e\u6570\u636e\uff0c\u7136\u540e\u9010\u7ea7\u8fd4\u56de\uff0c\u89c6\u56fe\u51fd\u6570\u628a\u8fd4\u56de\u7684\u6570\u636e\u586b\u5145\u5230\u6a21\u677f\u4e2d\u7a7a\u683c\u4e2d\uff0c\u6700\u540e\u8fd4\u56de\u7f51\u9875\u7ed9\u7528\u6237\u3002 Django\u7684\u4e0b\u8f7d\u4e0e\u57fa\u672c\u547d\u4ee4 1\u3001\u4e0b\u8f7dDjango\uff1a pip3 install django pip3 install django==2.0.1 2\u3001\u521b\u5efa\u4e00\u4e2adjango project #\u5b89\u88c5\u4e4b\u540e \u6587\u4ef6\u6240\u5728\u4f4d\u7f6e /Library/Frameworks/Python.framework/Versions/3.9/bin/django-admin.py django-admin.py startproject mysite \u5f53\u524d\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210mysite\u7684\u5de5\u7a0b\uff0c\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a \u200b manage.py ----- Django\u9879\u76ee\u91cc\u9762\u7684\u5de5\u5177\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u8c03\u7528django shell\u548c\u6570\u636e\u5e93\u7b49\u3002 settings.py ---- \u5305\u542b\u4e86\u9879\u76ee\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u5305\u62ec\u6570\u636e\u5e93\u4fe1\u606f\uff0c\u8c03\u8bd5\u6807\u5fd7\u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u5de5\u4f5c\u7684\u53d8\u91cf\u3002 urls.py ----- \u8d1f\u8d23\u628aURL\u6a21\u5f0f\u6620\u5c04\u5230\u5e94\u7528\u7a0b\u5e8f\u3002 3\u3001\u5728mysite\u76ee\u5f55\u4e0b\u521b\u5efa\u5e94\u7528 python manage.py startapp blog \u200b 4\u3001\u542f\u52a8django\u9879\u76ee python manage.py runserver 8080 \u200b \u8fd9\u6837\u6211\u4eec\u7684django\u5c31\u542f\u52a8\u8d77\u6765\u4e86\uff01\u5f53\u6211\u4eec\u8bbf\u95ee\uff1ahttp://127.0.0.1:8080/\u65f6\u5c31\u53ef\u4ee5\u770b\u5230\uff1a \u200b \u57fa\u4e8eDjango\u5b9e\u73b0\u7684\u4e00\u4e2a\u7b80\u5355\u793a\u4f8b url\u63a7\u5236\u5668 from django.contrib import admin from django.urls import path from app01 import views urlpatterns = [ path('admin/', admin.site.urls), path('index/',views.index), ] \u89c6\u56fe from django.shortcuts import render # Create your views here. def index(request): import datetime now=datetime.datetime.now() ctime=now.strftime(\"%Y-%m-%d %X\") return render(request,\"index.html\",{\"ctime\":ctime}) \u6a21\u677f <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h4>\u5f53\u524d\u65f6\u95f4:{{ ctime }}</h4> </body> </html> \u6267\u884c\u6548\u679c\u5982\u4e0b\uff1a ```python #\u5c0f\u63d0\u793a: #settings.py \u914d\u7f6e \u5e94\u7528\u540d\u79f0 \u548ctemplates \u8def\u5f84 INSTALLED_APPS = [ 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', 'blog' # \u521b\u5efa\u7684\u5e94\u7528\u540d\u79f0 ] TEMPLATES = [ { 'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS': [os.path.join(BASE_DIR,'templates')], # templates \u76ee\u5f55\u8def\u5f84 'APP_DIRS': True, 'OPTIONS': { 'context_processors': [ 'django.template.context_processors.debug', 'django.template.context_processors.request', 'django.contrib.auth.context_processors.auth', 'django.contrib.messages.context_processors.messages', ], }, }, ] # \u5728pycharm \u4e2d\u5bfc\u5165\u8001\u5e08\u7684\u4ee3\u7801 # \u7528pycharm \u6253\u5f00\u7ec8\u7aef,\u5728\u9879\u76ee\u76ee\u5f55\u4e0b \u8fd0\u884c\u8fd0\u884c python3.9 manage.py runserver #\u914d\u7f6e\u5230pycharm\u4e2d\u76f4\u63a5\u70b9\u8fd0\u884c open ---> new window -- > edit Configurations... -->\u914d\u7f6e host 127.0.0.1 # \u6570\u636e\u5e93\u8fc1\u79fb python manage.py makemigrations # \u521b\u5efa\u6570\u636e\u5e93\u7684\u6620\u5c04\u5173\u7cfb python manage.py migrate # \u6839\u636e\u4e0a\u6761\u547d\u4ee4\u751f\u6210\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u751f\u6210\u76f8\u5e94\u7684\u8868 ``` 5 Django-2\u7684\u8def\u7531\u5c42(URLconf) URL\u914d\u7f6e(URLconf)\u5c31\u50cfDjango \u6240\u652f\u6491\u7f51\u7ad9\u7684\u76ee\u5f55\u3002\u5b83\u7684\u672c\u8d28\u662fURL\u4e0e\u8981\u4e3a\u8be5URL\u8c03\u7528\u7684\u89c6\u56fe\u51fd\u6570\u4e4b\u95f4\u7684\u6620\u5c04\u8868\uff1b\u4f60\u5c31\u662f\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u544a\u8bc9Django\uff0c\u5bf9\u4e8e\u5ba2\u6237\u7aef\u53d1\u6765\u7684\u67d0\u4e2aURL\u8c03\u7528\u54ea\u4e00\u6bb5\u903b\u8f91\u4ee3\u7801\u5bf9\u5e94\u6267\u884c\u3002 \u7b80\u5355\u7684\u8def\u7531\u914d\u7f6e from django.urls import path,re_path from app01 import views urlpatterns = [ re_path(r'^articles/2003/$', views.special_case_2003), re_path(r'^articles/([0-9]{4})/$', views.year_archive), re_path(r'^articles/([0-9]{4})/([0-9]{2})/$', views.month_archive), re_path(r'^articles/([0-9]{4})/([0-9]{2})/([0-9]+)/$', views.article_detail), ] \u6ce8\u610f\uff1a \u82e5\u8981\u4eceURL \u4e2d\u6355\u83b7\u4e00\u4e2a\u503c\uff0c\u53ea\u9700\u8981\u5728\u5b83\u5468\u56f4\u653e\u7f6e\u4e00\u5bf9\u5706\u62ec\u53f7\u3002 \u4e0d\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u524d\u5bfc\u7684\u53cd\u659c\u6760\uff0c\u56e0\u4e3a\u6bcf\u4e2aURL \u90fd\u6709\u3002\u4f8b\u5982\uff0c\u5e94\u8be5\u662f ^articles \u800c\u4e0d\u662f ^/articles \u3002 \u6bcf\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u524d\u9762\u7684'r' \u662f\u53ef\u9009\u7684\u4f46\u662f\u5efa\u8bae\u52a0\u4e0a\u3002\u5b83\u544a\u8bc9Python \u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u201c\u539f\u59cb\u7684\u201d \u2014\u2014 \u5b57\u7b26\u4e32\u4e2d\u4efb\u4f55\u5b57\u7b26\u90fd\u4e0d\u5e94\u8be5\u8f6c\u4e49 \u793a\u4f8b\uff1a ''' \u4e00\u4e9b\u8bf7\u6c42\u7684\u4f8b\u5b50\uff1a /articles/2005/03/ \u8bf7\u6c42\u5c06\u5339\u914d\u5217\u8868\u4e2d\u7684\u7b2c\u4e09\u4e2a\u6a21\u5f0f\u3002Django \u5c06\u8c03\u7528\u51fd\u6570views.month_archive(request, '2005', '03')\u3002 /articles/2005/3/ \u4e0d\u5339\u914d\u4efb\u4f55URL \u6a21\u5f0f\uff0c\u56e0\u4e3a\u5217\u8868\u4e2d\u7684\u7b2c\u4e09\u4e2a\u6a21\u5f0f\u8981\u6c42\u6708\u4efd\u5e94\u8be5\u662f\u4e24\u4e2a\u6570\u5b57\u3002 /articles/2003/ \u5c06\u5339\u914d\u5217\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6a21\u5f0f\u4e0d\u662f\u7b2c\u4e8c\u4e2a\uff0c\u56e0\u4e3a\u6a21\u5f0f\u6309\u987a\u5e8f\u5339\u914d\uff0c\u7b2c\u4e00\u4e2a\u4f1a\u9996\u5148\u6d4b\u8bd5\u662f\u5426\u5339\u914d\u3002\u8bf7\u50cf\u8fd9\u6837\u81ea\u7531\u63d2\u5165\u4e00\u4e9b\u7279\u6b8a\u7684\u60c5\u51b5\u6765\u63a2\u6d4b\u5339\u914d\u7684\u6b21\u5e8f\u3002 /articles/2003 \u4e0d\u5339\u914d\u4efb\u4f55\u4e00\u4e2a\u6a21\u5f0f\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6a21\u5f0f\u8981\u6c42URL \u4ee5\u4e00\u4e2a\u53cd\u659c\u7ebf\u7ed3\u5c3e\u3002 /articles/2003/03/03/ \u5c06\u5339\u914d\u6700\u540e\u4e00\u4e2a\u6a21\u5f0f\u3002Django \u5c06\u8c03\u7528\u51fd\u6570views.article_detail(request, '2003', '03', '03')\u3002 ''' \u6709\u540d\u5206\u7ec4 \u4e0a\u9762\u7684\u793a\u4f8b\u4f7f\u7528\u7b80\u5355\u7684\u3001\u6ca1\u6709\u547d\u540d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7ec4\uff08\u901a\u8fc7\u5706\u62ec\u53f7\uff09\u6765\u6355\u83b7URL \u4e2d\u7684\u503c\u5e76\u4ee5\u4f4d\u7f6e \u53c2\u6570\u4f20\u9012\u7ed9\u89c6\u56fe\u3002\u5728\u66f4\u9ad8\u7ea7\u7684\u7528\u6cd5\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u540d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7ec4\u6765\u6355\u83b7URL \u4e2d\u7684\u503c\u5e76\u4ee5\u5173\u952e\u5b57 \u53c2\u6570\u4f20\u9012\u7ed9\u89c6\u56fe\u3002 \u5728Python \u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\uff0c\u547d\u540d\u6b63\u5219\u8868\u8fbe\u5f0f\u7ec4\u7684\u8bed\u6cd5\u662f (?P<name>pattern) \uff0c\u5176\u4e2d name \u662f\u7ec4\u7684\u540d\u79f0\uff0c pattern \u662f\u8981\u5339\u914d\u7684\u6a21\u5f0f\u3002 \u4e0b\u9762\u662f\u4ee5\u4e0aURLconf \u4f7f\u7528\u547d\u540d\u7ec4\u7684\u91cd\u5199\uff1a from django.urls import path,re_path from app01 import views urlpatterns = [ re_path(r'^articles/2003/$', views.special_case_2003), re_path(r'^articles/(?P<year>[0-9]{4})/$', views.year_archive), re_path(r'^articles/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/$', views.month_archive), re_path(r'^articles/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/(?P<day>[0-9]{2})/$', views.article_detail), ] \u8fd9\u4e2a\u5b9e\u73b0\u4e0e\u524d\u9762\u7684\u793a\u4f8b\u5b8c\u5168\u76f8\u540c\uff0c\u53ea\u6709\u4e00\u4e2a\u7ec6\u5fae\u7684\u5dee\u522b\uff1a\u6355\u83b7\u7684\u503c\u4f5c\u4e3a\u5173\u952e\u5b57\u53c2\u6570\u800c\u4e0d\u662f\u4f4d\u7f6e\u53c2\u6570\u4f20\u9012\u7ed9\u89c6\u56fe\u51fd\u6570\u3002\u4f8b\u5982\uff1a ''' /articles/2005/03/ \u8bf7\u6c42\u5c06\u8c03\u7528views.month_archive(request, year='2005', month='03')\u51fd\u6570\uff0c\u800c\u4e0d\u662fviews.month_archive(request, '2005', '03')\u3002 /articles/2003/03/03/ \u8bf7\u6c42\u5c06\u8c03\u7528\u51fd\u6570views.article_detail(request, year='2003', month='03', day='03')\u3002 ''' \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u8fd9\u610f\u5473\u4f60\u7684URLconf \u4f1a\u66f4\u52a0\u660e\u6670\u4e14\u4e0d\u5bb9\u6613\u4ea7\u751f\u53c2\u6570\u987a\u5e8f\u95ee\u9898\u7684\u9519\u8bef \u2014\u2014 \u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u89c6\u56fe\u51fd\u6570\u5b9a\u4e49\u4e2d\u91cd\u65b0\u5b89\u6392\u53c2\u6570\u7684\u987a\u5e8f\u3002\u5f53\u7136\uff0c\u8fd9\u4e9b\u597d\u5904\u662f\u4ee5\u7b80\u6d01\u4e3a\u4ee3\u4ef7\uff1b \u5206\u53d1 ''' At any point, your urlpatterns can \u201cinclude\u201d other URLconf modules. This essentially \u201croots\u201d a set of URLs below other ones. ''' from django.urls import path,re_path,include from app01 import views urlpatterns = [ re_path(r'^admin/', admin.site.urls), re_path(r'^blog/', include('blog.urls')), # \u8fd9\u4e2ablog/\u8def\u5f84\u5206\u53d1\u7ed9 blog.urls \u6587\u4ef6\u91cc\u5904\u7406 re_path(r'^', include('blog.urls')), # \u8fd9\u4e2a\u8ddf\u76ee\u5f55\u8def\u5f84\u5206\u53d1\u7ed9 blog.urls \u6587\u4ef6\u91cc\u5904\u7406 # re_path(r\"^app02/\",include((\"app02.urls\",\"app02\"))), #\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5bf9\u5e94\u7684\u662f\u5e94\u7528\u540d\u79f0-\u540d\u79f0\u7a7a\u95f4 ] \u53cd\u5411\u89e3\u6790 \u5728\u4f7f\u7528Django \u9879\u76ee\u65f6\uff0c\u4e00\u4e2a\u5e38\u89c1\u7684\u9700\u6c42\u662f\u83b7\u5f97URL \u7684\u6700\u7ec8\u5f62\u5f0f\uff0c\u4ee5\u7528\u4e8e\u5d4c\u5165\u5230\u751f\u6210\u7684\u5185\u5bb9\u4e2d\uff08\u89c6\u56fe\u4e2d\u548c\u663e\u793a\u7ed9\u7528\u6237\u7684URL\u7b49\uff09\u6216\u8005\u7528\u4e8e\u5904\u7406\u670d\u52a1\u5668\u7aef\u7684\u5bfc\u822a\uff08\u91cd\u5b9a\u5411\u7b49\uff09\u3002\u4eba\u4eec\u5f3a\u70c8\u5e0c\u671b\u4e0d\u8981\u786c\u7f16\u7801\u8fd9\u4e9bURL\uff08\u8d39\u529b\u3001\u4e0d\u53ef\u6269\u5c55\u4e14\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\uff09\u6216\u8005\u8bbe\u8ba1\u4e00\u79cd\u4e0eURLconf \u6beb\u4e0d\u76f8\u5173\u7684\u4e13\u95e8\u7684URL \u751f\u6210\u673a\u5236\uff0c\u56e0\u4e3a\u8fd9\u6837\u5bb9\u6613\u5bfc\u81f4\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4ea7\u751f\u8fc7\u671f\u7684URL\u3002 \u5728\u9700\u8981URL \u7684\u5730\u65b9\uff0c\u5bf9\u4e8e\u4e0d\u540c\u5c42\u7ea7\uff0cDjango \u63d0\u4f9b\u4e0d\u540c\u7684\u5de5\u5177\u7528\u4e8eURL \u53cd\u67e5\uff1a \u5728\u6a21\u677f\u4e2d\uff1a\u4f7f\u7528url \u6a21\u677f\u6807\u7b7e\u3002 \u5728Python \u4ee3\u7801\u4e2d\uff1a\u4f7f\u7528 from django.urls import reverse()\u51fd\u6570 urls.py: from django.conf.urls import url from . import views urlpatterns = [ #... name \u662f\u8d77\u4e86\u4e00\u4e2a\u522b\u540d, \u5728\u6a21\u677f\u4e2d\u5f15\u7528 {% url 'news-year-archive' %} re_path(r'^articles/([0-9]{4})/$', views.year_archive, name='news-year-archive'), #... ] \u5728\u6a21\u677f\u4e2d\uff1a <a href=\"{% url 'news-year-archive' 2012 %}\">2012 Archive</a> # \u53cd\u5411\u89e3\u6790 <ul> {% for yearvar in year_list %} <li><a href=\"{% url 'news-year-archive' yearvar %}\">{{ yearvar }} Archive</a></li> {% endfor %} </ul> \u5728python\u4e2d\uff1a from django.urls import reverse #\u5bfc\u5165\u53cd\u5411\u89e3\u6790\u51fd\u6570 from django.http import HttpResponseRedirect def redirect_to_year(request): # ... year = 2006 # ... return HttpResponseRedirect(reverse('news-year-archive', args=(year,))) # \u540credirect(\"/path/\") \u5f53\u547d\u540d\u4f60\u7684URL \u6a21\u5f0f\u65f6\uff0c\u8bf7\u786e\u4fdd\u4f7f\u7528\u7684\u540d\u79f0\u4e0d\u4f1a\u4e0e\u5176\u5b83\u5e94\u7528\u4e2d\u540d\u79f0\u51b2\u7a81\u3002\u5982\u679c\u4f60\u7684URL \u6a21\u5f0f\u53eb\u505a comment \uff0c\u800c\u53e6\u5916\u4e00\u4e2a\u5e94\u7528\u4e2d\u4e5f\u6709\u4e00\u4e2a\u540c\u6837\u7684\u540d\u79f0\uff0c\u5f53\u4f60\u5728\u6a21\u677f\u4e2d\u4f7f\u7528\u8fd9\u4e2a\u540d\u79f0\u7684\u65f6\u5019\u4e0d\u80fd\u4fdd\u8bc1\u5c06\u63d2\u5165\u54ea\u4e2aURL\u3002\u5728URL \u540d\u79f0\u4e2d\u52a0\u4e0a\u4e00\u4e2a\u524d\u7f00\uff0c\u6bd4\u5982\u5e94\u7528\u7684\u540d\u79f0\uff0c\u5c06\u51cf\u5c11\u51b2\u7a81\u7684\u53ef\u80fd\u3002\u6211\u4eec\u5efa\u8bae\u4f7f\u7528 myapp-comment \u800c\u4e0d\u662f comment \u3002 \u540d\u79f0\u7a7a\u95f4 \u547d\u540d\u7a7a\u95f4\uff08\u82f1\u8bed\uff1aNamespace\uff09\u662f\u8868\u793a\u6807\u8bc6\u7b26\u7684\u53ef\u89c1\u8303\u56f4\u3002\u4e00\u4e2a\u6807\u8bc6\u7b26\u53ef\u5728\u591a\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u5b9a\u4e49\uff0c\u5b83\u5728\u4e0d\u540c\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u542b\u4e49\u662f\u4e92\u4e0d\u76f8\u5e72\u7684\u3002\u8fd9\u6837\uff0c\u5728\u4e00\u4e2a\u65b0\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u53ef\u5b9a\u4e49\u4efb\u4f55\u6807\u8bc6\u7b26\uff0c\u5b83\u4eec\u4e0d\u4f1a\u4e0e\u4efb\u4f55\u5df2\u6709\u7684\u6807\u8bc6\u7b26\u53d1\u751f\u51b2\u7a81\uff0c\u56e0\u4e3a\u5df2\u6709\u7684\u5b9a\u4e49\u90fd\u5904\u4e8e\u5176\u5b83\u547d\u540d\u7a7a\u95f4\u4e2d\u3002 \u7531\u4e8ename\u6ca1\u6709\u4f5c\u7528\u57df\uff0cDjango\u5728\u53cd\u89e3URL\u65f6\uff0c\u4f1a\u5728\u9879\u76ee\u5168\u5c40\u987a\u5e8f\u641c\u7d22\uff0c\u5f53\u67e5\u627e\u5230\u7b2c\u4e00\u4e2aname\u6307\u5b9aURL\u65f6\uff0c\u7acb\u5373\u8fd4\u56de \u6211\u4eec\u5728\u5f00\u53d1\u9879\u76ee\u65f6\uff0c\u4f1a\u7ecf\u5e38\u4f7f\u7528name\u5c5e\u6027\u53cd\u89e3\u51faURL\uff0c\u5f53\u4e0d\u5c0f\u5fc3\u5728\u4e0d\u540c\u7684app\u7684urls\u4e2d\u5b9a\u4e49\u76f8\u540c\u7684name\u65f6\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4URL\u53cd\u89e3\u9519\u8bef\uff0c\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u4e8b\u60c5\u53d1\u751f\uff0c\u5f15\u5165\u4e86\u547d\u540d\u7a7a\u95f4\u3002 project\u7684urls.py: urlpatterns = [ re_path(r'^admin/', admin.site.urls), #re_path(r'^app01/', include(\"app01.urls\",namespace=\"app01\")), #\u62a5\u9519 #re_path(r'^app02/', include(\"app02.urls\",namespace=\"app02\")), # re_path(r'^app01/', include((\"app01.urls\",\"app01\"))), #\u6307\u5b9a\u540d\u79f0\u7a7a\u95f4 app01 re_path(r'^app02/', include((\"app02.urls\",\"app02\"))), ] app01.urls: urlpatterns = [ re_path(r'^index/', index,name=\"index\"), # name \u522b\u540d ] app02.urls: urlpatterns = [ re_path(r'^index/', index,name=\"index\"), # name \u522b\u540d ] app01.views from django.core.urlresolvers import reverse def index(request): return HttpResponse(reverse(\"app01:index\")) #reverse\u53cd\u5411\u89e3\u6790(\"\u540d\u79f0\u7a7a\u95f4app01\u4e0b\u7684index\") app02.views from django.core.urlresolvers import reverse def index(request): return HttpResponse(reverse(\"app02:index\")) # \u6307\u5b9a\u540d\u79f0\u7a7a\u95f4app02 \u4e0b\u7684index django2.0\u7248\u7684path \u601d\u8003\u60c5\u51b5\u5982\u4e0b\uff1a urlpatterns = [ re_path('articles/(?P<year>[0-9]{4})/', year_archive), re_path('article/(?P<article_id>[a-zA-Z0-9]+)/detail/', detail_view), re_path('articles/(?P<article_id>[a-zA-Z0-9]+)/edit/', edit_view), re_path('articles/(?P<article_id>[a-zA-Z0-9]+)/delete/', delete_view), ] \u8003\u8651\u4e0b\u8fd9\u6837\u7684\u4e24\u4e2a\u95ee\u9898\uff1a \u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u51fd\u6570 year_archive \u4e2dyear\u53c2\u6570\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5148\u8f6c\u5316\u4e3a\u6574\u6570\u7c7b\u578b\u7684\u53d8\u91cf\u503c\uff0c\u5f53\u7136 year=int(year) \u4e0d\u4f1a\u6709\u8bf8\u5982\u5982TypeError\u6216\u8005ValueError\u7684\u5f02\u5e38\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u5728url\u4e2d\uff0c\u4f7f\u5f97\u8fd9\u4e00\u8f6c\u5316\u6b65\u9aa4\u53ef\u4ee5\u7531Django\u81ea\u52a8\u5b8c\u6210\uff1f \u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u4e09\u4e2a\u8def\u7531\u4e2darticle_id\u90fd\u662f\u540c\u6837\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u4f60\u9700\u8981\u5199\u4e09\u904d\uff0c\u5f53\u4e4b\u540earticle_id\u89c4\u5219\u6539\u53d8\u540e\uff0c\u9700\u8981\u540c\u65f6\u4fee\u6539\u4e09\u5904\u4ee3\u7801\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ea\u9700\u4fee\u6539\u4e00\u5904\u5373\u53ef\uff1f \u5728Django2.0\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 path \u89e3\u51b3\u4ee5\u4e0a\u7684\u4e24\u4e2a\u95ee\u9898\u3002 \u57fa\u672c\u793a\u4f8b \u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a from django.urls import path from . import views urlpatterns = [ path('articles/2003/', views.special_case_2003), # \u5185\u7f6e\u8f6c\u6362\u5668\u8f6c\u6362\u6210int\u7c7b\u578b<int:year> \u540c\u65f6\u4e5f\u662f\u6709\u540d\u5206\u7ec4 path('articles/<int:year>/', views.year_archive), path('articles/<int:year>/<int:month>/', views.month_archive), path('articles/<int:year>/<int:month>/<slug>/', views.article_detail), ] \u57fa\u672c\u89c4\u5219\uff1a \u4f7f\u7528\u5c16\u62ec\u53f7( <> )\u4eceurl\u4e2d\u6355\u83b7\u503c\u3002 \u6355\u83b7\u503c\u4e2d\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u8f6c\u5316\u5668\u7c7b\u578b\uff08converter type\uff09\uff0c\u6bd4\u5982\u4f7f\u7528 <int:name> \u6355\u83b7\u4e00\u4e2a\u6574\u6570\u53d8\u91cf\u3002\u82e5\u679c\u6ca1\u6709\u8f6c\u5316\u5668\uff0c\u5c06\u5339\u914d\u4efb\u4f55\u5b57\u7b26\u4e32\uff0c\u5f53\u7136\u4e5f\u5305\u62ec\u4e86 / \u5b57\u7b26\u3002 \u65e0\u9700\u6dfb\u52a0\u524d\u5bfc\u659c\u6760\u3002 \u4ee5\u4e0b\u662f\u6839\u636e 2.0\u5b98\u65b9\u6587\u6863 \u800c\u6574\u7406\u7684\u793a\u4f8b\u5206\u6790\u8868\uff1a path\u8f6c\u5316\u5668 \u6587\u6863\u539f\u6587\u662fPath converters\uff0c\u6682\u4e14\u7ffb\u8bd1\u4e3a\u8f6c\u5316\u5668\u3002 Django\u9ed8\u8ba4\u652f\u6301\u4ee5\u4e0b5\u4e2a\u8f6c\u5316\u5668\uff1a str,\u5339\u914d\u9664\u4e86\u8def\u5f84\u5206\u9694\u7b26\uff08 / \uff09\u4e4b\u5916\u7684\u975e\u7a7a\u5b57\u7b26\u4e32\uff0c\u8fd9\u662f\u9ed8\u8ba4\u7684\u5f62\u5f0f int,\u5339\u914d\u6b63\u6574\u6570\uff0c\u5305\u542b0\u3002 slug,\u5339\u914d\u5b57\u6bcd\u3001\u6570\u5b57\u4ee5\u53ca\u6a2a\u6760\u3001\u4e0b\u5212\u7ebf\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002 uuid,\u5339\u914d\u683c\u5f0f\u5316\u7684uuid\uff0c\u5982 075194d3-6885-417e-a8a8-6c931e272f00\u3002 path,\u5339\u914d\u4efb\u4f55\u975e\u7a7a\u5b57\u7b26\u4e32\uff0c\u5305\u542b\u4e86\u8def\u5f84\u5206\u9694\u7b26 \u6ce8\u518c\u81ea\u5b9a\u4e49\u8f6c\u5316\u5668 \u5bf9\u4e8e\u4e00\u4e9b\u590d\u6742\u6216\u8005\u590d\u7528\u7684\u9700\u8981\uff0c\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7684\u8f6c\u5316\u5668\u3002\u8f6c\u5316\u5668\u662f\u4e00\u4e2a\u7c7b\u6216\u63a5\u53e3\uff0c\u5b83\u7684\u8981\u6c42\u6709\u4e09\u70b9\uff1a regex \u7c7b\u5c5e\u6027\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b to_python(self, value) \u65b9\u6cd5\uff0cvalue\u662f\u7531\u7c7b\u5c5e\u6027 regex \u6240\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5177\u4f53\u7684Python\u53d8\u91cf\u503c\uff0c\u4ee5\u4f9bDjango\u4f20\u9012\u5230\u5bf9\u5e94\u7684\u89c6\u56fe\u51fd\u6570\u4e2d\u3002 to_url(self, value) \u65b9\u6cd5\uff0c\u548c to_python \u76f8\u53cd\uff0cvalue\u662f\u4e00\u4e2a\u5177\u4f53\u7684Python\u53d8\u91cf\u503c\uff0c\u8fd4\u56de\u5176\u5b57\u7b26\u4e32\uff0c\u901a\u5e38\u7528\u4e8eurl\u53cd\u5411\u5f15\u7528\u3002 \u4f8b\u5b50\uff1a # \u6ce8\u518c\u6587\u4ef6\u5efa\u8bae\u5199\u5728 \u5e94\u7528\u76ee\u5f55\u91cc \u5199urlconvert.py class FourDigitYearConverter: regex = '[0-9]{4}' # regex \u56fa\u5b9a\u5c5e\u6027\u5199\u6cd5 def to_python(self, value): return int(value) def to_url(self, value): # \u53cd\u5411\u89e3\u6790 return '%04d' % value \u4f7f\u7528 register_converter \u5c06\u5176\u6ce8\u518c\u5230URL\u914d\u7f6e\u4e2d\uff1a # \u5728\u4e3b\u9879\u76ee\u7684 urls.py\u6ce8\u518c from django.urls import register_converter, path # \u5bfc\u5165 register_converter from app01.urlconvert import FourDigitYearConverter # \u5bfc\u5165app01\u91cc\u5199\u7684\u8f6c\u5316\u5668\u65b9\u6cd5 from . import converters, views register_converter(converters.FourDigitYearConverter, 'yyyy') register_converter(FourDigitYearConverter, 'yy') # \u6ce8\u518c\u8f6c\u5316\u5668\u65b9\u6cd5 \u522b\u540d yy urlpatterns = [ path('articles/2003/', views.special_case_2003), path('articles/<yy:year>/', views.year_archive), # yy\u662f\u8c03\u7528\u7684\u81ea\u5b9a\u4e49\u7684\u8f6c\u6362\u5668 ... ] 6 Django\u7684\u89c6\u56fe\u5c42 \u89c6\u56fe\u51fd\u6570 \u4e00\u4e2a\u89c6\u56fe\u51fd\u6570\uff0c\u7b80\u79f0\u89c6\u56fe\uff0c\u662f\u4e00\u4e2a\u7b80\u5355\u7684Python \u51fd\u6570\uff0c\u5b83\u63a5\u53d7Web\u8bf7\u6c42\u5e76\u4e14\u8fd4\u56deWeb\u54cd\u5e94\u3002\u54cd\u5e94\u53ef\u4ee5\u662f\u4e00\u5f20\u7f51\u9875\u7684HTML\u5185\u5bb9\uff0c\u4e00\u4e2a\u91cd\u5b9a\u5411\uff0c\u4e00\u4e2a404\u9519\u8bef\uff0c\u4e00\u4e2aXML\u6587\u6863\uff0c\u6216\u8005\u4e00\u5f20\u56fe\u7247. . . \u662f\u4efb\u4f55\u4e1c\u897f\u90fd\u53ef\u4ee5\u3002\u65e0\u8bba\u89c6\u56fe\u672c\u8eab\u5305\u542b\u4ec0\u4e48\u903b\u8f91\uff0c\u90fd\u8981\u8fd4\u56de\u54cd\u5e94\u3002\u4ee3\u7801\u5199\u5728\u54ea\u91cc\u4e5f\u65e0\u6240\u8c13\uff0c\u53ea\u8981\u5b83\u5728\u4f60\u7684Python\u76ee\u5f55\u4e0b\u9762\u3002\u9664\u6b64\u4e4b\u5916\u6ca1\u6709\u66f4\u591a\u7684\u8981\u6c42\u4e86\u2014\u2014\u53ef\u4ee5\u8bf4\u201c\u6ca1\u6709\u4ec0\u4e48\u795e\u5947\u7684\u5730\u65b9\u201d\u3002\u4e3a\u4e86\u5c06\u4ee3\u7801\u653e\u5728\u67d0\u5904\uff0c\u7ea6\u5b9a\u662f\u5c06\u89c6\u56fe\u653e\u7f6e\u5728\u9879\u76ee\u6216\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\u4e2d\u7684\u540d\u4e3a views.py \u7684\u6587\u4ef6\u4e2d\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u8fd4\u56de\u5f53\u524d\u65e5\u671f\u548c\u65f6\u95f4\u4f5c\u4e3aHTML\u6587\u6863\u7684\u89c6\u56fe\uff1a from django.shortcuts import render, HttpResponse, HttpResponseRedirect, redirect import datetime def current_datetime(request): now = datetime.datetime.now() html = \"<html><body>It is now %s.</body></html>\" % now return HttpResponse(html) \u8ba9\u6211\u4eec\u9010\u884c\u9605\u8bfb\u4e0a\u9762\u7684\u4ee3\u7801\uff1a \u9996\u5148\uff0c\u6211\u4eec\u4ece django.shortcuts \u6a21\u5757\u5bfc\u5165\u4e86 HttpResponse \u7c7b\uff0c\u4ee5\u53caPython\u7684 datetime \u5e93\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86 current_datetime \u51fd\u6570\u3002\u5b83\u5c31\u662f\u89c6\u56fe\u51fd\u6570\u3002\u6bcf\u4e2a\u89c6\u56fe\u51fd\u6570\u90fd\u4f7f\u7528 HttpRequest \u5bf9\u8c61\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u4e14\u901a\u5e38\u79f0\u4e4b\u4e3a request \u3002 \u6ce8\u610f,\u89c6\u56fe\u51fd\u6570\u7684\u540d\u79f0\u5e76\u4e0d\u91cd\u8981\uff1b\u4e0d\u9700\u8981\u7528\u4e00\u4e2a\u7edf\u4e00\u7684\u547d\u540d\u65b9\u5f0f\u6765\u547d\u540d\uff0c\u4ee5\u4fbf\u8ba9Django\u8bc6\u522b\u5b83\u3002\u6211\u4eec\u5c06\u5176\u547d\u540d\u4e3a current_datetime \uff0c\u662f\u56e0\u4e3a\u8fd9\u4e2a\u540d\u79f0\u80fd\u591f\u7cbe\u786e\u5730\u53cd\u6620\u51fa\u5b83\u7684\u529f\u80fd\u3002 \u8fd9\u4e2a\u89c6\u56fe\u4f1a\u8fd4\u56de\u4e00\u4e2a HttpResponse \u5bf9\u8c61\uff0c\u5176\u4e2d\u5305\u542b\u751f\u6210\u7684\u54cd\u5e94\u3002\u6bcf\u4e2a\u89c6\u56fe\u51fd\u6570\u90fd\u8d1f\u8d23\u8fd4\u56de\u4e00\u4e2a HttpResponse \u5bf9\u8c61\u3002 \u89c6\u56fe\u5c42\uff0c\u719f\u7ec3\u638c\u63e1\u4e24\u4e2a\u5bf9\u8c61\u5373\u53ef\uff1a\u8bf7\u6c42\u5bf9\u8c61(request)\u548c\u54cd\u5e94\u5bf9\u8c61(HttpResponse) HttpRequest\u5bf9\u8c61 request\u5c5e\u6027 django\u5c06\u8bf7\u6c42\u62a5\u6587\u4e2d\u7684\u8bf7\u6c42\u884c\u3001\u9996\u90e8\u4fe1\u606f\u3001\u5185\u5bb9\u4e3b\u4f53\u5c01\u88c5\u6210 HttpRequest \u7c7b\u4e2d\u7684\u5c5e\u6027\u3002 \u9664\u4e86\u7279\u6b8a\u8bf4\u660e\u7684\u4e4b\u5916\uff0c\u5176\u4ed6\u5747\u4e3a\u53ea\u8bfb\u7684\u3002 /* 1.HttpRequest.GET \u3000\u3000\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7684\u5bf9\u8c61\uff0c\u5305\u542b HTTP GET \u7684\u6240\u6709\u53c2\u6570\u3002\u8be6\u60c5\u8bf7\u53c2\u8003 QueryDict \u5bf9\u8c61\u3002 2.HttpRequest.POST \u3000\u3000\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7684\u5bf9\u8c61\uff0c\u5982\u679c\u8bf7\u6c42\u4e2d\u5305\u542b\u8868\u5355\u6570\u636e\uff0c\u5219\u5c06\u8fd9\u4e9b\u6570\u636e\u5c01\u88c5\u6210 QueryDict \u5bf9\u8c61\u3002 \u3000\u3000POST \u8bf7\u6c42\u53ef\u4ee5\u5e26\u6709\u7a7a\u7684 POST \u5b57\u5178 \u2014\u2014 \u5982\u679c\u901a\u8fc7 HTTP POST \u65b9\u6cd5\u53d1\u9001\u4e00\u4e2a\u8868\u5355\uff0c\u4f46\u662f\u8868\u5355\u4e2d\u6ca1\u6709\u4efb\u4f55\u7684\u6570\u636e\uff0cQueryDict \u5bf9\u8c61\u4f9d\u7136\u4f1a\u88ab\u521b\u5efa\u3002 \u56e0\u6b64\uff0c\u4e0d\u5e94\u8be5\u4f7f\u7528 if request.POST \u6765\u68c0\u67e5\u4f7f\u7528\u7684\u662f\u5426\u662fPOST \u65b9\u6cd5\uff1b\u5e94\u8be5\u4f7f\u7528 if request.method == \"POST\" \u3000\u3000\u53e6\u5916\uff1a\u5982\u679c\u4f7f\u7528 POST \u4e0a\u4f20\u6587\u4ef6\u7684\u8bdd\uff0c\u6587\u4ef6\u4fe1\u606f\u5c06\u5305\u542b\u5728 FILES \u5c5e\u6027\u4e2d\u3002 \u6ce8\u610f\uff1a\u952e\u503c\u5bf9\u7684\u503c\u662f\u591a\u4e2a\u7684\u65f6\u5019,\u6bd4\u5982checkbox\u7c7b\u578b\u7684input\u6807\u7b7e\uff0cselect\u6807\u7b7e\uff0c\u9700\u8981\u7528\uff1a request.POST.getlist(\"hobby\") 3.HttpRequest.body \u3000\u3000\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee3\u8868\u8bf7\u6c42\u62a5\u6587\u7684\u4e3b\u4f53\u3002\u5728\u5904\u7406\u975e HTTP \u5f62\u5f0f\u7684\u62a5\u6587\u65f6\u975e\u5e38\u6709\u7528\uff0c\u4f8b\u5982\uff1a\u4e8c\u8fdb\u5236\u56fe\u7247\u3001XML,Json\u7b49\u3002 \u3000\u3000\u4f46\u662f\uff0c\u5982\u679c\u8981\u5904\u7406\u8868\u5355\u6570\u636e\u7684\u65f6\u5019\uff0c\u63a8\u8350\u8fd8\u662f\u4f7f\u7528 HttpRequest.POST \u3002 4.HttpRequest.path \u3000\u3000\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u8bf7\u6c42\u7684\u8def\u5f84\u7ec4\u4ef6\uff08\u4e0d\u542b\u57df\u540d\uff09\u3002 \u3000\u3000\u4f8b\u5982\uff1a\"/music/bands/the_beatles/\" 5.HttpRequest.method \u3000\u3000\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u8bf7\u6c42\u4f7f\u7528\u7684HTTP \u65b9\u6cd5\u3002\u5fc5\u987b\u4f7f\u7528\u5927\u5199\u3002 \u3000\u3000\u4f8b\u5982\uff1a\"GET\"\u3001\"POST\" 6.HttpRequest.encoding \u3000\u3000\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u63d0\u4ea4\u7684\u6570\u636e\u7684\u7f16\u7801\u65b9\u5f0f\uff08\u5982\u679c\u4e3a None \u5219\u8868\u793a\u4f7f\u7528 DEFAULT_CHARSET \u7684\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a 'utf-8'\uff09\u3002 \u8fd9\u4e2a\u5c5e\u6027\u662f\u53ef\u5199\u7684\uff0c\u4f60\u53ef\u4ee5\u4fee\u6539\u5b83\u6765\u4fee\u6539\u8bbf\u95ee\u8868\u5355\u6570\u636e\u4f7f\u7528\u7684\u7f16\u7801\u3002 \u63a5\u4e0b\u6765\u5bf9\u5c5e\u6027\u7684\u4efb\u4f55\u8bbf\u95ee\uff08\u4f8b\u5982\u4ece GET \u6216 POST \u4e2d\u8bfb\u53d6\u6570\u636e\uff09\u5c06\u4f7f\u7528\u65b0\u7684 encoding \u503c\u3002 \u5982\u679c\u4f60\u77e5\u9053\u8868\u5355\u6570\u636e\u7684\u7f16\u7801\u4e0d\u662f DEFAULT_CHARSET \uff0c\u5219\u4f7f\u7528\u5b83\u3002 7.HttpRequest.META \u3000\u3000\u4e00\u4e2a\u6807\u51c6\u7684Python \u5b57\u5178\uff0c\u5305\u542b\u6240\u6709\u7684HTTP \u9996\u90e8\u3002\u5177\u4f53\u7684\u5934\u90e8\u4fe1\u606f\u53d6\u51b3\u4e8e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u793a\u4f8b\uff1a CONTENT_LENGTH \u2014\u2014 \u8bf7\u6c42\u7684\u6b63\u6587\u7684\u957f\u5ea6\uff08\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff09\u3002 CONTENT_TYPE \u2014\u2014 \u8bf7\u6c42\u7684\u6b63\u6587\u7684MIME \u7c7b\u578b\u3002 HTTP_ACCEPT \u2014\u2014 \u54cd\u5e94\u53ef\u63a5\u6536\u7684Content-Type\u3002 HTTP_ACCEPT_ENCODING \u2014\u2014 \u54cd\u5e94\u53ef\u63a5\u6536\u7684\u7f16\u7801\u3002 HTTP_ACCEPT_LANGUAGE \u2014\u2014 \u54cd\u5e94\u53ef\u63a5\u6536\u7684\u8bed\u8a00\u3002 HTTP_HOST \u2014\u2014 \u5ba2\u670d\u7aef\u53d1\u9001\u7684HTTP Host \u5934\u90e8\u3002 HTTP_REFERER \u2014\u2014 Referring \u9875\u9762\u3002 HTTP_USER_AGENT \u2014\u2014 \u5ba2\u6237\u7aef\u7684user-agent \u5b57\u7b26\u4e32\u3002 QUERY_STRING \u2014\u2014 \u5355\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u67e5\u8be2\u5b57\u7b26\u4e32\uff08\u672a\u89e3\u6790\u8fc7\u7684\u5f62\u5f0f\uff09\u3002 REMOTE_ADDR \u2014\u2014 \u5ba2\u6237\u7aef\u7684IP \u5730\u5740\u3002 REMOTE_HOST \u2014\u2014 \u5ba2\u6237\u7aef\u7684\u4e3b\u673a\u540d\u3002 REMOTE_USER \u2014\u2014 \u670d\u52a1\u5668\u8ba4\u8bc1\u540e\u7684\u7528\u6237\u3002 REQUEST_METHOD \u2014\u2014 \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\"GET\" \u6216\"POST\"\u3002 SERVER_NAME \u2014\u2014 \u670d\u52a1\u5668\u7684\u4e3b\u673a\u540d\u3002 SERVER_PORT \u2014\u2014 \u670d\u52a1\u5668\u7684\u7aef\u53e3\uff08\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff09\u3002 \u3000\u3000\u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u5230\uff0c\u9664 CONTENT_LENGTH \u548c CONTENT_TYPE \u4e4b\u5916\uff0c\u8bf7\u6c42\u4e2d\u7684\u4efb\u4f55 HTTP \u9996\u90e8\u8f6c\u6362\u4e3a META \u7684\u952e\u65f6\uff0c \u90fd\u4f1a\u5c06\u6240\u6709\u5b57\u6bcd\u5927\u5199\u5e76\u5c06\u8fde\u63a5\u7b26\u66ff\u6362\u4e3a\u4e0b\u5212\u7ebf\u6700\u540e\u52a0\u4e0a HTTP_ \u524d\u7f00\u3002 \u6240\u4ee5\uff0c\u4e00\u4e2a\u53eb\u505a X-Bender \u7684\u5934\u90e8\u5c06\u8f6c\u6362\u6210 META \u4e2d\u7684 HTTP_X_BENDER \u952e\u3002 8.HttpRequest.FILES \u3000\u3000\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7684\u5bf9\u8c61\uff0c\u5305\u542b\u6240\u6709\u7684\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f\u3002 FILES \u4e2d\u7684\u6bcf\u4e2a\u952e\u4e3a<input type=\"file\" name=\"\" /> \u4e2d\u7684name\uff0c\u503c\u5219\u4e3a\u5bf9\u5e94\u7684\u6570\u636e\u3002 \u3000\u3000\u6ce8\u610f\uff0cFILES \u53ea\u6709\u5728\u8bf7\u6c42\u7684\u65b9\u6cd5\u4e3aPOST \u4e14\u63d0\u4ea4\u7684<form> \u5e26\u6709enctype=\"multipart/form-data\" \u7684\u60c5\u51b5\u4e0b\u624d\u4f1a \u5305\u542b\u6570\u636e\u3002\u5426\u5219\uff0cFILES \u5c06\u4e3a\u4e00\u4e2a\u7a7a\u7684\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7684\u5bf9\u8c61\u3002 9.HttpRequest.COOKIES \u3000\u3000\u4e00\u4e2a\u6807\u51c6\u7684Python \u5b57\u5178\uff0c\u5305\u542b\u6240\u6709\u7684cookie\u3002\u952e\u548c\u503c\u90fd\u4e3a\u5b57\u7b26\u4e32\u3002 10.HttpRequest.session \u3000\u3000\u4e00\u4e2a\u65e2\u53ef\u8bfb\u53c8\u53ef\u5199\u7684\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7684\u5bf9\u8c61\uff0c\u8868\u793a\u5f53\u524d\u7684\u4f1a\u8bdd\u3002\u53ea\u6709\u5f53Django \u542f\u7528\u4f1a\u8bdd\u7684\u652f\u6301\u65f6\u624d\u53ef\u7528\u3002 \u5b8c\u6574\u7684\u7ec6\u8282\u53c2\u89c1\u4f1a\u8bdd\u7684\u6587\u6863\u3002 11.HttpRequest.user(\u7528\u6237\u8ba4\u8bc1\u7ec4\u4ef6\u4e0b\u4f7f\u7528) \u3000\u3000\u4e00\u4e2a AUTH_USER_MODEL \u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u8868\u793a\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237\u3002 \u3000\u3000\u5982\u679c\u7528\u6237\u5f53\u524d\u6ca1\u6709\u767b\u5f55\uff0cuser \u5c06\u8bbe\u7f6e\u4e3a django.contrib.auth.models.AnonymousUser \u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7 is_authenticated() \u533a\u5206\u5b83\u4eec\u3002 \u4f8b\u5982\uff1a if request.user.is_authenticated(): # Do something for logged-in users. else: # Do something for anonymous users. \u3000\u3000user \u53ea\u6709\u5f53Django \u542f\u7528 AuthenticationMiddleware \u4e2d\u95f4\u4ef6\u65f6\u624d\u53ef\u7528\u3002 ------------------------------------------------------------------------------------- \u533f\u540d\u7528\u6237 class models.AnonymousUser django.contrib.auth.models.AnonymousUser \u7c7b\u5b9e\u73b0\u4e86django.contrib.auth.models.User \u63a5\u53e3\uff0c\u4f46\u5177\u6709\u4e0b\u9762\u51e0\u4e2a\u4e0d\u540c\u70b9\uff1a id \u6c38\u8fdc\u4e3aNone\u3002 username \u6c38\u8fdc\u4e3a\u7a7a\u5b57\u7b26\u4e32\u3002 get_username() \u6c38\u8fdc\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 is_staff \u548c is_superuser \u6c38\u8fdc\u4e3aFalse\u3002 is_active \u6c38\u8fdc\u4e3a False\u3002 groups \u548c user_permissions \u6c38\u8fdc\u4e3a\u7a7a\u3002 is_anonymous() \u8fd4\u56deTrue \u800c\u4e0d\u662fFalse\u3002 is_authenticated() \u8fd4\u56deFalse \u800c\u4e0d\u662fTrue\u3002 set_password()\u3001check_password()\u3001save() \u548cdelete() \u5f15\u53d1 NotImplementedError\u3002 New in Django 1.8: \u65b0\u589e AnonymousUser.get_username() \u4ee5\u66f4\u597d\u5730\u6a21\u62df django.contrib.auth.models.User\u3002 */ request\u5e38\u7528\u65b9\u6cd5 /* 1.HttpRequest.get_full_path() \u3000\u3000\u8fd4\u56de path\uff0c\u5982\u679c\u53ef\u4ee5\u5c06\u52a0\u4e0a\u67e5\u8be2\u5b57\u7b26\u4e32\u3002 \u3000\u3000\u4f8b\u5982\uff1a\"/music/bands/the_beatles/?print=true\" 2.HttpRequest.is_ajax() \u3000\u3000\u5982\u679c\u8bf7\u6c42\u662f\u901a\u8fc7XMLHttpRequest \u53d1\u8d77\u7684\uff0c\u5219\u8fd4\u56deTrue\uff0c\u65b9\u6cd5\u662f\u68c0\u67e5 HTTP_X_REQUESTED_WITH \u76f8\u5e94\u7684\u9996\u90e8\u662f\u5426\u662f\u5b57\u7b26\u4e32'XMLHttpRequest'\u3002 \u3000\u3000\u5927\u90e8\u5206\u73b0\u4ee3\u7684 JavaScript \u5e93\u90fd\u4f1a\u53d1\u9001\u8fd9\u4e2a\u5934\u90e8\u3002\u5982\u679c\u4f60\u7f16\u5199\u81ea\u5df1\u7684 XMLHttpRequest \u8c03\u7528\uff08\u5728\u6d4f\u89c8\u5668\u7aef\uff09\uff0c\u4f60\u5fc5\u987b\u624b\u5de5\u8bbe\u7f6e\u8fd9\u4e2a\u503c\u6765\u8ba9 is_ajax() \u53ef\u4ee5\u5de5\u4f5c\u3002 \u3000\u3000\u5982\u679c\u4e00\u4e2a\u54cd\u5e94\u9700\u8981\u6839\u636e\u8bf7\u6c42\u662f\u5426\u662f\u901a\u8fc7AJAX \u53d1\u8d77\u7684\uff0c\u5e76\u4e14\u4f60\u6b63\u5728\u4f7f\u7528\u67d0\u79cd\u5f62\u5f0f\u7684\u7f13\u5b58\u4f8b\u5982Django \u7684 cache middleware\uff0c \u4f60\u5e94\u8be5\u4f7f\u7528 vary_on_headers('HTTP_X_REQUESTED_WITH') \u88c5\u9970\u4f60\u7684\u89c6\u56fe\u4ee5\u8ba9\u54cd\u5e94\u80fd\u591f\u6b63\u786e\u5730\u7f13\u5b58\u3002 */ HttpResponse\u5bf9\u8c61 \u54cd\u5e94\u5bf9\u8c61\u4e3b\u8981\u6709\u4e09\u79cd\u5f62\u5f0f\uff1a HttpResponse() render() redirect() HttpResponse()\u62ec\u53f7\u5185\u76f4\u63a5\u8ddf\u4e00\u4e2a\u5177\u4f53\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a\u54cd\u5e94\u4f53\uff0c\u6bd4\u8f83\u76f4\u63a5\u5f88\u7b80\u5355\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u540e\u9762\u4e24\u79cd\u5f62\u5f0f\u3002 render() render(request, template_name[, context]\uff09` `\u7ed3\u5408\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6a21\u677f\u548c\u4e00\u4e2a\u7ed9\u5b9a\u7684\u4e0a\u4e0b\u6587\u5b57\u5178\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6e32\u67d3\u540e\u7684 HttpResponse \u5bf9\u8c61\u3002 \u53c2\u6570\uff1a request\uff1a \u7528\u4e8e\u751f\u6210\u54cd\u5e94\u7684\u8bf7\u6c42\u5bf9\u8c61\u3002 template_name\uff1a\u8981\u4f7f\u7528\u7684\u6a21\u677f\u7684\u5b8c\u6574\u540d\u79f0\uff0c\u53ef\u9009\u7684\u53c2\u6570 context\uff1a\u6dfb\u52a0\u5230\u6a21\u677f\u4e0a\u4e0b\u6587\u7684\u4e00\u4e2a\u5b57\u5178\u3002\u9ed8\u8ba4\u662f\u4e00\u4e2a\u7a7a\u5b57\u5178\u3002\u5982\u679c\u5b57\u5178\u4e2d\u7684\u67d0\u4e2a\u503c\u662f\u53ef\u8c03\u7528\u7684\uff0c\u89c6\u56fe\u5c06\u5728\u6e32\u67d3\u6a21\u677f\u4e4b\u524d\u8c03\u7528\u5b83\u3002 render\u65b9\u6cd5\u5c31\u662f\u5c06\u4e00\u4e2a\u6a21\u677f\u9875\u9762\u4e2d\u7684\u6a21\u677f\u8bed\u6cd5\u8fdb\u884c\u6e32\u67d3\uff0c\u6700\u7ec8\u6e32\u67d3\u6210\u4e00\u4e2ahtml\u9875\u9762\u4f5c\u4e3a\u54cd\u5e94\u4f53\u3002 redirect() \u4f20\u9012\u8981\u91cd\u5b9a\u5411\u7684\u4e00\u4e2a\u786c\u7f16\u7801\u7684URL def my_view(request): ... return redirect('/some/url/') \u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b8c\u6574\u7684URL\uff1a def my_view(request): ... return redirect('http://example.com/')\u3000 key\uff1a\u4e24\u6b21\u8bf7\u6c42\u3000 1\uff09301\u548c302\u7684\u533a\u522b\u3002 \u3000\u3000301\u548c302\u72b6\u6001\u7801\u90fd\u8868\u793a\u91cd\u5b9a\u5411\uff0c\u5c31\u662f\u8bf4\u6d4f\u89c8\u5668\u5728\u62ff\u5230\u670d\u52a1\u5668\u8fd4\u56de\u7684\u8fd9\u4e2a\u72b6\u6001\u7801\u540e\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230\u4e00\u4e2a\u65b0\u7684URL\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u53ef\u4ee5\u4ece\u54cd\u5e94\u7684Location\u9996\u90e8\u4e2d\u83b7\u53d6 \uff08\u7528\u6237\u770b\u5230\u7684\u6548\u679c\u5c31\u662f\u4ed6\u8f93\u5165\u7684\u5730\u5740A\u77ac\u95f4\u53d8\u6210\u4e86\u53e6\u4e00\u4e2a\u5730\u5740B\uff09\u2014\u2014\u8fd9\u662f\u5b83\u4eec\u7684\u5171\u540c\u70b9\u3002 \u3000\u3000\u4ed6\u4eec\u7684\u4e0d\u540c\u5728\u4e8e\u3002301\u8868\u793a\u65e7\u5730\u5740A\u7684\u8d44\u6e90\u5df2\u7ecf\u88ab\u6c38\u4e45\u5730\u79fb\u9664\u4e86\uff08\u8fd9\u4e2a\u8d44\u6e90\u4e0d\u53ef\u8bbf\u95ee\u4e86\uff09\uff0c\u641c\u7d22\u5f15\u64ce\u5728\u6293\u53d6\u65b0\u5185\u5bb9\u7684\u540c\u65f6\u4e5f\u5c06\u65e7\u7684\u7f51\u5740\u4ea4\u6362\u4e3a\u91cd\u5b9a\u5411\u4e4b\u540e\u7684\u7f51\u5740\uff1b \u3000\u3000302\u8868\u793a\u65e7\u5730\u5740A\u7684\u8d44\u6e90\u8fd8\u5728\uff08\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\uff09\uff0c\u8fd9\u4e2a\u91cd\u5b9a\u5411\u53ea\u662f\u4e34\u65f6\u5730\u4ece\u65e7\u5730\u5740A\u8df3\u8f6c\u5230\u5730\u5740B\uff0c\u641c\u7d22\u5f15\u64ce\u4f1a\u6293\u53d6\u65b0\u7684\u5185\u5bb9\u800c\u4fdd\u5b58\u65e7\u7684\u7f51\u5740\u3002 SEO302\u597d\u4e8e301 2\uff09\u91cd\u5b9a\u5411\u539f\u56e0\uff1a \uff081\uff09\u7f51\u7ad9\u8c03\u6574\uff08\u5982\u6539\u53d8\u7f51\u9875\u76ee\u5f55\u7ed3\u6784\uff09\uff1b \uff082\uff09\u7f51\u9875\u88ab\u79fb\u5230\u4e00\u4e2a\u65b0\u5730\u5740\uff1b \uff083\uff09\u7f51\u9875\u6269\u5c55\u540d\u6539\u53d8(\u5982\u5e94\u7528\u9700\u8981\u628a.php\u6539\u6210.Html\u6216.shtml)\u3002 \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e0d\u505a\u91cd\u5b9a\u5411\uff0c\u5219\u7528\u6237\u6536\u85cf\u5939\u6216\u641c\u7d22\u5f15\u64ce\u6570\u636e\u5e93\u4e2d\u65e7\u5730\u5740\u53ea\u80fd\u8ba9\u8bbf\u95ee\u5ba2\u6237\u5f97\u5230\u4e00\u4e2a404\u9875\u9762\u9519\u8bef\u4fe1\u606f\uff0c\u8bbf\u95ee\u6d41\u91cf\u767d\u767d\u4e27\u5931\uff1b\u518d\u8005\u67d0\u4e9b\u6ce8\u518c\u4e86\u591a\u4e2a\u57df\u540d\u7684 \u7f51\u7ad9\uff0c\u4e5f\u9700\u8981\u901a\u8fc7\u91cd\u5b9a\u5411\u8ba9\u8bbf\u95ee\u8fd9\u4e9b\u57df\u540d\u7684\u7528\u6237\u81ea\u52a8\u8df3\u8f6c\u5230\u4e3b\u7ad9\u70b9\u7b49\u3002 \u7528redirect\u53ef\u4ee5\u89e3\u91caAPPEND_SLASH\u7684\u7528\u6cd5\uff01 \u5c0f\u63d0\u793a: HttpResponse() #\u7528\u4e8e\u56de\u590d\u4e00\u4e2a\u5b57\u7b26\u4e32 HttpResponse(\"aaa\") \u5f00\u53d1\u4e2d\u5f88\u5c11\u7528. # 7 Django\u7684\u6a21\u677f\u5c42 \u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u6211\u4eec\u5728\u4f8b\u5b50\u89c6\u56fe\u4e2d\u8fd4\u56de\u6587\u672c\u7684\u65b9\u5f0f\u6709\u70b9\u7279\u522b\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0cHTML\u88ab\u76f4\u63a5\u786c\u7f16\u7801\u5728 Python\u4ee3\u7801\u4e4b\u4e2d\u3002 def current_datetime(request): now = datetime.datetime.now() html = \"<html><body>It is now %s.</body></html>\" % now return HttpResponse(html) \u5c3d\u7ba1\u8fd9\u79cd\u6280\u672f\u4fbf\u4e8e\u89e3\u91ca\u89c6\u56fe\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4f46\u76f4\u63a5\u5c06HTML\u786c\u7f16\u7801\u5230\u4f60\u7684\u89c6\u56fe\u91cc\u5374\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002 \u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4e3a\u4ec0\u4e48\uff1a \u5bf9\u9875\u9762\u8bbe\u8ba1\u8fdb\u884c\u7684\u4efb\u4f55\u6539\u53d8\u90fd\u5fc5\u987b\u5bf9 Python \u4ee3\u7801\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\u3002 \u7ad9\u70b9\u8bbe\u8ba1\u7684\u4fee\u6539\u5f80\u5f80\u6bd4\u5e95\u5c42 Python \u4ee3\u7801\u7684\u4fee\u6539\u8981\u9891\u7e41\u5f97\u591a\uff0c\u56e0\u6b64\u5982\u679c\u53ef\u4ee5\u5728\u4e0d\u8fdb\u884c Python \u4ee3\u7801\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u53d8\u66f4\u8bbe\u8ba1\uff0c\u90a3\u5c06\u4f1a\u65b9\u4fbf\u5f97\u591a\u3002 Python \u4ee3\u7801\u7f16\u5199\u548c HTML \u8bbe\u8ba1\u662f\u4e24\u9879\u4e0d\u540c\u7684\u5de5\u4f5c\uff0c\u5927\u591a\u6570\u4e13\u4e1a\u7684\u7f51\u7ad9\u5f00\u53d1\u73af\u5883\u90fd\u5c06\u4ed6\u4eec\u5206\u914d\u7ed9\u4e0d\u540c\u7684\u4eba\u5458\uff08\u751a\u81f3\u4e0d\u540c\u90e8\u95e8\uff09\u6765\u5b8c\u6210\u3002 \u8bbe\u8ba1\u8005\u548cHTML/CSS\u7684\u7f16\u7801\u4eba\u5458\u4e0d\u5e94\u8be5\u88ab\u8981\u6c42\u53bb\u7f16\u8f91Python\u7684\u4ee3\u7801\u6765\u5b8c\u6210\u4ed6\u4eec\u7684\u5de5\u4f5c\u3002 \u7a0b\u5e8f\u5458\u7f16\u5199 Python\u4ee3\u7801\u548c\u8bbe\u8ba1\u4eba\u5458\u5236\u4f5c\u6a21\u677f\u4e24\u9879\u5de5\u4f5c\u540c\u65f6\u8fdb\u884c\u7684\u6548\u7387\u662f\u6700\u9ad8\u7684\uff0c\u8fdc\u80dc\u4e8e\u8ba9\u4e00\u4e2a\u4eba\u7b49\u5f85\u53e6\u4e00\u4e2a\u4eba\u5b8c\u6210\u5bf9\u67d0\u4e2a\u65e2\u5305\u542b Python\u53c8\u5305\u542b HTML \u7684\u6587\u4ef6\u7684\u7f16\u8f91\u5de5\u4f5c\u3002 \u57fa\u4e8e\u8fd9\u4e9b\u539f\u56e0\uff0c\u5c06\u9875\u9762\u7684\u8bbe\u8ba1\u548cPython\u7684\u4ee3\u7801\u5206\u79bb\u5f00\u4f1a\u66f4\u5e72\u51c0\u7b80\u6d01\u66f4\u5bb9\u6613\u7ef4\u62a4\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Django\u7684 \u6a21\u677f\u7cfb\u7edf (Template System)\u6765\u5b9e\u73b0\u8fd9\u79cd\u6a21\u5f0f\uff0c\u8fd9\u5c31\u662f\u672c\u7ae0\u8981\u5177\u4f53\u8ba8\u8bba\u7684\u95ee\u9898\u3002 python\u7684\u6a21\u677f\uff1aHTML\u4ee3\u7801\uff0b\u6a21\u677f\u8bed\u6cd5 def current_time(req): # ================================\u539f\u59cb\u7684\u89c6\u56fe\u51fd\u6570 # import datetime # now=datetime.datetime.now() # html=\"<html><body>\u73b0\u5728\u65f6\u523b\uff1a<h1>%s.</h1></body></html>\" %now # ================================django\u6a21\u677f\u4fee\u6539\u7684\u89c6\u56fe\u51fd\u6570 # from django.template import Template,Context # now=datetime.datetime.now() # t=Template('<html><body>\u73b0\u5728\u65f6\u523b\u662f:<h1>{{current_date}}</h1></body></html>') # #t=get_template('current_datetime.html') # c=Context({'current_date':str(now)}) # html=t.render(c) # # return HttpResponse(html) #\u53e6\u4e00\u79cd\u5199\u6cd5(\u63a8\u8350) import datetime now=datetime.datetime.now() return render(req, 'current_datetime.html', {'current_date':str(now)[:19]}) 1 \u6a21\u677f\u8bed\u6cd5\u4e4b\u53d8\u91cf \u5728 Django \u6a21\u677f\u4e2d\u904d\u5386\u590d\u6742\u6570\u636e\u7ed3\u6784\u7684\u5173\u952e\u662f\u53e5\u70b9\u5b57\u7b26, \u8bed\u6cd5\uff1a {{var_name}} views.py\uff1a def index(request): import datetime s=\"hello\" l=[111,222,333] # \u5217\u8868 dic={\"name\":\"yuan\",\"age\":18} # \u5b57\u5178 date = datetime.date(1993, 5, 2) # \u65e5\u671f\u5bf9\u8c61 class Person(object): def __init__(self,name): self.name=name person_yuan=Person(\"yuan\") # \u81ea\u5b9a\u4e49\u7c7b\u5bf9\u8c61 person_egon=Person(\"egon\") person_alex=Person(\"alex\") person_list=[person_yuan,person_egon,person_alex] return render(request,\"index.html\",{\"l\":l,\"dic\":dic,\"date\":date,\"person_list\":person_list}) *template\uff1a <h4>{{s}}</h4> <h4>\u5217\u8868:{{ l.0 }}</h4> <h4>\u5217\u8868:{{ l.2 }}</h4> <h4>\u5b57\u5178:{{ dic.name }}</h4> <h4>\u65e5\u671f:{{ date.year }}</h4> <h4>\u7c7b\u5bf9\u8c61\u5217\u8868:{{ person_list.0.name }}</h4> \u6ce8\u610f\uff1a\u53e5\u70b9\u7b26\u4e5f\u53ef\u4ee5\u7528\u6765\u5f15\u7528\u5bf9\u8c61\u7684\u65b9\u6cd5(\u65e0\u53c2\u6570\u65b9\u6cd5): <h4>\u5b57\u5178:{{ dic.name.upper }}<``/``h4> 2 \u6a21\u677f\u4e4b\u8fc7\u6ee4\u5668 \u8bed\u6cd5\uff1a {{obj|filter__name:param}} default \u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u662ffalse\u6216\u8005\u4e3a\u7a7a\uff0c\u4f7f\u7528\u7ed9\u5b9a\u7684\u9ed8\u8ba4\u503c\u3002\u5426\u5219\uff0c\u4f7f\u7528\u53d8\u91cf\u7684\u503c\u3002\u4f8b\u5982\uff1a {{ value|default:\"nothing\" }} length \u8fd4\u56de\u503c\u7684\u957f\u5ea6\u3002\u5b83\u5bf9\u5b57\u7b26\u4e32\u548c\u5217\u8868\u90fd\u8d77\u4f5c\u7528\u3002\u4f8b\u5982\uff1a {{ value|length }} \u5982\u679c value \u662f ['a', 'b', 'c', 'd']\uff0c\u90a3\u4e48\u8f93\u51fa\u662f 4\u3002 filesizeformat \u5c06\u503c\u683c\u5f0f\u5316\u4e3a\u4e00\u4e2a \u201c\u4eba\u7c7b\u53ef\u8bfb\u7684\u201d \u6587\u4ef6\u5c3a\u5bf8 \uff08\u4f8b\u5982 '13 KB' , '4.1 MB' , '102 bytes' , \u7b49\u7b49\uff09\u3002\u4f8b\u5982\uff1a {{ value|filesizeformat }} \u5982\u679c value \u662f 123456789\uff0c\u8f93\u51fa\u5c06\u4f1a\u662f 117.7 MB \u3002\u3000\u3000 date \u5982\u679c value=datetime.datetime.now() {{ value|date:\"Y-m-d\" }}\u3000\u3000 slice \u5982\u679c value=\"hello world\" {{ value|slice:\"2:-1\" }} truncatechars \u5982\u679c\u5b57\u7b26\u4e32\u5b57\u7b26\u591a\u4e8e\u6307\u5b9a\u7684\u5b57\u7b26\u6570\u91cf\uff0c\u90a3\u4e48\u4f1a\u88ab\u622a\u65ad\u3002\u622a\u65ad\u7684\u5b57\u7b26\u4e32\u5c06\u4ee5\u53ef\u7ffb\u8bd1\u7684\u7701\u7565\u53f7\u5e8f\u5217\uff08\u201c...\u201d\uff09\u7ed3\u5c3e\u3002 \u53c2\u6570\uff1a \u8981\u622a\u65ad\u7684\u5b57\u7b26\u6570 \u4f8b\u5982\uff1a {{ value|truncatechars:9 }} safe Django\u7684\u6a21\u677f\u4e2d\u4f1a\u5bf9HTML\u6807\u7b7e\u548cJS\u7b49\u8bed\u6cd5\u6807\u7b7e\u8fdb\u884c\u81ea\u52a8\u8f6c\u4e49\uff0c\u539f\u56e0\u663e\u800c\u6613\u89c1\uff0c\u8fd9\u6837\u662f\u4e3a\u4e86\u5b89\u5168\u3002\u4f46\u662f\u6709\u7684\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u4e0d\u5e0c\u671b\u8fd9\u4e9bHTML\u5143\u7d20\u88ab\u8f6c\u4e49\uff0c\u6bd4\u5982\u6211\u4eec\u505a\u4e00\u4e2a\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\uff0c\u540e\u53f0\u6dfb\u52a0\u7684\u6587\u7ae0\u4e2d\u662f\u7ecf\u8fc7\u4fee\u9970\u7684\uff0c\u8fd9\u4e9b\u4fee\u9970\u53ef\u80fd\u662f\u901a\u8fc7\u4e00\u4e2a\u7c7b\u4f3c\u4e8eFCKeditor\u7f16\u8f91\u52a0\u6ce8\u4e86HTML\u4fee\u9970\u7b26\u7684\u6587\u672c\uff0c\u5982\u679c\u81ea\u52a8\u8f6c\u4e49\u7684\u8bdd\u663e\u793a\u7684\u5c31\u662f\u4fdd\u62a4HTML\u6807\u7b7e\u7684\u6e90\u6587\u4ef6\u3002\u4e3a\u4e86\u5728Django\u4e2d\u5173\u95edHTML\u7684\u81ea\u52a8\u8f6c\u4e49\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u5982\u679c\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u53d8\u91cf\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fc7\u6ee4\u5668\u201c|safe\u201d\u7684\u65b9\u5f0f\u544a\u8bc9Django\u8fd9\u6bb5\u4ee3\u7801\u662f\u5b89\u5168\u7684\u4e0d\u5fc5\u8f6c\u4e49\u3002\u6bd4\u5982\uff1a value=\"<a href=\"\">\u70b9\u51fb</a>\" {{ value|safe}} \u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u7528\u7684\u6a21\u677f\u7684\u8fc7\u6ee4\u5668\uff0c https://docs.djangoproject.com/zh-hans/3.2/ref/templates/builtins/ 3 \u6a21\u677f\u4e4b\u6807\u7b7e \u6807\u7b7e\u770b\u8d77\u6765\u50cf\u662f\u8fd9\u6837\u7684\uff1a {% tag %} \u3002\u6807\u7b7e\u6bd4\u53d8\u91cf\u66f4\u52a0\u590d\u6742\uff1a\u4e00\u4e9b\u5728\u8f93\u51fa\u4e2d\u521b\u5efa\u6587\u672c\uff0c\u4e00\u4e9b\u901a\u8fc7\u5faa\u73af\u6216\u903b\u8f91\u6765\u63a7\u5236\u6d41\u7a0b\uff0c\u4e00\u4e9b\u52a0\u8f7d\u5176\u540e\u7684\u53d8\u91cf\u5c06\u4f7f\u7528\u5230\u7684\u989d\u5916\u4fe1\u606f\u5230\u6a21\u7248\u4e2d\u3002\u4e00\u4e9b\u6807\u7b7e\u9700\u8981\u5f00\u59cb\u548c\u7ed3\u675f\u6807\u7b7e \uff08\u4f8b\u5982 {% tag %} ... \u6807\u7b7e \u5185\u5bb9 ... {% endtag %}\uff09\u3002 for\u6807\u7b7e \u904d\u5386\u6bcf\u4e00\u4e2a\u5143\u7d20\uff1a {% for person in person_list %} <p>{{ person.name }}</p> {% endfor %} \u53ef\u4ee5\u5229\u7528 {% for obj in list reversed %} \u53cd\u5411\u5b8c\u6210\u5faa\u73af\u3002 \u904d\u5386\u4e00\u4e2a\u5b57\u5178\uff1a {% for key,val in dic.items %} <p>{{ key }}:{{ val }}</p> {% endfor %} \u6ce8\uff1a\u5faa\u73af\u5e8f\u53f7\u53ef\u4ee5\u901a\u8fc7\uff5b\uff5bforloop\uff5d\uff5d\u663e\u793a\u3000\u3000 forloop.counter The current iteration of the loop (1-indexed) forloop.counter0 The current iteration of the loop (0-indexed) forloop.revcounter The number of iterations from the end of the loop (1-indexed) forloop.revcounter0 The number of iterations from the end of the loop (0-indexed) forloop.first True if this is the first time through the loop forloop.last True if this is the last time through the loop for ... empty for \u6807\u7b7e\u5e26\u6709\u4e00\u4e2a\u53ef\u9009\u7684 {% empty %} \u4ece\u53e5\uff0c\u4ee5\u4fbf\u5728\u7ed9\u51fa\u7684\u7ec4\u662f\u7a7a\u7684\u6216\u8005\u6ca1\u6709\u88ab\u627e\u5230\u65f6\uff0c\u53ef\u4ee5\u6709\u6240\u64cd\u4f5c\u3002 {% for person in person_list %} <p>{{ person.name }}</p> {% empty %} <p>sorry,no person here</p> {% endfor %} if \u6807\u7b7e {% if %} \u4f1a\u5bf9\u4e00\u4e2a\u53d8\u91cf\u6c42\u503c\uff0c\u5982\u679c\u5b83\u7684\u503c\u662f\u201cTrue\u201d\uff08\u5b58\u5728\u3001\u4e0d\u4e3a\u7a7a\u3001\u4e14\u4e0d\u662fboolean\u7c7b\u578b\u7684false\u503c\uff09\uff0c\u5bf9\u5e94\u7684\u5185\u5bb9\u5757\u4f1a\u8f93\u51fa\u3002 {% if num > 100 or num < 0 %} <p>\u65e0\u6548</p> {% elif num > 80 and num < 100 %} <p>\u4f18\u79c0</p> {% else %} <p>\u51d1\u6d3b\u5427</p> {% endif %} with \u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u5730\u540d\u5b57\u7f13\u5b58\u4e00\u4e2a\u590d\u6742\u7684\u53d8\u91cf\uff0c\u5f53\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u201c\u6602\u8d35\u7684\u201d\u65b9\u6cd5\uff08\u6bd4\u5982\u8bbf\u95ee\u6570\u636e\u5e93\uff09\u5f88\u591a\u6b21\u7684\u65f6\u5019\u662f\u975e\u5e38\u6709\u7528\u7684 \u4f8b\u5982\uff1a {% with total=business.employees.count %} {{ total }} employee{{ total|pluralize }} {% endwith %} csrf_token \u8fd9\u4e2a\u6807\u7b7e\u7528\u4e8e\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u4fdd\u62a4 \u8fd9\u53eb\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\uff0cCross Site Request Forgery\uff08 CSRF \uff09 4 \u81ea\u5b9a\u4e49\u6807\u7b7e\u548c\u8fc7\u6ee4\u5668 1\u3001\u5728settings\u4e2d\u7684INSTALLED_APPS\u914d\u7f6e\u5f53\u524dapp\uff0c\u4e0d\u7136django\u65e0\u6cd5\u627e\u5230\u81ea\u5b9a\u4e49\u7684simple_tag. 2\u3001\u5728app\u4e2d\u521b\u5efatemplatetags\u6a21\u5757(\u6a21\u5757\u540d\u53ea\u80fd\u662ftemplatetags) 3\u3001\u521b\u5efa\u4efb\u610f .py \u6587\u4ef6\uff0c\u5982\uff1amy_tags.py from django import template from django.utils.safestring import mark_safe register = template.Library() #register\u7684\u540d\u5b57\u662f\u56fa\u5b9a\u7684,\u4e0d\u53ef\u6539\u53d8 @register.filter def filter_multi(v1,v2): return v1 * v2 <br> @register.simple_tag def simple_tag_multi(v1,v2): return v1 * v2 <br> @register.simple_tag def my_input(id,arg): result = \"<input type='text' id='%s' class='%s' />\" %(id,arg,) return mark_safe(result) 4\u3001\u5728\u4f7f\u7528\u81ea\u5b9a\u4e49simple_tag\u548cfilter\u7684html\u6587\u4ef6\u4e2d\u5bfc\u5165\u4e4b\u524d\u521b\u5efa\u7684 my_tags.py {% load my_tags %}\u3000 5\u3001\u4f7f\u7528simple_tag\u548cfilter\uff08\u5982\u4f55\u8c03\u7528\uff09 -------------------------------.html {% load xxx %} # num=12 {{ num|filter_multi:2 }} #24 {{ num|filter_multi:\"[22,333,4444]\" }} {% simple_tag_multi 2 5 %} \u53c2\u6570\u4e0d\u9650,\u4f46\u4e0d\u80fd\u653e\u5728if for\u8bed\u53e5\u4e2d {% simple_tag_multi num 5 %} \u6ce8\u610f\uff1afilter\u53ef\u4ee5\u7528\u5728if\u7b49\u8bed\u53e5\u540e\uff0csimple_tag\u4e0d\u53ef\u4ee5 {% if num|filter_multi:30 > 100 %} {{ num|filter_multi:30 }} {% endif %} \u5c0f\u7b14\u8bb0: \u81ea\u5b9a\u4e49\u7684\u8fc7\u6ee4\u5668\u6700\u591a\u4e24\u4e2a\u53c2\u6570, \u81ea\u5b9a\u4e49\u6807\u7b7e\u4e0d\u9650\u5236\u53c2\u6570 5 \u6a21\u677f\u7ee7\u627f (extend) Django\u6a21\u7248\u5f15\u64ce\u4e2d\u6700\u5f3a\u5927\u4e5f\u662f\u6700\u590d\u6742\u7684\u90e8\u5206\u5c31\u662f\u6a21\u7248\u7ee7\u627f\u4e86\u3002\u6a21\u7248\u7ee7\u627f\u53ef\u4ee5\u8ba9\u60a8\u521b\u5efa\u4e00\u4e2a\u57fa\u672c\u7684\u201c\u9aa8\u67b6\u201d\u6a21\u7248\uff0c\u5b83\u5305\u542b\u60a8\u7ad9\u70b9\u4e2d\u7684\u5168\u90e8\u5143\u7d20\uff0c\u5e76\u4e14\u53ef\u4ee5\u5b9a\u4e49\u80fd\u591f\u88ab\u5b50\u6a21\u7248\u8986\u76d6\u7684 blocks \u3002 \u901a\u8fc7\u4ece\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5f00\u59cb\uff0c\u53ef\u4ee5\u5bb9\u6613\u7684\u7406\u89e3\u6a21\u7248\u7ee7\u627f\uff1a <!DOCTYPE html> <html lang=\"en\"> <head> <link rel=\"stylesheet\" href=\"style.css\" /> <title>{% block title %}My amazing site{%/span> endblock %}</title> </head> <body> <div id=\"sidebar\"> {% block sidebar %} <ul> <li><a href=\"/\">Home</a></li> <li><a href=\"/blog/\">Blog</a></li> </ul> {% endblock %} </div> <div id=\"content\"> {% block content %}{% endblock %} </div> </body> </html> \u8fd9\u4e2a\u6a21\u7248\uff0c\u6211\u4eec\u628a\u5b83\u53eb\u4f5c base.html \uff0c \u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53ef\u4ee5\u7528\u4e8e\u4e24\u5217\u6392\u7248\u9875\u9762\u7684\u7b80\u5355HTML\u9aa8\u67b6\u3002\u201c\u5b50\u6a21\u7248\u201d\u7684\u5de5\u4f5c\u662f\u7528\u5b83\u4eec\u7684\u5185\u5bb9\u586b\u5145\u7a7a\u7684blocks\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c block \u6807\u7b7e\u5b9a\u4e49\u4e86\u4e09\u4e2a\u53ef\u4ee5\u88ab\u5b50\u6a21\u7248\u5185\u5bb9\u586b\u5145\u7684block\u3002 block \u544a\u8bc9\u6a21\u7248\u5f15\u64ce\uff1a \u5b50\u6a21\u7248\u53ef\u80fd\u4f1a\u8986\u76d6\u6389\u6a21\u7248\u4e2d\u7684\u8fd9\u4e9b\u4f4d\u7f6e\u3002 \u5b50\u6a21\u7248\u53ef\u80fd\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a {% extends \"base.html\" %} {% block title %}My amazing blog{% endblock %} {% block content %} {% for entry in blog_entries %} <h2>{{ entry.title }}</h2> <p>{{ entry.body }}</p> {% endfor %} {% endblock %} extends \u6807\u7b7e\u662f\u8fd9\u91cc\u7684\u5173\u952e\u3002\u5b83\u544a\u8bc9\u6a21\u7248\u5f15\u64ce\uff0c\u8fd9\u4e2a\u6a21\u7248\u201c\u7ee7\u627f\u201d\u4e86\u53e6\u4e00\u4e2a\u6a21\u7248\u3002\u5f53\u6a21\u7248\u7cfb\u7edf\u5904\u7406\u8fd9\u4e2a\u6a21\u7248\u65f6\uff0c\u9996\u5148\uff0c\u5b83\u5c06\u5b9a\u4f4d\u7236\u6a21\u7248\u2014\u2014\u5728\u6b64\u4f8b\u4e2d\uff0c\u5c31\u662f\u201cbase.html\u201d\u3002 \u90a3\u65f6\uff0c\u6a21\u7248\u5f15\u64ce\u5c06\u6ce8\u610f\u5230 base.html \u4e2d\u7684\u4e09\u4e2a block \u6807\u7b7e\uff0c\u5e76\u7528\u5b50\u6a21\u7248\u4e2d\u7684\u5185\u5bb9\u6765\u66ff\u6362\u8fd9\u4e9bblock\u3002\u6839\u636e blog_entries \u7684\u503c\uff0c\u8f93\u51fa\u53ef\u80fd\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a <!DOCTYPE html> <html lang=\"en\"> <head> <link rel=\"stylesheet\" href=\"style.css\" /> <title>My amazing blog</title> </head> <body> <div id=\"sidebar\"> <ul> <li><a href=\"/\">Home</a></li> <li><a href=\"/blog/\">Blog</a></li> </ul> </div> <div id=\"content\"> <h2>Entry one</h2> <p>This is my first entry.</p> <h2>Entry two</h2> <p>This is my second entry.</p> </div> </body> </html> \u8bf7\u6ce8\u610f\uff0c\u5b50\u6a21\u7248\u5e76\u6ca1\u6709\u5b9a\u4e49 sidebar block\uff0c\u6240\u4ee5\u7cfb\u7edf\u4f7f\u7528\u4e86\u7236\u6a21\u7248\u4e2d\u7684\u503c\u3002\u7236\u6a21\u7248\u7684 {% block %} \u6807\u7b7e\u4e2d\u7684\u5185\u5bb9\u603b\u662f\u88ab\u7528\u4f5c\u5907\u9009\u5185\u5bb9\uff08fallback\uff09\u3002 \u8fd9\u79cd\u65b9\u5f0f\u4f7f\u4ee3\u7801\u5f97\u5230\u6700\u5927\u7a0b\u5ea6\u7684\u590d\u7528\uff0c\u5e76\u4e14\u4f7f\u5f97\u6dfb\u52a0\u5185\u5bb9\u5230\u5171\u4eab\u7684\u5185\u5bb9\u533a\u57df\u66f4\u52a0\u7b80\u5355\uff0c\u4f8b\u5982\uff0c\u90e8\u5206\u8303\u56f4\u5185\u7684\u5bfc\u822a\u3002 \u8fd9\u91cc\u662f\u4f7f\u7528\u7ee7\u627f\u7684\u4e00\u4e9b\u63d0\u793a\uff1a \u5982\u679c\u4f60\u5728\u6a21\u7248\u4e2d\u4f7f\u7528 {% extends %} \u6807\u7b7e\uff0c\u5b83\u5fc5\u987b\u662f\u6a21\u7248\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6807\u7b7e\u3002\u5176\u4ed6\u7684\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u6a21\u7248\u7ee7\u627f\u90fd\u5c06\u65e0\u6cd5\u5de5\u4f5c\u3002 \u5728base\u6a21\u7248\u4e2d\u8bbe\u7f6e\u8d8a\u591a\u7684 {% block %} \u6807\u7b7e\u8d8a\u597d\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5b50\u6a21\u7248\u4e0d\u5fc5\u5b9a\u4e49\u5168\u90e8\u7236\u6a21\u7248\u4e2d\u7684blocks\uff0c\u6240\u4ee5\uff0c\u4f60\u53ef\u4ee5\u5728\u5927\u591a\u6570blocks\u4e2d\u586b\u5145\u5408\u7406\u7684\u9ed8\u8ba4\u5185\u5bb9\uff0c\u7136\u540e\uff0c\u53ea\u5b9a\u4e49\u4f60\u9700\u8981\u7684\u90a3\u4e00\u4e2a\u3002\u591a\u4e00\u70b9\u94a9\u5b50\u603b\u6bd4\u5c11\u4e00\u70b9\u597d\u3002 \u5982\u679c\u4f60\u53d1\u73b0\u4f60\u81ea\u5df1\u5728\u5927\u91cf\u7684\u6a21\u7248\u4e2d\u590d\u5236\u5185\u5bb9\uff0c\u90a3\u53ef\u80fd\u610f\u5473\u7740\u4f60\u5e94\u8be5\u628a\u5185\u5bb9\u79fb\u52a8\u5230\u7236\u6a21\u7248\u4e2d\u7684\u4e00\u4e2a {% block %} \u4e2d\u3002 If you need to get the content of the block from the parent template, the {{ block.super }} variable will do the trick. This is useful if you want to add to the contents of a parent block instead of completely overriding it. Data inserted using {{ block.super }} will not be automatically escaped (see the next section), since it was already escaped, if necessary, in the parent template. \u4e3a\u4e86\u66f4\u597d\u7684\u53ef\u8bfb\u6027\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7ed9\u4f60\u7684 {% endblock %} \u6807\u7b7e\u4e00\u4e2a \u540d\u5b57 \u3002\u4f8b\u5982\uff1a python {% block content %} ... {% endblock content %} \u5728\u5927\u578b\u6a21\u7248\u4e2d\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5e2e\u4f60\u6e05\u695a\u7684\u770b\u5230\u54ea\u4e00\u4e2a\u3000 {% block %} \u6807\u7b7e\u88ab\u5173\u95ed\u4e86\u3002 \u4e0d\u80fd\u5728\u4e00\u4e2a\u6a21\u7248\u4e2d\u5b9a\u4e49\u591a\u4e2a\u76f8\u540c\u540d\u5b57\u7684 block \u6807\u7b7e\u3002 8 Django \u6a21\u578b\u5c42(1) ORM\u7b80\u4ecb MVC\u6216\u8005MVC\u6846\u67b6\u4e2d\u5305\u62ec\u4e00\u4e2a\u91cd\u8981\u7684\u90e8\u5206\uff0c\u5c31\u662fORM\uff0c\u5b83\u5b9e\u73b0\u4e86\u6570\u636e\u6a21\u578b\u4e0e\u6570\u636e\u5e93\u7684\u89e3\u8026\uff0c\u5373\u6570\u636e\u6a21\u578b\u7684\u8bbe\u8ba1\u4e0d\u9700\u8981\u4f9d\u8d56\u4e8e\u7279\u5b9a\u7684\u6570\u636e\u5e93\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5c31\u53ef\u4ee5\u8f7b\u677e\u66f4\u6362\u6570\u636e\u5e93\uff0c\u8fd9\u6781\u5927\u7684\u51cf\u8f7b\u4e86\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\u91cf\uff0c\u4e0d\u9700\u8981\u9762\u5bf9\u56e0\u6570\u636e\u5e93\u53d8\u66f4\u800c\u5bfc\u81f4\u7684\u65e0\u6548\u52b3\u52a8 ORM\u662f\u201c\u5bf9\u8c61-\u5173\u7cfb-\u6620\u5c04\u201d\u7684\u7b80\u79f0\u3002 #sql\u4e2d\u7684\u8868 #\u521b\u5efa\u8868: CREATE TABLE employee( id INT PRIMARY KEY auto_increment , name VARCHAR (20), gender BIT default 1, birthday DATA , department VARCHAR (20), salary DECIMAL (8,2) unsigned, ); #sql\u4e2d\u7684\u8868\u7eaa\u5f55 #\u6dfb\u52a0\u4e00\u6761\u8868\u7eaa\u5f55: INSERT employee (name,gender,birthday,salary,department) VALUES (\"alex\",1,\"1985-12-12\",8000,\"\u4fdd\u6d01\u90e8\"); #\u67e5\u8be2\u4e00\u6761\u8868\u7eaa\u5f55: SELECT * FROM employee WHERE age=24; #\u66f4\u65b0\u4e00\u6761\u8868\u7eaa\u5f55: UPDATE employee SET birthday=\"1989-10-24\" WHERE id=1; #\u5220\u9664\u4e00\u6761\u8868\u7eaa\u5f55: DELETE FROM employee WHERE name=\"alex\" #python\u7684\u7c7b class Employee(models.Model): id=models.AutoField(primary_key=True) name=models.CharField(max_length=32) gender=models.BooleanField() birthday=models.DateField() department=models.CharField(max_length=32) salary=models.DecimalField(max_digits=8,decimal_places=2) #python\u7684\u7c7b\u5bf9\u8c61 #\u6dfb\u52a0\u4e00\u6761\u8868\u7eaa\u5f55: emp=Employee(name=\"alex\",gender=True,birthday=\"1985-12-12\",epartment=\"\u4fdd\u6d01\u90e8\") emp.save() #\u67e5\u8be2\u4e00\u6761\u8868\u7eaa\u5f55: Employee.objects.filter(age=24) #\u66f4\u65b0\u4e00\u6761\u8868\u7eaa\u5f55: Employee.objects.filter(id=1).update(birthday=\"1989-10-24\") #\u5220\u9664\u4e00\u6761\u8868\u7eaa\u5f55: Employee.objects.filter(name=\"alex\").delete() \u5355\u8868\u64cd\u4f5c \u521b\u5efa\u8868 1 \u521b\u5efa\u6a21\u578b \u521b\u5efa\u540d\u4e3abook\u7684app\uff0c\u5728book\u4e0b\u7684models.py\u4e2d\u521b\u5efa\u6a21\u578b\uff1a from django.db import models # Create your models here. class Book(models.Model): id=models.AutoField(primary_key=True) title=models.CharField(max_length=32) state=models.BooleanField() pub_date=models.DateField() price=models.DecimalField(max_digits=8,decimal_places=2) publish=models.CharField(max_length=32) 2 \u66f4\u591a\u5b57\u6bb5\u548c\u53c2\u6570 \u6bcf\u4e2a\u5b57\u6bb5\u6709\u4e00\u4e9b\u7279\u6709\u7684\u53c2\u6570\uff0c\u4f8b\u5982\uff0cCharField\u9700\u8981max_length\u53c2\u6570\u6765\u6307\u5b9a VARCHAR \u6570\u636e\u5e93\u5b57\u6bb5\u7684\u5927\u5c0f\u3002\u8fd8\u6709\u4e00\u4e9b\u9002\u7528\u4e8e\u6240\u6709\u5b57\u6bb5\u7684\u901a\u7528\u53c2\u6570\u3002 \u8fd9\u4e9b\u53c2\u6570\u5728\u6587\u6863\u4e2d\u6709\u8be6\u7ec6\u5b9a\u4e49\uff0c\u8fd9\u91cc\u6211\u4eec\u53ea\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e9b\u6700\u5e38\u7528\u7684\uff1a \u66f4\u591a\u5b57\u6bb5\uff1a ''' <1> CharField \u5b57\u7b26\u4e32\u5b57\u6bb5, \u7528\u4e8e\u8f83\u77ed\u7684\u5b57\u7b26\u4e32. CharField \u8981\u6c42\u5fc5\u987b\u6709\u4e00\u4e2a\u53c2\u6570 maxlength, \u7528\u4e8e\u4ece\u6570\u636e\u5e93\u5c42\u548cDjango\u6821\u9a8c\u5c42\u9650\u5236\u8be5\u5b57\u6bb5\u6240\u5141\u8bb8\u7684\u6700\u5927\u5b57\u7b26\u6570. <2> IntegerField #\u7528\u4e8e\u4fdd\u5b58\u4e00\u4e2a\u6574\u6570. <3> FloatField \u4e00\u4e2a\u6d6e\u70b9\u6570. \u5fc5\u987b \u63d0\u4f9b\u4e24\u4e2a\u53c2\u6570: \u53c2\u6570 \u63cf\u8ff0 max_digits \u603b\u4f4d\u6570(\u4e0d\u5305\u62ec\u5c0f\u6570\u70b9\u548c\u7b26\u53f7) decimal_places \u5c0f\u6570\u4f4d\u6570 \u4e3e\u4f8b\u6765\u8bf4, \u8981\u4fdd\u5b58\u6700\u5927\u503c\u4e3a 999 (\u5c0f\u6570\u70b9\u540e\u4fdd\u5b582\u4f4d),\u4f60\u8981\u8fd9\u6837\u5b9a\u4e49\u5b57\u6bb5: models.FloatField(..., max_digits=5, decimal_places=2) \u8981\u4fdd\u5b58\u6700\u5927\u503c\u4e00\u767e\u4e07(\u5c0f\u6570\u70b9\u540e\u4fdd\u5b5810\u4f4d)\u7684\u8bdd,\u4f60\u8981\u8fd9\u6837\u5b9a\u4e49: models.FloatField(..., max_digits=19, decimal_places=10) admin \u7528\u4e00\u4e2a\u6587\u672c\u6846(<input type=\"text\">)\u8868\u793a\u8be5\u5b57\u6bb5\u4fdd\u5b58\u7684\u6570\u636e. <4> AutoField \u4e00\u4e2a IntegerField, \u6dfb\u52a0\u8bb0\u5f55\u65f6\u5b83\u4f1a\u81ea\u52a8\u589e\u957f. \u4f60\u901a\u5e38\u4e0d\u9700\u8981\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u5b57\u6bb5; \u81ea\u5b9a\u4e49\u4e00\u4e2a\u4e3b\u952e\uff1amy_id=models.AutoField(primary_key=True) \u5982\u679c\u4f60\u4e0d\u6307\u5b9a\u4e3b\u952e\u7684\u8bdd,\u7cfb\u7edf\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2a\u4e3b\u952e\u5b57\u6bb5\u5230\u4f60\u7684 model. <5> BooleanField A true/false field. admin \u7528 checkbox \u6765\u8868\u793a\u6b64\u7c7b\u5b57\u6bb5. <6> TextField \u4e00\u4e2a\u5bb9\u91cf\u5f88\u5927\u7684\u6587\u672c\u5b57\u6bb5. admin \u7528\u4e00\u4e2a <textarea> (\u6587\u672c\u533a\u57df)\u8868\u793a\u8be5\u5b57\u6bb5\u6570\u636e.(\u4e00\u4e2a\u591a\u884c\u7f16\u8f91\u6846). <7> EmailField \u4e00\u4e2a\u5e26\u6709\u68c0\u67e5Email\u5408\u6cd5\u6027\u7684 CharField,\u4e0d\u63a5\u53d7 maxlength \u53c2\u6570. <8> DateField \u4e00\u4e2a\u65e5\u671f\u5b57\u6bb5. \u5171\u6709\u4e0b\u5217\u989d\u5916\u7684\u53ef\u9009\u53c2\u6570: Argument \u63cf\u8ff0 auto_now \u5f53\u5bf9\u8c61\u88ab\u4fdd\u5b58\u65f6,\u81ea\u52a8\u5c06\u8be5\u5b57\u6bb5\u7684\u503c\u8bbe\u7f6e\u4e3a\u5f53\u524d\u65f6\u95f4.\u901a\u5e38\u7528\u4e8e\u8868\u793a \"last-modified\" \u65f6\u95f4\u6233. auto_now_add \u5f53\u5bf9\u8c61\u9996\u6b21\u88ab\u521b\u5efa\u65f6,\u81ea\u52a8\u5c06\u8be5\u5b57\u6bb5\u7684\u503c\u8bbe\u7f6e\u4e3a\u5f53\u524d\u65f6\u95f4.\u901a\u5e38\u7528\u4e8e\u8868\u793a\u5bf9\u8c61\u521b\u5efa\u65f6\u95f4. \uff08\u4ec5\u4ec5\u5728admin\u4e2d\u6709\u610f\u4e49...) <9> DateTimeField \u4e00\u4e2a\u65e5\u671f\u65f6\u95f4\u5b57\u6bb5. \u7c7b\u4f3c DateField \u652f\u6301\u540c\u6837\u7684\u9644\u52a0\u9009\u9879. <10> ImageField \u7c7b\u4f3c FileField, \u4e0d\u8fc7\u8981\u6821\u9a8c\u4e0a\u4f20\u5bf9\u8c61\u662f\u5426\u662f\u4e00\u4e2a\u5408\u6cd5\u56fe\u7247.#\u5b83\u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570:height_field\u548cwidth_field, \u5982\u679c\u63d0\u4f9b\u8fd9\u4e24\u4e2a\u53c2\u6570,\u5219\u56fe\u7247\u5c06\u6309\u63d0\u4f9b\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u89c4\u683c\u4fdd\u5b58. <11> FileField \u4e00\u4e2a\u6587\u4ef6\u4e0a\u4f20\u5b57\u6bb5. \u8981\u6c42\u4e00\u4e2a\u5fc5\u987b\u6709\u7684\u53c2\u6570: upload_to, \u4e00\u4e2a\u7528\u4e8e\u4fdd\u5b58\u4e0a\u8f7d\u6587\u4ef6\u7684\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84. \u8fd9\u4e2a\u8def\u5f84\u5fc5\u987b\u5305\u542b strftime #formatting, \u8be5\u683c\u5f0f\u5c06\u88ab\u4e0a\u8f7d\u6587\u4ef6\u7684 date/time \u66ff\u6362(so that uploaded files don't fill up the given directory). admin \u7528\u4e00\u4e2a<input type=\"file\">\u90e8\u4ef6\u8868\u793a\u8be5\u5b57\u6bb5\u4fdd\u5b58\u7684\u6570\u636e(\u4e00\u4e2a\u6587\u4ef6\u4e0a\u4f20\u90e8\u4ef6) . \u6ce8\u610f\uff1a\u5728\u4e00\u4e2a model \u4e2d\u4f7f\u7528 FileField \u6216 ImageField \u9700\u8981\u4ee5\u4e0b\u6b65\u9aa4: \uff081\uff09\u5728\u4f60\u7684 settings \u6587\u4ef6\u4e2d, \u5b9a\u4e49\u4e00\u4e2a\u5b8c\u6574\u8def\u5f84\u7ed9 MEDIA_ROOT \u4ee5\u4fbf\u8ba9 Django\u5728\u6b64\u5904\u4fdd\u5b58\u4e0a\u4f20\u6587\u4ef6. (\u51fa\u4e8e\u6027\u80fd\u8003\u8651,\u8fd9\u4e9b\u6587\u4ef6\u5e76\u4e0d\u4fdd\u5b58\u5230\u6570\u636e\u5e93.) \u5b9a\u4e49MEDIA_URL \u4f5c\u4e3a\u8be5\u76ee\u5f55\u7684\u516c\u5171 URL. \u8981\u786e\u4fdd\u8be5\u76ee\u5f55\u5bf9 WEB\u670d\u52a1\u5668\u7528\u6237\u5e10\u53f7\u662f\u53ef\u5199\u7684. \uff082\uff09 \u5728\u4f60\u7684 model \u4e2d\u6dfb\u52a0 FileField \u6216 ImageField, \u5e76\u786e\u4fdd\u5b9a\u4e49\u4e86 upload_to \u9009\u9879,\u4ee5\u544a\u8bc9 Django \u4f7f\u7528 MEDIA_ROOT \u7684\u54ea\u4e2a\u5b50\u76ee\u5f55\u4fdd\u5b58\u4e0a\u4f20\u6587\u4ef6.\u4f60\u7684\u6570\u636e\u5e93\u4e2d\u8981\u4fdd\u5b58\u7684\u53ea\u662f\u6587\u4ef6\u7684\u8def\u5f84(\u76f8\u5bf9\u4e8e MEDIA_ROOT). \u51fa\u4e8e\u4e60\u60ef\u4f60\u4e00\u5b9a\u5f88\u60f3\u4f7f\u7528 Django \u63d0\u4f9b\u7684 get_<#fieldname>_url \u51fd\u6570.\u4e3e\u4f8b\u6765\u8bf4,\u5982\u679c\u4f60\u7684 ImageField \u53eb\u4f5c mug_shot, \u4f60\u5c31\u53ef\u4ee5\u5728\u6a21\u677f\u4e2d\u4ee5 {{ object.#get_mug_shot_url }} \u8fd9\u6837\u7684\u65b9\u5f0f\u5f97\u5230\u56fe\u50cf\u7684\u7edd\u5bf9\u8def\u5f84. <12> URLField \u7528\u4e8e\u4fdd\u5b58 URL. \u82e5 verify_exists \u53c2\u6570\u4e3a True (\u9ed8\u8ba4), \u7ed9\u5b9a\u7684 URL \u4f1a\u9884\u5148\u68c0\u67e5\u662f\u5426\u5b58\u5728( \u5373URL\u662f\u5426\u88ab\u6709\u6548\u88c5\u5165\u4e14\u6ca1\u6709\u8fd4\u56de404\u54cd\u5e94). admin \u7528\u4e00\u4e2a <input type=\"text\"> \u6587\u672c\u6846\u8868\u793a\u8be5\u5b57\u6bb5\u4fdd\u5b58\u7684\u6570\u636e(\u4e00\u4e2a\u5355\u884c\u7f16\u8f91\u6846) <13> NullBooleanField \u7c7b\u4f3c BooleanField, \u4e0d\u8fc7\u5141\u8bb8 NULL \u4f5c\u4e3a\u5176\u4e2d\u4e00\u4e2a\u9009\u9879. \u63a8\u8350\u4f7f\u7528\u8fd9\u4e2a\u5b57\u6bb5\u800c\u4e0d\u8981\u7528 BooleanField \u52a0 null=True \u9009\u9879admin \u7528\u4e00\u4e2a\u9009\u62e9\u6846 <select> (\u4e09\u4e2a\u53ef\u9009\u62e9\u7684\u503c: \"Unknown\", \"Yes\" \u548c \"No\" ) \u6765\u8868\u793a\u8fd9\u79cd\u5b57\u6bb5\u6570\u636e. <14> SlugField \"Slug\" \u662f\u4e00\u4e2a\u62a5\u7eb8\u672f\u8bed. slug \u662f\u67d0\u4e2a\u4e1c\u897f\u7684\u5c0f\u5c0f\u6807\u8bb0(\u77ed\u7b7e), \u53ea\u5305\u542b\u5b57\u6bcd,\u6570\u5b57,\u4e0b\u5212\u7ebf\u548c\u8fde\u5b57\u7b26.#\u5b83\u4eec\u901a\u5e38\u7528\u4e8eURLs \u82e5\u4f60\u4f7f\u7528 Django \u5f00\u53d1\u7248\u672c,\u4f60\u53ef\u4ee5\u6307\u5b9a maxlength. \u82e5 maxlength \u672a\u6307\u5b9a, Django \u4f1a\u4f7f\u7528\u9ed8\u8ba4\u957f\u5ea6: 50. #\u5728\u4ee5\u524d\u7684 Django \u7248\u672c,\u6ca1\u6709\u4efb\u4f55\u529e\u6cd5\u6539\u53d850 \u8fd9\u4e2a\u957f\u5ea6. \u8fd9\u6697\u793a\u4e86 db_index=True. \u5b83\u63a5\u53d7\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570: prepopulate_from, which is a list of fields from which to auto-#populate the slug, via JavaScript,in the object's admin form: models.SlugField (prepopulate_from=(\"pre_name\", \"name\"))prepopulate_from \u4e0d\u63a5\u53d7 DateTimeFields. <13> XMLField \u4e00\u4e2a\u6821\u9a8c\u503c\u662f\u5426\u4e3a\u5408\u6cd5XML\u7684 TextField,\u5fc5\u987b\u63d0\u4f9b\u53c2\u6570: schema_path, \u5b83\u662f\u4e00\u4e2a\u7528\u6765\u6821\u9a8c\u6587\u672c\u7684 RelaxNG schema #\u7684\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84. <14> FilePathField \u53ef\u9009\u9879\u76ee\u4e3a\u67d0\u4e2a\u7279\u5b9a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u540d. \u652f\u6301\u4e09\u4e2a\u7279\u6b8a\u7684\u53c2\u6570, \u5176\u4e2d\u7b2c\u4e00\u4e2a\u662f\u5fc5\u987b\u63d0\u4f9b\u7684. \u53c2\u6570 \u63cf\u8ff0 path \u5fc5\u9700\u53c2\u6570. \u4e00\u4e2a\u76ee\u5f55\u7684\u7edd\u5bf9\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84. FilePathField \u636e\u6b64\u5f97\u5230\u53ef\u9009\u9879\u76ee. Example: \"/home/images\". match \u53ef\u9009\u53c2\u6570. \u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f, \u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32, FilePathField \u5c06\u4f7f\u7528\u5b83\u8fc7\u6ee4\u6587\u4ef6\u540d. \u6ce8\u610f\u8fd9\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u53ea\u4f1a\u5e94\u7528\u5230 base filename \u800c\u4e0d\u662f \u8def\u5f84\u5168\u540d. Example: \"foo.*\\.txt^\", \u5c06\u5339\u914d\u6587\u4ef6 foo23.txt \u5374\u4e0d\u5339\u914d bar.txt \u6216 foo23.gif. recursive\u53ef\u9009\u53c2\u6570.\u8981\u4e48 True \u8981\u4e48 False. \u9ed8\u8ba4\u503c\u662f False. \u662f\u5426\u5305\u62ec path \u4e0b\u9762\u7684\u5168\u90e8\u5b50\u76ee\u5f55. \u8fd9\u4e09\u4e2a\u53c2\u6570\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528. match \u4ec5\u5e94\u7528\u4e8e base filename, \u800c\u4e0d\u662f\u8def\u5f84\u5168\u540d. \u90a3\u4e48,\u8fd9\u4e2a\u4f8b\u5b50: FilePathField(path=\"/home/images\", match=\"foo.*\", recursive=True) ...\u4f1a\u5339\u914d /home/images/foo.gif \u800c\u4e0d\u5339\u914d /home/images/foo/bar.gif <15> IPAddressField \u4e00\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684 IP \u5730\u5740, (i.e. \"24.124.1.30\"). <16> CommaSeparatedIntegerField \u7528\u4e8e\u5b58\u653e\u9017\u53f7\u5206\u9694\u7684\u6574\u6570\u503c. \u7c7b\u4f3c CharField, \u5fc5\u987b\u8981\u6709maxlength\u53c2\u6570. '''\u3000\u3000 \u66f4\u591a\u53c2\u6570\uff1a (1)null \u5982\u679c\u4e3aTrue\uff0cDjango \u5c06\u7528NULL \u6765\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u7a7a\u503c\u3002 \u9ed8\u8ba4\u503c\u662f False. (1)blank \u5982\u679c\u4e3aTrue\uff0c\u8be5\u5b57\u6bb5\u5141\u8bb8\u4e0d\u586b\u3002\u9ed8\u8ba4\u4e3aFalse\u3002 \u8981\u6ce8\u610f\uff0c\u8fd9\u4e0e null \u4e0d\u540c\u3002null\u7eaf\u7cb9\u662f\u6570\u636e\u5e93\u8303\u7574\u7684\uff0c\u800c blank \u662f\u6570\u636e\u9a8c\u8bc1\u8303\u7574\u7684\u3002 \u5982\u679c\u4e00\u4e2a\u5b57\u6bb5\u7684blank=True\uff0c\u8868\u5355\u7684\u9a8c\u8bc1\u5c06\u5141\u8bb8\u8be5\u5b57\u6bb5\u662f\u7a7a\u503c\u3002\u5982\u679c\u5b57\u6bb5\u7684blank=False\uff0c\u8be5\u5b57\u6bb5\u5c31\u662f\u5fc5\u586b\u7684\u3002 (2)default \u5b57\u6bb5\u7684\u9ed8\u8ba4\u503c\u3002\u53ef\u4ee5\u662f\u4e00\u4e2a\u503c\u6216\u8005\u53ef\u8c03\u7528\u5bf9\u8c61\u3002\u5982\u679c\u53ef\u8c03\u7528 \uff0c\u6bcf\u6709\u65b0\u5bf9\u8c61\u88ab\u521b\u5efa\u5b83\u90fd\u4f1a\u88ab\u8c03\u7528\u3002 (3)primary_key \u5982\u679c\u4e3aTrue\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b57\u6bb5\u5c31\u662f\u6a21\u578b\u7684\u4e3b\u952e\u3002\u5982\u679c\u4f60\u6ca1\u6709\u6307\u5b9a\u4efb\u4f55\u4e00\u4e2a\u5b57\u6bb5\u7684primary_key=True\uff0c Django \u5c31\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2aIntegerField\u5b57\u6bb5\u505a\u4e3a\u4e3b\u952e\uff0c\u6240\u4ee5\u9664\u975e\u4f60\u60f3\u8986\u76d6\u9ed8\u8ba4\u7684\u4e3b\u952e\u884c\u4e3a\uff0c \u5426\u5219\u6ca1\u5fc5\u8981\u8bbe\u7f6e\u4efb\u4f55\u4e00\u4e2a\u5b57\u6bb5\u7684primary_key=True\u3002 (4)unique \u5982\u679c\u8be5\u503c\u8bbe\u7f6e\u4e3a True, \u8fd9\u4e2a\u6570\u636e\u5b57\u6bb5\u7684\u503c\u5728\u6574\u5f20\u8868\u4e2d\u5fc5\u987b\u662f\u552f\u4e00\u7684 (5)choices \u7531\u4e8c\u5143\u7ec4\u7ec4\u6210\u7684\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u4f8b\u5982\uff0c\u5217\u8868\u6216\u5143\u7ec4\uff09\uff0c\u7528\u6765\u7ed9\u5b57\u6bb5\u63d0\u4f9b\u9009\u62e9\u9879\u3002 \u5982\u679c\u8bbe\u7f6e\u4e86choices \uff0c\u9ed8\u8ba4\u7684\u8868\u5355\u5c06\u662f\u4e00\u4e2a\u9009\u62e9\u6846\u800c\u4e0d\u662f\u6807\u51c6\u7684\u6587\u672c\u6846\uff0c<br>\u800c\u4e14\u8fd9\u4e2a\u9009\u62e9\u6846\u7684\u9009\u9879\u5c31\u662fchoices \u4e2d\u7684\u9009\u9879\u3002 3 settings\u914d\u7f6e \u82e5\u60f3\u5c06\u6a21\u578b\u8f6c\u4e3amysql\u6570\u636e\u5e93\u4e2d\u7684\u8868\uff0c\u9700\u8981\u5728settings\u4e2d\u914d\u7f6e\uff1a DATABASES = { 'default': { 'ENGINE': 'django.db.backends.mysql', 'NAME':'bms', \u3000\u3000 \u3000 # \u8981\u8fde\u63a5\u7684\u6570\u636e\u5e93\uff0c\u8fde\u63a5\u524d\u9700\u8981\u521b\u5efa\u597d 'USER':'root',\u3000\u3000\u3000\u3000\u3000\u3000 # \u8fde\u63a5\u6570\u636e\u5e93\u7684\u7528\u6237\u540d 'PASSWORD':'',\u3000\u3000\u3000\u3000\u3000\u3000 # \u8fde\u63a5\u6570\u636e\u5e93\u7684\u5bc6\u7801 'HOST':'127.0.0.1', # \u8fde\u63a5\u4e3b\u673a\uff0c\u9ed8\u8ba4\u672c\u7ea7 'PORT'\uff1a3306 \u3000\u3000\u3000 # \u7aef\u53e3 \u9ed8\u8ba43306 } } \u6ce8\u610f1\uff1aNAME\u5373\u6570\u636e\u5e93\u7684\u540d\u5b57\uff0c\u5728mysql\u8fde\u63a5\u524d\u8be5\u6570\u636e\u5e93\u5fc5\u987b\u5df2\u7ecf\u521b\u5efa\uff0c\u800c\u4e0a\u9762\u7684sqlite\u6570\u636e\u5e93\u4e0b\u7684db.sqlite3\u5219\u662f\u9879\u76ee\u81ea\u52a8\u521b\u5efa USER\u548cPASSWORD\u5206\u522b\u662f\u6570\u636e\u5e93\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002\u8bbe\u7f6e\u5b8c\u540e\uff0c\u518d\u542f\u52a8\u6211\u4eec\u7684Django\u9879\u76ee\u524d\uff0c\u6211\u4eec\u9700\u8981\u6fc0\u6d3b\u6211\u4eec\u7684mysql\u3002\u7136\u540e\uff0c\u542f\u52a8\u9879\u76ee\uff0c\u4f1a\u62a5\u9519\uff1ano module named MySQLdb \u3002\u8fd9\u662f\u56e0\u4e3adjango\u9ed8\u8ba4\u4f60\u5bfc\u5165\u7684\u9a71\u52a8\u662fMySQLdb\uff0c\u53ef\u662fMySQLdb \u5bf9\u4e8epy3\u6709\u5f88\u5927\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7684\u9a71\u52a8\u662fPyMySQL \u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u9879\u76ee\u540d\u6587\u4ef6\u4e0b\u7684__init__,\u5728\u91cc\u9762\u5199\u5165\uff1a import pymysql pymysql.install_as_MySQLdb() \u6700\u540e\u901a\u8fc7\u4e24\u6761\u6570\u636e\u5e93\u8fc1\u79fb\u547d\u4ee4\u5373\u53ef\u5728\u6307\u5b9a\u7684\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u8868 \uff1a python manage.py makemigrations python manage.py migrate \u6ce8\u610f2:\u786e\u4fdd\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684INSTALLED_APPS\u4e2d\u5199\u5165\u6211\u4eec\u521b\u5efa\u7684app\u540d\u79f0 INSTALLED_APPS = [ 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', \"book\" #\u65b0\u5efa\u7684app\u540d\u79f0 ] \u6ce8\u610f3:\u5982\u679c\u62a5\u9519\u5982\u4e0b\uff1a django.core.exceptions.ImproperlyConfigured: mysqlclient 1.3.3 or newer is required; you have 0.7.11.None MySQLclient\u76ee\u524d\u53ea\u652f\u6301\u5230python3.4\uff0c\u56e0\u6b64\u5982\u679c\u4f7f\u7528\u7684\u66f4\u9ad8\u7248\u672c\u7684python\uff0c\u9700\u8981\u4fee\u6539\u5982\u4e0b\uff1a \u901a\u8fc7\u67e5\u627e\u8def\u5f84C:\\Programs\\Python\\Python36-32\\Lib\\site-packages\\Django-2.0-py3.6.egg\\django\\db\\backends\\mysql \u8fd9\u4e2a\u8def\u5f84\u91cc\u7684\u6587\u4ef6\u628a if version < (1, 3, 3): raise ImproperlyConfigured(\"mysqlclient 1.3.3 or newer is required; you have %s\" % Database.__version__) \u6ce8\u91ca\u6389 \u5c31OK\u4e86\u3002 \u6ce8\u610f4: \u5982\u679c\u60f3\u6253\u5370orm\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u7684sql\uff0c\u9700\u8981\u5728settings\u4e2d\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a LOGGING = { 'version': 1, 'disable_existing_loggers': False, 'handlers': { 'console':{ 'level':'DEBUG', 'class':'logging.StreamHandler', }, }, 'loggers': { 'django.db.backends': { 'handlers': ['console'], 'propagate': True, 'level':'DEBUG', }, } } \u6dfb\u52a0\u8868\u7eaa\u5f55 \u65b9\u5f0f1 # create\u65b9\u6cd5\u7684\u8fd4\u56de\u503cbook_obj\u5c31\u662f\u63d2\u5165book\u8868\u4e2d\u7684python\u8475\u82b1\u5b9d\u5178\u8fd9\u672c\u4e66\u7c4d\u7eaa\u5f55\u5bf9\u8c61 book_obj=Book.objects.create(title=\"python\u8475\u82b1\u5b9d\u5178\",state=True,price=100,publish=\"\u82f9\u679c\u51fa\u7248\u793e\",pub_date=\"2012-12-12\") \u65b9\u5f0f2 book_obj=Book(title=\"python\u8475\u82b1\u5b9d\u5178\",state=True,price=100,publish=\"\u82f9\u679c\u51fa\u7248\u793e\",pub_date=\"2012-12-12\") book_obj.save() \u67e5\u8be2\u8868\u7eaa\u5f55 \u67e5\u8be2API <1> all(): \u67e5\u8be2\u6240\u6709\u7ed3\u679c <2> filter(**kwargs): \u5b83\u5305\u542b\u4e86\u4e0e\u6240\u7ed9\u7b5b\u9009\u6761\u4ef6\u76f8\u5339\u914d\u7684\u5bf9\u8c61 <3> get(**kwargs): \u8fd4\u56de\u4e0e\u6240\u7ed9\u7b5b\u9009\u6761\u4ef6\u76f8\u5339\u914d\u7684\u5bf9\u8c61\uff0c\u8fd4\u56de\u7ed3\u679c\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\uff0c \u5982\u679c\u7b26\u5408\u7b5b\u9009\u6761\u4ef6\u7684\u5bf9\u8c61\u8d85\u8fc7\u4e00\u4e2a\u6216\u8005\u6ca1\u6709\u90fd\u4f1a\u629b\u51fa\u9519\u8bef\u3002 <4> exclude(**kwargs): \u5b83\u5305\u542b\u4e86\u4e0e\u6240\u7ed9\u7b5b\u9009\u6761\u4ef6\u4e0d\u5339\u914d\u7684\u5bf9\u8c61 <5> order_by(*field): \u5bf9\u67e5\u8be2\u7ed3\u679c\u6392\u5e8f <6> reverse(): \u5bf9\u67e5\u8be2\u7ed3\u679c\u53cd\u5411\u6392\u5e8f <8> count(): \u8fd4\u56de\u6570\u636e\u5e93\u4e2d\u5339\u914d\u67e5\u8be2(QuerySet)\u7684\u5bf9\u8c61\u6570\u91cf\u3002 <9> first(): \u8fd4\u56de\u7b2c\u4e00\u6761\u8bb0\u5f55 <10> last(): \u8fd4\u56de\u6700\u540e\u4e00\u6761\u8bb0\u5f55 <11> exists(): \u5982\u679cQuerySet\u5305\u542b\u6570\u636e\uff0c\u5c31\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse <12> values(*field): \u8fd4\u56de\u4e00\u4e2aValueQuerySet\u2014\u2014\u4e00\u4e2a\u7279\u6b8a\u7684QuerySet\uff0c\u8fd0\u884c\u540e\u5f97\u5230\u7684\u5e76\u4e0d\u662f\u4e00\u7cfb\u5217 model\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u800c\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684\u5b57\u5178\u5e8f\u5217 <13> values_list(*field): \u5b83\u4e0evalues()\u975e\u5e38\u76f8\u4f3c\uff0c\u5b83\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7ec4\u5e8f\u5217\uff0cvalues\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u5178\u5e8f\u5217 <14> distinct(): \u4ece\u8fd4\u56de\u7ed3\u679c\u4e2d\u5254\u9664\u91cd\u590d\u7eaa\u5f55 \u57fa\u4e8e\u53cc\u4e0b\u5212\u7ebf\u7684\u6a21\u7cca\u67e5\u8be2 Book.objects.filter(price__in=[100,200,300]) Book.objects.filter(price__gt=100) Book.objects.filter(price__lt=100) Book.objects.filter(price__range=[100,200]) # range \u8303\u56f4 100 -200 \u4e4b\u95f4 Book.objects.filter(title__contains=\"python\") # \u5305\u542b Book.objects.filter(title__icontains=\"python\") # \u5305\u542b \u4e0d\u533a\u5206\u5927\u5c0f\u5199 Book.objects.filter(title__startswith=\"py\") # py\u5f00\u5934\u7684 Book.objects.filter(pub_date__year=2012) Book.objects.filter(pub_date__year=2018,pub_date__month=1,pub_date__day=1) # \u8fc7\u6ee4\u5e74\u6708\u65e5 \u5220\u9664\u8868\u7eaa\u5f55 \u5220\u9664\u65b9\u6cd5\u5c31\u662f delete()\u3002\u5b83\u8fd0\u884c\u65f6\u7acb\u5373\u5220\u9664\u5bf9\u8c61\u800c\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\u3002\u4f8b\u5982\uff1a model_obj.delete() \u4f60\u4e5f\u53ef\u4ee5\u4e00\u6b21\u6027\u5220\u9664\u591a\u4e2a\u5bf9\u8c61\u3002\u6bcf\u4e2a QuerySet \u90fd\u6709\u4e00\u4e2a delete() \u65b9\u6cd5\uff0c\u5b83\u4e00\u6b21\u6027\u5220\u9664 QuerySet \u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u5220\u9664 pub_date \u662f2005\u5e74\u7684 Entry \u5bf9\u8c61\uff1a Entry.objects.filter(pub_date__year=2005).delete() \u5728 Django \u5220\u9664\u5bf9\u8c61\u65f6\uff0c\u4f1a\u6a21\u4eff SQL \u7ea6\u675f ON DELETE CASCADE \u7684\u884c\u4e3a\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5220\u9664\u4e00\u4e2a\u5bf9\u8c61\u65f6\u4e5f\u4f1a\u5220\u9664\u4e0e\u5b83\u76f8\u5173\u8054\u7684\u5916\u952e\u5bf9\u8c61\u3002\u4f8b\u5982\uff1a b = Blog.objects.get(pk=1) # This will delete the Blog and all of its Entry objects. b.delete() \u8981\u6ce8\u610f\u7684\u662f\uff1a delete() \u65b9\u6cd5\u662f QuerySet \u4e0a\u7684\u65b9\u6cd5\uff0c\u4f46\u5e76\u4e0d\u9002\u7528\u4e8e Manager \u672c\u8eab\u3002\u8fd9\u662f\u4e00\u79cd\u4fdd\u62a4\u673a\u5236\uff0c\u662f\u4e3a\u4e86\u907f\u514d\u610f\u5916\u5730\u8c03\u7528 Entry.objects.delete() \u65b9\u6cd5\u5bfc\u81f4 \u6240\u6709\u7684 \u8bb0\u5f55\u88ab\u8bef\u5220\u9664\u3002\u5982\u679c\u4f60\u786e\u8ba4\u8981\u5220\u9664\u6240\u6709\u7684\u5bf9\u8c61\uff0c\u90a3\u4e48\u4f60\u5fc5\u987b\u663e\u5f0f\u5730\u8c03\u7528\uff1a Entry.objects.all().delete()\u3000\u3000 \u5982\u679c\u4e0d\u60f3\u7ea7\u8054\u5220\u9664\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a: pubHouse = models.ForeignKey(to='Publisher', on_delete=models.SET_NULL, blank=True, null=True) \u4fee\u6539\u8868\u7eaa\u5f55 Book.objects.filter(title__startswith=\"py\").update(price=120) \u6b64\u5916\uff0cupdate()\u65b9\u6cd5\u5bf9\u4e8e\u4efb\u4f55\u7ed3\u679c\u96c6\uff08QuerySet\uff09\u5747\u6709\u6548\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u540c\u65f6\u66f4\u65b0\u591a\u6761\u8bb0\u5f55update()\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\u503c\uff0c\u8868\u793a\u53d7\u5f71\u54cd\u7684\u8bb0\u5f55\u6761\u6570\u3002\u3000\u3000 \u7ae0\u8282\u4f5c\u4e1a 1 \u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf \u5b9e\u73b0\u529f\u80fd\uff1abook\u5355\u8868\u7684\u589e\u5220\u6539\u67e5 2 \u67e5\u8be2\u64cd\u4f5c\u7ec3\u4e60 1 \u67e5\u8be2\u8001\u7537\u5b69\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u4ef7\u683c\u5927\u4e8e200\u7684\u4e66\u7c4d Book.objects.filter(publish__name='\u8001\u7537\u5b69\u51fa\u7248\u793e',price__gt = 200) 2 \u67e5\u8be22017\u5e748\u6708\u51fa\u7248\u7684\u6240\u6709\u4ee5py\u5f00\u5934\u7684\u4e66\u7c4d\u540d\u79f0 Book.objects.filter(pub_date__year=2017,pub_date__month=7).filter(title__startswith = py) 3 \u67e5\u8be2\u4ef7\u683c\u4e3a50,100\u6216\u8005150\u7684\u6240\u6709\u4e66\u7c4d\u540d\u79f0\u53ca\u5176\u51fa\u7248\u793e\u540d\u79f0 Book.objects.filter(price__in=[50,100,150]).values(title,Book.publish.name) 4 \u67e5\u8be2\u4ef7\u683c\u5728100\u5230200\u4e4b\u95f4\u7684\u6240\u6709\u4e66\u7c4d\u540d\u79f0\u53ca\u5176\u4ef7\u683c Book.objects.filter(price__range(100,200)).values(title,price) 5 \u67e5\u8be2\u6240\u6709\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u7684\u4e66\u7c4d\u7684\u4ef7\u683c\uff08\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\uff0c\u53bb\u91cd\uff09 Book.objects.values(publish__name = '\u4eba\u6c11\u51fa\u7248\u793e').distinct().order_by('-price') 9 Django \u6a21\u578b\u5c42(2) \u591a\u8868\u64cd\u4f5c \u521b\u5efa\u6a21\u578b \u5b9e\u4f8b\uff1a\u6211\u4eec\u6765\u5047\u5b9a\u4e0b\u9762\u8fd9\u4e9b\u6982\u5ff5\uff0c\u5b57\u6bb5\u548c\u5173\u7cfb \u4f5c\u8005\u6a21\u578b\uff1a\u4e00\u4e2a\u4f5c\u8005\u6709\u59d3\u540d\u548c\u5e74\u9f84\u3002 \u4f5c\u8005\u8be6\u7ec6\u6a21\u578b\uff1a\u628a\u4f5c\u8005\u7684\u8be6\u60c5\u653e\u5230\u8be6\u60c5\u8868\uff0c\u5305\u542b\u751f\u65e5\uff0c\u624b\u673a\u53f7\uff0c\u5bb6\u5ead\u4f4f\u5740\u7b49\u4fe1\u606f\u3002\u4f5c\u8005\u8be6\u60c5\u6a21\u578b\u548c\u4f5c\u8005\u6a21\u578b\u4e4b\u95f4\u662f\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff08one-to-one\uff09 \u51fa\u7248\u5546\u6a21\u578b\uff1a\u51fa\u7248\u5546\u6709\u540d\u79f0\uff0c\u6240\u5728\u57ce\u5e02\u4ee5\u53caemail\u3002 \u4e66\u7c4d\u6a21\u578b\uff1a \u4e66\u7c4d\u6709\u4e66\u540d\u548c\u51fa\u7248\u65e5\u671f\uff0c\u4e00\u672c\u4e66\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u4f5c\u8005\uff0c\u4e00\u4e2a\u4f5c\u8005\u4e5f\u53ef\u4ee5\u5199\u591a\u672c\u4e66\uff0c\u6240\u4ee5\u4f5c\u8005\u548c\u4e66\u7c4d\u7684\u5173\u7cfb\u5c31\u662f\u591a\u5bf9\u591a\u7684\u5173\u8054\u5173\u7cfb(many-to-many);\u4e00\u672c\u4e66\u53ea\u5e94\u8be5\u7531\u4e00\u4e2a\u51fa\u7248\u5546\u51fa\u7248\uff0c\u6240\u4ee5\u51fa\u7248\u5546\u548c\u4e66\u7c4d\u662f\u4e00\u5bf9\u591a\u5173\u8054\u5173\u7cfb(one-to-many)\u3002 \u6a21\u578b\u5efa\u7acb\u5982\u4e0b\uff1a from django.db import models # Create your models here. # \u4f5c\u8005\u8868 class Author(models.Model): nid = models.AutoField(primary_key=True) name=models.CharField( max_length=32) age=models.IntegerField() # \u4e0eAuthorDetail\u5efa\u7acb\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb # authorDetail=models.OneToOneField(to=\"AuthorDetail\",on_delete=models.CASCADE) # \u4e0eAuthorDetail\u5efa\u7acb\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb OneToOneField\u4f1a\u81ea\u52a8\u7ed9\u5b57\u6bb5\u9650\u5236unique # \u5173\u8054\u662f\u4e3b\u952enid\u53ef\u4e0d\u52a0,django\u4f1a\u81ea\u52a8\u52a0. on_delete=models.CASCADE Django2.0\u4e4b\u540e\u8981\u52a0\u4e0a. # on_delete=models.CASCADE, # \u5220\u9664\u5173\u8054\u6570\u636e,\u4e0e\u4e4b\u5173\u8054\u4e5f\u5220\u9664 authorDetail=models.OneToOneField(to=\"AuthorDetail\",to_field=\"nid\", on_delete=models.CASCADE) # \u4f5c\u8005\u8be6\u60c5\u8868 class AuthorDetail(models.Model): nid = models.AutoField(primary_key=True) birthday=models.DateField() telephone=models.BigIntegerField() addr=models.CharField( max_length=64) # \u51fa\u7248\u793e\u8868 class Publish(models.Model): nid = models.AutoField(primary_key=True) name=models.CharField( max_length=32) city=models.CharField( max_length=32) email=models.EmailField() # \u56fe\u4e66\u8868 class Book(models.Model): nid = models.AutoField(primary_key=True) title = models.CharField( max_length=32) publishDate=models.DateField() price=models.DecimalField(max_digits=5,decimal_places=2) # \u4e0ePublish\u5efa\u7acb\u4e00\u5bf9\u591a\u7684\u5173\u7cfb,\u5916\u952e\u5b57\u6bb5\u5efa\u7acb\u5728\u591a\u7684\u4e00\u65b9 #\u5173\u8054\u51fa\u7248\u793e\u8868 nid\u5b57\u6bb5 publish\u751f\u6210\u5b57\u6bb5\u65f6\u5019\u4f1a\u81ea\u52a8\u751f\u6210publish_id publish=models.ForeignKey(to=\"Publish\",to_field=\"nid\",on_delete=models.CASCADE) # \u4e0eAuthor\u8868\u5efa\u7acb\u591a\u5bf9\u591a\u7684\u5173\u7cfb,ManyToManyField\u53ef\u4ee5\u5efa\u5728\u4e24\u4e2a\u6a21\u578b\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u81ea\u52a8\u521b\u5efa\u7b2c\u4e09\u5f20\u8868 authors=models.ManyToManyField(to='Author',) \u6269\u5c55: https://www.django.cn/article/show-6.html Django2.0\u5916\u952e\u53c2\u6570on_delete\u7684\u4f7f\u7528\u65b9\u6cd5 \u751f\u6210\u8868\u5982\u4e0b\uff1a \u6ce8\u610f\u4e8b\u9879\uff1a \u8868\u7684\u540d\u79f0 myapp_modelName \uff0c\u662f\u6839\u636e \u6a21\u578b\u4e2d\u7684\u5143\u6570\u636e\u81ea\u52a8\u751f\u6210\u7684\uff0c\u4e5f\u53ef\u4ee5\u8986\u5199\u4e3a\u522b\u7684\u540d\u79f0\u3000\u3000 id \u5b57\u6bb5\u662f\u81ea\u52a8\u6dfb\u52a0\u7684 \u5bf9\u4e8e\u5916\u952e\u5b57\u6bb5\uff0cDjango \u4f1a\u5728\u5b57\u6bb5\u540d\u4e0a\u6dfb\u52a0 \"_id\" \u6765\u521b\u5efa\u6570\u636e\u5e93\u4e2d\u7684\u5217\u540d \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684 CREATE TABLE SQL \u8bed\u53e5\u4f7f\u7528PostgreSQL \u8bed\u6cd5\u683c\u5f0f\uff0c\u8981\u6ce8\u610f\u7684\u662fDjango \u4f1a\u6839\u636esettings \u4e2d\u6307\u5b9a\u7684\u6570\u636e\u5e93\u7c7b\u578b\u6765\u4f7f\u7528\u76f8\u5e94\u7684SQL \u8bed\u53e5\u3002 \u5b9a\u4e49\u597d\u6a21\u578b\u4e4b\u540e\uff0c\u4f60\u9700\u8981\u544a\u8bc9Django _\u4f7f\u7528_\u8fd9\u4e9b\u6a21\u578b\u3002\u4f60\u8981\u505a\u7684\u5c31\u662f\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684INSTALL_APPSZ\u4e2d\u8bbe\u7f6e\uff0c\u5728\u5176\u4e2d\u6dfb\u52a0 models.py \u6240\u5728\u5e94\u7528\u7684\u540d\u79f0\u3002 \u5916\u952e\u5b57\u6bb5 ForeignKey \u6709\u4e00\u4e2a null=True \u7684\u8bbe\u7f6e(\u5b83\u5141\u8bb8\u5916\u952e\u63a5\u53d7\u7a7a\u503c NULL)\uff0c\u4f60\u53ef\u4ee5\u8d4b\u7ed9\u5b83\u7a7a\u503c None \u3002 \u5c0f\u7b14\u8bb0: \u4e00\u65e6\u786e\u5b9a\u4e00\u5bf9\u591a\u5173\u7cfb: \u5efa\u7acb\u4e00\u5bf9\u591a\u7684\u5173\u7cfb----> \u5728\u591a\u7684\u8868\u4e2d\u5efa\u7acb\u5173\u8054\u5b57\u6bb5 \u4e00\u65e6\u786e\u5b9a\u591a\u5bf9\u591a\u5173\u7cfb: \u5efa\u7acb\u591a\u5bf9\u591a\u7684\u5173\u7cfb----> \u521b\u5efa\u7b2c\u4e09\u5f20\u8868(\u5173\u8054\u8868) id \u548c \u4e24\u4e2a\u5173\u8054\u5b57\u6bb5 \u4e00\u65e6\u786e\u5b9a\u4e00\u5bf9\u4e00\u5173\u7cfb: \u5efa\u7acb\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb----> \u5728\u4e24\u5f20\u8868\u4e2d\u4efb\u610f\u4e00\u5f20\u8868\u4e2d\u5efa\u7acb\u5173\u8054\u5b57\u6bb5+Unique \u5efa\u5173\u8054\u5b57\u6bb5\u662f\u4e3a\u4e86\u67e5\u8be2, \u5916\u952e\u7ea6\u675f\u662f\u4e3a\u4e86\u907f\u514d\u4ea7\u751f\u810f\u6570\u636e \u6dfb\u52a0\u8868\u7eaa\u5f55 \u64cd\u4f5c\u524d\u5148\u7b80\u5355\u7684\u5f55\u5165\u4e00\u4e9b\u6570\u636e\uff1a publish\u8868\uff1a author\u8868\uff1a authordetail\u8868: \u4e00\u5bf9\u591a \u65b9\u5f0f1: publish_obj=Publish.objects.get(nid=1) book_obj=Book.objects.create(title=\"\u91d1\u74f6\u7709\",publishDate=\"2012-12-12\",price=100,publish=publish_obj) \u65b9\u5f0f2: book_obj=Book.objects.create(title=\"\u91d1\u74f6\u7709\",publishDate=\"2012-12-12\",price=100,publish_id=1)\u3000\u3000 \u6838\u5fc3\uff1abook_obj.publish\u4e0ebook_obj.publish_id\u662f\u4ec0\u4e48\uff1f \u591a\u5bf9\u591a # \u5f53\u524d\u751f\u6210\u7684\u4e66\u7c4d\u5bf9\u8c61 book_obj=Book.objects.create(title=\"\u8ffd\u98ce\u7b5d\u7684\u4eba\",price=200,publishDate=\"2012-11-12\",publish_id=1) # \u4e3a\u4e66\u7c4d\u7ed1\u5b9a\u7684\u505a\u4f5c\u8005\u5bf9\u8c61 yuan=Author.objects.filter(name=\"yuan\").first() # \u5728Author\u8868\u4e2d\u4e3b\u952e\u4e3a2\u7684\u7eaa\u5f55 egon=Author.objects.filter(name=\"alex\").first() # \u5728Author\u8868\u4e2d\u4e3b\u952e\u4e3a1\u7684\u7eaa\u5f55 # \u7ed1\u5b9a\u591a\u5bf9\u591a\u5173\u7cfb,\u5373\u5411\u5173\u7cfb\u8868book_authors\u4e2d\u6dfb\u52a0\u7eaa\u5f55 book_obj.authors.add(yuan,egon) # \u5c06\u67d0\u4e9b\u7279\u5b9a\u7684 model \u5bf9\u8c61\u6dfb\u52a0\u5230\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408\u4e2d\u3002 ======= book_obj.authors.add(*[]) \u6570\u636e\u5e93\u8868\u7eaa\u5f55\u751f\u6210\u5982\u4e0b\uff1a book\u8868 book_authors\u8868 \u6838\u5fc3:book_obj.authors.all()\u662f\u4ec0\u4e48\uff1f \u591a\u5bf9\u591a\u5173\u7cfb\u5176\u5b83\u5e38\u7528API\uff1a book_obj.authors.remove() # \u5c06\u67d0\u4e2a\u7279\u5b9a\u7684\u5bf9\u8c61\u4ece\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408\u4e2d\u53bb\u9664\u3002 ====== book_obj.authors.remove(*[]) book_obj.authors.clear() #\u6e05\u7a7a\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408 book_obj.authors.set() #\u5148\u6e05\u7a7a\u518d\u8bbe\u7f6e\u3000\u3000 more \u57fa\u4e8e\u5bf9\u8c61\u7684\u8de8\u8868\u67e5\u8be2 \u4e00\u5bf9\u591a\u67e5\u8be2\uff08Publish \u4e0e Book\uff09 \u6b63\u5411\u67e5\u8be2(\u6309\u5b57\u6bb5\uff1apublish)\uff1a # \u67e5\u8be2\u4e3b\u952e\u4e3a1\u7684\u4e66\u7c4d\u7684\u51fa\u7248\u793e\u6240\u5728\u7684\u57ce\u5e02 book_obj=Book.objects.filter(pk=1).first() # book_obj.publish \u662f\u4e3b\u952e\u4e3a1\u7684\u4e66\u7c4d\u5bf9\u8c61\u5173\u8054\u7684\u51fa\u7248\u793e\u5bf9\u8c61 print(book_obj.publish.city) \u3000 \u53cd\u5411\u67e5\u8be2(\u6309\u8868\u540d\uff1abook_set)\uff1a publish=Publish.objects.get(name=\"\u82f9\u679c\u51fa\u7248\u793e\") #publish.book_set.all() : \u4e0e\u82f9\u679c\u51fa\u7248\u793e\u5173\u8054\u7684\u6240\u6709\u4e66\u7c4d\u5bf9\u8c61\u96c6\u5408 \u6309\u8868\u540d\u5c0f\u5199 book_set.all() book_list=publish.book_set.all() for book_obj in book_list: print(book_obj.title) \u4e00\u5bf9\u4e00\u67e5\u8be2(Author \u4e0e AuthorDetail) \u6b63\u5411\u67e5\u8be2(\u6309\u5b57\u6bb5\uff1aauthorDetail)\uff1a egon=Author.objects.filter(name=\"egon\").first() print(egon.authorDetail.telephone) \u53cd\u5411\u67e5\u8be2(\u6309\u8868\u540d\uff1aauthor)\uff1a # \u67e5\u8be2\u6240\u6709\u4f4f\u5740\u5728\u5317\u4eac\u7684\u4f5c\u8005\u7684\u59d3\u540d authorDetail_list=AuthorDetail.objects.filter(addr=\"beijing\") for obj in authorDetail_list: print(obj.author.name) \u591a\u5bf9\u591a\u67e5\u8be2 (Author \u4e0e Book) \u6b63\u5411\u67e5\u8be2(\u6309\u5b57\u6bb5\uff1aauthors)\uff1a # \u91d1\u74f6\u7709\u6240\u6709\u4f5c\u8005\u7684\u540d\u5b57\u4ee5\u53ca\u624b\u673a\u53f7 book_obj=Book.objects.filter(title=\"\u91d1\u74f6\u7709\").first() authors=book_obj.authors.all() for author_obj in authors: print(author_obj.name,author_obj.authorDetail.telephone) \u53cd\u5411\u67e5\u8be2(\u6309\u8868\u540d\uff1abook_set)\uff1a # \u67e5\u8be2egon\u51fa\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57 author_obj=Author.objects.get(name=\"egon\") book_list=author_obj.book_set.all() #\u4e0eegon\u4f5c\u8005\u76f8\u5173\u7684\u6240\u6709\u4e66\u7c4d for book_obj in book_list: print(book_obj.title) \u6ce8\u610f\uff1a \u4f60\u53ef\u4ee5\u901a\u8fc7\u5728 ForeignKey() \u548cManyToManyField\u7684\u5b9a\u4e49\u4e2d\u8bbe\u7f6e related_name \u7684\u503c\u6765\u8986\u5199 FOO_set \u7684\u540d\u79f0\u3002\u4f8b\u5982\uff0c\u5982\u679c Article model \u4e2d\u505a\u4e00\u4e0b\u66f4\u6539\uff1a publish = ForeignKey(Book, related_name='bookList') \u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u4f1a\u5982\u6211\u4eec\u770b\u5230\u8fd9\u822c\uff1a # \u67e5\u8be2 \u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d publish=Publish.objects.get(name=\"\u4eba\u6c11\u51fa\u7248\u793e\") book_list=publish.bookList.all() # \u4e0e\u4eba\u6c11\u51fa\u7248\u793e\u5173\u8054\u7684\u6240\u6709\u4e66\u7c4d\u5bf9\u8c61\u96c6\u5408 \u57fa\u4e8e\u53cc\u4e0b\u5212\u7ebf\u7684\u8de8\u8868\u67e5\u8be2 Django \u8fd8\u63d0\u4f9b\u4e86\u4e00\u79cd\u76f4\u89c2\u800c\u9ad8\u6548\u7684\u65b9\u5f0f\u5728\u67e5\u8be2(lookups)\u4e2d\u8868\u793a\u5173\u8054\u5173\u7cfb\uff0c\u5b83\u80fd\u81ea\u52a8\u786e\u8ba4 SQL JOIN \u8054\u7cfb\u3002\u8981\u505a\u8de8\u5173\u7cfb\u67e5\u8be2\uff0c\u5c31\u4f7f\u7528\u4e24\u4e2a\u4e0b\u5212\u7ebf\u6765\u94fe\u63a5\u6a21\u578b(model)\u95f4\u5173\u8054\u5b57\u6bb5\u7684\u540d\u79f0\uff0c\u76f4\u5230\u6700\u7ec8\u94fe\u63a5\u5230\u4f60\u60f3\u8981\u7684model \u4e3a\u6b62\u3002 ''' \u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5,\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199\u7528\u6765\u544a\u8bc9ORM\u5f15\u64cejoin\u54ea\u5f20\u8868 ''' \u4e00\u5bf9\u591a\u67e5\u8be2 # \u7ec3\u4e60: \u67e5\u8be2\u82f9\u679c\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4e0e\u4ef7\u683c(\u4e00\u5bf9\u591a) # \u6b63\u5411\u67e5\u8be2 \u6309\u5b57\u6bb5:publish queryResult=Book.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(publish__name=\"\u82f9\u679c\u51fa\u7248\u793e\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\",\"price\") # \u53cd\u5411\u67e5\u8be2 \u6309\u8868\u540d:book queryResult=Publish.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"\u82f9\u679c\u51fa\u7248\u793e\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"book__title\",\"book__price\") \u591a\u5bf9\u591a\u67e5\u8be2 # \u7ec3\u4e60: \u67e5\u8be2alex\u51fa\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57(\u591a\u5bf9\u591a) # \u6b63\u5411\u67e5\u8be2 \u6309\u5b57\u6bb5:authors: queryResult=Book.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(authors__name=\"yuan\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\") # \u53cd\u5411\u67e5\u8be2 \u6309\u8868\u540d:book queryResult=Author.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"yuan\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"book__title\",\"book__price\") \u4e00\u5bf9\u4e00\u67e5\u8be2 # \u67e5\u8be2alex\u7684\u624b\u673a\u53f7 # \u6b63\u5411\u67e5\u8be2 ret=Author.objects.filter(name=\"alex\").values(\"authordetail__telephone\") # \u53cd\u5411\u67e5\u8be2 ret=AuthorDetail.objects.filter(author__name=\"alex\").values(\"telephone\") \u8fdb\u9636\u7ec3\u4e60(\u8fde\u7eed\u8de8\u8868) # \u7ec3\u4e60: \u67e5\u8be2\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4ee5\u53ca\u4f5c\u8005\u7684\u59d3\u540d # \u6b63\u5411\u67e5\u8be2 queryResult=Book.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(publish__name=\"\u4eba\u6c11\u51fa\u7248\u793e\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\",\"authors__name\") # \u53cd\u5411\u67e5\u8be2 queryResult=Publish.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"\u4eba\u6c11\u51fa\u7248\u793e\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"book__title\",\"book__authors__age\",\"book__authors__name\") # \u7ec3\u4e60: \u624b\u673a\u53f7\u4ee5151\u5f00\u5934\u7684\u4f5c\u8005\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u540d\u79f0\u4ee5\u53ca\u51fa\u7248\u793e\u540d\u79f0 # \u65b9\u5f0f1: queryResult=Book.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(authors__authorDetail__telephone__regex=\"151\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\",\"publish__name\") # \u65b9\u5f0f2: ret=Author.objects .filter(authordetail__telephone__startswith=\"151\") .values(\"book__title\",\"book__publish__name\") related_name \u53cd\u5411\u67e5\u8be2\u65f6\uff0c\u5982\u679c\u5b9a\u4e49\u4e86related_name \uff0c\u5219\u7528related_name\u66ff\u6362\u8868\u540d\uff0c\u4f8b\u5982\uff1a publish = ForeignKey(Blog, related_name='bookList') # \u7ec3\u4e60: \u67e5\u8be2\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4e0e\u4ef7\u683c(\u4e00\u5bf9\u591a) # \u53cd\u5411\u67e5\u8be2 \u4e0d\u518d\u6309\u8868\u540d:book,\u800c\u662frelated_name:bookList queryResult=Publish.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"\u4eba\u6c11\u51fa\u7248\u793e\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"bookList__title\",\"bookList__price\") \u805a\u5408\u67e5\u8be2\u4e0e\u5206\u7ec4\u67e5\u8be2 \u805a\u5408 aggregate ( args, *kwargs) # \u8ba1\u7b97\u6240\u6709\u56fe\u4e66\u7684\u5e73\u5747\u4ef7\u683c >>> from django.db.models import Avg >>> Book.objects.all().aggregate(Avg('price')) {'price__avg': 34.35} aggregate() \u662f QuerySet \u7684\u4e00\u4e2a\u7ec8\u6b62\u5b50\u53e5\uff0c\u610f\u601d\u662f\u8bf4\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u4e00\u4e9b\u952e\u503c\u5bf9\u7684\u5b57\u5178\u3002\u952e\u7684\u540d\u79f0\u662f\u805a\u5408\u503c\u7684\u6807\u8bc6\u7b26\uff0c\u503c\u662f\u8ba1\u7b97\u51fa\u6765\u7684\u805a\u5408\u503c\u3002\u952e\u7684\u540d\u79f0\u662f\u6309\u7167\u5b57\u6bb5\u548c\u805a\u5408\u51fd\u6570\u7684\u540d\u79f0\u81ea\u52a8\u751f\u6210\u51fa\u6765\u7684\u3002\u5982\u679c\u4f60\u60f3\u8981\u4e3a\u805a\u5408\u503c\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0\uff0c\u53ef\u4ee5\u5411\u805a\u5408\u5b50\u53e5\u63d0\u4f9b\u5b83\u3002 >>> Book.objects.aggregate(average_price=Avg('price')) {'average_price': 34.35} \u5982\u679c\u4f60\u5e0c\u671b\u751f\u6210\u4e0d\u6b62\u4e00\u4e2a\u805a\u5408\uff0c\u4f60\u53ef\u4ee5\u5411 aggregate() \u5b50\u53e5\u4e2d\u6dfb\u52a0\u53e6\u4e00\u4e2a\u53c2\u6570\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u4e5f\u60f3\u77e5\u9053\u6240\u6709\u56fe\u4e66\u4ef7\u683c\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u53ef\u4ee5\u8fd9\u6837\u67e5\u8be2\uff1a >>> from django.db.models import Avg, Max, Min >>> Book.objects.aggregate(Avg('price'), Max('price'), Min('price')) {'price__avg': 34.35, 'price__max': Decimal('81.20'), 'price__min': Decimal('12.99')} \u5206\u7ec4 ###################################\uff0d\uff0d\u5355\u8868\u5206\u7ec4\u67e5\u8be2\uff0d\uff0d####################################################### \u67e5\u8be2\u6bcf\u4e00\u4e2a\u90e8\u95e8\u540d\u79f0\u4ee5\u53ca\u5bf9\u5e94\u7684\u5458\u5de5\u6570 emp: id name age salary dep 1 alex 12 2000 \u9500\u552e\u90e8 2 egon 22 3000 \u4eba\u4e8b\u90e8 3 wen 22 5000 \u4eba\u4e8b\u90e8 sql\u8bed\u53e5: select dep,Count(*) from emp group by dep; ORM: emp.objects.values(\"dep\").annotate(c=Count(\"id\") ###################################\uff0d\uff0d\u591a\u8868\u5206\u7ec4\u67e5\u8be2\uff0d\uff0d########################### \u591a\u8868\u5206\u7ec4\u67e5\u8be2\uff1a \u67e5\u8be2\u6bcf\u4e00\u4e2a\u90e8\u95e8\u540d\u79f0\u4ee5\u53ca\u5bf9\u5e94\u7684\u5458\u5de5\u6570 emp: id name age salary dep_id 1 alex 12 2000 1 2 egon 22 3000 2 3 wen 22 5000 2 dep id name 1 \u9500\u552e\u90e8 2 \u4eba\u4e8b\u90e8 emp\uff0ddep: id name age salary dep_id id name 1 alex 12 2000 1 1 \u9500\u552e\u90e8 2 egon 22 3000 2 2 \u4eba\u4e8b\u90e8 3 wen 22 5000 2 2 \u4eba\u4e8b\u90e8 sql\u8bed\u53e5: select dep.name,Count(*) from emp left join dep on emp.dep_id=dep.id group by dep.id ORM: dep.objetcs.values(\"id\").annotate(c=Count(\"emp\")).values(\"name\",\"c\") class Emp(models.Model): name=models.CharField(max_length=32) age=models.IntegerField() salary=models.DecimalField(max_digits=8,decimal_places=2) dep=models.CharField(max_length=32) province=models.CharField(max_length=32) annotate()\u4e3a\u8c03\u7528\u7684 QuerySet \u4e2d\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u751f\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u7edf\u8ba1\u503c\uff08\u7edf\u8ba1\u65b9\u6cd5\u7528\u805a\u5408\u51fd\u6570\uff09\u3002 \u603b\u7ed3 \uff1a\u8de8\u8868\u5206\u7ec4\u67e5\u8be2\u672c\u8d28\u5c31\u662f\u5c06\u5173\u8054\u8868join\u6210\u4e00\u5f20\u8868\uff0c\u518d\u6309\u5355\u8868\u7684\u601d\u8def\u8fdb\u884c\u5206\u7ec4\u67e5\u8be2\u3002\u3000 \u67e5\u8be2\u7ec3\u4e60 (1) \u7ec3\u4e60\uff1a\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u51fa\u7248\u793e\u7684\u6700\u4fbf\u5b9c\u7684\u4e66 publishList=Publish.objects.annotate(MinPrice=Min(\"book__price\")) for publish_obj in publishList: print(publish_obj.name,publish_obj.MinPrice) annotate\u7684\u8fd4\u56de\u503c\u662fquerySet\uff0c\u5982\u679c\u4e0d\u60f3\u904d\u5386\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7528\u4e0avaluelist\uff1a queryResult= Publish.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.annotate(MinPrice=Min(\"book__price\")) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"name\",\"MinPrice\") print(queryResult) ''' SELECT \"app01_publish\".\"name\", MIN(\"app01_book\".\"price\") AS \"MinPrice\" FROM \"app01_publish\" LEFT JOIN \"app01_book\" ON (\"app01_publish\".\"nid\" = \"app01_book\".\"publish_id\") GROUP BY \"app01_publish\".\"nid\", \"app01_publish\".\"name\", \"app01_publish\".\"city\", \"app01_publish\".\"email\" ''' (2) \u7ec3\u4e60\uff1a\u7edf\u8ba1\u6bcf\u4e00\u672c\u4e66\u7684\u4f5c\u8005\u4e2a\u6570 ret = Book.objects.annotate(authorsNum=Count(\"authors__name\")).values(\"title\",\"authorsNum\") (3) \u7edf\u8ba1\u6bcf\u4e00\u672c\u4ee5py\u5f00\u5934\u7684\u4e66\u7c4d\u7684\u4f5c\u8005\u4e2a\u6570\uff1a queryResult=Book.objects.filter(title__startswith=\"Py\").annotate(num_authors=Count('authors')) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 \u3000 ret = Book.objects.filter(title__startswith=\"py\").annotate(authorSnum=Count(\"authors__name\")).values_list(\"title\",\"authorSnum\") (4) \u7edf\u8ba1\u4e0d\u6b62\u4e00\u4e2a\u4f5c\u8005\u7684\u56fe\u4e66\uff1a queryResult=Book.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.annotate(num_authors=Count('authors')) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(num_authors__gt=1) (5) \u6839\u636e\u4e00\u672c\u56fe\u4e66\u4f5c\u8005\u6570\u91cf\u7684\u591a\u5c11\u5bf9\u67e5\u8be2\u96c6 QuerySet \u8fdb\u884c\u6392\u5e8f: Book.objects.annotate(num_authors=Count('authors')).order_by('num_authors') (6) \u67e5\u8be2\u5404\u4e2a\u4f5c\u8005\u51fa\u7684\u4e66\u7684\u603b\u4ef7\u683c: # \u6309author\u8868\u7684\u6240\u6709\u5b57\u6bb5 group by queryResult=Author.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.annotate(SumPrice=Sum(\"book__price\")) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"name\",\"SumPrice\") print(queryResult) F\u67e5\u8be2\u4e0eQ\u67e5\u8be2 F\u67e5\u8be2 \u5728\u4e0a\u9762\u6240\u6709\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6784\u9020\u7684\u8fc7\u6ee4\u5668\u90fd\u53ea\u662f\u5c06\u5b57\u6bb5\u503c\u4e0e\u67d0\u4e2a\u5e38\u91cf\u505a\u6bd4\u8f83\u3002\u5982\u679c\u6211\u4eec\u8981\u5bf9\u4e24\u4e2a\u5b57\u6bb5\u7684\u503c\u505a\u6bd4\u8f83\uff0c\u90a3\u8be5\u600e\u4e48\u505a\u5462\uff1f Django \u63d0\u4f9b F() \u6765\u505a\u8fd9\u6837\u7684\u6bd4\u8f83\u3002F() \u7684\u5b9e\u4f8b\u53ef\u4ee5\u5728\u67e5\u8be2\u4e2d\u5f15\u7528\u5b57\u6bb5\uff0c\u6765\u6bd4\u8f83\u540c\u4e00\u4e2a model \u5b9e\u4f8b\u4e2d\u4e24\u4e2a\u4e0d\u540c\u5b57\u6bb5\u7684\u503c\u3002 # \u67e5\u8be2\u8bc4\u8bba\u6570\u5927\u4e8e\u6536\u85cf\u6570\u7684\u4e66\u7c4d from django.db.models import F Book.objects.filter(commnetNum__lt=F('keepNum')) Django \u652f\u6301 F() \u5bf9\u8c61\u4e4b\u95f4\u4ee5\u53ca F() \u5bf9\u8c61\u548c\u5e38\u6570\u4e4b\u95f4\u7684\u52a0\u51cf\u4e58\u9664\u548c\u53d6\u6a21\u7684\u64cd\u4f5c\u3002 # \u67e5\u8be2\u8bc4\u8bba\u6570\u5927\u4e8e\u6536\u85cf\u65702\u500d\u7684\u4e66\u7c4d Book.objects.filter(commnetNum__lt=F('keepNum')*2) \u4fee\u6539\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u4f7f\u7528F\u51fd\u6570,\u6bd4\u5982\u5c06\u6bcf\u4e00\u672c\u4e66\u7684\u4ef7\u683c\u63d0\u9ad830\u5143\uff1a Book.objects.all().update(price=F(\"price\")+30)\u3000 \u6570\u636e\u51c6\u5907: \u76f4\u63a5\u5728models.py book \u7c7b\u4e2d\u6dfb\u52a0\u4e24\u4e2a\u5b57\u6bb5 comment_sum = models.IntegerField(default=0) read_sum = models.IntegerField(default=0) kanghuadeMacBook-Pro:08-ORM2 kanghua$ python3.9 manage.py makemigrations kanghuadeMacBook-Pro:08-ORM2 kanghua$ python3.9 manage.py migrate Q\u67e5\u8be2 filter() \u7b49\u65b9\u6cd5\u4e2d\u7684\u5173\u952e\u5b57\u53c2\u6570\u67e5\u8be2\u90fd\u662f\u4e00\u8d77\u8fdb\u884c\u201cAND\u201d \u7684\u3002 \u5982\u679c\u4f60\u9700\u8981\u6267\u884c\u66f4\u590d\u6742\u7684\u67e5\u8be2\uff08\u4f8b\u5982 OR \u8bed\u53e5\uff09\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Q \u5bf9\u8c61 \u3002 from django.db.models import Q Q(title__startswith='Py') Q \u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 & \u548c | \u64cd\u4f5c\u7b26\u7ec4\u5408\u8d77\u6765\u3002\u5f53\u4e00\u4e2a\u64cd\u4f5c\u7b26\u5728\u4e24\u4e2a Q \u5bf9\u8c61\u4e0a\u4f7f\u7528\u65f6\uff0c\u5b83\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684 Q \u5bf9\u8c61\u3002 bookList=Book.objects.filter(Q(authors__name=\"yuan\")|Q(authors__name=\"egon\")) \u7b49\u540c\u4e8e\u4e0b\u9762\u7684SQL WHERE \u5b50\u53e5\uff1a WHERE name =\"yuan\" OR name =\"egon\" \u4f60\u53ef\u4ee5\u7ec4\u5408 & \u548c | \u64cd\u4f5c\u7b26\u4ee5\u53ca\u4f7f\u7528\u62ec\u53f7\u8fdb\u884c\u5206\u7ec4\u6765\u7f16\u5199\u4efb\u610f\u590d\u6742\u7684 Q \u5bf9\u8c61\u3002\u540c\u65f6\uff0c Q \u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 ~ \u64cd\u4f5c\u7b26\u53d6\u53cd\uff0c\u8fd9\u5141\u8bb8\u7ec4\u5408\u6b63\u5e38\u7684\u67e5\u8be2\u548c\u53d6\u53cd( NOT ) \u67e5\u8be2\uff1a bookList=Book.objects.filter(Q(authors__name=\"yuan\") & ~Q(publishDate__year=2017)).values_list(\"title\") \u67e5\u8be2\u51fd\u6570\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528 Q \u5bf9\u8c61 \u548c\u5173\u952e\u5b57\u53c2\u6570\u3002\u6240\u6709\u63d0\u4f9b\u7ed9\u67e5\u8be2\u51fd\u6570\u7684\u53c2\u6570\uff08\u5173\u952e\u5b57\u53c2\u6570\u6216 Q \u5bf9\u8c61\uff09\u90fd\u5c06\"AND\u201d\u5728\u4e00\u8d77\u3002\u4f46\u662f\uff0c\u5982\u679c\u51fa\u73b0 Q \u5bf9\u8c61\uff0c\u5b83\u5fc5\u987b\u4f4d\u4e8e\u6240\u6709\u5173\u952e\u5b57\u53c2\u6570\u7684\u524d\u9762\u3002\u4f8b\u5982\uff1a bookList=Book.objects.filter(Q(publishDate__year=2016) | Q(publishDate__year=2017), title__icontains=\"python\" ) 9-1 \u5173\u8054\u7ba1\u7406\u5668(RelatedManager) class RelatedManager \"\u5173\u8054\u7ba1\u7406\u5668\"\u662f\u5728\u4e00\u5bf9\u591a\u6216\u8005\u591a\u5bf9\u591a\u7684\u5173\u8054\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u7684\u7ba1\u7406\u5668\u3002\u5b83\u5b58\u5728\u4e8e\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5\uff1a ForeignKey\u5173\u7cfb\u7684\u201c\u53e6\u4e00\u8fb9\u201d\u3002\u50cf\u8fd9\u6837\uff1a from django.db import models class Reporter(models.Model): # ... pass class Article(models.Model): reporter = models.ForeignKey(Reporter) \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u7ba1\u7406\u5668reporter.article_set\u62e5\u6709\u4e0b\u9762\u7684\u65b9\u6cd5\u3002 ManyToManyField\u5173\u7cfb\u7684\u4e24\u8fb9\uff1a class Topping(models.Model): # ... pass class Pizza(models.Model): toppings = models.ManyToManyField(Topping) \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0ctopping.pizza_set \u548cpizza.toppings\u90fd\u62e5\u6709\u4e0b\u9762\u7684\u65b9\u6cd5\u3002 add(obj1[, obj2, ...]) \u628a\u6307\u5b9a\u7684\u6a21\u578b\u5bf9\u8c61\u6dfb\u52a0\u5230\u5173\u8054\u5bf9\u8c61\u96c6\u4e2d\u3002 \u4f8b\u5982\uff1a >>> b = Blog.objects.get(id=1) >>> e = Entry.objects.get(id=234) >>> b.entry_set.add(e) # Associates Entry e with Blog b. \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5bf9\u4e8eForeignKey\u5173\u7cfb\uff0ce.save()\u7531\u5173\u8054\u7ba1\u7406\u5668\u8c03\u7528\uff0c\u6267\u884c\u66f4\u65b0\u64cd\u4f5c\u3002\u7136\u800c\uff0c\u5728\u591a\u5bf9\u591a\u5173\u7cfb\u4e2d\u4f7f\u7528add()\u5e76\u4e0d\u4f1a\u8c03\u7528\u4efb\u4f55 save()\u65b9\u6cd5\uff0c\u800c\u662f\u7531QuerySet.bulk_create()\u521b\u5efa\u5173\u7cfb\u3002 \u5ef6\u4f38\uff1a # 1 *[]\u7684\u4f7f\u7528 >>> book_obj = Book.objects.get(id=1) >>> author_list = Author.objects.filter(id__gt=2) >>> book_obj.authors.add(*author_list) # 2 \u76f4\u63a5\u7ed1\u5b9a\u4e3b\u952e book_obj.authors.add(*[1,3]) # \u5c06id=1\u548cid=3\u7684\u4f5c\u8005\u5bf9\u8c61\u6dfb\u52a0\u5230\u8fd9\u672c\u4e66\u7684\u4f5c\u8005\u96c6\u5408\u4e2d # \u5e94\u7528: \u6dfb\u52a0\u6216\u8005\u7f16\u8f91\u65f6,\u63d0\u4ea4\u4f5c\u8005\u4fe1\u606f\u65f6\u53ef\u4ee5\u7528\u5230. create(**kwargs) \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff0c\u4fdd\u5b58\u5bf9\u8c61\uff0c\u5e76\u5c06\u5b83\u6dfb\u52a0\u5230\u5173\u8054\u5bf9\u8c61\u96c6\u4e4b\u4e2d\u3002\u8fd4\u56de\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\uff1a >>> b = Blog.objects.get(id=1) >>> e = b.entry_set.create( ... headline='Hello', ... body_text='Hi', ... pub_date=datetime.date(2005, 1, 1) ... ) # No need to call e.save() at this point -- it's already been saved. \u8fd9\u5b8c\u5168\u7b49\u4ef7\u4e8e\uff08\u4e0d\u8fc7\u66f4\u52a0\u7b80\u6d01\u4e8e\uff09\uff1a >>> b = Blog.objects.get(id=1) >>> e = Entry( ... blog=b, ... headline='Hello', ... body_text='Hi', ... pub_date=datetime.date(2005, 1, 1) ... ) >>> e.save(force_insert=True) \u8981\u6ce8\u610f\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6307\u5b9a\u6a21\u578b\u4e2d\u7528\u4e8e\u5b9a\u4e49\u5173\u7cfb\u7684\u5173\u952e\u8bcd\u53c2\u6570\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u4f20\u5165blog\u53c2\u6570\u7ed9create()\u3002Django\u4f1a\u660e\u767d\u65b0\u7684 Entry\u5bf9\u8c61blog \u5e94\u8be5\u6dfb\u52a0\u5230b\u4e2d\u3002 remove(obj1[, obj2, ...]) \u4ece\u5173\u8054\u5bf9\u8c61\u96c6\u4e2d\u79fb\u9664\u6267\u884c\u7684\u6a21\u578b\u5bf9\u8c61\uff1a >>> b = Blog.objects.get(id=1) >>> e = Entry.objects.get(id=234) >>> b.entry_set.remove(e) # Disassociates Entry e from Blog b. \u5bf9\u4e8eForeignKey\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4ec5\u5728null=True\u65f6\u5b58\u5728\u3002 clear() \u4ece\u5173\u8054\u5bf9\u8c61\u96c6\u4e2d\u79fb\u9664\u4e00\u5207\u5bf9\u8c61\u3002 >>> b = Blog.objects.get(id=1) >>> b.entry_set.clear() \u6ce8\u610f\u8fd9\u6837\u4e0d\u4f1a\u5220\u9664\u5bf9\u8c61 \u2014\u2014 \u53ea\u4f1a\u5220\u9664\u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u8054\u3002 \u5c31\u50cf remove() \u65b9\u6cd5\u4e00\u6837\uff0cclear()\u53ea\u80fd\u5728 null=True\u7684ForeignKey\u4e0a\u88ab\u8c03\u7528\u3002 set()\u65b9\u6cd5 \u5148\u6e05\u7a7a\uff0c\u5728\u8bbe\u7f6e\uff0c\u7f16\u8f91\u4e66\u7c4d\u65f6\u5373\u53ef\u7528\u5230 \u6ce8\u610f \u5bf9\u4e8e\u6240\u6709\u7c7b\u578b\u7684\u5173\u8054\u5b57\u6bb5\uff0cadd()\u3001create()\u3001remove()\u548cclear(),set()\u90fd\u4f1a\u9a6c\u4e0a\u66f4\u65b0\u6570\u636e\u5e93\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u5173\u8054\u7684\u4efb\u4f55\u4e00\u7aef\uff0c\u90fd\u4e0d\u9700\u8981\u518d\u8c03\u7528save()\u65b9\u6cd5\u3002 \u76f4\u63a5\u8d4b\u503c\uff1a \u901a\u8fc7\u8d4b\u503c\u4e00\u4e2a\u65b0\u7684\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\uff0c\u5173\u8054\u5bf9\u8c61\u96c6\u53ef\u4ee5\u88ab\u6574\u4f53\u66ff\u6362\u6389\u3002 >>> new_list = [obj1, obj2, obj3] >>> e.related_set = new_list \u5982\u679c\u5916\u952e\u5173\u7cfb\u6ee1\u8db3null=True\uff0c\u5173\u8054\u7ba1\u7406\u5668\u4f1a\u5728\u6dfb\u52a0new_list\u4e2d\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u9996\u5148\u8c03\u7528clear()\u65b9\u6cd5\u6765\u89e3\u9664\u5173\u8054\u96c6\u4e2d\u4e00\u5207\u5df2\u5b58\u5728\u5bf9\u8c61\u7684\u5173\u8054\u3002\u5426\u5219\uff0c new_list\u4e2d\u7684\u5bf9\u8c61\u4f1a\u5728\u5df2\u5b58\u5728\u7684\u5173\u8054\u7684\u57fa\u7840\u4e0a\u88ab\u6dfb\u52a0\u3002\u3000\u3000 \u62a5\u9519\u8bb0\u5f55: #\u62a5\u9519\u73af\u5883 python3.9.4 django2.2 PyMySQL1.0.2 mysql 5.7.31 #\u6570\u636e\u8fc1\u79fb\u65f6\u5019 python3.9 manage.py makemigrations AttributeError: 'str' object has no attribute 'decode' # \u4fee\u6539django \u6e90\u7801 /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/django/db/backends/mysql/operations.py #140\u884c def last_executed_query(self, cursor, sql, params): # With MySQLdb, cursor objects have an (undocumented) \"_executed\" # attribute where the exact query sent to the database is saved. # See MySQLdb/cursors.py in the source distribution. query = getattr(cursor, '_executed', None) # \u4fee\u6539\u524d\u7684\u6e90\u7801 # if query is not None: # # query = query.decode(errors='replace') # query = query.encode(errors='replace') # \u6216\u8005\u628a\u4e0a\u4e00\u884c\u6ce8\u91ca\u6389 \u7528\u8fd9\u4e00\u884c\u4e5f\u53ef\u4ee5\u89e3\u51b3 # return query # \u4fee\u6539\u540e\u7684\u6e90\u7801 from django.utils.encoding import force_str # \u53ea\u9700\u8981\u5c06\u8fd9\u4e2a\u5bfc\u5165\uff0c\u653e\u5230\u8be5\u6a21\u5757\u7684\u6700\u4e0a\u9762\u5373\u53ef return force_str(query, errors='replace') \u66f4\u591a\u62a5\u9519 \u53c2\u8003 https://www.cnblogs.com/Neeo/articles/14036364.html 10 Django\u4e0eAjax Ajax Ajax\u7b80\u4ecb AJAX\uff08Asynchronous Javascript And XML\uff09\u7ffb\u8bd1\u6210\u4e2d\u6587\u5c31\u662f\u201c\u5f02\u6b65Javascript\u548cXML\u201d\u3002\u5373\u4f7f\u7528Javascript\u8bed\u8a00\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u5f02\u6b65\u4ea4\u4e92\uff0c\u4f20\u8f93\u7684\u6570\u636e\u4e3aXML\uff08\u5f53\u7136\uff0c\u4f20\u8f93\u7684\u6570\u636e\u4e0d\u53ea\u662fXML,\u73b0\u5728\u66f4\u591a\u4f7f\u7528json\u6570\u636e\uff09\u3002 \u540c\u6b65\u4ea4\u4e92\uff1a\u5ba2\u6237\u7aef\u53d1\u51fa\u4e00\u4e2a\u8bf7\u6c42\u540e\uff0c\u9700\u8981\u7b49\u5f85\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\u540e\uff0c\u624d\u80fd\u53d1\u51fa\u7b2c\u4e8c\u4e2a\u8bf7\u6c42\uff1b \u5f02\u6b65\u4ea4\u4e92\uff1a\u5ba2\u6237\u7aef\u53d1\u51fa\u4e00\u4e2a\u8bf7\u6c42\u540e\uff0c\u65e0\u9700\u7b49\u5f85\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u5c31\u53ef\u4ee5\u53d1\u51fa\u7b2c\u4e8c\u4e2a\u8bf7\u6c42\u3002 AJAX\u9664\u4e86 \u5f02\u6b65 \u7684\u7279\u70b9\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u5c31\u662f\uff1a\u6d4f\u89c8\u5668\u9875\u9762 \u5c40\u90e8\u5237\u65b0 \uff1b\uff08\u8fd9\u4e00\u7279\u70b9\u7ed9\u7528\u6237\u7684\u611f\u53d7\u662f\u5728\u4e0d\u77e5\u4e0d\u89c9\u4e2d\u5b8c\u6210\u8bf7\u6c42\u548c\u54cd\u5e94\u8fc7\u7a0b\uff09 \u573a\u666f\uff1a \u4f18\u70b9\uff1a AJAX\u4f7f\u7528Javascript\u6280\u672f\u5411\u670d\u52a1\u5668\u53d1\u9001\u5f02\u6b65\u8bf7\u6c42 AJAX\u65e0\u987b\u5237\u65b0\u6574\u4e2a\u9875\u9762 \u57fa\u4e8ejquery\u7684Ajax\u5b9e\u73b0 <button class=\"send_Ajax\">send_Ajax</button> <script> $(\".send_Ajax\").click(function(){ // \u53d1\u9001ajax\u8bf7\u6c42 $.ajax({ url:\"/handle_Ajax/\", // \u8bf7\u6c42url type:\"POST\", // \u8bf7\u6c42\u65b9\u5f0fpost data:{username:\"Yuan\",password:123}, //\u53d1\u9001\u6570\u636e success:function(data){ // \u56de\u8c03\u51fd\u6570 console.log(data) }, \u3000\u3000\u3000\u3000\u3000\u3000 error: function (jqXHR, textStatus, err) { console.log(arguments); }, complete: function (jqXHR, textStatus) { console.log(textStatus); }, statusCode: { '403': function (jqXHR, textStatus, err) { console.log(arguments); }, '400': function (jqXHR, textStatus, err) { console.log(arguments); } } }) }) // \u66f4\u591a\u53c2\u8003 https://blog.csdn.net/zhbitxhd/article/details/9946799 </script> Ajax\uff0d\u670d\u52a1\u5668\uff0dAjax\u6d41\u7a0b\u56fe \u6848\u4f8b 1 \u7528\u6237\u540d\u662f\u5426\u5df2\u88ab\u6ce8\u518c \u5728\u6ce8\u518c\u8868\u5355\u4e2d\uff0c\u5f53\u7528\u6237\u586b\u5199\u4e86\u7528\u6237\u540d\u540e\uff0c\u628a\u5149\u6807\u79fb\u5f00\u540e\uff0c\u4f1a\u81ea\u52a8\u5411\u670d\u52a1\u5668\u53d1\u9001\u5f02\u6b65\u8bf7\u6c42\u3002\u670d\u52a1\u5668\u8fd4\u56detrue\u6216false\uff0c\u8fd4\u56detrue\u8868\u793a\u8fd9\u4e2a\u7528\u6237\u540d\u5df2\u7ecf\u88ab\u6ce8\u518c\u8fc7\uff0c\u8fd4\u56defalse\u8868\u793a\u6ca1\u6709\u6ce8\u518c\u8fc7\u3002\u5ba2\u6237\u7aef\u5f97\u5230\u670d\u52a1\u5668\u8fd4\u56de\u7684\u7ed3\u679c\u540e\uff0c\u786e\u5b9a\u662f\u5426\u5728\u7528\u6237\u540d\u6587\u672c\u6846\u540e\u663e\u793a\u201c\u7528\u6237\u540d\u5df2\u88ab\u6ce8\u518c\u201d\u7684\u9519\u8bef\u4fe1\u606f\uff01 2 \u57fa\u4e8eAjax\u8fdb\u884c\u767b\u5f55\u9a8c\u8bc1 \u7528\u6237\u5728\u8868\u5355\u8f93\u5165\u7528\u6237\u540d\u4e0e\u5bc6\u7801\uff0c\u901a\u8fc7Ajax\u63d0\u4ea4\u7ed9\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u9a8c\u8bc1\u540e\u8fd4\u56de\u54cd\u5e94\u4fe1\u606f\uff0c\u5ba2\u6237\u7aef\u901a\u8fc7\u54cd\u5e94\u4fe1\u606f\u786e\u5b9a\u662f\u5426\u767b\u5f55\u6210\u529f\uff0c\u6210\u529f\uff0c\u5219\u8df3\u8f6c\u5230\u9996\u9875\uff0c\u5426\u5219\uff0c\u5728\u9875\u9762\u4e0a\u663e\u793a\u76f8\u5e94\u7684\u9519\u8bef\u4fe1\u606f\u3002 \u6587\u4ef6\u4e0a\u4f20 \u8bf7\u6c42\u5934ContentType ContentType\u6307\u7684\u662f\u8bf7\u6c42\u4f53\u7684\u7f16\u7801\u7c7b\u578b\uff0c\u5e38\u89c1\u7684\u7c7b\u578b\u5171\u67093\u79cd\uff1a 1 application/x-www-form-urlencoded \u8fd9\u5e94\u8be5\u662f\u6700\u5e38\u89c1\u7684 POST \u63d0\u4ea4\u6570\u636e\u7684\u65b9\u5f0f\u4e86\u3002\u6d4f\u89c8\u5668\u7684\u539f\u751f \u8868\u5355\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e enctype \u5c5e\u6027\uff0c\u90a3\u4e48\u6700\u7ec8\u5c31\u4f1a\u4ee5 application/x-www-form-urlencoded \u65b9\u5f0f\u63d0\u4ea4\u6570\u636e\u3002\u8bf7\u6c42\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u8fd9\u6837\uff08\u65e0\u5173\u7684\u8bf7\u6c42\u5934\u5728\u672c\u6587\u4e2d\u90fd\u7701\u7565\u6389\u4e86\uff09\uff1a POST http://www.example.com HTTP/1.1 Content-Type: application/x-www-form-urlencoded;charset=utf-8 user=yuan&age=22 2 multipart/form-data \u8fd9\u53c8\u662f\u4e00\u4e2a\u5e38\u89c1\u7684 POST \u6570\u636e\u63d0\u4ea4\u7684\u65b9\u5f0f\u3002\u6211\u4eec\u4f7f\u7528\u8868\u5355\u4e0a\u4f20\u6587\u4ef6\u65f6\uff0c\u5fc5\u987b\u8ba9 \u8868\u5355\u7684 enctype \u7b49\u4e8e multipart/form-data\u3002\u76f4\u63a5\u6765\u770b\u4e00\u4e2a\u8bf7\u6c42\u793a\u4f8b\uff1a POST http://www.example.com HTTP/1.1 Content-Type:multipart/form-data; boundary=----WebKitFormBoundaryrGKCBY7qhFd3TrwA ------WebKitFormBoundaryrGKCBY7qhFd3TrwA Content-Disposition: form-data; name=\"user\" yuan ------WebKitFormBoundaryrGKCBY7qhFd3TrwA Content-Disposition: form-data; name=\"file\"; filename=\"chrome.png\" Content-Type: image/png PNG ... content of chrome.png ... ------WebKitFormBoundaryrGKCBY7qhFd3TrwA-- \u8fd9\u4e2a\u4f8b\u5b50\u7a0d\u5fae\u590d\u6742\u70b9\u3002\u9996\u5148\u751f\u6210\u4e86\u4e00\u4e2a boundary \u7528\u4e8e\u5206\u5272\u4e0d\u540c\u7684\u5b57\u6bb5\uff0c\u4e3a\u4e86\u907f\u514d\u4e0e\u6b63\u6587\u5185\u5bb9\u91cd\u590d\uff0cboundary \u5f88\u957f\u5f88\u590d\u6742\u3002\u7136\u540e Content-Type \u91cc\u6307\u660e\u4e86\u6570\u636e\u662f\u4ee5 multipart/form-data \u6765\u7f16\u7801\uff0c\u672c\u6b21\u8bf7\u6c42\u7684 boundary \u662f\u4ec0\u4e48\u5185\u5bb9\u3002\u6d88\u606f\u4e3b\u4f53\u91cc\u6309\u7167\u5b57\u6bb5\u4e2a\u6570\u53c8\u5206\u4e3a\u591a\u4e2a\u7ed3\u6784\u7c7b\u4f3c\u7684\u90e8\u5206\uff0c\u6bcf\u90e8\u5206\u90fd\u662f\u4ee5 --boundary \u5f00\u59cb\uff0c\u7d27\u63a5\u7740\u662f\u5185\u5bb9\u63cf\u8ff0\u4fe1\u606f\uff0c\u7136\u540e\u662f\u56de\u8f66\uff0c\u6700\u540e\u662f\u5b57\u6bb5\u5177\u4f53\u5185\u5bb9\uff08\u6587\u672c\u6216\u4e8c\u8fdb\u5236\uff09\u3002\u5982\u679c\u4f20\u8f93\u7684\u662f\u6587\u4ef6\uff0c\u8fd8\u8981\u5305\u542b\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u7c7b\u578b\u4fe1\u606f\u3002\u6d88\u606f\u4e3b\u4f53\u6700\u540e\u4ee5 --boundary-- \u6807\u793a\u7ed3\u675f\u3002\u5173\u4e8e multipart/form-data \u7684\u8be6\u7ec6\u5b9a\u4e49\uff0c\u8bf7\u524d\u5f80 rfc1867 \u67e5\u770b\u3002 \u8fd9\u79cd\u65b9\u5f0f\u4e00\u822c\u7528\u6765\u4e0a\u4f20\u6587\u4ef6\uff0c\u5404\u5927\u670d\u52a1\u7aef\u8bed\u8a00\u5bf9\u5b83\u4e5f\u6709\u7740\u826f\u597d\u7684\u652f\u6301\u3002 \u4e0a\u9762\u63d0\u5230\u7684\u8fd9\u4e24\u79cd POST \u6570\u636e\u7684\u65b9\u5f0f\uff0c\u90fd\u662f\u6d4f\u89c8\u5668\u539f\u751f\u652f\u6301\u7684\uff0c\u800c\u4e14\u73b0\u9636\u6bb5\u6807\u51c6\u4e2d\u539f\u751f \u8868\u5355\u4e5f \u53ea\u652f\u6301\u8fd9\u4e24\u79cd\u65b9\u5f0f \uff08\u901a\u8fc7 \u5143\u7d20\u7684 enctype \u5c5e\u6027\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4e3a application/x-www-form-urlencoded \u3002\u5176\u5b9e enctype \u8fd8\u652f\u6301 text/plain \uff0c\u4e0d\u8fc7\u7528\u5f97\u975e\u5e38\u5c11\uff09\u3002 \u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684 Web \u7ad9\u70b9\uff0c\u5c24\u5176\u662f WebApp\uff0c\u5168\u90e8\u4f7f\u7528 Ajax \u8fdb\u884c\u6570\u636e\u4ea4\u4e92\u4e4b\u540e\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5b9a\u4e49\u65b0\u7684\u6570\u636e\u63d0\u4ea4\u65b9\u5f0f\uff0c\u7ed9\u5f00\u53d1\u5e26\u6765\u66f4\u591a\u4fbf\u5229\u3002 3 application/json application/json \u8fd9\u4e2a Content-Type \u4f5c\u4e3a\u54cd\u5e94\u5934\u5927\u5bb6\u80af\u5b9a\u4e0d\u964c\u751f\u3002\u5b9e\u9645\u4e0a\uff0c\u73b0\u5728\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u628a\u5b83\u4f5c\u4e3a\u8bf7\u6c42\u5934\uff0c\u7528\u6765\u544a\u8bc9\u670d\u52a1\u7aef\u6d88\u606f\u4e3b\u4f53\u662f\u5e8f\u5217\u5316\u540e\u7684 JSON \u5b57\u7b26\u4e32\u3002\u7531\u4e8e JSON \u89c4\u8303\u7684\u6d41\u884c\uff0c\u9664\u4e86\u4f4e\u7248\u672c IE \u4e4b\u5916\u7684\u5404\u5927\u6d4f\u89c8\u5668\u90fd\u539f\u751f\u652f\u6301 JSON.stringify\uff0c\u670d\u52a1\u7aef\u8bed\u8a00\u4e5f\u90fd\u6709\u5904\u7406 JSON \u7684\u51fd\u6570\uff0c\u4f7f\u7528 JSON \u4e0d\u4f1a\u9047\u4e0a\u4ec0\u4e48\u9ebb\u70e6\u3002 JSON \u683c\u5f0f\u652f\u6301\u6bd4\u952e\u503c\u5bf9\u590d\u6742\u5f97\u591a\u7684\u7ed3\u6784\u5316\u6570\u636e\uff0c\u8fd9\u4e00\u70b9\u4e5f\u5f88\u6709\u7528\u3002\u8bb0\u5f97\u6211\u51e0\u5e74\u524d\u505a\u4e00\u4e2a\u9879\u76ee\u65f6\uff0c\u9700\u8981\u63d0\u4ea4\u7684\u6570\u636e\u5c42\u6b21\u975e\u5e38\u6df1\uff0c\u6211\u5c31\u662f\u628a\u6570\u636e JSON \u5e8f\u5217\u5316\u4e4b\u540e\u6765\u63d0\u4ea4\u7684\u3002\u4e0d\u8fc7\u5f53\u65f6\u6211\u662f\u628a JSON \u5b57\u7b26\u4e32\u4f5c\u4e3a val\uff0c\u4ecd\u7136\u653e\u5728\u952e\u503c\u5bf9\u91cc\uff0c\u4ee5 x-www-form-urlencoded \u65b9\u5f0f\u63d0\u4ea4\u3002 \u57fa\u4e8eform\u8868\u5355\u7684\u6587\u4ef6\u4e0a\u4f20 \u6a21\u677f\u90e8\u5206 <form action=\"\" method=\"post\" enctype=\"multipart/form-data\"> \u7528\u6237\u540d <input type=\"text\" name=\"user\"> \u5934\u50cf <input type=\"file\" name=\"avatar\"> <input type=\"submit\"> </form> \u89c6\u56fe\u90e8\u5206 def index(request): print(request.body) # \u539f\u59cb\u7684\u8bf7\u6c42\u4f53\u6570\u636e print(request.GET) # GET\u8bf7\u6c42\u6570\u636e print(request.POST) # POST\u8bf7\u6c42\u6570\u636e print(request.FILES) # \u4e0a\u4f20\u7684\u6587\u4ef6\u6570\u636e return render(request,\"index.html\") \u57fa\u4e8eAjax\u7684\u6587\u4ef6\u4e0a\u4f20 \u6a21\u677f <form> \u7528\u6237\u540d <input type=\"text\" id=\"user\"> \u5934\u50cf <input type=\"file\" id=\"avatar\"> <input type=\"button\" id=\"ajax-submit\" value=\"ajax-submit\"> </form> <script> $(\"#ajax-submit\").click(function(){ var formdata=new FormData(); formdata.append(\"user\",$(\"#user\").val()); formdata.append(\"avatar_img\",$(\"#avatar\")[0].files[0]); $.ajax({ url:\"\", type:\"post\", data:formdata, processData: false , // \u4e0d\u5904\u7406\u6570\u636e contentType: false, // \u4e0d\u8bbe\u7f6e\u5185\u5bb9\u7c7b\u578b success:function(data){ console.log(data) } }) }) </script> \u89c6\u56fe def index(request): if request.is_ajax(): print(request.body) # \u539f\u59cb\u7684\u8bf7\u6c42\u4f53\u6570\u636e print(request.GET) # GET\u8bf7\u6c42\u6570\u636e print(request.POST) # POST\u8bf7\u6c42\u6570\u636e print(request.FILES) # \u4e0a\u4f20\u7684\u6587\u4ef6\u6570\u636e return HttpResponse(\"ok\") return render(request,\"index.html\") \u68c0\u67e5\u6d4f\u89c8\u5668\u7684\u8bf7\u6c42\u5934\uff1a Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryaWl9k5ZMiTAzx3FT \u5c0f\u7b14\u8bb0: \u8fd9\u91cc\u5148\u628a django \u7684 csrf_token\u529f\u80fd\u5173\u95ed settings.py \u6587\u4ef6 \u6ce8\u91ca MIDDLEWARE=[] \u91cc # 'django.middleware.csrf.CsrfViewMiddleware', 11 Django\u7ec4\u4ef6-\u5206\u9875\u5668 Django\u7684\u5206\u9875\u5668\uff08paginator\uff09 view from django.shortcuts import render,HttpResponse # Create your views here. from app01.models import * from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger def index(request): ''' \u6279\u91cf\u5bfc\u5165\u6570\u636e: Booklist=[] for i in range(100): Booklist.append(Book(title=\"book\"+str(i),price=30+i*i)) Book.objects.bulk_create(Booklist) ''' ''' \u5206\u9875\u5668\u7684\u4f7f\u7528: book_list=Book.objects.all() paginator = Paginator(book_list, 10) # 10\u8868\u793a\u6bcf\u9875\u663e\u793a\u6570 print(\"count:\",paginator.count) #\u6570\u636e\u603b\u6570 print(\"num_pages\",paginator.num_pages) #\u603b\u9875\u6570 print(\"page_range\",paginator.page_range) #\u9875\u7801\u7684\u5217\u8868 page1=paginator.page(1) #\u7b2c1\u9875\u7684page\u5bf9\u8c61 for i in page1: #\u904d\u5386\u7b2c1\u9875\u7684\u6240\u6709\u6570\u636e\u5bf9\u8c61 print(i) print(page1.object_list) #\u7b2c1\u9875\u7684\u6240\u6709\u6570\u636e page2=paginator.page(2) print(page2.has_next()) #\u662f\u5426\u6709\u4e0b\u4e00\u9875 print(page2.next_page_number()) #\u4e0b\u4e00\u9875\u7684\u9875\u7801 print(page2.has_previous()) #\u662f\u5426\u6709\u4e0a\u4e00\u9875 print(page2.previous_page_number()) #\u4e0a\u4e00\u9875\u7684\u9875\u7801 # \u629b\u9519 #page=paginator.page(12) # error:EmptyPage #page=paginator.page(\"z\") # error:PageNotAnInteger ''' book_list=Book.objects.all() paginator = Paginator(book_list, 10) page = request.GET.get('page',1) # \u83b7\u53d6\u6d4f\u89c8\u4f20\u8fc7\u6765\u7684\u53c2\u6570page\u7684\u503c,\u5982\u679c\u6ca1\u6709\u9ed8\u8ba41 currentPage=int(page) try: print(page) book_list = paginator.page(page) except PageNotAnInteger: book_list = paginator.page(1) except EmptyPage: book_list = paginator.page(paginator.num_pages) return render(request,\"index.html\",{\"book_list\":book_list,\"paginator\":paginator,\"currentPage\":currentPage}) index.html: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"> </head> <body> <div class=\"container\"> <h4>\u5206\u9875\u5668</h4> <ul> {% for book in book_list %} <li>{{ book.title }} -----{{ book.price }}</li> {% endfor %} </ul> <ul class=\"pagination\" id=\"pager\"> {% if book_list.has_previous %} <!-- \u5224\u65ad\u662f\u5426\u6709\u4e0b\u4e00\u9875 --> <li class=\"previous\"><a href=\"/index/?page={{ book_list.previous_page_number }}\">\u4e0a\u4e00\u9875</a></li> {% else %} <li class=\"previous disabled\"><a href=\"#\">\u4e0a\u4e00\u9875</a></li> {% endif %} {% for num in paginator.page_range %} {% if num == currentPage %} <li class=\"item active\"><a href=\"/index/?page={{ num }}\">{{ num }}</a></li> {% else %} <li class=\"item\"><a href=\"/index/?page={{ num }}\">{{ num }}</a></li> {% endif %} {% endfor %} {% if book_list.has_next %} <li class=\"next\"><a href=\"/index/?page={{ book_list.next_page_number }}\">\u4e0b\u4e00\u9875</a></li> {% else %} <li class=\"next disabled\"><a href=\"#\">\u4e0b\u4e00\u9875</a></li> {% endif %} </ul> </div> </body> </html> \u6269\u5c55 def index(request): book_list=Book.objects.all() paginator = Paginator(book_list, 15) page = request.GET.get('page',1) currentPage=int(page) # \u9875\u6570\u8fc7\u591a\u65f6\u5019, \u9875\u6570\u59cb\u7ec8\u4fdd\u630110\u9875\u663e\u793a if paginator.num_pages>11: if currentPage-5<1: pageRange=range(1,11) elif currentPage+5>paginator.num_pages: pageRange=range(currentPage-5,paginator.num_pages+1) else: pageRange=range(currentPage-5,currentPage+5) else: pageRange=paginator.page_range # \u4f4e\u4e8e10\u9875\u7684\u663e\u793a try: print(page) book_list = paginator.page(page) except PageNotAnInteger: book_list = paginator.page(1) except EmptyPage: book_list = paginator.page(paginator.num_pages) return render(request,\"index.html\",locals()) 12 Django\u7ec4\u4ef6-forms\u7ec4\u4ef6 forms\u7ec4\u4ef6 \u6821\u9a8c\u5b57\u6bb5\u529f\u80fd \u9488\u5bf9\u4e00\u4e2a\u5b9e\u4f8b\uff1a\u6ce8\u518c\u7528\u6237\u8bb2\u89e3\u3002 \u6a21\u578b\uff1amodels.py class UserInfo(models.Model): name=models.CharField(max_length=32) pwd=models.CharField(max_length=32) email=models.EmailField() tel=models.CharField(max_length=32) \u6a21\u677f: register.html: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <form action=\"\" method=\"post\"> {% csrf_token %} <div> <label for=\"user\">\u7528\u6237\u540d</label> <p><input type=\"text\" name=\"name\" id=\"name\"></p> </div> <div> <label for=\"pwd\">\u5bc6\u7801</label> <p><input type=\"password\" name=\"pwd\" id=\"pwd\"></p> </div> <div> <label for=\"r_pwd\">\u786e\u8ba4\u5bc6\u7801</label> <p><input type=\"password\" name=\"r_pwd\" id=\"r_pwd\"></p> </div> <div> <label for=\"email\">\u90ae\u7bb1</label> <p><input type=\"text\" name=\"email\" id=\"email\"></p> </div> <input type=\"submit\"> </form> </body> </html> \u89c6\u56fe\u51fd\u6570\uff1aregister # forms\u7ec4\u4ef6 from django.forms import widgets wid_01=widgets.TextInput(attrs={\"class\":\"form-control\"}) wid_02=widgets.PasswordInput(attrs={\"class\":\"form-control\"}) class UserForm(forms.Form): #\u7ee7\u627fforms\u7c7b name=forms.CharField(max_length=32,widget=wid_01) # name\u662f\u5b57\u7b26\u4e32\u6700\u957f32 pwd=forms.CharField(max_length=32,widget=wid_02) r_pwd=forms.CharField(max_length=32,widget=wid_02) email=forms.EmailField(widget=wid_01) tel=forms.CharField(max_length=32,widget=wid_01) def register(request): if request.method==\"POST\": form=UserForm(request.POST) # \u63a5\u6536\u7684\u6240\u6709\u503c\u4ea4\u7ed9UserForm if form.is_valid(): # \u6240\u6709\u6821\u9a8c\u7684\u89c4\u5219\u90fd\u5bf9\u624d\u8fd4\u56deTrue print(form.cleaned_data) # \u6240\u6709\u5e72\u51c0\u7684\u5b57\u6bb5\u4ee5\u53ca\u5bf9\u5e94\u7684\u503c else: print(form.cleaned_data) # print(form.errors) # ErrorDict : {\"\u6821\u9a8c\u9519\u8bef\u7684\u5b57\u6bb5\":[\"\u9519\u8bef\u4fe1\u606f\",]} print(form.errors.get(\"name\")) # ErrorList [\"\u9519\u8bef\u4fe1\u606f\",] return HttpResponse(\"OK\") form=UserForm() return render(request,\"register.html\",locals()) \u6e32\u67d3\u6807\u7b7e\u529f\u80fd \u6e32\u67d3\u65b9\u5f0f1 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <!-- \u6700\u65b0\u7248\u672c\u7684 Bootstrap \u6838\u5fc3 CSS \u6587\u4ef6 --> <link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"> </head> <body> <h3>\u6ce8\u518c\u9875\u9762</h3> <div class=\"container\"> <div class=\"row\"> <div class=\"col-md-6 col-lg-offset-3\"> <form action=\"\" method=\"post\"> {% csrf_token %} <div> <label for=\"\">\u7528\u6237\u540d</label> {{ form.name }} </div> <div> <label for=\"\">\u5bc6\u7801</label> {{ form.pwd }} </div> <div> <label for=\"\">\u786e\u8ba4\u5bc6\u7801</label> {{ form.r_pwd }} </div> <div> <label for=\"\"> \u90ae\u7bb1</label> {{ form.email }} </div> <input type=\"submit\" class=\"btn btn-default pull-right\"> </form> </div> </div> </div> </body> </html> \u6e32\u67d3\u65b9\u5f0f2 <form action=\"\" method=\"post\"> {% csrf_token %} {% for field in form %} <div> <label for=\"\">{{ field.label }}</label> {{ field }} </div> {% endfor %} <input type=\"submit\" class=\"btn btn-default pull-right\"> </form> \u6e32\u67d3\u65b9\u5f0f3 <form action=\"\" method=\"post\"> {% csrf_token %} {{ form.as_p }} <input type=\"submit\" class=\"btn btn-default pull-right\"> </form> \u663e\u793a\u9519\u8bef\u4e0e\u91cd\u7f6e\u8f93\u5165\u4fe1\u606f\u529f\u80fd \u89c6\u56fe def register(request): if request.method==\"POST\": form=UserForm(request.POST) if form.is_valid(): print(form.cleaned_data) # \u6240\u6709\u5e72\u51c0\u7684\u5b57\u6bb5\u4ee5\u53ca\u5bf9\u5e94\u7684\u503c else: print(form.cleaned_data) # print(form.errors) # ErrorDict : {\"\u6821\u9a8c\u9519\u8bef\u7684\u5b57\u6bb5\":[\"\u9519\u8bef\u4fe1\u606f\",]} print(form.errors.get(\"name\")) # ErrorList [\"\u9519\u8bef\u4fe1\u606f\",] return render(request,\"register.html\",locals()) form=UserForm() return render(request,\"register.html\",locals()) \u6a21\u677f <form action=\"\" method=\"post\" novalidate> {% csrf_token %} {% for field in form %} <div> <label for=\"\">{{ field.label }}</label> {{ field }} <span class=\"pull-right\" style=\"color: red\">{{ field.errors.0 }}</span> </div> {% endfor %} <input type=\"submit\" class=\"btn btn-default\"> </form> \u5c40\u90e8\u94a9\u5b50\u4e0e\u5168\u5c40\u94a9\u5b50 \u6a21\u677f # forms\u7ec4\u4ef6 from django.forms import widgets wid_01=widgets.TextInput(attrs={\"class\":\"form-control\"}) wid_02=widgets.PasswordInput(attrs={\"class\":\"form-control\"}) from django.core.exceptions import ValidationError class UserForm(forms.Form): name=forms.CharField(max_length=32, widget=wid_01 ) pwd=forms.CharField(max_length=32,widget=wid_02) r_pwd=forms.CharField(max_length=32,widget=wid_02) email=forms.EmailField(widget=wid_01) tel=forms.CharField(max_length=32,widget=wid_01) # \u5c40\u90e8\u94a9\u5b50 def clean_name(self): val=self.cleaned_data.get(\"name\") if not val.isdigit(): return val else: raise ValidationError(\"\u7528\u6237\u540d\u4e0d\u80fd\u662f\u7eaf\u6570\u5b57!\") # \u5168\u5c40\u94a9\u5b50 def clean(self): pwd=self.cleaned_data.get(\"pwd\") r_pwd=self.cleaned_data.get(\"r_pwd\") if pwd==r_pwd: return self.cleaned_data else: raise ValidationError('\u4e24\u6b21\u5bc6\u7801\u4e0d\u4e00\u81f4!') def register(request): if request.method==\"POST\": form=UserForm(request.POST) if form.is_valid(): print(form.cleaned_data) # \u6240\u6709\u5e72\u51c0\u7684\u5b57\u6bb5\u4ee5\u53ca\u5bf9\u5e94\u7684\u503c else: clean_error=form.errors.get(\"__all__\") return render(request,\"register.html\",locals()) form=UserForm() return render(request,\"register.html\",locals()) \u89c6\u56fe <form action=\"\" method=\"post\" novalidate> {% csrf_token %} {% for field in form %} <div> <label for=\"\">{{ field.label }}</label> {{ field }} <span class=\"pull-right\" style=\"color: red\"> {% if field.label == 'R pwd' %} <span>{{ clean_error.0 }}</span> {% endif %} {{ field.errors.0 }} </span> </div> {% endfor %} <input type=\"submit\" class=\"btn btn-default\"> </form> 13 Django\u7ec4\u4ef6-cookie\u4e0esession \u4f1a\u8bdd\u8ddf\u8e2a\u6280\u672f 1 \u4ec0\u4e48\u662f\u4f1a\u8bdd\u8ddf\u8e2a\u6280\u672f \u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u4e00\u4e0b\u4ec0\u4e48\u662f\u4f1a\u8bdd\uff01\u53ef\u4ee5\u628a\u4f1a\u8bdd\u7406\u89e3\u4e3a\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u4e00\u6b21\u4f1a\u6664\uff0c\u5728\u4e00\u6b21\u4f1a\u6664\u4e2d\u53ef\u80fd\u4f1a\u5305\u542b\u591a\u6b21\u8bf7\u6c42\u548c\u54cd\u5e94\u3002\u4f8b\u5982\u4f60\u7ed910086\u6253\u4e2a\u7535\u8bdd\uff0c\u4f60\u5c31\u662f\u5ba2\u6237\u7aef\uff0c\u800c10086\u670d\u52a1\u4eba\u5458\u5c31\u662f\u670d\u52a1\u5668\u4e86\u3002\u4ece\u53cc\u65b9\u63a5\u901a\u7535\u8bdd\u90a3\u4e00\u523b\u8d77\uff0c\u4f1a\u8bdd\u5c31\u5f00\u59cb\u4e86\uff0c\u5230\u67d0\u4e00\u65b9\u6302\u65ad\u7535\u8bdd\u8868\u793a\u4f1a\u8bdd\u7ed3\u675f\u3002\u5728\u901a\u8bdd\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u4f1a\u541110086\u53d1\u51fa\u591a\u4e2a\u8bf7\u6c42\uff0c\u90a3\u4e48\u8fd9\u591a\u4e2a\u8bf7\u6c42\u90fd\u5728\u4e00\u4e2a\u4f1a\u8bdd\u4e2d\u3002 \u5728JavaWeb\u4e2d\uff0c\u5ba2\u6237\u5411\u67d0\u4e00\u670d\u52a1\u5668\u53d1\u51fa\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u5f00\u59cb\uff0c\u4f1a\u8bdd\u5c31\u5f00\u59cb\u4e86\uff0c\u76f4\u5230\u5ba2\u6237\u5173\u95ed\u4e86\u6d4f\u89c8\u5668\u4f1a\u8bdd\u7ed3\u675f\u3002 \u5728\u4e00\u4e2a\u4f1a\u8bdd\u7684\u591a\u4e2a\u8bf7\u6c42\u4e2d\u5171\u4eab\u6570\u636e\uff0c\u8fd9\u5c31\u662f\u4f1a\u8bdd\u8ddf\u8e2a\u6280\u672f\u3002\u4f8b\u5982\u5728\u4e00\u4e2a\u4f1a\u8bdd\u4e2d\u7684\u8bf7\u6c42\u5982\u4e0b\uff1a \uf06c \u8bf7\u6c42\u94f6\u884c\u4e3b\u9875\uff1b \u8bf7\u6c42\u767b\u5f55\uff08\u8bf7\u6c42\u53c2\u6570\u662f\u7528\u6237\u540d\u548c\u5bc6\u7801\uff09\uff1b \u8bf7\u6c42\u8f6c\u8d26\uff08\u8bf7\u6c42\u53c2\u6570\u4e0e\u8f6c\u8d26\u76f8\u5173\u7684\u6570\u636e\uff09\uff1b \u8bf7\u6c42\u4fe1\u8a89\u5361\u8fd8\u6b3e\uff08\u8bf7\u6c42\u53c2\u6570\u4e0e\u8fd8\u6b3e\u76f8\u5173\u7684\u6570\u636e\uff09\u3002 \u5728\u8fd9\u4e0a\u4f1a\u8bdd\u4e2d\u5f53\u524d\u7528\u6237\u4fe1\u606f\u5fc5\u987b\u5728\u8fd9\u4e2a\u4f1a\u8bdd\u4e2d\u5171\u4eab\u7684\uff0c\u56e0\u4e3a\u767b\u5f55\u7684\u662f\u5f20\u4e09\uff0c\u90a3\u4e48\u5728\u8f6c\u8d26\u548c\u8fd8\u6b3e\u65f6\u4e00\u5b9a\u662f\u76f8\u5bf9\u5f20\u4e09\u7684\u8f6c\u8d26\u548c\u8fd8\u6b3e\uff01\u8fd9\u5c31\u8bf4\u660e\u6211\u4eec\u5fc5\u987b\u5728\u4e00\u4e2a\u4f1a\u8bdd\u8fc7\u7a0b\u4e2d\u6709\u5171\u4eab\u6570\u636e\u7684\u80fd\u529b\u3002 2 \u4f1a\u8bdd\u8def\u5f84\u6280\u672f\u4f7f\u7528Cookie\u6216session\u5b8c\u6210 \u6211\u4eec\u77e5\u9053HTTP\u534f\u8bae\u662f\u65e0\u72b6\u6001\u534f\u8bae\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u662f\u72ec\u7acb\u7684\uff01\u65e0\u6cd5\u8bb0\u5f55\u524d\u4e00\u6b21\u8bf7\u6c42\u7684\u72b6\u6001\u3002\u4f46HTTP\u534f\u8bae\u4e2d\u53ef\u4ee5\u4f7f\u7528Cookie\u6765\u5b8c\u6210\u4f1a\u8bdd\u8ddf\u8e2a\uff01\u5728Web\u5f00\u53d1\u4e2d\uff0c\u4f7f\u7528session\u6765\u5b8c\u6210\u4f1a\u8bdd\u8ddf\u8e2a\uff0csession\u5e95\u5c42\u4f9d\u8d56Cookie\u6280\u672f\u3002 Cookie\u6982\u8ff0 \u4ec0\u4e48\u53ebCookie Cookie\u7ffb\u8bd1\u6210\u4e2d\u6587\u662f\u5c0f\u751c\u70b9\uff0c\u5c0f\u997c\u5e72\u7684\u610f\u601d\u3002\u5728HTTP\u4e2d\u5b83\u8868\u793a\u670d\u52a1\u5668\u9001\u7ed9\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u7684\u5c0f\u751c\u70b9\u3002\u5176\u5b9eCookie\u662fkey-value\u7ed3\u6784\uff0c\u7c7b\u4f3c\u4e8e\u4e00\u4e2apython\u4e2d\u7684\u5b57\u5178\u3002\u968f\u7740\u670d\u52a1\u5668\u7aef\u7684\u54cd\u5e94\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u3002\u7136\u540e\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u4f1a\u628aCookie\u4fdd\u5b58\u8d77\u6765\uff0c\u5f53\u4e0b\u4e00\u6b21\u518d\u8bbf\u95ee\u670d\u52a1\u5668\u65f6\u628aCookie\u518d\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u3002 Cookie\u662f\u7531\u670d\u52a1\u5668\u521b\u5efa\uff0c\u7136\u540e\u901a\u8fc7\u54cd\u5e94\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u7684\u4e00\u4e2a\u952e\u503c\u5bf9\u3002\u5ba2\u6237\u7aef\u4f1a\u4fdd\u5b58Cookie\uff0c\u5e76\u4f1a\u6807\u6ce8\u51faCookie\u7684\u6765\u6e90\uff08\u54ea\u4e2a\u670d\u52a1\u5668\u7684Cookie\uff09\u3002\u5f53\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\u65f6\u4f1a\u628a\u6240\u6709\u8fd9\u4e2a\u670d\u52a1\u5668Cookie\u5305\u542b\u5728\u8bf7\u6c42\u4e2d\u53d1\u9001\u7ed9\u670d\u52a1\u5668\uff0c\u8fd9\u6837\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u8bc6\u522b\u5ba2\u6237\u7aef\u4e86\uff01 Cookie\u89c4\u8303 Cookie\u5927\u5c0f\u4e0a\u9650\u4e3a4KB\uff1b \u4e00\u4e2a\u670d\u52a1\u5668\u6700\u591a\u5728\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u4e0a\u4fdd\u5b5820\u4e2aCookie\uff1b \u4e00\u4e2a\u6d4f\u89c8\u5668\u6700\u591a\u4fdd\u5b58300\u4e2aCookie\uff1b \u4e0a\u9762\u7684\u6570\u636e\u53ea\u662fHTTP\u7684Cookie\u89c4\u8303\uff0c\u4f46\u5728\u6d4f\u89c8\u5668\u5927\u6218\u7684\u4eca\u5929\uff0c\u4e00\u4e9b\u6d4f\u89c8\u5668\u4e3a\u4e86\u6253\u8d25\u5bf9\u624b\uff0c\u4e3a\u4e86\u5c55\u73b0\u81ea\u5df1\u7684\u80fd\u529b\u8d77\u89c1\uff0c\u53ef\u80fd\u5bf9Cookie\u89c4\u8303\u201c\u6269\u5c55\u201d\u4e86\u4e00\u4e9b\uff0c\u4f8b\u5982\u6bcf\u4e2aCookie\u7684\u5927\u5c0f\u4e3a8KB\uff0c\u6700\u591a\u53ef\u4fdd\u5b58500\u4e2aCookie\u7b49\uff01\u4f46\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u628a\u4f60\u786c\u76d8\u5360\u6ee1\u7684\u53ef\u80fd\uff01 \u6ce8\u610f\uff0c\u4e0d\u540c\u6d4f\u89c8\u5668\u4e4b\u95f4\u662f\u4e0d\u5171\u4eabCookie\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\u5728\u4f60\u4f7f\u7528IE\u8bbf\u95ee\u670d\u52a1\u5668\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u628aCookie\u53d1\u7ed9IE\uff0c\u7136\u540e\u7531IE\u4fdd\u5b58\u8d77\u6765\uff0c\u5f53\u4f60\u5728\u4f7f\u7528FireFox\u8bbf\u95ee\u670d\u52a1\u5668\u65f6\uff0c\u4e0d\u53ef\u80fd\u628aIE\u4fdd\u5b58\u7684Cookie\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u3002 Cookie\u4e0eHTTP\u5934 Cookie\u662f\u901a\u8fc7HTTP\u8bf7\u6c42\u548c\u54cd\u5e94\u5934\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u4f20\u9012\u7684\uff1a Cookie\uff1a\u8bf7\u6c42\u5934\uff0c\u5ba2\u6237\u7aef\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u7aef\uff1b \u683c\u5f0f\uff1aCookie: a=A; b=B; c=C\u3002\u5373\u591a\u4e2aCookie\u7528\u5206\u53f7\u79bb\u5f00\uff1b \uf06c Set-Cookie\uff1a\u54cd\u5e94\u5934\uff0c\u670d\u52a1\u5668\u7aef\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\uff1b \u4e00\u4e2aCookie\u5bf9\u8c61\u4e00\u4e2aSet-Cookie\uff1a Set-Cookie: a=A Set-Cookie: b=B Set-Cookie: c=C Cookie\u7684\u8986\u76d6 \u5982\u679c\u670d\u52a1\u5668\u7aef\u53d1\u9001\u91cd\u590d\u7684Cookie\u90a3\u4e48\u4f1a\u8986\u76d6\u539f\u6709\u7684Cookie\uff0c\u4f8b\u5982\u5ba2\u6237\u7aef\u7684\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u670d\u52a1\u5668\u7aef\u53d1\u9001\u7684Cookie\u662f\uff1aSet-Cookie: a=A\uff1b\u7b2c\u4e8c\u8bf7\u6c42\u670d\u52a1\u5668\u7aef\u53d1\u9001\u7684\u662f\uff1aSet-Cookie: a=AA\uff0c\u90a3\u4e48\u5ba2\u6237\u7aef\u53ea\u7559\u4e0b\u4e00\u4e2aCookie\uff0c\u5373\uff1aa=AA\u3002 django\u4e2d\u7684cookie\u8bed\u6cd5 \u8bbe\u7f6ecookie\uff1a rep = HttpResponse(...) \u6216 rep \uff1d render(request, ...) \u6216 rep \uff1d redirect() rep.set_cookie(key,value,...) rep.set_signed_cookie(key,value,salt='\u52a0\u5bc6\u76d0',...)\u3000 \u6e90\u7801\uff1a\u3000\u3000 ''' class HttpResponseBase: def set_cookie(self, key, \u952e \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 value='', \u503c \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 max_age=None, \u8d85\u957f\u65f6\u95f4 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000cookie\u9700\u8981\u5ef6\u7eed\u7684\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u5982\u679c\u53c2\u6570\u662f\\ None`` \uff0c\u8fd9\u4e2acookie\u4f1a\u5ef6\u7eed\u5230\u6d4f\u89c8\u5668\u5173\u95ed\u4e3a\u6b62\u3002 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 expires=None, \u8d85\u957f\u65f6\u95f4 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000expires\u9ed8\u8ba4None ,cookie\u5931\u6548\u7684\u5b9e\u9645\u65e5\u671f/\u65f6\u95f4\u3002 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 path='/', Cookie\u751f\u6548\u7684\u8def\u5f84\uff0c \u6d4f\u89c8\u5668\u53ea\u4f1a\u628acookie\u56de\u4f20\u7ed9\u5e26\u6709\u8be5\u8def\u5f84\u7684\u9875\u9762\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5c06 cookie\u4f20\u7ed9\u7ad9\u70b9\u4e2d\u7684\u5176\u4ed6\u7684\u5e94\u7528\u3002 / \u8868\u793a\u6839\u8def\u5f84\uff0c\u7279\u6b8a\u7684\uff1a\u6839\u8def\u5f84\u7684cookie\u53ef\u4ee5\u88ab\u4efb\u4f55url\u7684\u9875\u9762\u8bbf\u95ee\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 domain=None, Cookie\u751f\u6548\u7684\u57df\u540d \u4f60\u53ef\u7528\u8fd9\u4e2a\u53c2\u6570\u6765\u6784\u9020\u4e00\u4e2a\u8de8\u7ad9cookie\u3002 \u5982\uff0c domain=\".example.com\" \u6240\u6784\u9020\u7684cookie\u5bf9\u4e0b\u9762\u8fd9\u4e9b\u7ad9\u70b9\u90fd\u662f\u53ef\u8bfb\u7684\uff1a www.example.com \u3001 www2.example.com \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u548can.other.sub.domain.example.com \u3002 \u5982\u679c\u8be5\u53c2\u6570\u8bbe\u7f6e\u4e3a None \uff0ccookie\u53ea\u80fd\u7531\u8bbe\u7f6e\u5b83\u7684\u7ad9\u70b9\u8bfb\u53d6\u3002 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 secure=False, \u5982\u679c\u8bbe\u7f6e\u4e3a True \uff0c\u6d4f\u89c8\u5668\u5c06\u901a\u8fc7HTTPS\u6765\u56de\u4f20cookie\u3002 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 httponly=False \u53ea\u80fdhttp\u534f\u8bae\u4f20\u8f93\uff0c\u65e0\u6cd5\u88abJavaScript\u83b7\u53d6 \uff08\u4e0d\u662f\u7edd\u5bf9\uff0c\u5e95\u5c42\u6293\u5305\u53ef\u4ee5\u83b7\u53d6\u5230\u4e5f\u53ef\u4ee5\u88ab\u8986\u76d6\uff09 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000): pass ''' \u83b7\u53d6cookie\uff1a request.COOKIES\u3000\u3000 \u5220\u9664cookie\uff1a response.delete_cookie(\"cookie_key\",path=\"/\",domain=name) jquery\u64cd\u4f5ccookie \u3000 \u7ec3\u4e60 \u6848\u4f8b1:\u663e\u793a\u4e0a\u6b21\u8bbf\u95ee\u65f6\u95f4\u3002\u3000 \u6848\u4f8b2:\u663e\u793a\u4e0a\u6b21\u6d4f\u89c8\u8fc7\u7684\u5546\u54c1\u3002 session Session\u662f\u670d\u52a1\u5668\u7aef\u6280\u672f\uff0c\u5229\u7528\u8fd9\u4e2a\u6280\u672f\uff0c\u670d\u52a1\u5668\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5 \u4e3a\u6bcf\u4e00\u4e2a\u7528\u6237\u7684\u6d4f\u89c8\u5668\u521b\u5efa\u4e00\u4e2a\u5176\u72ec\u4eab\u7684session\u5bf9\u8c61\uff0c\u7531\u4e8e session\u4e3a\u7528\u6237\u6d4f\u89c8\u5668\u72ec\u4eab\uff0c\u6240\u4ee5\u7528\u6237\u5728\u8bbf\u95ee\u670d\u52a1\u5668\u7684web\u8d44\u6e90\u65f6 \uff0c\u53ef\u4ee5\u628a\u5404\u81ea\u7684\u6570\u636e\u653e\u5728\u5404\u81ea\u7684session\u4e2d\uff0c\u5f53\u7528\u6237\u518d\u53bb\u8bbf\u95ee\u8be5\u670d\u52a1\u5668\u4e2d\u7684\u5176\u5b83web\u8d44\u6e90\u65f6\uff0c\u5176\u5b83web\u8d44\u6e90\u518d\u4ece\u7528\u6237\u5404\u81ea\u7684session\u4e2d \u53d6\u51fa\u6570\u636e\u4e3a\u7528\u6237\u670d\u52a1\u3002 django\u4e2dsession\u8bed\u6cd5 1\u3001\u8bbe\u7f6eSessions\u503c request.session['session_name'] =\"admin\" 2\u3001\u83b7\u53d6Sessions\u503c session_name = request.session[\"session_name\"] 3\u3001\u5220\u9664Sessions\u503c del request.session[\"session_name\"] 4\u3001flush() \u5220\u9664\u5f53\u524d\u7684\u4f1a\u8bdd\u6570\u636e(seesion)\u5e76\u5220\u9664\u4f1a\u8bdd\u7684Cookie\u3002 \u8fd9\u7528\u4e8e\u786e\u4fdd\u524d\u9762\u7684\u4f1a\u8bdd\u6570\u636e\u4e0d\u53ef\u4ee5\u518d\u6b21\u88ab\u7528\u6237\u7684\u6d4f\u89c8\u5668\u8bbf\u95ee ------------------ 5\u3001get(key, default=None) # \u53c2\u65701 \u83b7\u53d6\u503c, \u53c2\u65702\u83b7\u53d6\u4e0d\u5230\u9ed8\u8ba4\u503c fav_color = request.session.get('fav_color', 'red') 6\u3001pop(key) fav_color = request.session.pop('fav_color') 7\u3001keys() 8\u3001items() 9\u3001setdefault() 10 \u7528\u6237session\u7684\u968f\u673a\u5b57\u7b26\u4e32 request.session.session_key # \u5c06\u6240\u6709Session\u5931\u6548\u65e5\u671f\u5c0f\u4e8e\u5f53\u524d\u65e5\u671f\u7684\u6570\u636e\u5220\u9664 request.session.clear_expired() # \u68c0\u67e5 \u7528\u6237session\u7684\u968f\u673a\u5b57\u7b26\u4e32 \u5728\u6570\u636e\u5e93\u4e2d\u662f\u5426 request.session.exists(\"session_key\") # \u5220\u9664\u5f53\u524d\u7528\u6237\u7684\u6240\u6709Session\u6570\u636e request.session.delete(\"session_key\") request.session.set_expiry(value) * \u5982\u679cvalue\u662f\u4e2a\u6574\u6570\uff0csession\u4f1a\u5728\u4e9b\u79d2\u6570\u540e\u5931\u6548\u3002 * \u5982\u679cvalue\u662f\u4e2adatatime\u6216timedelta\uff0csession\u5c31\u4f1a\u5728\u8fd9\u4e2a\u65f6\u95f4\u540e\u5931\u6548\u3002 * \u5982\u679cvalue\u662f0,\u7528\u6237\u5173\u95ed\u6d4f\u89c8\u5668session\u5c31\u4f1a\u5931\u6548\u3002 * \u5982\u679cvalue\u662fNone,session\u4f1a\u4f9d\u8d56\u5168\u5c40session\u5931\u6548\u7b56\u7565\u3002 session\u914d\u7f6e Django\u9ed8\u8ba4\u652f\u6301Session\uff0c\u5e76\u4e14\u9ed8\u8ba4\u662f\u5c06Session\u6570\u636e\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u5373\uff1adjango_session \u8868\u4e2d\u3002 a. \u914d\u7f6e settings.py SESSION_ENGINE = 'django.contrib.sessions.backends.db' # \u5f15\u64ce\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_NAME = \"sessionid\" # Session\u7684cookie\u4fdd\u5b58\u5728\u6d4f\u89c8\u5668\u4e0a\u65f6\u7684key\uff0c\u5373\uff1asessionid\uff1d\u968f\u673a\u5b57\u7b26\u4e32\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_PATH = \"/\" # Session\u7684cookie\u4fdd\u5b58\u7684\u8def\u5f84\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_DOMAIN = None # Session\u7684cookie\u4fdd\u5b58\u7684\u57df\u540d\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_SECURE = False # \u662f\u5426Https\u4f20\u8f93cookie\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_HTTPONLY = True # \u662f\u5426Session\u7684cookie\u53ea\u652f\u6301http\u4f20\u8f93\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_AGE = 1209600 # Session\u7684cookie\u5931\u6548\u65e5\u671f\uff082\u5468\uff09\uff08\u9ed8\u8ba4\uff09 SESSION_EXPIRE_AT_BROWSER_CLOSE = False # \u662f\u5426\u5173\u95ed\u6d4f\u89c8\u5668\u4f7f\u5f97Session\u8fc7\u671f\uff08\u9ed8\u8ba4\uff09 SESSION_SAVE_EVERY_REQUEST = False # \u662f\u5426\u6bcf\u6b21\u8bf7\u6c42\u90fd\u4fdd\u5b58Session\uff0c\u9ed8\u8ba4\u4fee\u6539\u4e4b\u540e\u624d\u4fdd\u5b58\uff08\u9ed8\u8ba4\uff09 \u7ec3\u4e60 1 \u767b\u5f55\u6848\u4f8b \u9700\u8981\u7684\u9875\u9762\uff1a #login.html\uff1a\u767b\u5f55\u9875\u9762\uff0c\u63d0\u4f9b\u767b\u5f55\u8868\u5355\uff1b #index1.html\uff1a\u4e3b\u9875\uff0c\u663e\u793a\u5f53\u524d\u7528\u6237\u540d\u79f0\uff0c\u5982\u679c\u6ca1\u6709\u767b\u5f55\uff0c\u663e\u793a\u60a8\u8fd8\u6ca1\u767b\u5f55\uff1b #index2.html\uff1a\u4e3b\u9875\uff0c\u663e\u793a\u5f53\u524d\u7528\u6237\u540d\u79f0\uff0c\u5982\u679c\u6ca1\u6709\u767b\u5f55\uff0c\u663e\u793a\u60a8\u8fd8\u6ca1\u767b\u5f55\uff1b \u601d\u8003\uff0c\u5982\u679c\u7b2c\u4e8c\u4e2a\u4eba\u518d\u6b21\u518d\u540c\u4e00\u4e2a\u6d4f\u89c8\u5668\u4e0a\u767b\u5f55\uff0cdjango-session\u8868\u4f1a\u600e\u6837\uff1f 2 \u9a8c\u8bc1\u7801\u6848\u4f8b \u9a8c\u8bc1\u7801\u53ef\u4ee5\u53bb\u8bc6\u522b\u53d1\u51fa\u8bf7\u6c42\u7684\u662f\u4eba\u8fd8\u662f\u7a0b\u5e8f\uff01\u5f53\u7136\uff0c\u5982\u679c\u806a\u660e\u7684\u7a0b\u5e8f\u53ef\u4ee5\u53bb\u5206\u6790\u9a8c\u8bc1\u7801\u56fe\u7247\uff01\u4f46\u5206\u6790\u56fe\u7247\u4e5f\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\uff0c\u56e0\u4e3a\u4e00\u822c\u9a8c\u8bc1\u7801\u56fe\u7247\u90fd\u4f1a\u5e26\u6709\u5e72\u6270\u7ebf\uff0c\u4eba\u90fd\u770b\u4e0d\u6e05\uff0c\u90a3\u4e48\u7a0b\u5e8f\u4e00\u5b9a\u5206\u6790\u4e0d\u51fa\u6765\u3002 13-1 jquery\u64cd\u4f5ccookie cookie \u5b9a\u4e49\uff1a\u8ba9\u7f51\u7ad9\u670d\u52a1\u5668\u628a\u5c11\u91cf\u6570\u636e\u50a8\u5b58\u5230\u5ba2\u6237\u7aef\u7684\u786c\u76d8\u6216\u5185\u5b58\uff0c\u4ece\u5ba2\u6237\u7aef\u7684\u786c\u76d8\u8bfb\u53d6\u6570\u636e\u7684\u4e00\u79cd\u6280\u672f\uff1b \u4e0b\u8f7d\u4e0e\u5f15\u5165:jquery.cookie.js\u57fa\u4e8ejquery\uff1b\u5148\u5f15\u5165jquery\uff0c\u518d\u5f15\u5165\uff1ajquery.cookie.js\uff1b\u4e0b\u8f7d\uff1ahttp://plugins.jquery.com/cookie/ <script type=\"text/javascript\" src=\"js/jquery.min.js\"></script> <script type=\"text/javascript\" src=\"js/jquery.cookie.js\"></script> 1.\u6dfb\u52a0\u4e00\u4e2a\"\u4f1a\u8bddcookie\" $.cookie('the_cookie', 'the_value'); \u8fd9\u91cc\u6ca1\u6709\u6307\u660e cookie\u6709\u6548\u65f6\u95f4\uff0c\u6240\u521b\u5efa\u7684cookie\u6709\u6548\u671f\u9ed8\u8ba4\u5230\u7528\u6237\u5173\u95ed\u6d4f\u89c8\u5668\u4e3a\u6b62\uff0c\u6240\u4ee5\u88ab\u79f0\u4e3a \u201c\u4f1a\u8bddcookie\uff08session cookie\uff09\u201d\u3002 2.\u521b\u5efa\u4e00\u4e2acookie\u5e76\u8bbe\u7f6e\u6709\u6548\u65f6\u95f4\u4e3a 7\u5929 $.cookie('the_cookie', 'the_value', { expires: 7 }); \u8fd9\u91cc\u6307\u660e\u4e86cookie\u6709\u6548\u65f6\u95f4\uff0c\u6240\u521b\u5efa\u7684cookie\u88ab\u79f0\u4e3a\u201c\u6301\u4e45 cookie \uff08persistent cookie\uff09\u201d\u3002\u6ce8\u610f\u5355\u4f4d\u662f\uff1a\u5929\uff1b 3.\u521b\u5efa\u4e00\u4e2acookie\u5e76\u8bbe\u7f6e cookie\u7684\u6709\u6548\u8def\u5f84 $.cookie('the_cookie', 'the_value', { expires: 7, path: '/' }); \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u8bbe\u7f6e cookie\u7684\u7f51\u9875\u624d\u80fd\u8bfb\u53d6\u8be5 cookie\u3002\u5982\u679c\u60f3\u8ba9\u4e00\u4e2a\u9875\u9762\u8bfb\u53d6\u53e6\u4e00\u4e2a\u9875\u9762\u8bbe\u7f6e\u7684cookie\uff0c\u5fc5\u987b\u8bbe\u7f6ecookie\u7684\u8def\u5f84\u3002cookie\u7684\u8def\u5f84\u7528\u4e8e\u8bbe\u7f6e\u80fd\u591f\u8bfb\u53d6 cookie\u7684\u9876\u7ea7\u76ee\u5f55\u3002\u5c06\u8fd9\u4e2a\u8def\u5f84\u8bbe\u7f6e\u4e3a\u7f51\u7ad9\u7684\u6839\u76ee\u5f55\uff0c\u53ef\u4ee5\u8ba9\u6240\u6709\u7f51\u9875\u90fd\u80fd\u4e92\u76f8\u8bfb\u53d6 cookie \uff08\u4e00\u822c\u4e0d\u8981\u8fd9\u6837\u8bbe\u7f6e\uff0c\u9632\u6b62\u51fa\u73b0\u51b2\u7a81\uff09\u3002 4.\u8bfb\u53d6cookie $.cookie('the_cookie'); 5.\u5220\u9664cookie $.cookie('the_cookie', null); //\u901a\u8fc7\u4f20\u9012null\u4f5c\u4e3acookie\u7684\u503c\u5373\u53ef 6.\u53ef\u9009\u53c2\u6570 $.cookie('the_cookie','the_value',{ expires:7, path:'/', domain:'jquery.com', secure:true })\u3000 \u53c2\u6570 expires\uff1a\uff08Number|Date\uff09\u6709\u6548\u671f\uff1b\u8bbe\u7f6e\u4e00\u4e2a\u6574\u6570\u65f6\uff0c\u5355\u4f4d\u662f\u5929\uff1b\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u65e5\u671f\u5bf9\u8c61\u4f5c\u4e3aCookie\u7684\u8fc7\u671f\u65e5\u671f\uff1b path\uff1a\uff08String\uff09\u521b\u5efa\u8be5Cookie\u7684\u9875\u9762\u8def\u5f84\uff1b domain\uff1a\uff08String\uff09\u521b\u5efa\u8be5Cookie\u7684\u9875\u9762\u57df\u540d\uff1b secure\uff1a\uff08Booblean\uff09\u5982\u679c\u8bbe\u4e3atrue\uff0c\u90a3\u4e48\u6b64Cookie\u7684\u4f20\u8f93\u4f1a\u8981\u6c42\u4e00\u4e2a\u5b89\u5168\u534f\u8bae\uff0c\u4f8b\u5982\uff1aHTTPS\uff1b 14 Django\u7684\u7528\u6237\u8ba4\u8bc1\u7ec4\u4ef6 \u7528\u6237\u8ba4\u8bc1 auth\u6a21\u5757 from django.contrib import auth django.contrib.auth\u4e2d\u63d0\u4f9b\u4e86\u8bb8\u591a\u65b9\u6cd5\uff0c\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u5176\u4e2d\u7684\u4e09\u4e2a\uff1a 1.1 \u3001authenticate() \u63d0\u4f9b\u4e86\u7528\u6237\u8ba4\u8bc1\uff0c\u5373\u9a8c\u8bc1\u7528\u6237\u540d\u4ee5\u53ca\u5bc6\u7801\u662f\u5426\u6b63\u786e,\u4e00\u822c\u9700\u8981username password\u4e24\u4e2a\u5173\u952e\u5b57\u53c2\u6570 \u5982\u679c\u8ba4\u8bc1\u4fe1\u606f\u6709\u6548\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a User \u5bf9\u8c61\u3002authenticate()\u4f1a\u5728User \u5bf9\u8c61\u4e0a\u8bbe\u7f6e\u4e00\u4e2a\u5c5e\u6027\u6807\u8bc6\u90a3\u79cd\u8ba4\u8bc1\u540e\u7aef\u8ba4\u8bc1\u4e86\u8be5\u7528\u6237\uff0c\u4e14\u8be5\u4fe1\u606f\u5728\u540e\u9762\u7684\u767b\u5f55\u8fc7\u7a0b\u4e2d\u662f\u9700\u8981\u7684\u3002\u5f53\u6211\u4eec\u8bd5\u56fe\u767b\u9646\u4e00\u4e2a\u4ece\u6570\u636e\u5e93\u4e2d\u76f4\u63a5\u53d6\u51fa\u6765\u4e0d\u7ecf\u8fc7authenticate()\u7684User\u5bf9\u8c61\u4f1a\u62a5\u9519\u7684\uff01\uff01 user = authenticate(username='someone',password='somepassword') 1.2 \u3001login(HttpRequest, user) \u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2aHttpRequest\u5bf9\u8c61\uff0c\u4ee5\u53ca\u4e00\u4e2a\u8ba4\u8bc1\u4e86\u7684User\u5bf9\u8c61 \u6b64\u51fd\u6570\u4f7f\u7528django\u7684session\u6846\u67b6\u7ed9\u67d0\u4e2a\u5df2\u8ba4\u8bc1\u7684\u7528\u6237\u9644\u52a0\u4e0asession id\u7b49\u4fe1\u606f\u3002 from django.contrib.auth import authenticate, login def my_view(request): username = request.POST['username'] password = request.POST['password'] user = authenticate(username=username, password=password) if user is not None: login(request, user) # Redirect to a success page. ... else: # Return an 'invalid login' error message. ... 1.3 \u3001logout(request) \u6ce8\u9500\u7528\u6237 from django.contrib.auth import logout def logout_view(request): logout(request) # Redirect to a success page. \u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2aHttpRequest\u5bf9\u8c61\uff0c\u65e0\u8fd4\u56de\u503c\u3002\u5f53\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u5f53\u524d\u8bf7\u6c42\u7684session\u4fe1\u606f\u4f1a\u5168\u90e8\u6e05\u9664\u3002\u8be5\u7528\u6237\u5373\u4f7f\u6ca1\u6709\u767b\u5f55\uff0c\u4f7f\u7528\u8be5\u51fd\u6570\u4e5f\u4e0d\u4f1a\u62a5\u9519\u3002 User\u5bf9\u8c61 User \u5bf9\u8c61\u5c5e\u6027\uff1ausername\uff0c password\uff08\u5fc5\u586b\u9879\uff09password\u7528\u54c8\u5e0c\u7b97\u6cd5\u4fdd\u5b58\u5230\u6570\u636e\u5e93 2.1 \u3001user\u5bf9\u8c61\u7684 is_authenticated() \u5982\u679c\u662f\u771f\u6b63\u7684 User \u5bf9\u8c61\uff0c\u8fd4\u56de\u503c\u6052\u4e3a True \u3002 \u7528\u4e8e\u68c0\u67e5\u7528\u6237\u662f\u5426\u5df2\u7ecf\u901a\u8fc7\u4e86\u8ba4\u8bc1\u3002 \u901a\u8fc7\u8ba4\u8bc1\u5e76\u4e0d\u610f\u5473\u7740\u7528\u6237\u62e5\u6709\u4efb\u4f55\u6743\u9650\uff0c\u751a\u81f3\u4e5f\u4e0d\u68c0\u67e5\u8be5\u7528\u6237\u662f\u5426\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\uff0c\u8fd9\u53ea\u662f\u8868\u660e\u7528\u6237\u6210\u529f\u7684\u901a\u8fc7\u4e86\u8ba4\u8bc1\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u5f88\u91cd\u8981, \u5728\u540e\u53f0\u7528request.user.is_authenticated()\u5224\u65ad\u7528\u6237\u662f\u5426\u5df2\u7ecf\u767b\u5f55\uff0c\u5982\u679ctrue\u5219\u53ef\u4ee5\u5411\u524d\u53f0\u5c55\u793arequest.user.name \u8981\u6c42\uff1a 1 \u7528\u6237\u767b\u9646\u540e\u624d\u80fd\u8bbf\u95ee\u67d0\u4e9b\u9875\u9762\uff0c 2 \u5982\u679c\u7528\u6237\u6ca1\u6709\u767b\u5f55\u5c31\u8bbf\u95ee\u8be5\u9875\u9762\u7684\u8bdd\u76f4\u63a5\u8df3\u5230\u767b\u5f55\u9875\u9762 3 \u7528\u6237\u5728\u8df3\u8f6c\u7684\u767b\u9646\u754c\u9762\u4e2d\u5b8c\u6210\u767b\u9646\u540e\uff0c\u81ea\u52a8\u8bbf\u95ee\u8df3\u8f6c\u5230\u4e4b\u524d\u8bbf\u95ee\u7684\u5730\u5740 \u65b9\u6cd51: def my_view(request): if not request.user.is_authenticated(): return redirect('%s?next=%s' % (settings.LOGIN_URL, request.path)) \u65b9\u6cd52: django\u5df2\u7ecf\u4e3a\u6211\u4eec\u8bbe\u8ba1\u597d\u4e86\u4e00\u4e2a\u7528\u4e8e\u6b64\u79cd\u60c5\u51b5\u7684\u88c5\u9970\u5668\uff1alogin_requierd() from django.contrib.auth.decorators import login_required @login_required def my_view(request): ... \u82e5\u7528\u6237\u6ca1\u6709\u767b\u5f55\uff0c\u5219\u4f1a\u8df3\u8f6c\u5230django\u9ed8\u8ba4\u7684 \u767b\u5f55URL '/accounts/login/ ' (\u8fd9\u4e2a\u503c\u53ef\u4ee5\u5728settings\u6587\u4ef6\u4e2d\u901a\u8fc7LOGIN_URL\u8fdb\u884c\u4fee\u6539)\u3002\u5e76\u4f20\u9012 \u5f53\u524d\u8bbf\u95eeurl\u7684\u7edd\u5bf9\u8def\u5f84 (\u767b\u9646\u6210\u529f\u540e\uff0c\u4f1a\u91cd\u5b9a\u5411\u5230\u8be5\u8def\u5f84)\u3002 2.2 \u3001\u521b\u5efa\u7528\u6237 \u4f7f\u7528 create_user \u8f85\u52a9\u51fd\u6570\u521b\u5efa\u7528\u6237: from django.contrib.auth.models import User user = User.objects.create_user\uff08username='',password='',email=''\uff09 \u5c0f\u7b14\u8bb0: \u547d\u4ee4\u884c\u521b\u5efa\u8d85\u7ea7\u7528\u6237 kanghuadeMacBook-Pro:authDemo kanghua$ python3.6 manage.py createsuperuser Username (leave blank to use 'kanghua'): alex Email address: aa@qq.com Password: Password (again): This password is too short. It must contain at least 8 characters. This password is too common. This password is entirely numeric. Bypass password validation and create user anyway? [y/N]: y Superuser created successfully. 2.3 \u3001check_password(passwd) \u7528\u6237\u9700\u8981\u4fee\u6539\u5bc6\u7801\u7684\u65f6\u5019 \u9996\u5148\u8981\u8ba9\u4ed6\u8f93\u5165\u539f\u6765\u7684\u5bc6\u7801 \uff0c\u5982\u679c\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u901a\u8fc7\u4e86\u5bc6\u7801\u68c0\u67e5\uff0c\u8fd4\u56de True 2.4 \u3001\u4fee\u6539\u5bc6\u7801 \u4f7f\u7528 set_password() \u6765\u4fee\u6539\u5bc6\u7801 user = User.objects.get(username='') user.set_password(password='') user.save\u3000 2.5 \u3001\u7b80\u5355\u793a\u4f8b \u6ce8\u518c\uff1a def sign_up(request): state = None if request.method == 'POST': password = request.POST.get('password', '') repeat_password = request.POST.get('repeat_password', '') email=request.POST.get('email', '') username = request.POST.get('username', '') if User.objects.filter(username=username): state = 'user_exist' else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect('/book/') content = { 'state': state, 'user': None, } return render(request, 'sign_up.html', content)\u3000\u3000 \u4fee\u6539\u5bc6\u7801\uff1a @login_required def set_password(request): user = request.user state = None if request.method == 'POST': old_password = request.POST.get('old_password', '') new_password = request.POST.get('new_password', '') repeat_password = request.POST.get('repeat_password', '') if user.check_password(old_password): if not new_password: state = 'empty' elif new_password != repeat_password: state = 'repeat_error' else: user.set_password(new_password) user.save() return redirect(\"/log_in/\") else: state = 'password_error' content = { 'user': user, 'state': state, } return render(request, 'set_password.html', content) 15 Django\u7ec4\u4ef6-\u4e2d\u95f4\u4ef6 \u4e2d\u95f4\u4ef6 \u4e2d\u95f4\u4ef6\u7684\u6982\u5ff5 \u4e2d\u95f4\u4ef6\u987e\u540d\u601d\u4e49\uff0c\u662f\u4ecb\u4e8erequest\u4e0eresponse\u5904\u7406\u4e4b\u95f4\u7684\u4e00\u9053\u5904\u7406\u8fc7\u7a0b\uff0c\u76f8\u5bf9\u6bd4\u8f83\u8f7b\u91cf\u7ea7\uff0c\u5e76\u4e14\u5728\u5168\u5c40\u4e0a\u6539\u53d8django\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u3002\u56e0\u4e3a\u6539\u53d8\u7684\u662f\u5168\u5c40\uff0c\u6240\u4ee5\u9700\u8981\u8c28\u614e\u5b9e\u7528\uff0c\u7528\u4e0d\u597d\u4f1a\u5f71\u54cd\u5230\u6027\u80fd\u3002 Django\u7684\u4e2d\u95f4\u4ef6\u7684\u5b9a\u4e49\uff1a Middleware is a framework of hooks into Django\u2019s request/response processing. <br>It\u2019s a light, low-level \u201cplugin\u201d system for globally altering Django\u2019s input or output. \u5982\u679c\u4f60\u60f3\u4fee\u6539\u8bf7\u6c42\uff0c\u4f8b\u5982\u88ab\u4f20\u9001\u5230view\u4e2d\u7684 HttpRequest \u5bf9\u8c61\u3002 \u6216\u8005\u4f60\u60f3\u4fee\u6539view\u8fd4\u56de\u7684 HttpResponse \u5bf9\u8c61\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u901a\u8fc7\u4e2d\u95f4\u4ef6\u6765\u5b9e\u73b0\u3002 \u53ef\u80fd\u4f60\u8fd8\u60f3\u5728view\u6267\u884c\u4e4b\u524d\u505a\u4e00\u4e9b\u64cd\u4f5c\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u53ef\u4ee5\u7528 middleware\u6765\u5b9e\u73b0\u3002 Django\u9ed8\u8ba4\u7684 Middleware \uff1a MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', ] \u6bcf\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u90fd\u6709\u5177\u4f53\u7684\u529f\u80fd\u3002 \u4e2d\u95f4\u4ef6\u5b9e\u73b0\u6d41\u7a0b \u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6 \u4e2d\u95f4\u4ef6\u4e2d\u4e00\u5171\u6709\u56db\u4e2a\u65b9\u6cd5\uff1a process_request process_view process_exception process_response process_request\uff0cprocess_response \u5f53\u7528\u6237\u53d1\u8d77\u8bf7\u6c42\u7684\u65f6\u5019\u4f1a\u4f9d\u6b21\u7ecf\u8fc7\u6240\u6709\u7684\u7684\u4e2d\u95f4\u4ef6\uff0c\u8fd9\u4e2a\u65f6\u5019\u7684\u8bf7\u6c42\u65f6process_request,\u6700\u540e\u5230\u8fbeviews\u7684\u51fd\u6570\u4e2d\uff0cviews\u51fd\u6570\u5904\u7406\u540e\uff0c\u5728\u4f9d\u6b21\u7a7f\u8fc7\u4e2d\u95f4\u4ef6\uff0c\u8fd9\u4e2a\u65f6\u5019\u662fprocess_response,\u6700\u540e\u8fd4\u56de\u7ed9\u8bf7\u6c42\u8005\u3002 \u4e0a\u8ff0\u622a\u56fe\u4e2d\u7684\u4e2d\u95f4\u4ef6\u90fd\u662fdjango\u4e2d\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2a\u4e2d\u95f4\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u5199\u4e00\u4e2a\u7c7b\uff0c\u4f46\u662f\u5fc5\u987b\u7ee7\u627fMiddlewareMixin \u9700\u8981\u5bfc\u5165 from django.utils.deprecation import MiddlewareMixin in views: def index(request): print(\"view\u51fd\u6570...\") return HttpResponse(\"OK\") in Mymiddlewares.py\uff1a from django.utils.deprecation import MiddlewareMixin from django.shortcuts import HttpResponse class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response class Md2(MiddlewareMixin): def process_request(self,request): print(\"Md2\u8bf7\u6c42\") #return HttpResponse(\"Md2\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md2\u8fd4\u56de\") return response \u7ed3\u679c\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u6ce8\u610f\uff1a \u5982\u679c\u5f53\u8bf7\u6c42\u5230\u8fbe\u8bf7\u6c422\u7684\u65f6\u5019\u76f4\u63a5\u4e0d\u7b26\u5408\u6761\u4ef6\u8fd4\u56de\uff0c\u5373return HttpResponse(\"Md2\u4e2d\u65ad\")\uff0c\u7a0b\u5e8f\u5c06\u628a\u8bf7\u6c42\u76f4\u63a5\u53d1\u7ed9\u4e2d\u95f4\u4ef62\u8fd4\u56de\uff0c\u7136\u540e\u4f9d\u6b21\u8fd4\u56de\u5230\u8bf7\u6c42\u8005\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a \u8fd4\u56deMd2\u4e2d\u65ad\u7684\u9875\u9762\uff0c\u540e\u53f0\u6253\u5370\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 Md2\u8fd4\u56de Md1\u8fd4\u56de \u6d41\u7a0b\u56fe\u5982\u4e0b\uff1a process_view process_view(self, request, callback, callback_args, callback_kwargs) Mymiddlewares.py \u4fee\u6539\u5982\u4e0b from django.utils.deprecation import MiddlewareMixin from django.shortcuts import HttpResponse class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") #return HttpResponse(\"Md1\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): print(\"Md1view\") class Md2(MiddlewareMixin): def process_request(self,request): print(\"Md2\u8bf7\u6c42\") return HttpResponse(\"Md2\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md2\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): print(\"Md2view\") \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 Md1view Md2view view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u4e0b\u56fe\u8fdb\u884c\u5206\u6790\u4e0a\u9762\u7684\u8fc7\u7a0b\uff1a \u5f53\u6700\u540e\u4e00\u4e2a\u4e2d\u95f4\u7684process_request\u5230\u8fbe\u8def\u7531\u5173\u7cfb\u6620\u5c04\u4e4b\u540e\uff0c\u8fd4\u56de\u5230\u4e2d\u95f4\u4ef61\u7684process_view\uff0c\u7136\u540e\u4f9d\u6b21\u5f80\u4e0b\uff0c\u5230\u8fbeviews\u51fd\u6570\uff0c\u6700\u540e\u901a\u8fc7process_response\u4f9d\u6b21\u8fd4\u56de\u5230\u8fbe\u7528\u6237\u3002 process_view\u53ef\u4ee5\u7528\u6765\u8c03\u7528\u89c6\u56fe\u51fd\u6570\uff1a class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") #return HttpResponse(\"Md1\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): # return HttpResponse(\"hello\") response=callback(request,*callback_args,**callback_kwargs) return response \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u6ce8\u610f\uff1aprocess_view\u5982\u679c\u6709\u8fd4\u56de\u503c\uff0c\u4f1a\u8d8a\u8fc7\u5176\u4ed6\u7684process_view\u4ee5\u53ca\u89c6\u56fe\u51fd\u6570\uff0c\u4f46\u662f\u6240\u6709\u7684process_response\u90fd\u8fd8\u4f1a\u6267\u884c\u3002 process_exception process_exception(self, request, exception) \u793a\u4f8b\u4fee\u6539\u5982\u4e0b\uff1a class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") #return HttpResponse(\"Md1\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): # return HttpResponse(\"hello\") # response=callback(request,*callback_args,**callback_kwargs) # return response print(\"md1 process_view...\") def process_exception(self): print(\"md1 process_exception...\") class Md2(MiddlewareMixin): def process_request(self,request): print(\"Md2\u8bf7\u6c42\") # return HttpResponse(\"Md2\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md2\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): print(\"md2 process_view...\") def process_exception(self): print(\"md1 process_exception...\") \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 md1 process_view... md2 process_view... view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u6d41\u7a0b\u56fe\u5982\u4e0b\uff1a \u5f53views\u51fa\u73b0\u9519\u8bef\u65f6\uff1a \u5c06md2\u7684process_exception\u4fee\u6539\u5982\u4e0b\uff1a def process_exception(self,request,exception): print(\"md2 process_exception...\") return HttpResponse(\"error\") \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 md1 process_view... md2 process_view... view\u51fd\u6570... md2 process_exception... Md2\u8fd4\u56de Md1\u8fd4\u56de \u5e94\u7528\u6848\u4f8b 1\u3001\u505aIP\u8bbf\u95ee\u9891\u7387\u9650\u5236 \u67d0\u4e9bIP\u8bbf\u95ee\u670d\u52a1\u5668\u7684\u9891\u7387\u8fc7\u9ad8\uff0c\u8fdb\u884c\u62e6\u622a\uff0c\u6bd4\u5982\u9650\u5236\u6bcf\u5206\u949f\u4e0d\u80fd\u8d85\u8fc720\u6b21\u3002 2\u3001URL\u8bbf\u95ee\u8fc7\u6ee4 \u5982\u679c\u7528\u6237\u8bbf\u95ee\u7684\u662flogin\u89c6\u56fe\uff08\u653e\u8fc7\uff09 \u5982\u679c\u8bbf\u95ee\u5176\u4ed6\u89c6\u56fe\uff0c\u9700\u8981\u68c0\u6d4b\u662f\u4e0d\u662f\u6709session\u8ba4\u8bc1\uff0c\u5df2\u7ecf\u6709\u4e86\u653e\u884c\uff0c\u6ca1\u6709\u8fd4\u56delogin\uff0c\u8fd9\u6837\u5c31\u7701\u5f97\u5728\u591a\u4e2a\u89c6\u56fe\u51fd\u6570\u4e0a\u5199\u88c5\u9970\u5668\u4e86\uff01 \u6e90\u7801\u8bd5\u8bfb \u4f5c\u4e3a\u5ef6\u4f38\u6269\u5c55\u5185\u5bb9\uff0c\u6709\u4f59\u529b\u7684\u540c\u5b66\u53ef\u4ee5\u5c1d\u8bd5\u7740\u8bfb\u4e00\u4e0b\u4ee5\u4e0b\u4e24\u4e2a\u81ea\u5e26\u7684\u4e2d\u95f4\u4ef6\uff1a 'django.contrib.sessions.middleware.SessionMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', Django-form\u8868\u5355 \u77e5\u8bc6\u9884\u89c8 \u6784\u5efa\u4e00\u4e2a\u8868\u5355 \u5728Django \u4e2d\u6784\u5efa\u4e00\u4e2a\u8868\u5355 Django Form \u7c7b\u8be6\u89e3 \u4f7f\u7528\u8868\u5355\u6a21\u677f \u6784\u5efa\u4e00\u4e2a\u8868\u5355 \u5047\u8bbe\u4f60\u60f3\u5728\u4f60\u7684\u7f51\u7ad9\u4e0a\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u8868\u5355\uff0c\u4ee5\u83b7\u5f97\u7528\u6237\u7684\u540d\u5b57\u3002\u4f60\u9700\u8981\u7c7b\u4f3c\u8fd9\u6837\u7684\u6a21\u677f\uff1a <form action=\"/your-name/\" method=\"post\"> <label for=\"your_name\">Your name: </label> <input id=\"your_name\" type=\"text\" name=\"your_name\"> <input type=\"submit\" value=\"OK\"> </form> \u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u8868\u5355\u3002\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u4e00\u4e2a\u8868\u5355\u53ef\u80fd\u5305\u542b\u51e0\u5341\u4e0a\u767e\u4e2a\u5b57\u6bb5\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u9700\u8981\u9884\u586b\u5145\uff0c\u800c\u4e14\u6211\u4eec\u9884\u6599\u5230\u7528\u6237\u5c06\u6765\u56de\u7f16\u8f91-\u63d0\u4ea4\u51e0\u6b21\u624d\u80fd\u5b8c\u6210\u64cd\u4f5c\u3002 \u6211\u4eec\u53ef\u80fd\u9700\u8981\u5728\u8868\u5355\u63d0\u4ea4\u4e4b\u524d\uff0c\u5728\u6d4f\u89c8\u5668\u7aef\u4f5c\u4e00\u4e9b\u9a8c\u8bc1\u3002\u6211\u4eec\u53ef\u80fd\u60f3\u4f7f\u7528\u975e\u5e38\u590d\u6742\u7684\u5b57\u6bb5\uff0c\u4ee5\u5141\u8bb8\u7528\u6237\u505a\u7c7b\u4f3c\u4ece\u65e5\u5386\u4e2d\u6311\u9009\u65e5\u671f\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u7b49\u7b49\u3002 \u8fd9\u4e2a\u65f6\u5019\uff0c\u8ba9Django \u6765\u4e3a\u6211\u4eec\u5b8c\u6210\u5927\u90e8\u5206\u5de5\u4f5c\u662f\u5f88\u5bb9\u6613\u7684\u3002 so,\u4e24\u4e2a\u7a81\u51fa\u4f18\u70b9\uff1a 1 form\u8868\u5355\u63d0\u4ea4\u65f6\uff0c\u6570\u636e\u51fa\u73b0\u9519\u8bef\uff0c\u8fd4\u56de\u7684\u9875\u9762\u4e2d\u4ecd\u53ef\u4ee5\u4fdd\u7559\u4e4b\u524d\u8f93\u5165\u7684\u6570\u636e\u3002 2 \u65b9\u4fbf\u5730\u9650\u5236\u5b57\u6bb5\u6761\u4ef6 \u5728Django \u4e2d\u6784\u5efa\u4e00\u4e2a\u8868\u5355 Form \u7c7b \u6211\u4eec\u5df2\u7ecf\u8ba1\u5212\u597d\u4e86\u6211\u4eec\u7684 HTML \u8868\u5355\u5e94\u8be5\u5448\u73b0\u7684\u6837\u5b50\u3002\u5728Django \u4e2d\uff0c\u6211\u4eec\u7684\u8d77\u59cb\u70b9\u662f\u8fd9\u91cc\uff1a #forms.py from django import forms class NameForm(forms.Form): your_name = forms.CharField(label='Your name', max_length=100) \u5b83\u5b9a\u4e49\u4e00\u4e2a Form \u7c7b\uff0c\u53ea\u5e26\u6709\u4e00\u4e2a\u5b57\u6bb5\uff08 your_name \uff09\u3002 \u5b57\u6bb5\u5141\u8bb8\u7684\u6700\u5927\u957f\u5ea6\u901a\u8fc7 max_length \u5b9a\u4e49\u3002\u5b83\u5b8c\u6210\u4e24\u4ef6\u4e8b\u60c5\u3002\u9996\u5148\uff0c\u5b83\u5728HTML \u7684 <input> \u4e0a\u653e\u7f6e\u4e00\u4e2a maxlength=\"100\" \uff08\u8fd9\u6837\u6d4f\u89c8\u5668\u5c06\u5728\u7b2c\u4e00\u65f6\u95f4\u963b\u6b62\u7528\u6237\u8f93\u5165\u591a\u4e8e\u8fd9\u4e2a\u6570\u76ee\u7684\u5b57\u7b26\uff09\u3002\u5b83\u8fd8\u610f\u5473\u7740\u5f53Django \u6536\u5230\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8868\u5355\u65f6\uff0c\u5b83\u5c06\u9a8c\u8bc1\u6570\u636e\u7684\u957f\u5ea6\u3002 Form \u7684\u5b9e\u4f8b\u5177\u6709\u4e00\u4e2a is_valid() \u65b9\u6cd5\uff0c\u5b83\u4e3a\u6240\u6709\u7684\u5b57\u6bb5\u8fd0\u884c\u9a8c\u8bc1\u7684\u7a0b\u5e8f\u3002\u5f53\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u65f6\uff0c\u5982\u679c\u6240\u6709\u7684\u5b57\u6bb5\u90fd\u5305\u542b\u5408\u6cd5\u7684\u6570\u636e\uff0c\u5b83\u5c06\uff1a \u8fd4\u56de True \u5c06\u8868\u5355\u7684\u6570\u636e\u653e\u5230 cleaned_data \u5c5e\u6027\u4e2d\u3002 \u5b8c\u6574\u7684\u8868\u5355\uff0c\u7b2c\u4e00\u6b21\u6e32\u67d3\u65f6\uff0c\u770b\u4e0a\u53bb\u5c06\u50cf\uff1a <label for=\"your_name\">Your name: </label> <input id=\"your_name\" type=\"text\" name=\"your_name\" maxlength=\"100\"> \u6ce8\u610f\u5b83\u4e0d\u5305\u542b <form> \u6807\u7b7e\u548c\u63d0\u4ea4\u6309\u94ae\u3002\u6211\u4eec\u5fc5\u987b\u81ea\u5df1\u5728\u6a21\u677f\u4e2d\u63d0\u4f9b\u5b83\u4eec\u3002 \u89c6\u56fe \u53d1\u9001\u7ed9Django \u7f51\u7ad9\u7684\u8868\u5355\u6570\u636e\u901a\u8fc7\u4e00\u4e2a\u89c6\u56fe\u5904\u7406\uff0c\u4e00\u822c\u548c\u53d1\u5e03\u8fd9\u4e2a\u8868\u5355\u7684\u662f\u540c\u4e00\u4e2a\u89c6\u56fe\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u91cd\u7528\u4e00\u4e9b\u76f8\u540c\u7684\u903b\u8f91\u3002 \u5f53\u5904\u7406\u8868\u5355\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5728\u89c6\u56fe\u4e2d\u5b9e\u4f8b\u5316\u5b83\uff1a #views.py from django.shortcuts import render from django.http import HttpResponseRedirect from .forms import NameForm def get_name(request): # if this is a POST request we need to process the form data if request.method == 'POST': # create a form instance and populate it with data from the request: form = NameForm(request.POST) # check whether it's valid: if form.is_valid(): # process the data in form.cleaned_data as required # ... # redirect to a new URL: return HttpResponseRedirect('/thanks/') # if a GET (or any other method) we'll create a blank form else: form = NameForm() return render(request, 'name.html', {'form': form}) \u5982\u679c\u8bbf\u95ee\u89c6\u56fe\u7684\u662f\u4e00\u4e2a GET \u8bf7\u6c42\uff0c\u5b83\u5c06\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u8868\u5355\u5b9e\u4f8b\u5e76\u5c06\u5b83\u653e\u7f6e\u5230\u8981\u6e32\u67d3\u7684\u6a21\u677f\u7684\u4e0a\u4e0b\u6587\u4e2d\u3002\u8fd9\u662f\u6211\u4eec\u5728\u7b2c\u4e00\u4e2a\u8bbf\u95ee\u8be5URL \u65f6\u9884\u671f\u53d1\u751f\u7684\u60c5\u51b5\u3002 \u5982\u679c\u8868\u5355\u7684\u63d0\u4ea4\u4f7f\u7528 POST \u8bf7\u6c42\uff0c\u90a3\u4e48\u89c6\u56fe\u5c06\u518d\u6b21\u521b\u5efa\u4e00\u4e2a\u8868\u5355\u5b9e\u4f8b\u5e76\u4f7f\u7528\u8bf7\u6c42\u4e2d\u7684\u6570\u636e\u586b\u5145\u5b83\uff1a form = NameForm(request.POST) \u3002\u8fd9\u53eb\u505a\u201d\u7ed1\u5b9a\u6570\u636e\u81f3\u8868\u5355\u201c\uff08\u5b83\u73b0\u5728\u662f\u4e00\u4e2a\u7ed1\u5b9a\u7684\u8868\u5355\uff09\u3002 \u6211\u4eec\u8c03\u7528\u8868\u5355\u7684 is_valid() \u65b9\u6cd5\uff1b\u5982\u679c\u5b83\u4e0d\u4e3a True \uff0c\u6211\u4eec\u5c06\u5e26\u7740\u8fd9\u4e2a\u8868\u5355\u8fd4\u56de\u5230\u6a21\u677f\u3002\u8fd9\u65f6\u8868\u5355\u4e0d\u518d\u4e3a\u7a7a\uff08\u672a\u7ed1\u5b9a\uff09\uff0c\u6240\u4ee5HTML \u8868\u5355\u5c06\u7528\u4e4b\u524d\u63d0\u4ea4\u7684\u6570\u636e\u586b\u5145\uff0c\u7136\u540e\u53ef\u4ee5\u6839\u636e\u8981\u6c42\u7f16\u8f91\u5e76\u6539\u6b63\u5b83\u3002 \u5982\u679c is_valid() \u4e3a True \uff0c\u6211\u4eec\u5c06\u80fd\u591f\u5728 cleaned_data \u5c5e\u6027\u4e2d\u627e\u5230\u6240\u6709\u5408\u6cd5\u7684\u8868\u5355\u6570\u636e\u3002\u5728\u53d1\u9001HTTP \u91cd\u5b9a\u5411\u7ed9\u6d4f\u89c8\u5668\u544a\u8bc9\u5b83\u4e0b\u4e00\u6b65\u7684\u53bb\u5411\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u4e2a\u6570\u636e\u6765\u66f4\u65b0\u6570\u636e\u5e93\u6216\u8005\u505a\u5176\u5b83\u5904\u7406\u3002 \u6a21\u677f \u6211\u4eec\u4e0d\u9700\u8981\u5728name.html \u6a21\u677f\u4e2d\u505a\u5f88\u591a\u5de5\u4f5c\u3002\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u662f\uff1a <form action=\"/your-name/\" method=\"post\"> {% csrf_token %} {{ form }} <input type=\"submit\" value=\"Submit\" /> </form> \u6839\u636e {{ form }} \uff0c\u6240\u6709\u7684\u8868\u5355\u5b57\u6bb5\u548c\u5b83\u4eec\u7684\u5c5e\u6027\u5c06\u901a\u8fc7Django \u7684\u6a21\u677f\u8bed\u8a00\u62c6\u5206\u6210HTML \u6807\u8bb0 \u3002 \u6ce8\uff1aDjango \u539f\u751f\u652f\u6301\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684 \u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u7684\u9632\u62a4 \u3002\u5f53\u63d0\u4ea4\u4e00\u4e2a\u542f\u7528CSRF \u9632\u62a4\u7684 POST \u8868\u5355\u65f6\uff0c\u4f60\u5fc5\u987b\u4f7f\u7528\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684 csrf_token \u6a21\u677f\u6807\u7b7e\u3002 \u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5de5\u4f5c\u7684\u7f51\u9875\u8868\u5355\uff0c\u5b83\u901a\u8fc7Django Form \u63cf\u8ff0\u3001\u901a\u8fc7\u89c6\u56fe\u5904\u7406\u5e76\u6e32\u67d3\u6210\u4e00\u4e2aHTML <form> \u3002 Django Form \u7c7b\u8be6\u89e3 \u7ed1\u5b9a\u7684\u548c\u672a\u7ed1\u5b9a\u7684\u8868\u5355\u5b9e\u4f8b \u7ed1\u5b9a\u7684\u548c\u672a\u7ed1\u5b9a\u7684\u8868\u5355 \u4e4b\u95f4\u7684\u533a\u522b\u975e\u5e38\u91cd\u8981\uff1a \u672a\u7ed1\u5b9a\u7684\u8868\u5355\u6ca1\u6709\u5173\u8054\u7684\u6570\u636e\u3002\u5f53\u6e32\u67d3\u7ed9\u7528\u6237\u65f6\uff0c\u5b83\u5c06\u4e3a\u7a7a\u6216\u5305\u542b\u9ed8\u8ba4\u7684\u503c\u3002 \u7ed1\u5b9a\u7684\u8868\u5355\u5177\u6709\u63d0\u4ea4\u7684\u6570\u636e\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u6765\u68c0\u9a8c\u6570\u636e\u662f\u5426\u5408\u6cd5\u3002\u5982\u679c\u6e32\u67d3\u4e00\u4e2a\u4e0d\u5408\u6cd5\u7684\u7ed1\u5b9a\u7684\u8868\u5355\uff0c\u5b83\u5c06\u5305\u542b\u5185\u8054\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u544a\u8bc9\u7528\u6237\u5982\u4f55\u7ea0\u6b63\u6570\u636e\u3002 \u5b57\u6bb5\u8be6\u89e3 \u8003\u8651\u4e00\u4e2a\u6bd4\u4e0a\u9762\u7684\u8ff7\u4f60\u793a\u4f8b\u66f4\u6709\u7528\u7684\u4e00\u4e2a\u8868\u5355\uff0c\u6211\u4eec\u5b8c\u6210\u4e00\u4e2a\u66f4\u52a0\u6709\u7528\u7684\u6ce8\u518c\u8868\u5355\uff1a #forms.py from django import forms class RegisterForm(forms.Form): username = forms.CharField(max_length=100, error_messages={\"min_length\":\"\u6700\u77ed\u4e3a5\u4e2a\u5b57\u7b26\",\"required\":\"\u8be5\u5b57\u6bb5\u4e0d\u80fd\u4e3a\u7a7a\"}, ) password = forms.CharField(max_length=100, widget=widgets.PasswordInput(attrs={\"placeholder\":\"password\"}) ) telephone=forms.IntegerField( error_messages={ \"invalid\":\"\u683c\u5f0f\u9519\u8bef\" } ) gender=forms.CharField( initial=2, widget=widgets.Select(choices=((1,'\u4e0a\u6d77'),(2,'\u5317\u4eac'),)) ) email = forms.EmailField() is_married = forms.BooleanField(required=False) Widgets \u6bcf\u4e2a\u8868\u5355\u5b57\u6bb5\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684 Widget \u7c7b\uff0c\u5b83\u5bf9\u5e94\u4e00\u4e2aHTML \u8868\u5355 Widget \uff0c\u4f8b\u5982 <input type=\"text\"> \u3002 \u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u5b57\u6bb5\u90fd\u5177\u6709\u4e00\u4e2a\u5408\u7406\u7684\u9ed8\u8ba4Widget\u3002\u4f8b\u5982\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c CharField \u5177\u6709\u4e00\u4e2a TextInput Widget \uff0c\u5b83\u5728HTML \u4e2d\u751f\u6210\u4e00\u4e2a <input type=\"text\"> \u3002 \u5b57\u6bb5\u7684\u6570\u636e \u4e0d\u7ba1\u8868\u5355\u63d0\u4ea4\u7684\u662f\u4ec0\u4e48\u6570\u636e\uff0c\u4e00\u65e6\u901a\u8fc7\u8c03\u7528 is_valid() \u6210\u529f\u9a8c\u8bc1\uff08 is_valid() \u8fd4\u56de True \uff09\uff0c\u9a8c\u8bc1\u540e\u7684\u8868\u5355\u6570\u636e\u5c06\u4f4d\u4e8e form.cleaned_data \u5b57\u5178\u4e2d\u3002\u8fd9\u4e9b\u6570\u636e\u5df2\u7ecf\u4e3a\u4f60\u8f6c\u6362\u597d\u4e3aPython \u7684\u7c7b\u578b\u3002 \u6ce8\uff1a\u6b64\u65f6\uff0c\u4f60\u4f9d\u7136\u53ef\u4ee5\u4ece request.POST \u4e2d\u76f4\u63a5\u8bbf\u95ee\u5230\u672a\u9a8c\u8bc1\u7684\u6570\u636e\uff0c\u4f46\u662f\u8bbf\u95ee\u9a8c\u8bc1\u540e\u7684\u6570\u636e\u66f4\u597d\u4e00\u4e9b\u3002 \u5728\u4e0a\u9762\u7684\u8054\u7cfb\u8868\u5355\u793a\u4f8b\u4e2d\uff0cis_married\u5c06\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\u3002\u7c7b\u4f3c\u5730\uff0c IntegerField \u548c FloatField \u5b57\u6bb5\u5206\u522b\u5c06\u503c\u8f6c\u6362\u4e3aPython \u7684 int \u548c float \u3002 \u56de\u5230\u9876\u90e8 \u4f7f\u7528\u8868\u5355\u6a21\u677f \u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u5c06\u8868\u5355\u5b9e\u4f8b\u653e\u8fdb\u6a21\u677f\u7684\u4e0a\u4e0b\u6587\u3002\u5982\u679c\u4f60\u7684\u8868\u5355\u5728 Contex t \u4e2d\u53eb\u505a form \uff0c\u90a3\u4e48 {{ form }} \u5c06\u6b63\u786e\u5730\u6e32\u67d3\u5b83\u7684 <label> \u548c <input> \u5143\u7d20\u3002 \u8868\u5355\u6e32\u67d3\u7684\u9009\u9879 \u5bf9\u4e8e <label>/<input> \u5bf9\uff0c\u8fd8\u6709\u51e0\u4e2a\u8f93\u51fa\u9009\u9879\uff1a {{ form.as_table }} \u4ee5\u8868\u683c\u7684\u5f62\u5f0f\u5c06\u5b83\u4eec\u6e32\u67d3\u5728 <tr> \u6807\u7b7e\u4e2d {{ form.as_p }} \u5c06\u5b83\u4eec\u6e32\u67d3\u5728 <p> \u6807\u7b7e\u4e2d {{ form.as_ul }} \u5c06\u5b83\u4eec\u6e32\u67d3\u5728 <li> \u6807\u7b7e\u4e2d \u6ce8\u610f\uff0c\u4f60\u5fc5\u987b\u81ea\u5df1\u63d0\u4f9b <table> \u6216 <ul> \u5143\u7d20\u3002 {{ form.as_p }} \u4f1a\u6e32\u67d3\u5982\u4e0b\uff1a <form action=\"\"> <p> <label for=\"id_username\">Username:</label> <input id=\"id_username\" maxlength=\"100\" name=\"username\" type=\"text\" required=\"\"> </p> <p> <label for=\"id_password\">Password:</label> <input id=\"id_password\" maxlength=\"100\" name=\"password\" placeholder=\"password\" type=\"password\" required=\"\"> </p> <p> <label for=\"id_telephone\">Telephone:</label> <input id=\"id_telephone\" name=\"telephone\" type=\"number\" required=\"\"> </p> <p> <label for=\"id_email\">Email:</label> <input id=\"id_email\" name=\"email\" type=\"email\" required=\"\"> </p> <p> <label for=\"id_is_married\">Is married:</label> <input id=\"id_is_married\" name=\"is_married\" type=\"checkbox\"> </p> <input type=\"submit\" value=\"\u6ce8\u518c\"> </form> \u624b\u5de5\u6e32\u67d3\u5b57\u6bb5 \u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u975e\u8981\u8ba9Django \u6765\u5206\u62c6\u8868\u5355\u7684\u5b57\u6bb5\uff1b\u5982\u679c\u6211\u4eec\u559c\u6b22\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u5de5\u6765\u505a\uff08\u4f8b\u5982\uff0c\u8fd9\u6837\u5141\u8bb8\u91cd\u65b0\u5bf9\u5b57\u6bb5\u6392\u5e8f\uff09\u3002\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u662f\u8868\u5355\u7684\u4e00\u4e2a\u5c5e\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528 {{ form.name_of_field }} \u8bbf\u95ee\uff0c\u5e76\u5c06\u5728Django \u6a21\u677f\u4e2d\u6b63\u786e\u5730\u6e32\u67d3\u3002\u4f8b\u5982\uff1a <div class=\"fieldWrapper\"> {{ form.Username.errors }} {{ form.Username.label_tag }} {{ form.Username }} </div> \u6e32\u67d3\u8868\u5355\u7684\u9519\u8bef\u4fe1\u606f 1\u3001 registerForm=RegisterForm(request.POST) print(type(registerForm.errors)) #<class 'django.forms.utils.ErrorDict'> print(type(registerForm.errors[\"username\"])) #<class 'django.forms.utils.ErrorList'> 2\u3001 \u4f7f\u7528 {{ form.name_of_field.errors }} \u663e\u793a\u8868\u5355\u9519\u8bef\u7684\u4e00\u4e2a\u6e05\u5355\uff0c\u5e76\u6e32\u67d3\u6210\u4e00\u4e2a ul \u3002\u770b\u4e0a\u53bb\u53ef\u80fd\u50cf\uff1a <ul class=\"errorlist\"> <li>Sender is required.</li> </ul> form\u7ec4\u4ef6\u7684\u94a9\u5b50 def foo(request): if request.method==\"POST\": regForm=RegForm(request.POST) if regForm.is_valid(): pass # \u53ef\u7528\u6570\u636e: regForm.cleaned_data, # \u5c06\u6570\u636e\u63d2\u5165\u6570\u636e\u5e93\u8868\u4e2d else: pass # \u53ef\u7528\u6570\u636e: regForm.errors # \u53ef\u4ee5\u5229\u7528\u6a21\u677f\u6e32\u67d3\u8bb2errors\u5d4c\u5957\u5230\u9875\u9762\u4e2d\u8fd4\u56de # \u4e5f\u53ef\u4ee5\u6253\u5305\u5230\u4e00\u4e2a\u5b57\u5178\u4e2d,\u7528\u4e8eajax\u8fd4\u56de else: regForm=RegForm() return render(request,\"register.html\",{\"regForm\":regForm}) ''' \u5b9e\u4f8b\u5316\u65f6: self.fields={ \"username\":\"\u5b57\u6bb5\u89c4\u5219\u5bf9\u8c61\", \"password\":\"\u5b57\u6bb5\u89c4\u5219\u5bf9\u8c61\", } is_valid\u65f6: self._errors = {} self.cleaned_data = {} #\u5c40\u90e8\u94a9\u5b50: for name, field in self.fields.items(): try: value = field.clean(value) self.cleaned_data[name] = value if hasattr(self, 'clean_%s' % name): value = getattr(self, 'clean_%s' % name)() self.cleaned_data[name] = value except ValidationError as e: self.add_error(name, e) # \u5168\u5c40\u94a9\u5b50: self.clean() # def self.clean():return self.cleaned_data return not self.errors # True\u6216\u8005False ''' form\u7ec4\u4ef6\u8865\u5145 1\u3001Django\u5185\u7f6e\u5b57\u6bb5\u5982\u4e0b\uff1a Field required=True, \u662f\u5426\u5141\u8bb8\u4e3a\u7a7a widget=None, HTML\u63d2\u4ef6 label=None, \u7528\u4e8e\u751f\u6210Label\u6807\u7b7e\u6216\u663e\u793a\u5185\u5bb9 initial=None, \u521d\u59cb\u503c help_text='', \u5e2e\u52a9\u4fe1\u606f(\u5728\u6807\u7b7e\u65c1\u8fb9\u663e\u793a) error_messages=None, \u9519\u8bef\u4fe1\u606f {'required': '\u4e0d\u80fd\u4e3a\u7a7a', 'invalid': '\u683c\u5f0f\u9519\u8bef'} show_hidden_initial=False, \u662f\u5426\u5728\u5f53\u524d\u63d2\u4ef6\u540e\u9762\u518d\u52a0\u4e00\u4e2a\u9690\u85cf\u7684\u4e14\u5177\u6709\u9ed8\u8ba4\u503c\u7684\u63d2\u4ef6\uff08\u53ef\u7528\u4e8e\u68c0\u9a8c\u4e24\u6b21\u8f93\u5165\u662f\u5426\u4e00\u76f4\uff09 validators=[], \u81ea\u5b9a\u4e49\u9a8c\u8bc1\u89c4\u5219 localize=False, \u662f\u5426\u652f\u6301\u672c\u5730\u5316 disabled=False, \u662f\u5426\u53ef\u4ee5\u7f16\u8f91 label_suffix=None Label\u5185\u5bb9\u540e\u7f00 CharField(Field) max_length=None, \u6700\u5927\u957f\u5ea6 min_length=None, \u6700\u5c0f\u957f\u5ea6 strip=True \u662f\u5426\u79fb\u9664\u7528\u6237\u8f93\u5165\u7a7a\u767d IntegerField(Field) max_value=None, \u6700\u5927\u503c min_value=None, \u6700\u5c0f\u503c FloatField(IntegerField) ... DecimalField(IntegerField) max_value=None, \u6700\u5927\u503c min_value=None, \u6700\u5c0f\u503c max_digits=None, \u603b\u957f\u5ea6 decimal_places=None, \u5c0f\u6570\u4f4d\u957f\u5ea6 BaseTemporalField(Field) input_formats=None \u65f6\u95f4\u683c\u5f0f\u5316 DateField(BaseTemporalField) \u683c\u5f0f\uff1a2015-09-01 TimeField(BaseTemporalField) \u683c\u5f0f\uff1a11:12 DateTimeField(BaseTemporalField)\u683c\u5f0f\uff1a2015-09-01 11:12 DurationField(Field) \u65f6\u95f4\u95f4\u9694\uff1a%d %H:%M:%S.%f ... RegexField(CharField) regex, \u81ea\u5b9a\u5236\u6b63\u5219\u8868\u8fbe\u5f0f max_length=None, \u6700\u5927\u957f\u5ea6 min_length=None, \u6700\u5c0f\u957f\u5ea6 error_message=None, \u5ffd\u7565\uff0c\u9519\u8bef\u4fe1\u606f\u4f7f\u7528 error_messages={'invalid': '...'} EmailField(CharField) ... FileField(Field) allow_empty_file=False \u662f\u5426\u5141\u8bb8\u7a7a\u6587\u4ef6 ImageField(FileField) ... \u6ce8\uff1a\u9700\u8981PIL\u6a21\u5757\uff0cpip3 install Pillow \u4ee5\u4e0a\u4e24\u4e2a\u5b57\u5178\u4f7f\u7528\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u4e24\u70b9\uff1a - form\u8868\u5355\u4e2d enctype=\"multipart/form-data\" - view\u51fd\u6570\u4e2d obj = MyForm(request.POST, request.FILES) URLField(Field) ... BooleanField(Field) ... NullBooleanField(BooleanField) ... ChoiceField(Field) ... choices=(), \u9009\u9879\uff0c\u5982\uff1achoices = ((0,'\u4e0a\u6d77'),(1,'\u5317\u4eac'),) required=True, \u662f\u5426\u5fc5\u586b widget=None, \u63d2\u4ef6\uff0c\u9ed8\u8ba4select\u63d2\u4ef6 label=None, Label\u5185\u5bb9 initial=None, \u521d\u59cb\u503c help_text='', \u5e2e\u52a9\u63d0\u793a ModelChoiceField(ChoiceField) ... django.forms.models.ModelChoiceField queryset, # \u67e5\u8be2\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e empty_label=\"---------\", # \u9ed8\u8ba4\u7a7a\u663e\u793a\u5185\u5bb9 to_field_name=None, # HTML\u4e2dvalue\u7684\u503c\u5bf9\u5e94\u7684\u5b57\u6bb5 limit_choices_to=None # ModelForm\u4e2d\u5bf9queryset\u4e8c\u6b21\u7b5b\u9009 ModelMultipleChoiceField(ModelChoiceField) ... django.forms.models.ModelMultipleChoiceField TypedChoiceField(ChoiceField) coerce = lambda val: val \u5bf9\u9009\u4e2d\u7684\u503c\u8fdb\u884c\u4e00\u6b21\u8f6c\u6362 empty_value= '' \u7a7a\u503c\u7684\u9ed8\u8ba4\u503c MultipleChoiceField(ChoiceField) ... TypedMultipleChoiceField(MultipleChoiceField) coerce = lambda val: val \u5bf9\u9009\u4e2d\u7684\u6bcf\u4e00\u4e2a\u503c\u8fdb\u884c\u4e00\u6b21\u8f6c\u6362 empty_value= '' \u7a7a\u503c\u7684\u9ed8\u8ba4\u503c ComboField(Field) fields=() \u4f7f\u7528\u591a\u4e2a\u9a8c\u8bc1\uff0c\u5982\u4e0b\uff1a\u5373\u9a8c\u8bc1\u6700\u5927\u957f\u5ea620\uff0c\u53c8\u9a8c\u8bc1\u90ae\u7bb1\u683c\u5f0f fields.ComboField(fields=[fields.CharField(max_length=20), fields.EmailField(),]) MultiValueField(Field) PS: \u62bd\u8c61\u7c7b\uff0c\u5b50\u7c7b\u4e2d\u53ef\u4ee5\u5b9e\u73b0\u805a\u5408\u591a\u4e2a\u5b57\u5178\u53bb\u5339\u914d\u4e00\u4e2a\u503c\uff0c\u8981\u914d\u5408MultiWidget\u4f7f\u7528 SplitDateTimeField(MultiValueField) input_date_formats=None, \u683c\u5f0f\u5217\u8868\uff1a['%Y--%m--%d', '%m%d/%Y', '%m/%d/%y'] input_time_formats=None \u683c\u5f0f\u5217\u8868\uff1a['%H:%M:%S', '%H:%M:%S.%f', '%H:%M'] FilePathField(ChoiceField) \u6587\u4ef6\u9009\u9879\uff0c\u76ee\u5f55\u4e0b\u6587\u4ef6\u663e\u793a\u5728\u9875\u9762\u4e2d path, \u6587\u4ef6\u5939\u8def\u5f84 match=None, \u6b63\u5219\u5339\u914d recursive=False, \u9012\u5f52\u4e0b\u9762\u7684\u6587\u4ef6\u5939 allow_files=True, \u5141\u8bb8\u6587\u4ef6 allow_folders=False, \u5141\u8bb8\u6587\u4ef6\u5939 required=True, widget=None, label=None, initial=None, help_text='' GenericIPAddressField protocol='both', both,ipv4,ipv6\u652f\u6301\u7684IP\u683c\u5f0f unpack_ipv4=False \u89e3\u6790ipv4\u5730\u5740\uff0c\u5982\u679c\u662f::ffff:192.0.2.1\u65f6\u5019\uff0c\u53ef\u89e3\u6790\u4e3a192.0.2.1\uff0c PS\uff1aprotocol\u5fc5\u987b\u4e3aboth\u624d\u80fd\u542f\u7528 SlugField(CharField) \u6570\u5b57\uff0c\u5b57\u6bcd\uff0c\u4e0b\u5212\u7ebf\uff0c\u51cf\u53f7\uff08\u8fde\u5b57\u7b26\uff09 ... UUIDField(CharField) uuid\u7c7b\u578b ... 2\u3001Django\u5185\u7f6e\u63d2\u4ef6\uff1a TextInput(Input) NumberInput(TextInput) EmailInput(TextInput) URLInput(TextInput) PasswordInput(TextInput) HiddenInput(TextInput) Textarea(Widget) DateInput(DateTimeBaseInput) DateTimeInput(DateTimeBaseInput) TimeInput(DateTimeBaseInput) CheckboxInput Select NullBooleanSelect SelectMultiple RadioSelect CheckboxSelectMultiple FileInput ClearableFileInput MultipleHiddenInput SplitDateTimeWidget SplitHiddenDateTimeWidget SelectDateWidget 3\u3001\u5e38\u7528\u9009\u62e9\u63d2\u4ef6\uff1a # \u5355radio\uff0c\u503c\u4e3a\u5b57\u7b26\u4e32 # user = fields.CharField( # initial=2, # widget=widgets.RadioSelect(choices=((1,'\u4e0a\u6d77'),(2,'\u5317\u4eac'),)) # ) # \u5355radio\uff0c\u503c\u4e3a\u5b57\u7b26\u4e32 # user = fields.ChoiceField( # choices=((1, '\u4e0a\u6d77'), (2, '\u5317\u4eac'),), # initial=2, # widget=widgets.RadioSelect # ) # \u5355select\uff0c\u503c\u4e3a\u5b57\u7b26\u4e32 # user = fields.CharField( # initial=2, # widget=widgets.Select(choices=((1,'\u4e0a\u6d77'),(2,'\u5317\u4eac'),)) # ) # \u5355select\uff0c\u503c\u4e3a\u5b57\u7b26\u4e32 # user = fields.ChoiceField( # choices=((1, '\u4e0a\u6d77'), (2, '\u5317\u4eac'),), # initial=2, # widget=widgets.Select # ) # \u591a\u9009select\uff0c\u503c\u4e3a\u5217\u8868 # user = fields.MultipleChoiceField( # choices=((1,'\u4e0a\u6d77'),(2,'\u5317\u4eac'),), # initial=[1,], # widget=widgets.SelectMultiple # ) # \u5355checkbox # user = fields.CharField( # widget=widgets.CheckboxInput() # ) # \u591a\u9009checkbox,\u503c\u4e3a\u5217\u8868 # user = fields.MultipleChoiceField( # initial=[2, ], # choices=((1, '\u4e0a\u6d77'), (2, '\u5317\u4eac'),), # widget=widgets.CheckboxSelectMultiple # ) \u5f15\u5165 Django_form\u8865\u5145 \u95ee\u98981: \u6ce8\u518c\u9875\u9762\u8f93\u5165\u4e3a\u7a7a\uff0c\u62a5\u9519\uff1akeyError\uff1a\u627e\u4e0d\u5230password def clean(self): print(\"---\",self.cleaned_data) # if self.cleaned_data[\"password\"]==self.cleaned_data[\"repeat_password\"]: # \u62a5\u9519\u539f\u56e0\uff1aself.cleaned_data\u662f\u5e72\u51c0\u6570\u636e\uff0c\u5982\u679c\u9875\u9762\u6ca1\u6709\u8f93\u5165\u5185\u5bb9\uff0c\u5219self.cleaned_data\u6ca1\u6709password\u3002 # \u6539\u5982\u4e0b\uff1a if self.cleaned_data.get(\"password\")==self.cleaned_data.get(\"repeat_password\"): return self.cleaned_data else: raise ValidationError(\"\u4e24\u6b21\u5bc6\u7801\u4e0d\u4e00\u81f4\") 2 \u4e3a\u4ec0\u4e48\u8981\u7528\u5168\u5c40clean(): \u6309\u5b50\u6bb5\u987a\u5e8f\u4e00\u4e00\u6821\u9a8c\uff0c\u5373\u6821\u9a8c\u5230username\u65f6\uff0c\u4f60\u65e0\u6cd5\u4f7f\u7528self.cleaned_data.get(\"password\")\u3002 \u800c\u5c40\u90e8\u94a9\u5b50\u4f7f\u7528\u5b8c\uff0c\u5230\u5168\u5c40\u65f6\uff0c\u5df2\u7ecf\u53ef\u4ee5\u4f7f\u7528\u6240\u6709\u7684self.cleaned_data 3 Django-\u7ec4\u4ef6\u62fe\u9057 \u77e5\u8bc6\u9884\u89c8 \u4e00 Django\u7684form\u7ec4\u4ef6 \u4e8c Django\u7684model form\u7ec4\u4ef6 \u4e09 Django\u7684\u7f13\u5b58\u673a\u5236 \u56db Django\u7684\u4fe1\u53f7 \u4e94 Django\u7684\u5e8f\u5217\u5316 \u4e00 Django\u7684form\u7ec4\u4ef6 forms\u7ec4\u4ef6 \u4e8c Django\u7684model form\u7ec4\u4ef6 \u8fd9\u662f\u4e00\u4e2a\u795e\u5947\u7684\u7ec4\u4ef6\uff0c\u901a\u8fc7\u540d\u5b57\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u529f\u80fd\u5c31\u662f\u628amodel\u548cform\u7ec4\u5408\u8d77\u6765\uff0c\u5148\u6765\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u770b\u4e00\u4e0b\u8fd9\u4e2a\u4e1c\u897f\u600e\u4e48\u7528\uff1a\u6bd4\u5982\u6211\u4eec\u7684\u6570\u636e\u5e93\u4e2d\u6709\u8fd9\u6837\u4e00\u5f20\u5b66\u751f\u8868\uff0c\u5b57\u6bb5\u6709\u59d3\u540d\uff0c\u5e74\u9f84\uff0c\u7231\u597d\uff0c\u90ae\u7bb1\uff0c\u7535\u8bdd\uff0c\u4f4f\u5740\uff0c\u6ce8\u518c\u65f6\u95f4\u7b49\u7b49\u4e00\u5927\u5806\u4fe1\u606f\uff0c\u73b0\u5728\u8ba9\u4f60\u5199\u4e00\u4e2a\u521b\u5efa\u5b66\u751f\u7684\u9875\u9762\uff0c\u4f60\u7684\u540e\u53f0\u5e94\u8be5\u600e\u4e48\u5199\u5462\uff1f\u9996\u5148\u6211\u4eec\u4f1a\u5728\u524d\u7aef\u4e00\u4e2a\u4e00\u4e2a\u7f57\u5217\u51fa\u8fd9\u4e9b\u5b57\u6bb5\uff0c\u8ba9\u7528\u6237\u53bb\u586b\u5199\uff0c\u7136\u540e\u6211\u4eec\u4ece\u540e\u5929\u4e00\u4e2a\u4e00\u4e2a\u63a5\u6536\u7528\u6237\u7684\u8f93\u5165\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b66\u751f\u5bf9\u8c61\uff0c\u4fdd\u5b58\u5176\u5b9e\uff0c\u91cd\u70b9\u4e0d\u662f\u8fd9\u4e9b\uff0c\u800c\u662f\u5408\u6cd5\u6027\u9a8c\u8bc1\uff0c\u6211\u4eec\u9700\u8981\u5728\u524d\u7aef\u5224\u65ad\u7528\u6237\u8f93\u5165\u662f\u5426\u5408\u6cd5\uff0c\u6bd4\u5982\u59d3\u540d\u5fc5\u987b\u5728\u591a\u5c11\u5b57\u7b26\u4ee5\u5185\uff0c\u7535\u8bdd\u53f7\u7801\u5fc5\u987b\u662f\u591a\u5c11\u4f4d\u7684\u6570\u5b57\uff0c\u90ae\u7bb1\u5fc5\u987b\u662f\u90ae\u7bb1\u7684\u683c\u5f0f\u8fd9\u4e9b\u5f53\u7136\u53ef\u4ee5\u4e00\u70b9\u4e00\u70b9\u624b\u52a8\u5199\u9650\u5236\uff0c\u5404\u79cd\u5224\u65ad\uff0c\u8fd9\u6beb\u65e0\u95ee\u9898\uff0c\u9664\u4e86\u9ebb\u70e6\u6211\u4eec\u73b0\u5728\u6709\u4e2a\u66f4\u4f18\u96c5\uff08\u4ee5\u540e\u5728Python\u76f8\u5173\u7684\u5185\u5bb9\u91cc\uff0c\u8981\u591a\u7528\u201c\u4f18\u96c5\u201d\u8fd9\u4e2a\u8bcd\uff0c\u5e76\u4e14\u517b\u6210\u4e60\u60ef\uff09\u7684\u65b9\u6cd5\uff1aModelForm\u5148\u6765\u7b80\u5355\u7684\uff0c\u751f\u786c\u7684\u628a\u5b83\u7528\u4e0a\uff0c\u518d\u6765\u52a0\u9a8c\u8bc1\u6761\u4ef6\u3002 \u521b\u5efamodelform #\u9996\u5148\u5bfc\u5165ModelForm from django.forms import ModelForm #\u5728\u89c6\u56fe\u51fd\u6570\u4e2d\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7c7b\uff0c\u6bd4\u5982\u5c31\u53ebStudentList\uff0c\u8fd9\u4e2a\u7c7b\u8981\u7ee7\u627fModelForm\uff0c\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u518d\u5199\u4e00\u4e2a\u539f\u7c7bMeta\uff08\u89c4\u5b9a\u5199\u6cd5\uff0c\u5e76\u6ce8\u610f\u9996\u5b57\u6bcd\u662f\u5927\u5199\u7684\uff09 #\u5728\u8fd9\u4e2a\u539f\u7c7b\u4e2d\uff0c\u6709\u4ee5\u4e0b\u5c5e\u6027\uff08\u90e8\u5206\uff09\uff1a class StudentList(ModelForm): class Meta: model =Student #\u5bf9\u5e94\u7684Model\u4e2d\u7684\u7c7b fields = \"__all__\" #\u5b57\u6bb5\uff0c\u5982\u679c\u662f__all__,\u5c31\u662f\u8868\u793a\u5217\u51fa\u6240\u6709\u7684\u5b57\u6bb5 exclude = None #\u6392\u9664\u7684\u5b57\u6bb5 #error_messages\u7528\u6cd5\uff1a error_messages = { 'name':{'required':\"\u7528\u6237\u540d\u4e0d\u80fd\u4e3a\u7a7a\",}, 'age':{'required':\"\u5e74\u9f84\u4e0d\u80fd\u4e3a\u7a7a\",}, } #widgets\u7528\u6cd5,\u6bd4\u5982\u628a\u8f93\u5165\u7528\u6237\u540d\u7684input\u6846\u7ed9\u4e3aTextarea #\u9996\u5148\u5f97\u5bfc\u5165\u6a21\u5757 from django.forms import widgets as wid #\u56e0\u4e3a\u91cd\u540d\uff0c\u6240\u4ee5\u8d77\u4e2a\u522b\u540d widgets = { \"name\":wid.Textarea(attrs={\"class\":\"c1\"}) #\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5c5e\u6027 } #labels\uff0c\u81ea\u5b9a\u4e49\u5728\u524d\u7aef\u663e\u793a\u7684\u540d\u5b57 labels= { \"name\":\"\u7528\u6237\u540d\" } \u7136\u540e\u5728url\u5bf9\u5e94\u7684\u89c6\u56fe\u51fd\u6570\u4e2d\u5b9e\u4f8b\u5316\u8fd9\u4e2a\u7c7b\uff0c\u628a\u8fd9\u4e2a\u5bf9\u8c61\u4f20\u7ed9\u524d\u7aef def student(request): if request.method == 'GET': student_list = StudentList() return render(request,'student.html',{'student_list':student_list}) \u7136\u540e\u524d\u7aef\u53ea\u9700\u8981 {{ student_list.as_p }} \u4e00\u4e0b\uff0c\u6240\u6709\u7684\u5b57\u6bb5\u5c31\u90fd\u51fa\u6765\u4e86\uff0c\u53ef\u4ee5\u7528as_p\u663e\u793a\u5168\u90e8\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7for\u5faa\u73af\u8fd9 student_list\uff0c\u62ff\u5230\u7684\u662f\u4e00\u4e2a\u4e2ainput\u6846\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u4e0d\u7528as_p\uff0c\u624b\u52a8\u628a\u8fd9\u4e9binput\u6846\u641e\u51fa\u6765\uff0cas_p\u62ff\u5230\u7684\u9875\u9762\u592a\u4e11\u3002 \u9996\u5148 for\u5faa\u73af\u8fd9\u4e2astudent_list\uff0c\u62ff\u5230student\u5bf9\u8c61\uff0c\u76f4\u63a5\u5728\u524d\u7aef\u6253\u5370\u8fd9\u4e2astudent\uff0c\u662f\u4e2ainput\u6846student.label \uff0c\u62ff\u5230\u6570\u636e\u5e93\u4e2d\u6bcf\u4e2a\u5b57\u6bb5\u7684verbose_name ,\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u8fd9\u4e2a\u5c5e\u6027\uff0c\u62ff\u5230\u7684\u9ed8\u8ba4\u5c31\u662f\u5b57\u6bb5\u540d\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7student.errors.0 \u62ff\u5230\u9519\u8bef\u4fe1\u606f\u6709\u4e86\u8fd9\u4e9b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7bootstrap\uff0c\u81ea\u5df1\u62fc\u51fa\u6765\u60f3\u8981\u7684\u6837\u5f0f\u4e86\uff0c\u6bd4\u5982\uff1a <body> <div class=\"container\"> <h1>student</h1> <form method=\"POST\" novalidate> {% csrf_token %} {# {{ student_list.as_p }}#} {% for student in student_list %} <div class=\"form-group col-md-6\"> {# \u62ff\u5230\u6570\u636e\u5b57\u6bb5\u7684verbose_name,\u6ca1\u6709\u5c31\u9ed8\u8ba4\u663e\u793a\u5b57\u6bb5\u540d #} <label class=\"col-md-3 control-label\">{{ student.label }}</label> <div class=\"col-md-9\" style=\"position: relative;\">{{ student }}</div> </div> {% endfor %} <div class=\"col-md-2 col-md-offset-10\"> <input type=\"submit\" value=\"\u63d0\u4ea4\" class=\"btn-primary\"> </div> </form> </div> </body> \u73b0\u5728\u8fd8\u7f3a\u4e00\u4e2ainput\u6846\u7684form-contral\u6837\u5f0f\uff0c\u53ef\u4ee5\u8003\u8651\u5728\u540e\u53f0\u7684widget\u91cc\u9762\u6dfb\u52a0 \u6bd4\u5982\u8fd9\u6837\uff1a from django.forms import widgets as wid #\u56e0\u4e3a\u91cd\u540d\uff0c\u6240\u4ee5\u8d77\u4e2a\u522b\u540d widgets = { \"name\":wid.TextInput(attrs={'class':'form-control'}), \"age\":wid.NumberInput(attrs={'class':'form-control'}), \"email\":wid.EmailInput(attrs={'class':'form-control'}) } \u5f53\u7136\u4e5f\u53ef\u4ee5\u5728js\u4e2d\uff0c\u627e\u5230\u6240\u6709\u7684input\u6846\uff0c\u52a0\u4e0a\u8fd9\u4e2a\u6837\u5f0f\uff0c\u4e5f\u884c\u3002 \u6dfb\u52a0\u7eaa\u5f55 \u4fdd\u5b58\u6570\u636e\u7684\u65f6\u5019\uff0c\u4e0d\u7528\u6328\u4e2a\u53d6\u6570\u636e\u4e86\uff0c\u53ea\u9700\u8981save\u4e00\u4e0b def student(request): if request.method == 'GET': student_list = StudentList() return render(request,'student.html',{'student_list':student_list}) else: student_list = StudentList(request.POST) if student_list.is_valid(): student_list.save() return redirect(request,'student_list.html',{'student_list':student_list}) \u7f16\u8f91\u6570\u636e \u5982\u679c\u4e0d\u7528ModelForm\uff0c\u7f16\u8f91\u7684\u65f6\u5019\u5f97\u663e\u793a\u4e4b\u524d\u7684\u6570\u636e\u5427\uff0c\u8fd8\u5f97\u6328\u4e2a\u53d6\u4e00\u904d\u503c\uff0c\u5982\u679cModelForm\uff0c\u53ea\u9700\u8981\u52a0\u4e00\u4e2ainstance=obj\uff08obj\u662f\u8981\u4fee\u6539\u7684\u6570\u636e\u5e93\u7684\u4e00\u6761\u6570\u636e\u7684\u5bf9\u8c61\uff09\u5c31\u53ef\u4ee5\u5f97\u5230\u540c\u6837\u7684\u6548\u679c \u4fdd\u5b58\u7684\u65f6\u5019\u8981\u6ce8\u610f\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u6709\u8fd9\u4e2a\u5bf9\u8c61\uff08instance=obj\uff09\uff0c\u5426\u5219\u4e0d\u77e5\u9053\u66f4\u65b0\u54ea\u4e00\u4e2a\u6570\u636e \u4ee3\u7801\u793a\u4f8b\uff1a from django.shortcuts import render,HttpResponse,redirect from django.forms import ModelForm # Create your views here. from app01 import models def test(request): # model_form = models.Student model_form = models.Student.objects.all() return render(request,'test.html',{'model_form':model_form}) class StudentList(ModelForm): class Meta: model = models.Student #\u5bf9\u5e94\u7684Model\u4e2d\u7684\u7c7b fields = \"__all__\" #\u5b57\u6bb5\uff0c\u5982\u679c\u662f__all__,\u5c31\u662f\u8868\u793a\u5217\u51fa\u6240\u6709\u7684\u5b57\u6bb5 exclude = None #\u6392\u9664\u7684\u5b57\u6bb5 labels = None #\u63d0\u793a\u4fe1\u606f help_texts = None #\u5e2e\u52a9\u63d0\u793a\u4fe1\u606f widgets = None #\u81ea\u5b9a\u4e49\u63d2\u4ef6 error_messages = None #\u81ea\u5b9a\u4e49\u9519\u8bef\u4fe1\u606f #error_messages\u7528\u6cd5\uff1a error_messages = { 'name':{'required':\"\u7528\u6237\u540d\u4e0d\u80fd\u4e3a\u7a7a\",}, 'age':{'required':\"\u5e74\u9f84\u4e0d\u80fd\u4e3a\u7a7a\",}, } #widgets\u7528\u6cd5,\u6bd4\u5982\u628a\u8f93\u5165\u7528\u6237\u540d\u7684input\u6846\u7ed9\u4e3aTextarea #\u9996\u5148\u5f97\u5bfc\u5165\u6a21\u5757 from django.forms import widgets as wid #\u56e0\u4e3a\u91cd\u540d\uff0c\u6240\u4ee5\u8d77\u4e2a\u522b\u540d widgets = { \"name\":wid.Textarea } #labels\uff0c\u81ea\u5b9a\u4e49\u5728\u524d\u7aef\u663e\u793a\u7684\u540d\u5b57 labels= { \"name\":\"\u7528\u6237\u540d\" } def student(request): if request.method == 'GET': student_list = StudentList() return render(request,'student.html',{'student_list':student_list}) else: student_list = StudentList(request.POST) if student_list.is_valid(): student_list.save() return render(request,'student.html',{'student_list':student_list}) def student_edit(request,pk): obj = models.Student.objects.filter(pk=pk).first() if not obj: return redirect('test') if request.method == \"GET\": student_list = StudentList(instance=obj) return render(request,'student_edit.html',{'student_list':student_list}) else: student_list = StudentList(request.POST,instance=obj) if student_list.is_valid(): student_list.save() return render(request,'student_edit.html',{'student_list':student_list}) \u603b\u7ed3\uff1a \u4ece\u4e0a\u8fb9\u53ef\u4ee5\u770b\u5230ModelForm\u7528\u8d77\u6765\u662f\u975e\u5e38\u65b9\u4fbf\u7684\uff0c\u6bd4\u5982\u589e\u52a0\u4fee\u6539\u4e4b\u7c7b\u7684\u64cd\u4f5c\u3002\u4f46\u662f\u4e5f\u5e26\u6765\u989d\u5916\u4e0d\u597d\u7684\u5730\u65b9\uff0cmodel\u548cform\u4e4b\u95f4\u8026\u5408\u4e86\u3002\u5982\u679c\u4e0d\u8026\u5408\u7684\u8bdd\uff0cmf.save()\u65b9\u6cd5\u4e5f\u65e0\u6cd5\u76f4\u63a5\u63d0\u4ea4\u4fdd\u5b58\u3002 \u4f46\u662f\u8026\u5408\u7684\u8bdd\u4f7f\u7528\u573a\u666f\u901a\u5e38\u5c40\u9650\u7528\u4e8e\u5c0f\u7a0b\u5e8f\uff0c\u5199\u5927\u7a0b\u5e8f\u5c31\u6700\u597d\u4e0d\u7528\u4e86\u3002 \u4e09 Django\u7684\u7f13\u5b58\u673a\u5236 1.1 \u7f13\u5b58\u4ecb\u7ecd 1.\u7f13\u5b58\u7684\u7b80\u4ecb \u5728\u52a8\u6001\u7f51\u7ad9\u4e2d,\u7528\u6237\u6240\u6709\u7684\u8bf7\u6c42,\u670d\u52a1\u5668\u90fd\u4f1a\u53bb\u6570\u636e\u5e93\u4e2d\u8fdb\u884c\u76f8\u5e94\u7684\u589e,\u5220,\u67e5,\u6539,\u6e32\u67d3\u6a21\u677f,\u6267\u884c\u4e1a\u52a1\u903b\u8f91,\u6700\u540e\u751f\u6210\u7528\u6237\u770b\u5230\u7684\u9875\u9762. \u5f53\u4e00\u4e2a\u7f51\u7ad9\u7684\u7528\u6237\u8bbf\u95ee\u91cf\u5f88\u5927\u7684\u65f6\u5019,\u6bcf\u4e00\u6b21\u7684\u7684\u540e\u53f0\u64cd\u4f5c,\u90fd\u4f1a\u6d88\u8017\u5f88\u591a\u7684\u670d\u52a1\u7aef\u8d44\u6e90,\u6240\u4ee5\u5fc5\u987b\u4f7f\u7528\u7f13\u5b58\u6765\u51cf\u8f7b\u540e\u7aef\u670d\u52a1\u5668\u7684\u538b\u529b. \u7f13\u5b58\u662f\u5c06\u4e00\u4e9b\u5e38\u7528\u7684\u6570\u636e\u4fdd\u5b58\u5185\u5b58\u6216\u8005memcache\u4e2d,\u5728\u4e00\u5b9a\u7684\u65f6\u95f4\u5185\u6709\u4eba\u6765\u8bbf\u95ee\u8fd9\u4e9b\u6570\u636e\u65f6,\u5219\u4e0d\u518d\u53bb\u6267\u884c\u6570\u636e\u5e93\u53ca\u6e32\u67d3\u7b49\u64cd\u4f5c,\u800c\u662f\u76f4\u63a5\u4ece\u5185\u5b58\u6216memcache\u7684\u7f13\u5b58\u4e2d\u53bb\u53d6\u5f97\u6570\u636e,\u7136\u540e\u8fd4\u56de\u7ed9\u7528\u6237. 2.Django\u63d0\u4f9b\u4e866\u79cd\u7f13\u5b58\u65b9\u5f0f \u5f00\u53d1\u8c03\u8bd5\u7f13\u5b58 \u5185\u5b58\u7f13\u5b58 \u6587\u4ef6\u7f13\u5b58 \u6570\u636e\u5e93\u7f13\u5b58 Memcache\u7f13\u5b58(\u4f7f\u7528python-memcached\u6a21\u5757) Memcache\u7f13\u5b58(\u4f7f\u7528pylibmc\u6a21\u5757) \u7ecf\u5e38\u4f7f\u7528\u7684\u6709\u6587\u4ef6\u7f13\u5b58\u548cMencache\u7f13\u5b58 1.2 \u5404\u79cd\u7f13\u5b58\u914d\u7f6e 1.2.1 \u5f00\u53d1\u8c03\u8bd5(\u6b64\u6a21\u5f0f\u4e3a\u5f00\u53d1\u8c03\u8bd5\u4f7f\u7528,\u5b9e\u9645\u4e0a\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c) settings.py\u6587\u4ef6\u914d\u7f6e CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.dummy.DummyCache', # \u7f13\u5b58\u540e\u53f0\u4f7f\u7528\u7684\u5f15\u64ce 'TIMEOUT': 300, # \u7f13\u5b58\u8d85\u65f6\u65f6\u95f4\uff08\u9ed8\u8ba4300\u79d2\uff0cNone\u8868\u793a\u6c38\u4e0d\u8fc7\u671f\uff0c0\u8868\u793a\u7acb\u5373\u8fc7\u671f\uff09 'OPTIONS':{ 'MAX_ENTRIES': 300, # \u6700\u5927\u7f13\u5b58\u8bb0\u5f55\u7684\u6570\u91cf\uff08\u9ed8\u8ba4300\uff09 'CULL_FREQUENCY': 3, # \u7f13\u5b58\u5230\u8fbe\u6700\u5927\u4e2a\u6570\u4e4b\u540e\uff0c\u5254\u9664\u7f13\u5b58\u4e2a\u6570\u7684\u6bd4\u4f8b\uff0c\u5373\uff1a1/CULL_FREQUENCY\uff08\u9ed8\u8ba43\uff09 }, } } 1.2.2 \u5185\u5b58\u7f13\u5b58(\u5c06\u7f13\u5b58\u5185\u5bb9\u4fdd\u5b58\u81f3\u5185\u5b58\u533a\u57df\u4e2d) settings.py\u6587\u4ef6\u914d\u7f6e CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.locmem.LocMemCache', # \u6307\u5b9a\u7f13\u5b58\u4f7f\u7528\u7684\u5f15\u64ce 'LOCATION': 'unique-snowflake', # \u5199\u5728\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\u7684\u552f\u4e00\u503c 'TIMEOUT':300, # \u7f13\u5b58\u8d85\u65f6\u65f6\u95f4(\u9ed8\u8ba4\u4e3a300\u79d2,None\u8868\u793a\u6c38\u4e0d\u8fc7\u671f) 'OPTIONS':{ 'MAX_ENTRIES': 300, # \u6700\u5927\u7f13\u5b58\u8bb0\u5f55\u7684\u6570\u91cf\uff08\u9ed8\u8ba4300\uff09 'CULL_FREQUENCY': 3, # \u7f13\u5b58\u5230\u8fbe\u6700\u5927\u4e2a\u6570\u4e4b\u540e\uff0c\u5254\u9664\u7f13\u5b58\u4e2a\u6570\u7684\u6bd4\u4f8b\uff0c\u5373\uff1a1/CULL_FREQUENCY\uff08\u9ed8\u8ba43\uff09 } } } 1.2.3 \u6587\u4ef6\u7f13\u5b58(\u628a\u7f13\u5b58\u6570\u636e\u5b58\u50a8\u5728\u6587\u4ef6\u4e2d) settings.py\u6587\u4ef6\u914d\u7f6e CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache', #\u6307\u5b9a\u7f13\u5b58\u4f7f\u7528\u7684\u5f15\u64ce 'LOCATION': '/var/tmp/django_cache', #\u6307\u5b9a\u7f13\u5b58\u7684\u8def\u5f84 'TIMEOUT':300, #\u7f13\u5b58\u8d85\u65f6\u65f6\u95f4(\u9ed8\u8ba4\u4e3a300\u79d2,None\u8868\u793a\u6c38\u4e0d\u8fc7\u671f) 'OPTIONS':{ 'MAX_ENTRIES': 300, # \u6700\u5927\u7f13\u5b58\u8bb0\u5f55\u7684\u6570\u91cf\uff08\u9ed8\u8ba4300\uff09 'CULL_FREQUENCY': 3, # \u7f13\u5b58\u5230\u8fbe\u6700\u5927\u4e2a\u6570\u4e4b\u540e\uff0c\u5254\u9664\u7f13\u5b58\u4e2a\u6570\u7684\u6bd4\u4f8b\uff0c\u5373\uff1a1/CULL_FREQUENCY\uff08\u9ed8\u8ba43\uff09 } } } 1.2.4 \u6570\u636e\u5e93\u7f13\u5b58(\u628a\u7f13\u5b58\u6570\u636e\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d) settings.py\u6587\u4ef6\u914d\u7f6e CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.db.DatabaseCache', # \u6307\u5b9a\u7f13\u5b58\u4f7f\u7528\u7684\u5f15\u64ce 'LOCATION': 'cache_table', # \u6570\u636e\u5e93\u8868 'OPTIONS':{ 'MAX_ENTRIES': 300, # \u6700\u5927\u7f13\u5b58\u8bb0\u5f55\u7684\u6570\u91cf\uff08\u9ed8\u8ba4300\uff09 'CULL_FREQUENCY': 3, # \u7f13\u5b58\u5230\u8fbe\u6700\u5927\u4e2a\u6570\u4e4b\u540e\uff0c\u5254\u9664\u7f13\u5b58\u4e2a\u6570\u7684\u6bd4\u4f8b\uff0c\u5373\uff1a1/CULL_FREQUENCY\uff08\u9ed8\u8ba43\uff09 } } } \u6ce8\u610f,\u521b\u5efa\u7f13\u5b58\u7684\u6570\u636e\u5e93\u8868\u4f7f\u7528\u7684\u8bed\u53e5: python manage.py createcachetable 1.2.5 Memcache\u7f13\u5b58(\u4f7f\u7528python-memcached\u6a21\u5757\u8fde\u63a5memcache) Memcached\u662fDjango\u539f\u751f\u652f\u6301\u7684\u7f13\u5b58\u7cfb\u7edf.\u8981\u4f7f\u7528Memcached,\u9700\u8981\u4e0b\u8f7dMemcached\u7684\u652f\u6301\u5e93python-memcached\u6216pylibmc. settings.py\u6587\u4ef6\u914d\u7f6e CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache', # \u6307\u5b9a\u7f13\u5b58\u4f7f\u7528\u7684\u5f15\u64ce 'LOCATION': '192.168.10.100:11211', # \u6307\u5b9aMemcache\u7f13\u5b58\u670d\u52a1\u5668\u7684IP\u5730\u5740\u548c\u7aef\u53e3 'OPTIONS':{ 'MAX_ENTRIES': 300, # \u6700\u5927\u7f13\u5b58\u8bb0\u5f55\u7684\u6570\u91cf\uff08\u9ed8\u8ba4300\uff09 'CULL_FREQUENCY': 3, # \u7f13\u5b58\u5230\u8fbe\u6700\u5927\u4e2a\u6570\u4e4b\u540e\uff0c\u5254\u9664\u7f13\u5b58\u4e2a\u6570\u7684\u6bd4\u4f8b\uff0c\u5373\uff1a1/CULL_FREQUENCY\uff08\u9ed8\u8ba43\uff09 } } } LOCATION\u4e5f\u53ef\u4ee5\u914d\u7f6e\u6210\u5982\u4e0b: 'LOCATION': 'unix:/tmp/memcached.sock', # \u6307\u5b9a\u5c40\u57df\u7f51\u5185\u7684\u4e3b\u673a\u540d\u52a0socket\u5957\u63a5\u5b57\u4e3aMemcache\u7f13\u5b58\u670d\u52a1\u5668 'LOCATION': [ # \u6307\u5b9a\u4e00\u53f0\u6216\u591a\u53f0\u5176\u4ed6\u4e3b\u673aip\u5730\u5740\u52a0\u7aef\u53e3\u4e3aMemcache\u7f13\u5b58\u670d\u52a1\u5668 '192.168.10.100:11211', '192.168.10.101:11211', '192.168.10.102:11211', ] 1.2.6 Memcache\u7f13\u5b58(\u4f7f\u7528pylibmc\u6a21\u5757\u8fde\u63a5memcache) settings.py\u6587\u4ef6\u914d\u7f6e CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.memcached.PyLibMCCache', # \u6307\u5b9a\u7f13\u5b58\u4f7f\u7528\u7684\u5f15\u64ce 'LOCATION':'192.168.10.100:11211', # \u6307\u5b9a\u672c\u673a\u768411211\u7aef\u53e3\u4e3aMemcache\u7f13\u5b58\u670d\u52a1\u5668 'OPTIONS':{ 'MAX_ENTRIES': 300, # \u6700\u5927\u7f13\u5b58\u8bb0\u5f55\u7684\u6570\u91cf\uff08\u9ed8\u8ba4300\uff09 'CULL_FREQUENCY': 3, # \u7f13\u5b58\u5230\u8fbe\u6700\u5927\u4e2a\u6570\u4e4b\u540e\uff0c\u5254\u9664\u7f13\u5b58\u4e2a\u6570\u7684\u6bd4\u4f8b\uff0c\u5373\uff1a1/CULL_FREQUENCY\uff08\u9ed8\u8ba43\uff09 }, } } LOCATION\u4e5f\u53ef\u4ee5\u914d\u7f6e\u6210\u5982\u4e0b: 'LOCATION': '/tmp/memcached.sock', # \u6307\u5b9a\u67d0\u4e2a\u8def\u5f84\u4e3a\u7f13\u5b58\u76ee\u5f55 'LOCATION': [ # \u5206\u5e03\u5f0f\u7f13\u5b58,\u5728\u591a\u53f0\u670d\u52a1\u5668\u4e0a\u8fd0\u884cMemcached\u8fdb\u7a0b,\u7a0b\u5e8f\u4f1a\u628a\u591a\u53f0\u670d\u52a1\u5668\u5f53\u4f5c\u4e00\u4e2a\u5355\u72ec\u7684\u7f13\u5b58,\u800c\u4e0d\u4f1a\u5728\u6bcf\u53f0\u670d\u52a1\u5668\u4e0a\u590d\u5236\u7f13\u5b58\u503c '192.168.10.100:11211', '192.168.10.101:11211', '192.168.10.102:11211', ] Memcached\u662f\u57fa\u4e8e\u5185\u5b58\u7684\u7f13\u5b58,\u6570\u636e\u5b58\u50a8\u5728\u5185\u5b58\u4e2d.\u6240\u4ee5\u5982\u679c\u670d\u52a1\u5668\u6b7b\u673a\u7684\u8bdd,\u6570\u636e\u5c31\u4f1a\u4e22\u5931,\u6240\u4ee5Memcached\u4e00\u822c\u4e0e\u5176\u4ed6\u7f13\u5b58\u914d\u5408\u4f7f\u7528 1.3 Django\u4e2d\u7684\u7f13\u5b58\u5e94\u7528 Django\u63d0\u4f9b\u4e86\u4e0d\u540c\u7c92\u5ea6\u7684\u7f13\u5b58,\u53ef\u4ee5\u7f13\u5b58\u67d0\u4e2a\u9875\u9762,\u53ef\u4ee5\u53ea\u7f13\u5b58\u4e00\u4e2a\u9875\u9762\u7684\u67d0\u4e2a\u90e8\u5206,\u751a\u81f3\u53ef\u4ee5\u7f13\u5b58\u6574\u4e2a\u7f51\u7ad9. \u6570\u636e\u5e93\uff1a class Book(models.Model): name=models.CharField(max_length=32) price=models.DecimalField(max_digits=6,decimal_places=1) \u89c6\u56fe\uff1a from django.views.decorators.cache import cache_page import time from .models import * @cache_page(15) #\u8d85\u65f6\u65f6\u95f4\u4e3a15\u79d2 def index(request): t=time.time() #\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 bookList=Book.objects.all() return render(request,\"index.html\",locals()) \u6a21\u677f(index.html): <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h3>\u5f53\u524d\u65f6\u95f4:-----{{ t }}</h3> <ul> {% for book in bookList %} <li>{{ book.name }}--------->{{ book.price }}$</li> {% endfor %} </ul> </body> </html> \u4e0a\u9762\u7684\u4f8b\u5b50\u662f\u57fa\u4e8e\u5185\u5b58\u7684\u7f13\u5b58\u914d\u7f6e,\u57fa\u4e8e\u6587\u4ef6\u7684\u7f13\u5b58\u8be5\u600e\u4e48\u914d\u7f6e\u5462?? \u66f4\u6539settings.py\u7684\u914d\u7f6e CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache', # \u6307\u5b9a\u7f13\u5b58\u4f7f\u7528\u7684\u5f15\u64ce 'LOCATION': 'E:\\django_cache', # \u6307\u5b9a\u7f13\u5b58\u7684\u8def\u5f84 'TIMEOUT': 300, # \u7f13\u5b58\u8d85\u65f6\u65f6\u95f4(\u9ed8\u8ba4\u4e3a300\u79d2,None\u8868\u793a\u6c38\u4e0d\u8fc7\u671f) 'OPTIONS': { 'MAX_ENTRIES': 300, # \u6700\u5927\u7f13\u5b58\u8bb0\u5f55\u7684\u6570\u91cf\uff08\u9ed8\u8ba4300\uff09 'CULL_FREQUENCY': 3, # \u7f13\u5b58\u5230\u8fbe\u6700\u5927\u4e2a\u6570\u4e4b\u540e\uff0c\u5254\u9664\u7f13\u5b58\u4e2a\u6570\u7684\u6bd4\u4f8b\uff0c\u5373\uff1a1/CULL_FREQUENCY\uff08\u9ed8\u8ba43\uff09 } } } \u7136\u540e\u518d\u6b21\u5237\u65b0\u6d4f\u89c8\u5668,\u53ef\u4ee5\u770b\u5230\u5728\u521a\u624d\u914d\u7f6e\u7684\u76ee\u5f55\u4e0b\u751f\u6210\u7684\u7f13\u5b58\u6587\u4ef6 \u901a\u8fc7\u5b9e\u9a8c\u53ef\u4ee5\u77e5\u9053,Django\u4f1a\u4ee5\u81ea\u5df1\u7684\u5f62\u5f0f\u628a\u7f13\u5b58\u6587\u4ef6\u4fdd\u5b58\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d. 1.3.2 \u5168\u7ad9\u4f7f\u7528\u7f13\u5b58 \u65e2\u7136\u662f\u5168\u7ad9\u7f13\u5b58,\u5f53\u7136\u8981\u4f7f\u7528Django\u4e2d\u7684\u4e2d\u95f4\u4ef6. \u7528\u6237\u7684\u8bf7\u6c42\u901a\u8fc7\u4e2d\u95f4\u4ef6,\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7684\u8ba4\u8bc1\u7b49\u64cd\u4f5c,\u5982\u679c\u8bf7\u6c42\u7684\u5185\u5bb9\u5728\u7f13\u5b58\u4e2d\u5b58\u5728,\u5219\u4f7f\u7528FetchFromCacheMiddleware\u83b7\u53d6\u5185\u5bb9\u5e76\u8fd4\u56de\u7ed9\u7528\u6237 \u5f53\u8fd4\u56de\u7ed9\u7528\u6237\u4e4b\u524d,\u5224\u65ad\u7f13\u5b58\u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728,\u5982\u679c\u4e0d\u5b58\u5728,\u5219UpdateCacheMiddleware\u4f1a\u5c06\u7f13\u5b58\u4fdd\u5b58\u81f3Django\u7684\u7f13\u5b58\u4e4b\u4e2d,\u4ee5\u5b9e\u73b0\u5168\u7ad9\u7f13\u5b58 \u7f13\u5b58\u6574\u4e2a\u7ad9\u70b9\uff0c\u662f\u6700\u7b80\u5355\u7684\u7f13\u5b58\u65b9\u6cd5 \u5728 MIDDLEWARE_CLASSES \u4e2d\u52a0\u5165 \u201cupdate\u201d \u548c \u201cfetch\u201d \u4e2d\u95f4\u4ef6 MIDDLEWARE_CLASSES = ( \u2018django.middleware.cache.UpdateCacheMiddleware\u2019, #\u7b2c\u4e00 'django.middleware.common.CommonMiddleware', \u2018django.middleware.cache.FetchFromCacheMiddleware\u2019, #\u6700\u540e ) \u201cupdate\u201d \u5fc5\u987b\u914d\u7f6e\u5728\u7b2c\u4e00\u4e2a \u201cfetch\u201d \u5fc5\u987b\u914d\u7f6e\u5728\u6700\u540e\u4e00\u4e2a \u4fee\u6539settings.py\u914d\u7f6e\u6587\u4ef6 MIDDLEWARE_CLASSES = ( 'django.middleware.cache.UpdateCacheMiddleware', #\u54cd\u5e94HttpResponse\u4e2d\u8bbe\u7f6e\u51e0\u4e2aheaders 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.auth.middleware.SessionAuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', 'django.middleware.security.SecurityMiddleware', 'django.middleware.cache.FetchFromCacheMiddleware', #\u7528\u6765\u7f13\u5b58\u901a\u8fc7GET\u548cHEAD\u65b9\u6cd5\u83b7\u53d6\u7684\u72b6\u6001\u7801\u4e3a200\u7684\u54cd\u5e94 ) CACHE_MIDDLEWARE_SECONDS=10 \u89c6\u56fe\u51fd\u6570\uff1a from django.views.decorators.cache import cache_page import time from .models import * def index(request): t=time.time() #\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 bookList=Book.objects.all() return render(request,\"index.html\",locals()) def foo(request): t=time.time() #\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 return HttpResponse(\"HELLO:\"+str(t)) \u6a21\u677f(index.html)\uff1a <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h3 style=\"color: green\">\u5f53\u524d\u65f6\u95f4:-----{{ t }}</h3> <ul> {% for book in bookList %} <li>{{ book.name }}--------->{{ book.price }}$</li> {% endfor %} </ul> </body> </html> \u5176\u4f59\u4ee3\u7801\u4e0d\u53d8,\u5237\u65b0\u6d4f\u89c8\u5668\u662f10\u79d2,\u9875\u9762\u4e0a\u7684\u65f6\u95f4\u53d8\u5316\u4e00\u6b21,\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5168\u7ad9\u7f13\u5b58. 1.3.3 \u5c40\u90e8\u89c6\u56fe\u7f13\u5b58 \u4f8b\u5b50,\u5237\u65b0\u9875\u9762\u65f6,\u6574\u4e2a\u7f51\u9875\u6709\u4e00\u90e8\u5206\u5b9e\u73b0\u7f13\u5b58 views\u89c6\u56fe\u51fd\u6570 from django.views.decorators.cache import cache_page import time from .models import * def index(request): t=time.time() #\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 bookList=Book.objects.all() return render(request,\"index.html\",locals()) \u6a21\u677f(index.html): {% load cache %} <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h3 style=\"color: green\">\u4e0d\u7f13\u5b58:-----{{ t }}</h3> {% cache 2 'name' %} <h3>\u7f13\u5b58:-----:{{ t }}</h3> {% endcache %} </body> </html> \u56db Django\u7684\u4fe1\u53f7 Django\u63d0\u4f9b\u4e00\u79cd\u4fe1\u53f7\u673a\u5236\u3002\u5176\u5b9e\u5c31\u662f\u89c2\u5bdf\u8005\u6a21\u5f0f\uff0c\u53c8\u53eb\u53d1\u5e03-\u8ba2\u9605(Publish/Subscribe) \u3002\u5f53\u53d1\u751f\u4e00\u4e9b\u52a8\u4f5c\u7684\u65f6\u5019\uff0c\u53d1\u51fa\u4fe1\u53f7\uff0c\u7136\u540e\u76d1\u542c\u4e86\u8fd9\u4e2a\u4fe1\u53f7\u7684\u51fd\u6570\u5c31\u4f1a\u6267\u884c\u3002 \u901a\u4fd7\u6765\u8bb2\uff0c\u5c31\u662f\u4e00\u4e9b\u52a8\u4f5c\u53d1\u751f\u7684\u65f6\u5019\uff0c\u4fe1\u53f7\u5141\u8bb8\u7279\u5b9a\u7684\u53d1\u9001\u8005\u53bb\u63d0\u9192\u4e00\u4e9b\u63a5\u53d7\u8005\u3002\u7528\u4e8e\u5728\u6846\u67b6\u6267\u884c\u64cd\u4f5c\u65f6\u89e3\u8026\u3002 2.1\u3001Django\u5185\u7f6e\u4fe1\u53f7 Model signals pre_init # django\u7684modal\u6267\u884c\u5176\u6784\u9020\u65b9\u6cd5\u524d\uff0c\u81ea\u52a8\u89e6\u53d1 post_init # django\u7684modal\u6267\u884c\u5176\u6784\u9020\u65b9\u6cd5\u540e\uff0c\u81ea\u52a8\u89e6\u53d1 pre_save # django\u7684modal\u5bf9\u8c61\u4fdd\u5b58\u524d\uff0c\u81ea\u52a8\u89e6\u53d1 post_save # django\u7684modal\u5bf9\u8c61\u4fdd\u5b58\u540e\uff0c\u81ea\u52a8\u89e6\u53d1 pre_delete # django\u7684modal\u5bf9\u8c61\u5220\u9664\u524d\uff0c\u81ea\u52a8\u89e6\u53d1 post_delete # django\u7684modal\u5bf9\u8c61\u5220\u9664\u540e\uff0c\u81ea\u52a8\u89e6\u53d1 m2m_changed # django\u7684modal\u4e2d\u4f7f\u7528m2m\u5b57\u6bb5\u64cd\u4f5c\u7b2c\u4e09\u5f20\u8868\uff08add,remove,clear\uff09\u524d\u540e\uff0c\u81ea\u52a8\u89e6\u53d1 class_prepared # \u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u68c0\u6d4b\u5df2\u6ce8\u518c\u7684app\u4e2dmodal\u7c7b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7c7b\uff0c\u81ea\u52a8\u89e6\u53d1 Management signals pre_migrate # \u6267\u884cmigrate\u547d\u4ee4\u524d\uff0c\u81ea\u52a8\u89e6\u53d1 post_migrate # \u6267\u884cmigrate\u547d\u4ee4\u540e\uff0c\u81ea\u52a8\u89e6\u53d1 Request/response signals request_started # \u8bf7\u6c42\u5230\u6765\u524d\uff0c\u81ea\u52a8\u89e6\u53d1 request_finished # \u8bf7\u6c42\u7ed3\u675f\u540e\uff0c\u81ea\u52a8\u89e6\u53d1 got_request_exception # \u8bf7\u6c42\u5f02\u5e38\u540e\uff0c\u81ea\u52a8\u89e6\u53d1 Test signals setting_changed # \u4f7f\u7528test\u6d4b\u8bd5\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u65f6\uff0c\u81ea\u52a8\u89e6\u53d1 template_rendered # \u4f7f\u7528test\u6d4b\u8bd5\u6e32\u67d3\u6a21\u677f\u65f6\uff0c\u81ea\u52a8\u89e6\u53d1 Database Wrappers connection_created # \u521b\u5efa\u6570\u636e\u5e93\u8fde\u63a5\u65f6\uff0c\u81ea\u52a8\u89e6\u53d1 Django \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u5185\u5efa\u4fe1\u53f7\uff0c\u5141\u8bb8\u7528\u6237\u7684\u4ee3\u7801\u83b7\u5f97DJango\u7684\u7279\u5b9a\u64cd\u4f5c\u7684\u901a\u77e5\u3002\u8fd9\u5305\u542b\u4e00\u4e9b\u6709\u7528\u7684\u901a\u77e5\uff1a django.db.models.signals.pre_save & django.db.models.signals.post_save \u5728\u6a21\u578b save()\u65b9\u6cd5\u8c03\u7528\u4e4b\u524d\u6216\u4e4b\u540e\u53d1\u9001\u3002 django.db.models.signals.pre_delete & django.db.models.signals.post_delete \u5728\u6a21\u578bdelete()\u65b9\u6cd5\u6216\u67e5\u8be2\u96c6\u7684delete() \u65b9\u6cd5\u8c03\u7528\u4e4b\u524d\u6216\u4e4b\u540e\u53d1\u9001\u3002 django.db.models.signals.m2m_changed \u6a21\u578b\u4e0a\u7684 ManyToManyField \u4fee\u6539\u65f6\u53d1\u9001\u3002 django.core.signals.request_started & django.core.signals.request_finished Django\u5efa\u7acb\u6216\u5173\u95edHTTP \u8bf7\u6c42\u65f6\u53d1\u9001\u3002 \u5bf9\u4e8eDjango\u5185\u7f6e\u7684\u4fe1\u53f7\uff0c\u4ec5\u9700\u6ce8\u518c\u6307\u5b9a\u4fe1\u53f7\uff0c\u5f53\u7a0b\u5e8f\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\u65f6\uff0c\u81ea\u52a8\u89e6\u53d1\u6ce8\u518c\u51fd\u6570\uff1a \u65b9\u5f0f1: from django.core.signals import request_finished from django.core.signals import request_started from django.core.signals import got_request_exception from django.db.models.signals import class_prepared from django.db.models.signals import pre_init, post_init from django.db.models.signals import pre_save, post_save from django.db.models.signals import pre_delete, post_delete from django.db.models.signals import m2m_changed from django.db.models.signals import pre_migrate, post_migrate from django.test.signals import setting_changed from django.test.signals import template_rendered from django.db.backends.signals import connection_created def callback(sender, **kwargs): print(\"pre_save_callback\") print(sender,kwargs) pre_save.connect(callback) \uff03 \u8be5\u811a\u672c\u4ee3\u7801\u9700\u8981\u5199\u5230app\u6216\u8005\u9879\u76ee\u7684\u521d\u59cb\u5316\u6587\u4ef6\u4e2d\uff0c\u5f53\u9879\u76ee\u542f\u52a8\u65f6\u6267\u884c\u6ce8\u518c\u4ee3\u7801 \u65b9\u5f0f2: from django.core.signals import request_finished from django.dispatch import receiver @receiver(request_finished) def my_callback(sender, **kwargs): print(\"Request finished!\") 2.2\u3001\u81ea\u5b9a\u4e49\u4fe1\u53f7 a. \u5b9a\u4e49\u4fe1\u53f7 import django.dispatch pizza_done = django.dispatch.Signal(providing_args=[\"toppings\", \"size\"]) b. \u6ce8\u518c\u4fe1\u53f7 def callback(sender, **kwargs): print(\"callback\") print(sender,kwargs) pizza_done.connect(callback) c. \u89e6\u53d1\u4fe1\u53f7 from \u8def\u5f84 import pizza_done pizza_done.send(sender='seven',toppings=123, size=456) \u7531\u4e8e\u5185\u7f6e\u4fe1\u53f7\u7684\u89e6\u53d1\u8005\u5df2\u7ecf\u96c6\u6210\u5230Django\u4e2d\uff0c\u6240\u4ee5\u5176\u4f1a\u81ea\u52a8\u8c03\u7528\uff0c\u800c\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u4fe1\u53f7\u5219\u9700\u8981\u5f00\u53d1\u8005\u5728\u4efb\u610f\u4f4d\u7f6e\u89e6\u53d1\u3002 \u7ec3\u4e60\uff1a\u6570\u636e\u5e93\u6dfb\u52a0\u4e00\u6761\u8bb0\u5f55\u65f6\u751f\u6210\u4e00\u4e2a\u65e5\u5fd7\u8bb0\u5f55\u3002 \u4e94 Django\u7684\u5e8f\u5217\u5316 \u5173\u4e8eDjango\u4e2d\u7684\u5e8f\u5217\u5316\u4e3b\u8981\u5e94\u7528\u5728\u5c06\u6570\u636e\u5e93\u4e2d\u68c0\u7d22\u7684\u6570\u636e\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u7528\u6237\uff0c\u7279\u522b\u7684Ajax\u8bf7\u6c42\u4e00\u822c\u8fd4\u56de\u7684\u4e3aJson\u683c\u5f0f\u3002 1\u3001serializers from django.core import serializers ret = models.BookType.objects.all() data = serializers.serialize(\"json\", ret) 2\u3001json.dumps import json #ret = models.BookType.objects.all().values('caption') ret = models.BookType.objects.all().values_list('caption') ret=list(ret) result = json.dumps(ret) \u7531\u4e8ejson.dumps\u65f6\u65e0\u6cd5\u5904\u7406datetime\u65e5\u671f\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u5904\u7406\u5668\u6765\u505a\u6269\u5c55\uff0c\u5982\uff1a import json from datetime import date from datetime import datetime d=datetime.now() class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return field.strftime('%Y-%m-%d %H:%M---%S') elif isinstance(field, date): return field.strftime('%Y-%m-%d') else: return json.JSONEncoder.default(self, field) ds = json.dumps(d, cls=JsonCustomEncoder) print(ds) print(type(ds)) ''' Supports the following objects and types by default: +-------------------+---------------+ | Python | JSON | +===================+===============+ | dict | object | +-------------------+---------------+ | list, tuple | array | +-------------------+---------------+ | str | string | +-------------------+---------------+ | int, float | number | +-------------------+---------------+ | True | true | +-------------------+---------------+ | False | false | +-------------------+---------------+ | None | null | +-------------------+---------------+ ''' Django-\u8ba4\u8bc1\u7cfb\u7edf \u77e5\u8bc6\u9884\u89c8 COOKIE \u4e0e SESSION \u7528\u6237\u8ba4\u8bc1\u3000 COOKIE \u4e0e SESSION \u6982\u5ff5 cookie\u4e0d\u5c5e\u4e8ehttp\u534f\u8bae\u8303\u56f4\uff0c\u7531\u4e8ehttp\u534f\u8bae\u65e0\u6cd5\u4fdd\u6301\u72b6\u6001\uff0c\u4f46\u5b9e\u9645\u60c5\u51b5\uff0c\u6211\u4eec\u5374\u53c8\u9700\u8981\u201c\u4fdd\u6301\u72b6\u6001\u201d\uff0c\u56e0\u6b64cookie\u5c31\u662f\u5728\u8fd9\u6837\u4e00\u4e2a\u573a\u666f\u4e0b\u8bde\u751f\u3002 cookie\u7684\u5de5\u4f5c\u539f\u7406\u662f\uff1a\u7531\u670d\u52a1\u5668\u4ea7\u751f\u5185\u5bb9\uff0c\u6d4f\u89c8\u5668\u6536\u5230\u8bf7\u6c42\u540e\u4fdd\u5b58\u5728\u672c\u5730\uff1b\u5f53\u6d4f\u89c8\u5668\u518d\u6b21\u8bbf\u95ee\u65f6\uff0c\u6d4f\u89c8\u5668\u4f1a\u81ea\u52a8\u5e26\u4e0acookie\uff0c\u8fd9\u6837\u670d\u52a1\u5668\u5c31\u80fd\u901a\u8fc7cookie\u7684\u5185\u5bb9\u6765\u5224\u65ad\u8fd9\u4e2a\u662f\u201c\u8c01\u201d\u4e86\u3002 cookie\u867d\u7136\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u4e86\u201c\u4fdd\u6301\u72b6\u6001\u201d\u7684\u9700\u6c42\uff0c\u4f46\u662f\u7531\u4e8ecookie\u672c\u8eab\u6700\u5927\u652f\u63014096\u5b57\u8282\uff0c\u4ee5\u53cacookie\u672c\u8eab\u4fdd\u5b58\u5728\u5ba2\u6237\u7aef\uff0c\u53ef\u80fd\u88ab\u62e6\u622a\u6216\u7a83\u53d6\uff0c\u56e0\u6b64\u5c31\u9700\u8981\u6709\u4e00\u79cd\u65b0\u7684\u4e1c\u897f\uff0c\u5b83\u80fd\u652f\u6301\u66f4\u591a\u7684\u5b57\u8282\uff0c\u5e76\u4e14\u4ed6\u4fdd\u5b58\u5728\u670d\u52a1\u5668\uff0c\u6709\u8f83\u9ad8\u7684\u5b89\u5168\u6027\u3002\u8fd9\u5c31\u662fsession\u3002 \u95ee\u9898\u6765\u4e86\uff0c\u57fa\u4e8ehttp\u534f\u8bae\u7684\u65e0\u72b6\u6001\u7279\u5f81\uff0c\u670d\u52a1\u5668\u6839\u672c\u5c31\u4e0d\u77e5\u9053\u8bbf\u95ee\u8005\u662f\u201c\u8c01\u201d\u3002\u90a3\u4e48\u4e0a\u8ff0\u7684cookie\u5c31\u8d77\u5230\u6865\u63a5\u7684\u4f5c\u7528\u3002 \u6211\u4eec\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u5ba2\u6237\u7aef\u7684cookie\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684id\uff0c\u8fd9\u6837\u7528\u6237\u5728\u8bbf\u95ee\u65f6\uff0c\u901a\u8fc7cookie\uff0c\u670d\u52a1\u5668\u5c31\u77e5\u9053\u6765\u7684\u4eba\u662f\u201c\u8c01\u201d\u3002\u7136\u540e\u6211\u4eec\u518d\u6839\u636e\u4e0d\u540c\u7684cookie\u7684id\uff0c\u5728\u670d\u52a1\u5668\u4e0a\u4fdd\u5b58\u4e00\u6bb5\u65f6\u95f4\u7684\u79c1\u5bc6\u8d44\u6599\uff0c\u5982\u201c\u8d26\u53f7\u5bc6\u7801\u201d\u7b49\u7b49\u3002 \u603b\u7ed3\u800c\u8a00\uff1acookie\u5f25\u8865\u4e86http\u65e0\u72b6\u6001\u7684\u4e0d\u8db3\uff0c\u8ba9\u670d\u52a1\u5668\u77e5\u9053\u6765\u7684\u4eba\u662f\u201c\u8c01\u201d\uff1b\u4f46\u662fcookie\u4ee5\u6587\u672c\u7684\u5f62\u5f0f\u4fdd\u5b58\u5728\u672c\u5730\uff0c\u81ea\u8eab\u5b89\u5168\u6027\u8f83\u5dee\uff1b\u6240\u4ee5\u6211\u4eec\u5c31\u901a\u8fc7cookie\u8bc6\u522b\u4e0d\u540c\u7684\u7528\u6237\uff0c\u5bf9\u5e94\u7684\u5728session\u91cc\u4fdd\u5b58\u79c1\u5bc6\u7684\u4fe1\u606f\u4ee5\u53ca\u8d85\u8fc74096\u5b57\u8282\u7684\u6587\u672c\u3002 \u53e6\u5916\uff0c\u4e0a\u8ff0\u6240\u8bf4\u7684cookie\u548csession\u5176\u5b9e\u662f\u5171\u901a\u6027\u7684\u4e1c\u897f\uff0c\u4e0d\u9650\u4e8e\u8bed\u8a00\u548c\u6846\u67b6 \u767b\u9646\u5e94\u7528 \u524d\u51e0\u8282\u7684\u4ecb\u7ecd\u4e2d\u6211\u4eec\u5df2\u7ecf\u6709\u80fd\u529b\u5236\u4f5c\u4e00\u4e2a\u767b\u9646\u9875\u9762\uff0c\u5728\u9a8c\u8bc1\u4e86\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u6b63\u786e\u6027\u540e\u8df3\u8f6c\u5230\u540e\u53f0\u7684\u9875\u9762\u3002\u4f46\u662f\u6d4b\u8bd5\u540e\u4e5f\u53d1\u73b0\uff0c\u5982\u679c\u7ed5\u8fc7\u767b\u9646\u9875\u9762\u3002\u76f4\u63a5\u8f93\u5165\u540e\u53f0\u7684url\u5730\u5740\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7684\u3002\u8fd9\u4e2a\u663e\u7136\u662f\u4e0d\u5408\u7406\u7684\u3002\u5176\u5b9e\u6211\u4eec\u7f3a\u5931\u7684\u5c31\u662fcookie\u548csession\u914d\u5408\u7684\u9a8c\u8bc1\u3002\u6709\u4e86\u8fd9\u4e2a\u9a8c\u8bc1\u8fc7\u7a0b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u548c\u5176\u4ed6\u7f51\u7ad9\u4e00\u6837\u5fc5\u987b\u767b\u5f55\u624d\u80fd\u8fdb\u5165\u540e\u53f0\u9875\u9762\u4e86\u3002 \u5148\u8bf4\u4e00\u4e0b\u8fd9\u79cd\u8ba4\u8bc1\u7684\u673a\u5236\u3002\u6bcf\u5f53\u6211\u4eec\u4f7f\u7528\u4e00\u6b3e\u6d4f\u89c8\u5668\u8bbf\u95ee\u4e00\u4e2a\u767b\u9646\u9875\u9762\u7684\u65f6\u5019\uff0c\u4e00\u65e6\u6211\u4eec\u901a\u8fc7\u4e86\u8ba4\u8bc1\u3002\u670d\u52a1\u5668\u7aef\u5c31\u4f1a\u53d1\u9001\u4e00\u7ec4\u968f\u673a\u552f\u4e00\u7684\u5b57\u7b26\u4e32\uff08\u5047\u8bbe\u662f123abc\uff09\u5230\u6d4f\u89c8\u5668\u7aef\uff0c\u8fd9\u4e2a\u88ab\u5b58\u50a8\u5728\u6d4f\u89c8\u7aef\u7684\u4e1c\u897f\u5c31\u53ebcookie\u3002\u800c\u670d\u52a1\u5668\u7aef\u4e5f\u4f1a\u81ea\u5df1\u5b58\u50a8\u4e00\u4e0b\u7528\u6237\u5f53\u524d\u7684\u72b6\u6001\uff0c\u6bd4\u5982login=true\uff0cusername=hahaha\u4e4b\u7c7b\u7684\u7528\u6237\u4fe1\u606f\u3002\u4f46\u662f\u8fd9\u79cd\u5b58\u50a8\u662f\u4ee5\u5b57\u5178\u5f62\u5f0f\u5b58\u50a8\u7684\uff0c\u5b57\u5178\u7684\u552f\u4e00key\u5c31\u662f\u521a\u624d\u53d1\u7ed9\u7528\u6237\u7684\u552f\u4e00\u7684cookie\u503c\u3002\u90a3\u4e48\u5982\u679c\u5728\u670d\u52a1\u5668\u7aef\u67e5\u770bsession\u4fe1\u606f\u7684\u8bdd\uff0c\u7406\u8bba\u4e0a\u5c31\u4f1a\u770b\u5230\u5982\u4e0b\u6837\u5b50\u7684\u5b57\u5178 {'123abc':{'login':true,'username:hahaha'}} \u56e0\u4e3a\u6bcf\u4e2acookie\u90fd\u662f\u552f\u4e00\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u7535\u8111\u4e0a\u6362\u4e2a\u6d4f\u89c8\u5668\u518d\u767b\u9646\u540c\u4e00\u4e2a\u7f51\u7ad9\u4e5f\u9700\u8981\u518d\u6b21\u9a8c\u8bc1\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8bf4\u6211\u4eec\u53ea\u662f\u7406\u8bba\u4e0a\u770b\u5230\u8fd9\u6837\u5b50\u7684\u5b57\u5178\u5462\uff1f\u56e0\u4e3a\u5904\u4e8e\u5b89\u5168\u6027\u7684\u8003\u8651\uff0c\u5176\u5b9e\u5bf9\u4e8e\u4e0a\u9762\u90a3\u4e2a\u5927\u5b57\u5178\u4e0d\u5149key\u503c123abc\u662f\u88ab\u52a0\u5bc6\u7684\uff0cvalue\u503c{'login':true,'username:hahaha'}\u5728\u670d\u52a1\u5668\u7aef\u4e5f\u662f\u4e00\u6837\u88ab\u52a0\u5bc6\u7684\u3002\u6240\u4ee5\u6211\u4eec\u670d\u52a1\u5668\u4e0a\u5c31\u7b97\u6253\u5f00session\u4fe1\u606f\u770b\u5230\u7684\u4e5f\u662f\u7c7b\u4f3c\u4e0e\u4ee5\u4e0b\u6837\u5b50\u7684\u4e1c\u897f {'123abc':dasdasdasd1231231da1231231} \u77e5\u9053\u4e86\u539f\u7406\uff0c\u4e0b\u9762\u5c31\u6765\u7528\u4ee3\u7801\u5b9e\u73b0\u3002 Django\u5b9e\u73b0\u7684COOKIE 1\u3001\u83b7\u53d6Cookie request.COOKIES['key'] request.get_signed_cookie(key, default=RAISE_ERROR, salt='', max_age=None) #\u53c2\u6570\uff1a default: \u9ed8\u8ba4\u503c salt: \u52a0\u5bc6\u76d0 max_age: \u540e\u53f0\u63a7\u5236\u8fc7\u671f\u65f6\u95f4 2\u3001\u8bbe\u7f6eCookie rep = HttpResponse(...) \u6216 rep \uff1d render(request, ...) \u6216 rep \uff1d redirect() rep.set_cookie(key,value,...) rep.set_signed_cookie(key,value,salt='\u52a0\u5bc6\u76d0',...)\u3000 \u53c2\u6570\uff1a ''' def set_cookie(self, key, \u952e \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 value='', \u503c \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 max_age=None, \u8d85\u957f\u65f6\u95f4 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 expires=None, \u8d85\u957f\u65f6\u95f4 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 path='/', Cookie\u751f\u6548\u7684\u8def\u5f84\uff0c \u6d4f\u89c8\u5668\u53ea\u4f1a\u628acookie\u56de\u4f20\u7ed9\u5e26\u6709\u8be5\u8def\u5f84\u7684\u9875\u9762\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5c06 cookie\u4f20\u7ed9\u7ad9\u70b9\u4e2d\u7684\u5176\u4ed6\u7684\u5e94\u7528\u3002 / \u8868\u793a\u6839\u8def\u5f84\uff0c\u7279\u6b8a\u7684\uff1a\u6839\u8def\u5f84\u7684cookie\u53ef\u4ee5\u88ab\u4efb\u4f55url\u7684\u9875\u9762\u8bbf\u95ee \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 domain=None, Cookie\u751f\u6548\u7684\u57df\u540d \u4f60\u53ef\u7528\u8fd9\u4e2a\u53c2\u6570\u6765\u6784\u9020\u4e00\u4e2a\u8de8\u7ad9cookie\u3002 \u5982\uff0c domain=\".example.com\" \u6240\u6784\u9020\u7684cookie\u5bf9\u4e0b\u9762\u8fd9\u4e9b\u7ad9\u70b9\u90fd\u662f\u53ef\u8bfb\u7684\uff1a www.example.com \u3001 www2.example.com \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u548can.other.sub.domain.example.com \u3002 \u5982\u679c\u8be5\u53c2\u6570\u8bbe\u7f6e\u4e3a None \uff0ccookie\u53ea\u80fd\u7531\u8bbe\u7f6e\u5b83\u7684\u7ad9\u70b9\u8bfb\u53d6\u3002 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 secure=False, \u5982\u679c\u8bbe\u7f6e\u4e3a True \uff0c\u6d4f\u89c8\u5668\u5c06\u901a\u8fc7HTTPS\u6765\u56de\u4f20cookie\u3002 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 httponly=False \u53ea\u80fdhttp\u534f\u8bae\u4f20\u8f93\uff0c\u65e0\u6cd5\u88abJavaScript\u83b7\u53d6 \uff08\u4e0d\u662f\u7edd\u5bf9\uff0c\u5e95\u5c42\u6293\u5305\u53ef\u4ee5\u83b7\u53d6\u5230\u4e5f\u53ef\u4ee5\u88ab\u8986\u76d6\uff09 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000): pass ''' \u7531\u4e8ecookie\u4fdd\u5b58\u5728\u5ba2\u6237\u7aef\u7684\u7535\u8111\u4e0a\uff0c\u6240\u4ee5\uff0cJavaScript\u548cjquery\u4e5f\u53ef\u4ee5\u64cd\u4f5ccookie\u3002 <script src='/static/js/jquery.cookie.js'> </script> $.cookie(\"key\", value,{ path: '/' }); 3 \u5220\u9664cookie response.delete_cookie(\"cookie_key\",path=\"/\",domain=name) cookie\u5b58\u50a8\u5230\u5ba2\u6237\u7aef \u4f18\u70b9\uff1a \u6570\u636e\u5b58\u5728\u5728\u5ba2\u6237\u7aef\uff0c\u51cf\u8f7b\u670d\u52a1\u5668\u7aef\u7684\u538b\u529b\uff0c\u63d0\u9ad8\u7f51\u7ad9\u7684\u6027\u80fd\u3002 \u7f3a\u70b9\uff1a \u5b89\u5168\u6027\u4e0d\u9ad8\uff1a\u5728\u5ba2\u6237\u7aef\u673a\u5f88\u5bb9\u6613\u88ab\u67e5\u770b\u6216\u7834\u89e3\u7528\u6237\u4f1a\u8bdd\u4fe1\u606f Django\u5b9e\u73b0\u7684SESSION 1\u3001 \u57fa\u672c\u64cd\u4f5c 1\u3001\u8bbe\u7f6eSessions\u503c request.session['session_name'] =\"admin\" 2\u3001\u83b7\u53d6Sessions\u503c session_name = request.session[\"session_name\"] 3\u3001\u5220\u9664Sessions\u503c del request.session[\"session_name\"] 4\u3001\u68c0\u6d4b\u662f\u5426\u64cd\u4f5csession\u503c if \"session_name\" is request.session : 5\u3001get(key, default=None) fav_color = request.session.get('fav_color', 'red') 6\u3001pop(key) fav_color = request.session.pop('fav_color') 7\u3001keys() 8\u3001items() 9\u3001setdefault() 10\u3001flush() \u5220\u9664\u5f53\u524d\u7684\u4f1a\u8bdd\u6570\u636e\u5e76\u5220\u9664\u4f1a\u8bdd\u7684Cookie\u3002 \u8fd9\u7528\u4e8e\u786e\u4fdd\u524d\u9762\u7684\u4f1a\u8bdd\u6570\u636e\u4e0d\u53ef\u4ee5\u518d\u6b21\u88ab\u7528\u6237\u7684\u6d4f\u89c8\u5668\u8bbf\u95ee \u4f8b\u5982\uff0cdjango.contrib.auth.logout() \u51fd\u6570\u4e2d\u5c31\u4f1a\u8c03\u7528\u5b83\u3002 11 \u7528\u6237session\u7684\u968f\u673a\u5b57\u7b26\u4e32 request.session.session_key # \u5c06\u6240\u6709Session\u5931\u6548\u65e5\u671f\u5c0f\u4e8e\u5f53\u524d\u65e5\u671f\u7684\u6570\u636e\u5220\u9664 request.session.clear_expired() # \u68c0\u67e5 \u7528\u6237session\u7684\u968f\u673a\u5b57\u7b26\u4e32 \u5728\u6570\u636e\u5e93\u4e2d\u662f\u5426 request.session.exists(\"session_key\") # \u5220\u9664\u5f53\u524d\u7528\u6237\u7684\u6240\u6709Session\u6570\u636e request.session.delete(\"session_key\") request.session.set_expiry(value) * \u5982\u679cvalue\u662f\u4e2a\u6574\u6570\uff0csession\u4f1a\u5728\u4e9b\u79d2\u6570\u540e\u5931\u6548\u3002 * \u5982\u679cvalue\u662f\u4e2adatatime\u6216timedelta\uff0csession\u5c31\u4f1a\u5728\u8fd9\u4e2a\u65f6\u95f4\u540e\u5931\u6548\u3002 * \u5982\u679cvalue\u662f0,\u7528\u6237\u5173\u95ed\u6d4f\u89c8\u5668session\u5c31\u4f1a\u5931\u6548\u3002 * \u5982\u679cvalue\u662fNone,session\u4f1a\u4f9d\u8d56\u5168\u5c40session\u5931\u6548\u7b56\u7565\u3002 2\u3001 \u6d41\u7a0b\u89e3\u6790\u56fe 3\u3001 \u793a\u4f8b views: def log_in(request): if request.method==\"POST\": username=request.POST['user'] password=request.POST['pwd'] user=UserInfo.objects.filter(username=username,password=password) if user: #\u8bbe\u7f6esession\u5185\u90e8\u7684\u5b57\u5178\u5185\u5bb9 request.session['is_login']='true' request.session['username']=username #\u767b\u5f55\u6210\u529f\u5c31\u5c06url\u91cd\u5b9a\u5411\u5230\u540e\u53f0\u7684url return redirect('/backend/') #\u767b\u5f55\u4e0d\u6210\u529f\u6216\u7b2c\u4e00\u8bbf\u95ee\u5c31\u505c\u7559\u5728\u767b\u5f55\u9875\u9762 return render(request,'login.html') def backend(request): print(request.session,\"------cookie\") print(request.COOKIES,'-------session') \"\"\" \u8fd9\u91cc\u5fc5\u987b\u7528\u8bfb\u53d6\u5b57\u5178\u7684get()\u65b9\u6cd5\u628ais_login\u7684value\u7f3a\u7701\u8bbe\u7f6e\u4e3aFalse\uff0c \u5f53\u7528\u6237\u8bbf\u95eebackend\u8fd9\u4e2aurl\u5148\u5c1d\u8bd5\u83b7\u53d6\u8fd9\u4e2a\u6d4f\u89c8\u5668\u5bf9\u5e94\u7684session\u4e2d\u7684 is_login\u7684\u503c\u3002\u5982\u679c\u5bf9\u65b9\u767b\u5f55\u6210\u529f\u7684\u8bdd\uff0c\u5728login\u91cc\u5c31\u5df2\u7ecf\u628ais_login \u7684\u503c\u4fee\u6539\u4e3a\u4e86True,\u53cd\u4e4b\u8fd9\u4e2a\u503c\u5c31\u662fFalse\u7684 \"\"\" is_login=request.session.get('is_login',False) #\u5982\u679c\u4e3a\u771f\uff0c\u5c31\u8bf4\u660e\u7528\u6237\u662f\u6b63\u5e38\u767b\u9646\u7684 if is_login: #\u83b7\u53d6\u5b57\u5178\u7684\u5185\u5bb9\u5e76\u4f20\u5165\u9875\u9762\u6587\u4ef6 cookie_content=request.COOKIES session_content=request.session username=request.session['username'] return render(request,'backend.html',locals()) else: \"\"\" \u5982\u679c\u8bbf\u95ee\u7684\u65f6\u5019\u6ca1\u6709\u643a\u5e26\u6b63\u786e\u7684session\uff0c \u5c31\u76f4\u63a5\u88ab\u91cd\u5b9a\u5411url\u56delogin\u9875\u9762 \"\"\" return redirect('/login/') def log_out(request): \"\"\" \u76f4\u63a5\u901a\u8fc7request.session['is_login']\u56de\u53bb\u8fd4\u56de\u7684\u65f6\u5019\uff0c \u5982\u679cis_login\u5bf9\u5e94\u7684value\u503c\u4e0d\u5b58\u5728\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5f02\u5e38\u3002\u6240\u4ee5 \u9700\u8981\u505a\u5f02\u5e38\u5904\u7406 \"\"\" try: #\u5220\u9664is_login\u5bf9\u5e94\u7684value\u503c del request.session['is_login'] # OR---->request.session.flush() # \u5220\u9664django-session\u8868\u4e2d\u7684\u5bf9\u5e94\u4e00\u884c\u8bb0\u5f55 except KeyError: pass #\u70b9\u51fb\u6ce8\u9500\u4e4b\u540e\uff0c\u76f4\u63a5\u91cd\u5b9a\u5411\u56de\u767b\u5f55\u9875\u9762 return redirect('/login/') template: ===================================login.html================== <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <form action=\"/login/\" method=\"post\"> <p>\u7528\u6237\u540d: <input type=\"text\" name=\"user\"></p> <p>\u5bc6\u7801: <input type=\"password\" name=\"pwd\"></p> <p><input type=\"submit\"></p> </form> </body> </html> ===================================backend.html================== <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h3>hello {{ username }}</h3> <a href=\"/logout/\">\u6ce8\u9500</a> </body> </html> 4\u3001session\u5b58\u50a8\u7684\u76f8\u5173\u914d\u7f6e \uff081\uff09\u6570\u636e\u5e93\u914d\u7f6e\uff08\u9ed8\u8ba4\uff09\uff1a Django\u9ed8\u8ba4\u652f\u6301Session\uff0c\u5e76\u4e14\u9ed8\u8ba4\u662f\u5c06Session\u6570\u636e\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u5373\uff1adjango_session \u8868\u4e2d\u3002 a. \u914d\u7f6e settings.py SESSION_ENGINE = 'django.contrib.sessions.backends.db' # \u5f15\u64ce\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_NAME \uff1d \"sessionid\" # Session\u7684cookie\u4fdd\u5b58\u5728\u6d4f\u89c8\u5668\u4e0a\u65f6\u7684key\uff0c\u5373\uff1asessionid\uff1d\u968f\u673a\u5b57\u7b26\u4e32\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_PATH \uff1d \"/\" # Session\u7684cookie\u4fdd\u5b58\u7684\u8def\u5f84\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_DOMAIN = None # Session\u7684cookie\u4fdd\u5b58\u7684\u57df\u540d\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_SECURE = False # \u662f\u5426Https\u4f20\u8f93cookie\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_HTTPONLY = True # \u662f\u5426Session\u7684cookie\u53ea\u652f\u6301http\u4f20\u8f93\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_AGE = 1209600 # Session\u7684cookie\u5931\u6548\u65e5\u671f\uff082\u5468\uff09\uff08\u9ed8\u8ba4\uff09 SESSION_EXPIRE_AT_BROWSER_CLOSE = False # \u662f\u5426\u5173\u95ed\u6d4f\u89c8\u5668\u4f7f\u5f97Session\u8fc7\u671f\uff08\u9ed8\u8ba4\uff09 SESSION_SAVE_EVERY_REQUEST = False # \u662f\u5426\u6bcf\u6b21\u8bf7\u6c42\u90fd\u4fdd\u5b58Session\uff0c\u9ed8\u8ba4\u4fee\u6539\u4e4b\u540e\u624d\u4fdd\u5b58\uff08\u9ed8\u8ba4\uff09 \uff082\uff09\u7f13\u5b58\u914d\u7f6e \u3000 a. \u914d\u7f6e settings.py SESSION_ENGINE = 'django.contrib.sessions.backends.cache' # \u5f15\u64ce SESSION_CACHE_ALIAS = 'default' # \u4f7f\u7528\u7684\u7f13\u5b58\u522b\u540d\uff08\u9ed8\u8ba4\u5185\u5b58\u7f13\u5b58\uff0c\u4e5f\u53ef\u4ee5\u662fmemcache\uff09\uff0c\u6b64\u5904\u522b\u540d\u4f9d\u8d56\u7f13\u5b58\u7684\u8bbe\u7f6e SESSION_COOKIE_NAME \uff1d \"sessionid\" # Session\u7684cookie\u4fdd\u5b58\u5728\u6d4f\u89c8\u5668\u4e0a\u65f6\u7684key\uff0c\u5373\uff1asessionid\uff1d\u968f\u673a\u5b57\u7b26\u4e32 SESSION_COOKIE_PATH \uff1d \"/\" # Session\u7684cookie\u4fdd\u5b58\u7684\u8def\u5f84 SESSION_COOKIE_DOMAIN = None # Session\u7684cookie\u4fdd\u5b58\u7684\u57df\u540d SESSION_COOKIE_SECURE = False # \u662f\u5426Https\u4f20\u8f93cookie SESSION_COOKIE_HTTPONLY = True # \u662f\u5426Session\u7684cookie\u53ea\u652f\u6301http\u4f20\u8f93 SESSION_COOKIE_AGE = 1209600 # Session\u7684cookie\u5931\u6548\u65e5\u671f\uff082\u5468\uff09 SESSION_EXPIRE_AT_BROWSER_CLOSE = False # \u662f\u5426\u5173\u95ed\u6d4f\u89c8\u5668\u4f7f\u5f97Session\u8fc7\u671f SESSION_SAVE_EVERY_REQUEST = False # \u662f\u5426\u6bcf\u6b21\u8bf7\u6c42\u90fd\u4fdd\u5b58Session\uff0c\u9ed8\u8ba4\u4fee\u6539\u4e4b\u540e\u624d\u4fdd\u5b58 \uff083\uff09\u6587\u4ef6\u914d\u7f6e a. \u914d\u7f6e settings.py SESSION_ENGINE = 'django.contrib.sessions.backends.file' # \u5f15\u64ce SESSION_FILE_PATH = None # \u7f13\u5b58\u6587\u4ef6\u8def\u5f84\uff0c\u5982\u679c\u4e3aNone\uff0c\u5219\u4f7f\u7528tempfile\u6a21\u5757\u83b7\u53d6\u4e00\u4e2a\u4e34\u65f6\u5730\u5740tempfile.gettempdir() SESSION_COOKIE_NAME \uff1d \"sessionid\" # Session\u7684cookie\u4fdd\u5b58\u5728\u6d4f\u89c8\u5668\u4e0a\u65f6\u7684key\uff0c\u5373\uff1asessionid\uff1d\u968f\u673a\u5b57\u7b26\u4e32 SESSION_COOKIE_PATH \uff1d \"/\" # Session\u7684cookie\u4fdd\u5b58\u7684\u8def\u5f84 SESSION_COOKIE_DOMAIN = None # Session\u7684cookie\u4fdd\u5b58\u7684\u57df\u540d SESSION_COOKIE_SECURE = False # \u662f\u5426Https\u4f20\u8f93cookie SESSION_COOKIE_HTTPONLY = True # \u662f\u5426Session\u7684cookie\u53ea\u652f\u6301http\u4f20\u8f93 SESSION_COOKIE_AGE = 1209600 # Session\u7684cookie\u5931\u6548\u65e5\u671f\uff082\u5468\uff09 SESSION_EXPIRE_AT_BROWSER_CLOSE = False # \u662f\u5426\u5173\u95ed\u6d4f\u89c8\u5668\u4f7f\u5f97Session\u8fc7\u671f SESSION_SAVE_EVERY_REQUEST = False # \u662f\u5426\u6bcf\u6b21\u8bf7\u6c42\u90fd\u4fdd\u5b58Session\uff0c\u9ed8\u8ba4\u4fee\u6539\u4e4b\u540e\u624d\u4fdd\u5b58 \u7528\u6237\u8ba4\u8bc1 auth\u6a21\u5757 from django.contrib import auth django.contrib.auth\u4e2d\u63d0\u4f9b\u4e86\u8bb8\u591a\u65b9\u6cd5\uff0c\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u5176\u4e2d\u7684\u4e09\u4e2a\uff1a 1 \u3001authenticate() \u63d0\u4f9b\u4e86\u7528\u6237\u8ba4\u8bc1\uff0c\u5373\u9a8c\u8bc1\u7528\u6237\u540d\u4ee5\u53ca\u5bc6\u7801\u662f\u5426\u6b63\u786e,\u4e00\u822c\u9700\u8981username password\u4e24\u4e2a\u5173\u952e\u5b57\u53c2\u6570 \u5982\u679c\u8ba4\u8bc1\u4fe1\u606f\u6709\u6548\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a User \u5bf9\u8c61\u3002authenticate()\u4f1a\u5728User \u5bf9\u8c61\u4e0a\u8bbe\u7f6e\u4e00\u4e2a\u5c5e\u6027\u6807\u8bc6\u90a3\u79cd\u8ba4\u8bc1\u540e\u7aef\u8ba4\u8bc1\u4e86\u8be5\u7528\u6237\uff0c\u4e14\u8be5\u4fe1\u606f\u5728\u540e\u9762\u7684\u767b\u5f55\u8fc7\u7a0b\u4e2d\u662f\u9700\u8981\u7684\u3002\u5f53\u6211\u4eec\u8bd5\u56fe\u767b\u9646\u4e00\u4e2a\u4ece\u6570\u636e\u5e93\u4e2d\u76f4\u63a5\u53d6\u51fa\u6765\u4e0d\u7ecf\u8fc7authenticate()\u7684User\u5bf9\u8c61\u4f1a\u62a5\u9519\u7684\uff01\uff01 user = authenticate(username='someone',password='somepassword') 2 \u3001login(HttpRequest, user) \u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2aHttpRequest\u5bf9\u8c61\uff0c\u4ee5\u53ca\u4e00\u4e2a\u8ba4\u8bc1\u4e86\u7684User\u5bf9\u8c61 \u6b64\u51fd\u6570\u4f7f\u7528django\u7684session\u6846\u67b6\u7ed9\u67d0\u4e2a\u5df2\u8ba4\u8bc1\u7684\u7528\u6237\u9644\u52a0\u4e0asession id\u7b49\u4fe1\u606f\u3002 from django.contrib.auth import authenticate, login def my_view(request): username = request.POST['username'] password = request.POST['password'] user = authenticate(username=username, password=password) if user is not None: login(request, user) # Redirect to a success page. ... else: # Return an 'invalid login' error message. ... 3 \u3001logout(request) \u6ce8\u9500\u7528\u6237 from django.contrib.auth import logout def logout_view(request): logout(request) # Redirect to a success page. \u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2aHttpRequest\u5bf9\u8c61\uff0c\u65e0\u8fd4\u56de\u503c\u3002\u5f53\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u5f53\u524d\u8bf7\u6c42\u7684session\u4fe1\u606f\u4f1a\u5168\u90e8\u6e05\u9664\u3002\u8be5\u7528\u6237\u5373\u4f7f\u6ca1\u6709\u767b\u5f55\uff0c\u4f7f\u7528\u8be5\u51fd\u6570\u4e5f\u4e0d\u4f1a\u62a5\u9519\u3002 4 \u3001user\u5bf9\u8c61\u7684 is_authenticated() \u8981\u6c42\uff1a 1 \u7528\u6237\u767b\u9646\u540e\u624d\u80fd\u8bbf\u95ee\u67d0\u4e9b\u9875\u9762\uff0c 2 \u5982\u679c\u7528\u6237\u6ca1\u6709\u767b\u5f55\u5c31\u8bbf\u95ee\u8be5\u9875\u9762\u7684\u8bdd\u76f4\u63a5\u8df3\u5230\u767b\u5f55\u9875\u9762 3 \u7528\u6237\u5728\u8df3\u8f6c\u7684\u767b\u9646\u754c\u9762\u4e2d\u5b8c\u6210\u767b\u9646\u540e\uff0c\u81ea\u52a8\u8bbf\u95ee\u8df3\u8f6c\u5230\u4e4b\u524d\u8bbf\u95ee\u7684\u5730\u5740 \u65b9\u6cd51: def my_view(request): if not request.user.is_authenticated(): return redirect('%s?next=%s' % (settings.LOGIN_URL, request.path)) \u65b9\u6cd52: django\u5df2\u7ecf\u4e3a\u6211\u4eec\u8bbe\u8ba1\u597d\u4e86\u4e00\u4e2a\u7528\u4e8e\u6b64\u79cd\u60c5\u51b5\u7684\u88c5\u9970\u5668\uff1alogin_requierd() from django.contrib.auth.decorators import login_required @login_required def my_view(request): ... \u82e5\u7528\u6237\u6ca1\u6709\u767b\u5f55\uff0c\u5219\u4f1a\u8df3\u8f6c\u5230django\u9ed8\u8ba4\u7684 \u767b\u5f55URL '/accounts/login/ ' (\u8fd9\u4e2a\u503c\u53ef\u4ee5\u5728settings\u6587\u4ef6\u4e2d\u901a\u8fc7LOGIN_URL\u8fdb\u884c\u4fee\u6539)\u3002\u5e76\u4f20\u9012 \u5f53\u524d\u8bbf\u95eeurl\u7684\u7edd\u5bf9\u8def\u5f84 (\u767b\u9646\u6210\u529f\u540e\uff0c\u4f1a\u91cd\u5b9a\u5411\u5230\u8be5\u8def\u5f84)\u3002 User\u5bf9\u8c61 User \u5bf9\u8c61\u5c5e\u6027\uff1ausername\uff0c password\uff08\u5fc5\u586b\u9879\uff09password\u7528\u54c8\u5e0c\u7b97\u6cd5\u4fdd\u5b58\u5230\u6570\u636e\u5e93 is_staff \uff1a \u7528\u6237\u662f\u5426\u62e5\u6709\u7f51\u7ad9\u7684\u7ba1\u7406\u6743\u9650. is_active \uff1a \u662f\u5426\u5141\u8bb8\u7528\u6237\u767b\u5f55, \u8bbe\u7f6e\u4e3a False \uff0c\u53ef\u4ee5\u4e0d\u7528\u5220\u9664\u7528\u6237\u6765\u7981\u6b62 \u7528\u6237\u767b\u5f55 2.1 \u3001is_authenticated() \u5982\u679c\u662f\u771f\u6b63\u7684 User \u5bf9\u8c61\uff0c\u8fd4\u56de\u503c\u6052\u4e3a True \u3002 \u7528\u4e8e\u68c0\u67e5\u7528\u6237\u662f\u5426\u5df2\u7ecf\u901a\u8fc7\u4e86\u8ba4\u8bc1\u3002 \u901a\u8fc7\u8ba4\u8bc1\u5e76\u4e0d\u610f\u5473\u7740\u7528\u6237\u62e5\u6709\u4efb\u4f55\u6743\u9650\uff0c\u751a\u81f3\u4e5f\u4e0d\u68c0\u67e5\u8be5\u7528\u6237\u662f\u5426\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\uff0c\u8fd9\u53ea\u662f\u8868\u660e\u7528\u6237\u6210\u529f\u7684\u901a\u8fc7\u4e86\u8ba4\u8bc1\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u5f88\u91cd\u8981, \u5728\u540e\u53f0\u7528request.user.is_authenticated()\u5224\u65ad\u7528\u6237\u662f\u5426\u5df2\u7ecf\u767b\u5f55\uff0c\u5982\u679ctrue\u5219\u53ef\u4ee5\u5411\u524d\u53f0\u5c55\u793arequest.user.name 2.2 \u3001\u521b\u5efa\u7528\u6237 \u4f7f\u7528 create_user \u8f85\u52a9\u51fd\u6570\u521b\u5efa\u7528\u6237: from django.contrib.auth.models import User user = User.objects.create_user\uff08username='',password='',email=''\uff09 2.3 \u3001check_password(passwd) \u7528\u6237\u9700\u8981\u4fee\u6539\u5bc6\u7801\u7684\u65f6\u5019 \u9996\u5148\u8981\u8ba9\u4ed6\u8f93\u5165\u539f\u6765\u7684\u5bc6\u7801 \uff0c\u5982\u679c\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u901a\u8fc7\u4e86\u5bc6\u7801\u68c0\u67e5\uff0c\u8fd4\u56de ``True 2.4 \u3001\u4fee\u6539\u5bc6\u7801 \u4f7f\u7528 set_password() \u6765\u4fee\u6539\u5bc6\u7801 user = User.objects.get(username='') user.set_password(password='') user.save\u3000 2.5 \u3001\u7b80\u5355\u793a\u4f8b \u6ce8\u518c\uff1a def sign_up(request): state = None if request.method == 'POST': password = request.POST.get('password', '') repeat_password = request.POST.get('repeat_password', '') email=request.POST.get('email', '') username = request.POST.get('username', '') if User.objects.filter(username=username): state = 'user_exist' else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect('/book/') content = { 'state': state, 'user': None, } return render(request, 'sign_up.html', content)\u3000\u3000 \u4fee\u6539\u5bc6\u7801\uff1a @login_required def set_password(request): user = request.user state = None if request.method == 'POST': old_password = request.POST.get('old_password', '') new_password = request.POST.get('new_password', '') repeat_password = request.POST.get('repeat_password', '') if user.check_password(old_password): if not new_password: state = 'empty' elif new_password != repeat_password: state = 'repeat_error' else: user.set_password(new_password) user.save() return redirect(\"/log_in/\") else: state = 'password_error' content = { 'user': user, 'state': state, } return render(request, 'set_password.html', content) Django-Ajax \u77e5\u8bc6\u9884\u89c8 Ajax\u51c6\u5907\u77e5\u8bc6\uff1ajson Ajax\u7b80\u4ecb jquery\u5b9e\u73b0\u7684ajax JS\u5b9e\u73b0\u7684ajax jQuery.serialize() \u4e0a\u4f20\u6587\u4ef6 \u540c\u6e90\u7b56\u7565\u4e0eJsonp CORS Ajax\u51c6\u5907\u77e5\u8bc6\uff1ajson \u4ec0\u4e48\u662fjson\uff1f \u5b9a\u4e49\uff1a JSON(JavaScript Object Notation, JS \u5bf9\u8c61\u6807\u8bb0) \u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6570\u636e\u4ea4\u6362\u683c\u5f0f\u3002 \u5b83\u57fa\u4e8e ECMAScript (w3c\u5236\u5b9a\u7684js\u89c4\u8303)\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u91c7\u7528\u5b8c\u5168\u72ec\u7acb\u4e8e\u7f16\u7a0b\u8bed\u8a00\u7684\u6587\u672c\u683c\u5f0f\u6765\u5b58\u50a8\u548c\u8868\u793a\u6570\u636e\u3002 \u7b80\u6d01\u548c\u6e05\u6670\u7684\u5c42\u6b21\u7ed3\u6784\u4f7f\u5f97 JSON \u6210\u4e3a\u7406\u60f3\u7684\u6570\u636e\u4ea4\u6362\u8bed\u8a00\u3002 \u6613\u4e8e\u4eba\u9605\u8bfb\u548c\u7f16\u5199\uff0c\u540c\u65f6\u4e5f\u6613\u4e8e\u673a\u5668\u89e3\u6790\u548c\u751f\u6210\uff0c\u5e76\u6709\u6548\u5730\u63d0\u5347\u7f51\u7edc\u4f20\u8f93\u6548\u7387\u3002 \u8bb2json\u5bf9\u8c61\uff0c\u4e0d\u5f97\u4e0d\u63d0\u5230JS\u5bf9\u8c61\uff1a \u5408\u683c\u7684json\u5bf9\u8c61\uff1a [\"one\", \"two\", \"three\"] { \"one\": 1, \"two\": 2, \"three\": 3 } {\"names\": [\"\u5f20\u4e09\", \"\u674e\u56db\"] } [ { \"name\": \"\u5f20\u4e09\"}, {\"name\": \"\u674e\u56db\"} ] \u4e0d\u5408\u683c\u7684json\u5bf9\u8c61\uff1a { name: \"\u5f20\u4e09\", 'age': 32 } // \u5c5e\u6027\u540d\u5fc5\u987b\u4f7f\u7528\u53cc\u5f15\u53f7 [32, 64, 128, 0xFFF] // \u4e0d\u80fd\u4f7f\u7528\u5341\u516d\u8fdb\u5236\u503c { \"name\": \"\u5f20\u4e09\", \"age\": undefined } // \u4e0d\u80fd\u4f7f\u7528undefined { \"name\": \"\u5f20\u4e09\", \"birthday\": new Date('Fri, 26 Aug 2011 07:13:10 GMT'), \"getName\": function() {return this.name;} // \u4e0d\u80fd\u4f7f\u7528\u51fd\u6570\u548c\u65e5\u671f\u5bf9\u8c61 } stringify\u4e0eparse\u65b9\u6cd5 JSON.parse(): \u7528\u4e8e\u5c06\u4e00\u4e2a JSON \u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a JavaScript \u5bf9\u8c61\u3000 eg: console.log(JSON.parse('{\"name\":\"Yuan\"}')); console.log(JSON.parse('{name:\"Yuan\"}')) ; // \u9519\u8bef console.log(JSON.parse('[12,undefined]')) ; // \u9519\u8bef JSON.stringify(): \u7528\u4e8e\u5c06 JavaScript \u503c\u8f6c\u6362\u4e3a JSON \u5b57\u7b26\u4e32\u3002\u3000 eg: console.log(JSON.stringify({'name':\"egon\"})) ; \u548cXML\u7684\u6bd4\u8f83 JSON \u683c\u5f0f\u4e8e2001\u5e74\u7531 Douglas Crockford \u63d0\u51fa\uff0c\u76ee\u7684\u5c31\u662f\u53d6\u4ee3\u7e41\u7410\u7b28\u91cd\u7684 XML \u683c\u5f0f\u3002 JSON \u683c\u5f0f\u6709\u4e24\u4e2a\u663e\u8457\u7684\u4f18\u70b9\uff1a\u4e66\u5199\u7b80\u5355\uff0c\u4e00\u76ee\u4e86\u7136\uff1b\u7b26\u5408 JavaScript \u539f\u751f\u8bed\u6cd5\uff0c\u53ef\u4ee5\u7531\u89e3\u91ca\u5f15\u64ce\u76f4\u63a5\u5904\u7406\uff0c\u4e0d\u7528\u53e6\u5916\u6dfb\u52a0\u89e3\u6790\u4ee3\u7801\u3002\u6240\u4ee5\uff0cJSON\u8fc5\u901f\u88ab\u63a5\u53d7\uff0c\u5df2\u7ecf\u6210\u4e3a\u5404\u5927\u7f51\u7ad9\u4ea4\u6362\u6570\u636e\u7684\u6807\u51c6\u683c\u5f0f\uff0c\u5e76\u88ab\u5199\u5165ECMAScript 5\uff0c\u6210\u4e3a\u6807\u51c6\u7684\u4e00\u90e8\u5206\u3002 XML\u548cJSON\u90fd\u4f7f\u7528\u7ed3\u6784\u5316\u65b9\u6cd5\u6765\u6807\u8bb0\u6570\u636e\uff0c\u4e0b\u9762\u6765\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u6bd4\u8f83\u3002 \u7528XML\u8868\u793a\u4e2d\u56fd\u90e8\u5206\u7701\u5e02\u6570\u636e\u5982\u4e0b\uff1a <?xml version=\"1.0\" encoding=\"utf-8\"?> <country> <name>\u4e2d\u56fd</name> <province> <name>\u9ed1\u9f99\u6c5f</name> <cities> <city>\u54c8\u5c14\u6ee8</city> <city>\u5927\u5e86</city> </cities> </province> <province> <name>\u5e7f\u4e1c</name> <cities> <city>\u5e7f\u5dde</city> <city>\u6df1\u5733</city> <city>\u73e0\u6d77</city> </cities> </province> <province> <name>\u53f0\u6e7e</name> <cities> <city>\u53f0\u5317</city> <city>\u9ad8\u96c4</city> </cities> </province> <province> <name>\u65b0\u7586</name> <cities> <city>\u4e4c\u9c81\u6728\u9f50</city> </cities> </province> </country> \u7528JSON\u8868\u793a\u5982\u4e0b\uff1a { \"name\": \"\u4e2d\u56fd\", \"province\": [{ \"name\": \"\u9ed1\u9f99\u6c5f\", \"cities\": { \"city\": [\"\u54c8\u5c14\u6ee8\", \"\u5927\u5e86\"] } }, { \"name\": \"\u5e7f\u4e1c\", \"cities\": { \"city\": [\"\u5e7f\u5dde\", \"\u6df1\u5733\", \"\u73e0\u6d77\"] } }, { \"name\": \"\u53f0\u6e7e\", \"cities\": { \"city\": [\"\u53f0\u5317\", \"\u9ad8\u96c4\"] } }, { \"name\": \"\u65b0\u7586\", \"cities\": { \"city\": [\"\u4e4c\u9c81\u6728\u9f50\"] } }] } \u53ef\u4ee5\u770b\u5230\uff0cJSON \u7b80\u5355\u7684\u8bed\u6cd5\u683c\u5f0f\u548c\u6e05\u6670\u7684\u5c42\u6b21\u7ed3\u6784\u660e\u663e\u8981\u6bd4 XML \u5bb9\u6613\u9605\u8bfb\uff0c\u5e76\u4e14\u5728\u6570\u636e\u4ea4\u6362\u65b9\u9762\uff0c\u7531\u4e8e JSON \u6240\u4f7f\u7528\u7684\u5b57\u7b26\u8981\u6bd4 XML \u5c11\u5f97\u591a\uff0c\u53ef\u4ee5\u5927\u5927\u5f97\u8282\u7ea6\u4f20\u8f93\u6570\u636e\u6240\u5360\u7528\u5f97\u5e26\u5bbd\u3002 \u6ce8\u610f\uff1a JSON\u683c\u5f0f\u53d6\u4ee3\u4e86xml\u7ed9\u7f51\u7edc\u4f20\u8f93\u5e26\u6765\u4e86\u5f88\u5927\u7684\u4fbf\u5229,\u4f46\u662f\u5374\u6ca1\u6709\u4e86xml\u7684\u4e00\u76ee\u4e86\u7136,\u5c24\u5176\u662fjson\u6570\u636e\u5f88\u957f\u7684\u65f6\u5019,\u6211\u4eec\u4f1a\u9677\u5165\u7e41\u7410\u590d\u6742\u7684\u6570\u636e\u8282\u70b9\u67e5\u627e\u4e2d\u3002 \u4f46\u662f\u56fd\u4eba\u7684\u4e00\u6b3e\u5728\u7ebf\u5de5\u5177 BeJson \u3001SoJson\u5728\u7ebf\u5de5\u5177\u8ba9\u4f17\u591a\u7a0b\u5e8f\u5458\u3001\u65b0\u63a5\u89e6JSON\u683c\u5f0f\u7684\u7a0b\u5e8f\u5458\u66f4\u5feb\u7684\u4e86\u89e3JSON\u7684\u7ed3\u6784\uff0c\u66f4\u5feb\u7684\u7cbe\u786e\u5b9a\u4f4dJSON\u683c\u5f0f\u9519\u8bef\u3002 Ajax\u7b80\u4ecb AJAX\uff08Asynchronous Javascript And XML\uff09\u7ffb\u8bd1\u6210\u4e2d\u6587\u5c31\u662f\u201c\u5f02\u6b65Javascript\u548cXML\u201d\u3002\u5373\u4f7f\u7528Javascript\u8bed\u8a00\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u5f02\u6b65\u4ea4\u4e92\uff0c\u4f20\u8f93\u7684\u6570\u636e\u4e3aXML\uff08\u5f53\u7136\uff0c\u4f20\u8f93\u7684\u6570\u636e\u4e0d\u53ea\u662fXML\uff09\u3002 \u540c\u6b65\u4ea4\u4e92\uff1a\u5ba2\u6237\u7aef\u53d1\u51fa\u4e00\u4e2a\u8bf7\u6c42\u540e\uff0c\u9700\u8981\u7b49\u5f85\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\u540e\uff0c\u624d\u80fd\u53d1\u51fa\u7b2c\u4e8c\u4e2a\u8bf7\u6c42\uff1b \u5f02\u6b65\u4ea4\u4e92\uff1a\u5ba2\u6237\u7aef\u53d1\u51fa\u4e00\u4e2a\u8bf7\u6c42\u540e\uff0c\u65e0\u9700\u7b49\u5f85\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u5c31\u53ef\u4ee5\u53d1\u51fa\u7b2c\u4e8c\u4e2a\u8bf7\u6c42\u3002 AJAX\u9664\u4e86 \u5f02\u6b65 \u7684\u7279\u70b9\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u5c31\u662f\uff1a\u6d4f\u89c8\u5668\u9875\u9762 \u5c40\u90e8\u5237\u65b0 \uff1b\uff08\u8fd9\u4e00\u7279\u70b9\u7ed9\u7528\u6237\u7684\u611f\u53d7\u662f\u5728\u4e0d\u77e5\u4e0d\u89c9\u4e2d\u5b8c\u6210\u8bf7\u6c42\u548c\u54cd\u5e94\u8fc7\u7a0b\uff09 js\u5b9e\u73b0\u7684\u5c40\u90e8\u5237\u65b0: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <style> .error{ color:red } </style> </head> <body> <form class=\"Form\"> <p>\u59d3\u540d <input class=\"v1\" type=\"text\" name=\"username\" mark=\"\u7528\u6237\u540d\"></p> <p>\u5bc6\u7801 <input class=\"v1\" type=\"text\" name=\"email\" mark=\"\u90ae\u7bb1\"></p> <p><input type=\"submit\" value=\"submit\"></p> </form> <script src=\"jquery-3.1.1.js\"></script> <script> $(\".Form :submit\").click(function(){ flag=true; $(\"Form .v1\").each(function(){ var value=$(this).val(); if (value.trim().length==0){ var mark=$(this).attr(\"mark\"); var $span=$(\"<span>\"); $span.html(mark+\"\u4e0d\u80fd\u4e3a\u7a7a!\"); $span.prop(\"class\",\"error\"); $(this).after($span); setTimeout(function(){ $span.remove(); },800); flag=false; return flag; } }); return flag }); </script> </body> </html> AJAX\u5e38\u89c1\u5e94\u7528\u60c5\u666f \u5f53\u6211\u4eec\u5728\u767e\u5ea6\u4e2d\u8f93\u5165\u4e00\u4e2a\u201c\u8001\u201d\u5b57\u540e\uff0c\u4f1a\u9a6c\u4e0a\u51fa\u73b0\u4e00\u4e2a\u4e0b\u62c9\u5217\u8868\uff01\u5217\u8868\u4e2d\u663e\u793a\u7684\u662f\u5305\u542b\u201c\u4f20\u201d\u5b57\u76844\u4e2a\u5173\u952e\u5b57\u3002 \u5176\u5b9e\u8fd9\u91cc\u5c31\u4f7f\u7528\u4e86AJAX\u6280\u672f\uff01\u5f53\u6587\u4ef6\u6846\u53d1\u751f\u4e86\u8f93\u5165\u53d8\u5316\u65f6\uff0c\u6d4f\u89c8\u5668\u4f1a\u4f7f\u7528AJAX\u6280\u672f\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\uff0c\u67e5\u8be2\u5305\u542b\u201c\u4f20\u201d\u5b57\u7684\u524d10\u4e2a\u5173\u952e\u5b57\uff0c\u7136\u540e\u670d\u52a1\u5668\u4f1a\u628a\u67e5\u8be2\u5230\u7684\u7ed3\u679c\u54cd\u5e94\u7ed9\u6d4f\u89c8\u5668\uff0c\u6700\u540e\u6d4f\u89c8\u5668\u628a\u8fd94\u4e2a\u5173\u952e\u5b57\u663e\u793a\u5728\u4e0b\u62c9\u5217\u8868\u4e2d\u3002 \u6574\u4e2a\u8fc7\u7a0b\u4e2d\u9875\u9762\u6ca1\u6709\u5237\u65b0\uff0c\u53ea\u662f\u5237\u65b0\u9875\u9762\u4e2d\u7684\u5c40\u90e8\u4f4d\u7f6e\u800c\u5df2\uff01 \u5f53\u8bf7\u6c42\u53d1\u51fa\u540e\uff0c\u6d4f\u89c8\u5668\u8fd8\u53ef\u4ee5\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\uff0c\u65e0\u9700\u7b49\u5f85\u670d\u52a1\u5668\u7684\u54cd\u5e94\uff01 \u200b \u5f53\u8f93\u5165\u7528\u6237\u540d\u540e\uff0c\u628a\u5149\u6807\u79fb\u52a8\u5230\u5176\u4ed6\u8868\u5355\u9879\u4e0a\u65f6\uff0c\u6d4f\u89c8\u5668\u4f1a\u4f7f\u7528AJAX\u6280\u672f\u5411\u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u4f1a\u67e5\u8be2\u540d\u4e3azhangSan\u7684\u7528\u6237\u662f\u5426\u5b58\u5728\uff0c\u6700\u7ec8\u670d\u52a1\u5668\u8fd4\u56detrue\u8868\u793a\u540d\u4e3alemontree7777777\u7684\u7528\u6237\u5df2\u7ecf\u5b58\u5728\u4e86\uff0c\u6d4f\u89c8\u5668\u5728\u5f97\u5230\u7ed3\u679c\u540e\u663e\u793a\u201c\u7528\u6237\u540d\u5df2\u88ab\u6ce8\u518c\uff01\u201d\u3002 \u6574\u4e2a\u8fc7\u7a0b\u4e2d\u9875\u9762\u6ca1\u6709\u5237\u65b0\uff0c\u53ea\u662f\u5c40\u90e8\u5237\u65b0\u4e86\uff1b \u5728\u8bf7\u6c42\u53d1\u51fa\u540e\uff0c\u6d4f\u89c8\u5668\u4e0d\u7528\u7b49\u5f85\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u679c\u5c31\u53ef\u4ee5\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\uff1b AJAX\u7684\u4f18\u7f3a\u70b9 \u4f18\u70b9\uff1a AJAX\u4f7f\u7528Javascript\u6280\u672f\u5411\u670d\u52a1\u5668\u53d1\u9001\u5f02\u6b65\u8bf7\u6c42\uff1b AJAX\u65e0\u987b\u5237\u65b0\u6574\u4e2a\u9875\u9762\uff1b \u56e0\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u5185\u5bb9\u4e0d\u518d\u662f\u6574\u4e2a\u9875\u9762\uff0c\u800c\u662f\u9875\u9762\u4e2d\u7684\u5c40\u90e8\uff0c\u6240\u4ee5AJAX\u6027\u80fd\u9ad8\uff1b jquery\u5b9e\u73b0\u7684ajax {% load staticfiles %} <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"{% static 'JS/jquery-3.1.1.js' %}\"></script> </head> <body> <button class=\"send_Ajax\">send_Ajax</button> <script> //$.ajax\u7684\u4e24\u79cd\u4f7f\u7528\u65b9\u5f0f: //$.ajax(settings); //$.ajax(url,[settings]); $(\".send_Ajax\").click(function(){ $.ajax({ url:\"/handle_Ajax/\", type:\"POST\", data:{username:\"Yuan\",password:123}, success:function(data){ alert(data) }, //=================== error============ error: function (jqXHR, textStatus, err) { // jqXHR: jQuery\u589e\u5f3a\u7684xhr // textStatus: \u8bf7\u6c42\u5b8c\u6210\u72b6\u6001 // err: \u5e95\u5c42\u901a\u8fc7throw\u629b\u51fa\u7684\u5f02\u5e38\u5bf9\u8c61\uff0c\u503c\u4e0e\u9519\u8bef\u7c7b\u578b\u6709\u5173 console.log(arguments); }, //=================== complete============ complete: function (jqXHR, textStatus) { // jqXHR: jQuery\u589e\u5f3a\u7684xhr // textStatus: \u8bf7\u6c42\u5b8c\u6210\u72b6\u6001 success | error console.log('statusCode: %d, statusText: %s', jqXHR.status, jqXHR.statusText); console.log('textStatus: %s', textStatus); }, //=================== statusCode============ statusCode: { '403': function (jqXHR, textStatus, err) { console.log(arguments); //\u6ce8\u610f\uff1a\u540e\u7aef\u6a21\u62dferrror\u65b9\u5f0f\uff1aHttpResponse.status_code=500 }, '400': function () { } } }) }) </script> </body> </html> view\uff1a import json,time def index(request): return render(request,\"index.html\") def handle_Ajax(request): username=request.POST.get(\"username\") password=request.POST.get(\"password\") print(username,password) time.sleep(10) return HttpResponse(json.dumps(\"Error Data!\")) $.ajax\u53c2\u6570 \u8bf7\u6c42\u53c2\u6570 ######################------------data---------################ data: \u5f53\u524dajax\u8bf7\u6c42\u8981\u643a\u5e26\u7684\u6570\u636e\uff0c\u662f\u4e00\u4e2ajson\u7684object\u5bf9\u8c61\uff0cajax\u65b9\u6cd5\u5c31\u4f1a\u9ed8\u8ba4\u5730\u628a\u5b83\u7f16\u7801\u6210\u67d0\u79cd\u683c\u5f0f (urlencoded:?a=1&b=2)\u53d1\u9001\u7ed9\u670d\u52a1\u7aef\uff1b\u6b64\u5916\uff0cajax\u9ed8\u8ba4\u4ee5get\u65b9\u5f0f\u53d1\u9001\u8bf7\u6c42\u3002 function testData() { $.ajax(\"/test\",{ //\u6b64\u65f6\u7684data\u662f\u4e00\u4e2ajson\u5f62\u5f0f\u7684\u5bf9\u8c61 data:{ a:1, b:2 } }); //?a=1&b=2 ######################------------processData---------################ processData\uff1a\u58f0\u660e\u5f53\u524d\u7684data\u6570\u636e\u662f\u5426\u8fdb\u884c\u8f6c\u7801\u6216\u9884\u5904\u7406\uff0c\u9ed8\u8ba4\u4e3atrue\uff0c\u5373\u9884\u5904\u7406\uff1bif\u4e3afalse\uff0c \u90a3\u4e48\u5bf9data\uff1a{a:1,b:2}\u4f1a\u8c03\u7528json\u5bf9\u8c61\u7684toString()\u65b9\u6cd5\uff0c\u5373{a:1,b:2}.toString() ,\u6700\u540e\u5f97\u5230\u4e00\u4e2a\uff3bobject\uff0cObject\uff3d\u5f62\u5f0f\u7684\u7ed3\u679c\u3002 ######################------------contentType---------################ contentType\uff1a\u9ed8\u8ba4\u503c: \"application/x-www-form-urlencoded\"\u3002\u53d1\u9001\u4fe1\u606f\u81f3\u670d\u52a1\u5668\u65f6\u5185\u5bb9\u7f16\u7801\u7c7b\u578b\u3002 \u7528\u6765\u6307\u660e\u5f53\u524d\u8bf7\u6c42\u7684\u6570\u636e\u7f16\u7801\u683c\u5f0f\uff1burlencoded:?a=1&b=2\uff1b\u5982\u679c\u60f3\u4ee5\u5176\u4ed6\u65b9\u5f0f\u63d0\u4ea4\u6570\u636e\uff0c \u6bd4\u5982contentType:\"application/json\"\uff0c\u5373\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2ajson\u5b57\u7b26\u4e32\uff1a $.ajax(\"/ajax_get\",{ data:JSON.stringify({ a:22, b:33 }), contentType:\"application/json\", type:\"POST\", }); //{a: 22, b: 33} \u6ce8\u610f\uff1acontentType:\"application/json\"\u4e00\u65e6\u8bbe\u5b9a\uff0cdata\u5fc5\u987b\u662fjson\u5b57\u7b26\u4e32\uff0c\u4e0d\u80fd\u662fjson\u5bf9\u8c61 views.py: json.loads(request.body.decode(\"utf8\")) ######################------------traditional---------################ traditional\uff1a\u4e00\u822c\u662f\u6211\u4eec\u7684data\u6570\u636e\u6709\u6570\u7ec4\u65f6\u4f1a\u7528\u5230 \uff1adata:{a:22,b:33,c:[\"x\",\"y\"]}, traditional\u4e3afalse\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u6df1\u5c42\u6b21\u8fed\u4ee3\uff1b \u54cd\u5e94\u53c2\u6570 /* dataType\uff1a \u9884\u671f\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b,\u670d\u52a1\u5668\u7aef\u8fd4\u56de\u7684\u6570\u636e\u4f1a\u6839\u636e\u8fd9\u4e2a\u503c\u89e3\u6790\u540e\uff0c\u4f20\u9012\u7ed9\u56de\u8c03\u51fd\u6570\u3002 \u9ed8\u8ba4\u4e0d\u9700\u8981\u663e\u6027\u6307\u5b9a\u8fd9\u4e2a\u5c5e\u6027\uff0cajax\u4f1a\u6839\u636e\u670d\u52a1\u5668\u8fd4\u56de\u7684content Type\u6765\u8fdb\u884c\u8f6c\u6362\uff1b \u6bd4\u5982\u6211\u4eec\u7684\u670d\u52a1\u5668\u54cd\u5e94\u7684content Type\u4e3ajson\u683c\u5f0f\uff0c\u8fd9\u65f6ajax\u65b9\u6cd5\u5c31\u4f1a\u5bf9\u54cd\u5e94\u7684\u5185\u5bb9 \u8fdb\u884c\u4e00\u4e2ajson\u683c\u5f0f\u7684\u8f6c\u6362\uff0cif\u8f6c\u6362\u6210\u529f\uff0c\u6211\u4eec\u5728success\u7684\u56de\u8c03\u51fd\u6570\u91cc\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2ajson\u683c\u5f0f \u7684\u5bf9\u8c61\uff1b\u8f6c\u6362\u5931\u8d25\u5c31\u4f1a\u89e6\u53d1error\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u3002\u5982\u679c\u6211\u4eec\u660e\u786e\u5730\u6307\u5b9a\u76ee\u6807\u7c7b\u578b\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 data Type\u3002 dataType\u7684\u53ef\u7528\u503c\uff1ahtml\uff5cxml\uff5cjson\uff5ctext\uff5cscript \u89c1\u4e0bdataType\u5b9e\u4f8b */ \u793a\u4f8b\uff1a from django.shortcuts import render,HttpResponse from django.views.decorators.csrf import csrf_exempt # Create your views here. import json def login(request): return render(request,'Ajax.html') def ajax_get(request): l=['alex','little alex'] dic={\"name\":\"alex\",\"pwd\":123} #return HttpResponse(l) #\u5143\u7d20\u76f4\u63a5\u8f6c\u6210\u5b57\u7b26\u4e32alexlittle alex #return HttpResponse(dic) #\u5b57\u5178\u7684\u952e\u76f4\u63a5\u8f6c\u6210\u5b57\u7b26\u4e32namepwd return HttpResponse(json.dumps(l)) return HttpResponse(json.dumps(dic))# \u4f20\u5230\u524d\u7aef\u7684\u662fjson\u5b57\u7b26\u4e32,\u8981\u60f3\u4f7f\u7528,\u9700\u8981JSON.parse(data) //--------------------------------------------------- function testData() { $.ajax('ajax_get', { success: function (data) { console.log(data); console.log(typeof(data)); //console.log(data.name); //JSON.parse(data); //console.log(data.name); }, //dataType:\"json\", } )} \u6ce8\u89e3:Response Headers\u7684content Type\u4e3atext/html,\u6240\u4ee5\u8fd4\u56de\u7684\u662fString;\u4f46\u5982\u679c\u6211\u4eec\u60f3\u8981\u4e00\u4e2ajson\u5bf9\u8c61 \u8bbe\u5b9adataType:\"json\"\u5373\u53ef,\u76f8\u5f53\u4e8e\u544a\u8bc9ajax\u65b9\u6cd5\u628a\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u8f6c\u6210json\u5bf9\u8c61\u53d1\u9001\u5230\u524d\u7aef.\u7ed3\u679c\u4e3aobject \u5f53\u7136\uff0c return HttpResponse(json.dumps(a),content_type=\"application/json\") \u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u8bbe\u5b9adataType:\"json\"\u4e86\u3002 content_type=\"application/json\"\u548ccontent_type=\"json\"\u662f\u4e00\u6837\u7684\uff01 csrf\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020 \u65b9\u5f0f1 $.ajaxSetup({ data: {csrfmiddlewaretoken: '{{ csrf_token }}' }, }); \u65b9\u5f0f2 <form> {% csrf_token %} </form> <script> $.ajax({ ... data:{ \"csrfmiddlewaretoken\":$(\"[name='csrfmiddlewaretoken']\").val(); } }) </script> \u65b9\u5f0f3\uff1a <script src=\"{% static 'js/jquery.cookie.js' %}\"></script> $.ajax({ headers:{\"X-CSRFToken\":$.cookie('csrftoken')}, }) JS\u5b9e\u73b0\u7684ajax AJAX\u6838\u5fc3\uff08 XMLHttpRequest\uff09 \u5176\u5b9eAJAX\u5c31\u662f\u5728Javascript\u4e2d\u591a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff1aXMLHttpRequest\u5bf9\u8c61\u3002\u6240\u6709\u7684\u5f02\u6b65\u4ea4\u4e92\u90fd\u662f\u4f7f\u7528XMLHttpServlet\u5bf9\u8c61\u5b8c\u6210\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b66\u4e60\u4e00\u4e2aJavascript\u7684\u65b0\u5bf9\u8c61\u5373\u53ef\u3002 var xmlHttp = new XMLHttpRequest()\uff1b\uff08\u5927\u591a\u6570\u6d4f\u89c8\u5668\u90fd\u652f\u6301DOM2\u89c4\u8303\uff09 \u6ce8\u610f\uff0c\u5404\u4e2a\u6d4f\u89c8\u5668\u5bf9XMLHttpRequest\u7684\u652f\u6301\u4e5f\u662f\u4e0d\u540c\u7684\uff01\u4e3a\u4e86\u5904\u7406\u6d4f\u89c8\u5668\u517c\u5bb9\u95ee\u9898\uff0c\u7ed9\u51fa\u4e0b\u9762\u65b9\u6cd5\u6765\u521b\u5efaXMLHttpRequest\u5bf9\u8c61\uff1a function createXMLHttpRequest() { var xmlHttp; // \u9002\u7528\u4e8e\u5927\u591a\u6570\u6d4f\u89c8\u5668\uff0c\u4ee5\u53caIE7\u548cIE\u66f4\u9ad8\u7248\u672c try{ xmlHttp = new XMLHttpRequest(); } catch (e) { // \u9002\u7528\u4e8eIE6 try { xmlHttp = new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e) { // \u9002\u7528\u4e8eIE5.5\uff0c\u4ee5\u53caIE\u66f4\u65e9\u7248\u672c try{ xmlHttp = new ActiveXObject(\"Microsoft.XMLHTTP\"); } catch (e){} } } return xmlHttp; } \u4f7f\u7528\u6d41\u7a0b \u6b65\u9aa41: \u6253\u5f00\u4e0e\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff08open\u65b9\u6cd5\uff09 \u5f53\u5f97\u5230XMLHttpRequest\u5bf9\u8c61\u540e\uff0c\u5c31\u53ef\u4ee5\u8c03\u7528\u8be5\u5bf9\u8c61\u7684open()\u65b9\u6cd5\u6253\u5f00\u4e0e\u670d\u52a1\u5668\u7684\u8fde\u63a5\u4e86\u3002open()\u65b9\u6cd5\u7684\u53c2\u6570\u5982\u4e0b\uff1a open(method, url, async)\uff1a method\uff1a\u8bf7\u6c42\u65b9\u5f0f\uff0c\u901a\u5e38\u4e3aGET\u6216POST\uff1b url\uff1a\u8bf7\u6c42\u7684\u670d\u52a1\u5668\u5730\u5740\uff0c\u4f8b\u5982\uff1a/ajaxdemo1/AServlet\uff0c\u82e5\u4e3aGET\u8bf7\u6c42\uff0c\u8fd8\u53ef\u4ee5\u5728URL\u540e\u8ffd\u52a0\u53c2\u6570\uff1b async\uff1a\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u4e0d\u7ed9\uff0c\u9ed8\u8ba4\u503c\u4e3atrue\uff0c\u8868\u793a\u5f02\u6b65\u8bf7\u6c42\uff1b var xmlHttp = createXMLHttpRequest(); xmlHttp.open(\"GET\", \"/ajax_get/?a=1\", true);\u3000 \u6b65\u9aa42: \u53d1\u9001\u8bf7\u6c42 \u5f53\u4f7f\u7528open\u6253\u5f00\u8fde\u63a5\u540e\uff0c\u5c31\u53ef\u4ee5\u8c03\u7528XMLHttpRequest\u5bf9\u8c61\u7684send()\u65b9\u6cd5\u53d1\u9001\u8bf7\u6c42\u4e86\u3002send()\u65b9\u6cd5\u7684\u53c2\u6570\u4e3aPOST\u8bf7\u6c42\u53c2\u6570\uff0c\u5373\u5bf9\u5e94HTTP\u534f\u8bae\u7684\u8bf7\u6c42\u4f53\u5185\u5bb9\uff0c\u82e5\u662fGET\u8bf7\u6c42\uff0c\u9700\u8981\u5728URL\u540e\u8fde\u63a5\u53c2\u6570\u3002 \u6ce8\u610f\uff1a\u82e5\u6ca1\u6709\u53c2\u6570\uff0c\u9700\u8981\u7ed9\u51fanull\u4e3a\u53c2\u6570\uff01\u82e5\u4e0d\u7ed9\u51fanull\u4e3a\u53c2\u6570\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4FireFox\u6d4f\u89c8\u5668\u4e0d\u80fd\u6b63\u5e38\u53d1\u9001\u8bf7\u6c42\uff01 xmlHttp.send(null); \u6b65\u9aa43: \u63a5\u6536\u670d\u52a1\u5668\u54cd\u5e94 \u5f53\u8bf7\u6c42\u53d1\u9001\u51fa\u53bb\u540e\uff0c\u670d\u52a1\u5668\u7aef\u5c31\u5f00\u59cb\u6267\u884c\u4e86\uff0c\u4f46\u670d\u52a1\u5668\u7aef\u7684\u54cd\u5e94\u8fd8\u6ca1\u6709\u63a5\u6536\u5230\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u63a5\u6536\u670d\u52a1\u5668\u7684\u54cd\u5e94\u3002 XMLHttpRequest\u5bf9\u8c61\u6709\u4e00\u4e2aonreadystatechange\u4e8b\u4ef6\uff0c\u5b83\u4f1a\u5728XMLHttpRequest\u5bf9\u8c61\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\u88ab\u8c03\u7528\u3002\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e0bXMLHttpRequest\u5bf9\u8c61\u76845\u79cd\u72b6\u6001\uff1a 0\uff1a\u521d\u59cb\u5316\u672a\u5b8c\u6210\u72b6\u6001\uff0c\u53ea\u662f\u521b\u5efa\u4e86XMLHttpRequest\u5bf9\u8c61\uff0c\u8fd8\u672a\u8c03\u7528open()\u65b9\u6cd5\uff1b 1\uff1a\u8bf7\u6c42\u5df2\u5f00\u59cb\uff0copen()\u65b9\u6cd5\u5df2\u8c03\u7528\uff0c\u4f46\u8fd8\u6ca1\u8c03\u7528send()\u65b9\u6cd5\uff1b 2\uff1a\u8bf7\u6c42\u53d1\u9001\u5b8c\u6210\u72b6\u6001\uff0csend()\u65b9\u6cd5\u5df2\u8c03\u7528\uff1b 3\uff1a\u5f00\u59cb\u8bfb\u53d6\u670d\u52a1\u5668\u54cd\u5e94\uff1b 4\uff1a\u8bfb\u53d6\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\u3002 onreadystatechange\u4e8b\u4ef6\u4f1a\u5728\u72b6\u6001\u4e3a1\u30012\u30013\u30014\u65f6\u5f15\u53d1\u3002 \u4e0b\u9762\u4ee3\u7801\u4f1a\u88ab\u6267\u884c\u56db\u6b21\uff01\u5bf9\u5e94XMLHttpRequest\u7684\u56db\u79cd\u72b6\u6001\uff01 xmlHttp.onreadystatechange = function() { alert('hello'); }; \u4f46\u901a\u5e38\u6211\u4eec\u53ea\u5173\u5fc3\u6700\u540e\u4e00\u79cd\u72b6\u6001\uff0c\u5373\u8bfb\u53d6\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\u65f6\uff0c\u5ba2\u6237\u7aef\u624d\u4f1a\u505a\u51fa\u6539\u53d8\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7XMLHttpRequest\u5bf9\u8c61\u7684readyState\u5c5e\u6027\u6765\u5f97\u5230XMLHttpRequest\u5bf9\u8c61\u7684\u72b6\u6001\u3002 xmlHttp.onreadystatechange = function() { if(xmlHttp.readyState == 4) { alert('hello'); } }; \u5176\u5b9e\u6211\u4eec\u8fd8\u8981\u5173\u5fc3\u670d\u52a1\u5668\u54cd\u5e94\u7684\u72b6\u6001\u7801\u662f\u5426\u4e3a200\uff0c\u5176\u670d\u52a1\u5668\u54cd\u5e94\u4e3a404\uff0c\u6216500\uff0c\u90a3\u4e48\u5c31\u8868\u793a\u8bf7\u6c42\u5931\u8d25\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7XMLHttpRequest\u5bf9\u8c61\u7684status\u5c5e\u6027\u5f97\u5230\u670d\u52a1\u5668\u7684\u72b6\u6001\u7801\u3002 \u6700\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u83b7\u53d6\u5230\u670d\u52a1\u5668\u54cd\u5e94\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u901a\u8fc7XMLHttpRequest\u5bf9\u8c61\u7684responseText\u5f97\u5230\u670d\u52a1\u5668\u54cd\u5e94\u5185\u5bb9\u3002 xmlHttp.onreadystatechange = function() { if(xmlHttp.readyState == 4 && xmlHttp.status == 200) { alert(xmlHttp.responseText); } }; if \u53d1\u9001POST\u8bf7\u6c42 <1>\u9700\u8981\u8bbe\u7f6e\u8bf7\u6c42\u5934\uff1axmlHttp.setRequestHeader(\u201cContent-Type\u201d, \u201capplication/x-www-form-urlencoded\u201d)\uff1b\u6ce8\u610f :form\u8868\u5355\u4f1a\u9ed8\u8ba4\u8fd9\u4e2a\u952e\u503c\u5bf9\u4e0d\u8bbe\u5b9a\uff0cWeb\u670d\u52a1\u5668\u4f1a\u5ffd\u7565\u8bf7\u6c42\u4f53\u7684\u5185\u5bb9\u3002 <2>\u5728\u53d1\u9001\u65f6\u53ef\u4ee5\u6307\u5b9a\u8bf7\u6c42\u4f53\u4e86\uff1axmlHttp.send(\u201cusername=yuan&password=123\u201d) JS\u5b9e\u73b0ajax\u5c0f\u7ed3 /* \u521b\u5efaXMLHttpRequest\u5bf9\u8c61\uff1b \u8c03\u7528open()\u65b9\u6cd5\u6253\u5f00\u4e0e\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff1b \u8c03\u7528send()\u65b9\u6cd5\u53d1\u9001\u8bf7\u6c42\uff1b \u4e3aXMLHttpRequest\u5bf9\u8c61\u6307\u5b9aonreadystatechange\u4e8b\u4ef6\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5728 XMLHttpRequest\u76841\u30012\u30013\u30014\uff0c\u56db\u79cd\u72b6\u6001\u65f6\u88ab\u8c03\u7528\uff1b XMLHttpRequest\u5bf9\u8c61\u76845\u79cd\u72b6\u6001\uff0c\u901a\u5e38\u6211\u4eec\u53ea\u5173\u5fc34\u72b6\u6001\u3002 XMLHttpRequest\u5bf9\u8c61\u7684status\u5c5e\u6027\u8868\u793a\u670d\u52a1\u5668\u72b6\u6001\u7801\uff0c\u5b83\u53ea\u6709\u5728readyState\u4e3a4\u65f6\u624d\u80fd\u83b7\u53d6\u5230\u3002 XMLHttpRequest\u5bf9\u8c61\u7684responseText\u5c5e\u6027\u8868\u793a\u670d\u52a1\u5668\u54cd\u5e94\u5185\u5bb9\uff0c\u5b83\u53ea\u6709\u5728 readyState\u4e3a4\u65f6\u624d\u80fd\u83b7\u53d6\u5230\uff01 */ \u6d4b\u8bd5\u4ee3\u7801\uff1a <h1>AJAX</h1> <button onclick=\"send()\">\u6d4b\u8bd5</button> <div id=\"div1\"></div> <script> function createXMLHttpRequest() { try { return new XMLHttpRequest();//\u5927\u591a\u6570\u6d4f\u89c8\u5668 } catch (e) { try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e) { return new ActiveXObject(\"Microsoft.XMLHTTP\"); } } } function send() { var xmlHttp = createXMLHttpRequest(); xmlHttp.onreadystatechange = function() { if(xmlHttp.readyState == 4 && xmlHttp.status == 200) { var div = document.getElementById(\"div1\"); div.innerText = xmlHttp.responseText; div.textContent = xmlHttp.responseText; } }; xmlHttp.open(\"POST\", \"/ajax_post/\", true); //post: xmlHttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\"); xmlHttp.send(null); //post: xmlHttp.send(\"b=B\"); } </script> #--------------------------------views.py from django.views.decorators.csrf import csrf_exempt def login(request): print('hello ajax') return render(request,'index.html') @csrf_exempt \uff03csrf\u9632\u5fa1 def ajax_post(request): print('ok') return HttpResponse('helloyuanhao') \u5b9e\u4f8b\uff08\u7528\u6237\u540d\u662f\u5426\u5df2\u88ab\u6ce8\u518c\uff09 7.1 \u3000 \u529f\u80fd\u4ecb\u7ecd \u5728\u6ce8\u518c\u8868\u5355\u4e2d\uff0c\u5f53\u7528\u6237\u586b\u5199\u4e86\u7528\u6237\u540d\u540e\uff0c\u628a\u5149\u6807\u79fb\u5f00\u540e\uff0c\u4f1a\u81ea\u52a8\u5411\u670d\u52a1\u5668\u53d1\u9001\u5f02\u6b65\u8bf7\u6c42\u3002\u670d\u52a1\u5668\u8fd4\u56detrue\u6216false\uff0c\u8fd4\u56detrue\u8868\u793a\u8fd9\u4e2a\u7528\u6237\u540d\u5df2\u7ecf\u88ab\u6ce8\u518c\u8fc7\uff0c\u8fd4\u56defalse\u8868\u793a\u6ca1\u6709\u6ce8\u518c\u8fc7\u3002 \u5ba2\u6237\u7aef\u5f97\u5230\u670d\u52a1\u5668\u8fd4\u56de\u7684\u7ed3\u679c\u540e\uff0c\u786e\u5b9a\u662f\u5426\u5728\u7528\u6237\u540d\u6587\u672c\u6846\u540e\u663e\u793a\u201c\u7528\u6237\u540d\u5df2\u88ab\u6ce8\u518c\u201d\u7684\u9519\u8bef\u4fe1\u606f\uff01 7.2 \u3000 \u6848\u4f8b\u5206\u6790 \u9875\u9762\u4e2d\u7ed9\u51fa\u6ce8\u518c\u8868\u5355\uff1b \u5728username\u8868\u5355\u5b57\u6bb5\u4e2d\u6dfb\u52a0onblur\u4e8b\u4ef6\uff0c\u8c03\u7528send()\u65b9\u6cd5\uff1b send()\u65b9\u6cd5\u83b7\u53d6username\u8868\u5355\u5b57\u6bb5\u7684\u5185\u5bb9\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u5f02\u6b65\u8bf7\u6c42\uff0c\u53c2\u6570\u4e3ausername\uff1b django \u7684\u89c6\u56fe\u51fd\u6570\uff1a\u83b7\u53d6username\u53c2\u6570\uff0c\u5224\u65ad\u662f\u5426\u4e3a\u201cyuan\u201d\uff0c\u5982\u679c\u662f\u54cd\u5e94true\uff0c\u5426\u5219\u54cd\u5e94false \u53c2\u8003\u4ee3\u7801\uff1a <script type=\"text/javascript\"> function createXMLHttpRequest() { try { return new XMLHttpRequest(); } catch (e) { try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e) { return new ActiveXObject(\"Microsoft.XMLHTTP\"); } } } function send() { var xmlHttp = createXMLHttpRequest(); xmlHttp.onreadystatechange = function() { if(xmlHttp.readyState == 4 && xmlHttp.status == 200) { if(xmlHttp.responseText == \"true\") { document.getElementById(\"error\").innerText = \"\u7528\u6237\u540d\u5df2\u88ab\u6ce8\u518c\uff01\"; document.getElementById(\"error\").textContent = \"\u7528\u6237\u540d\u5df2\u88ab\u6ce8\u518c\uff01\"; } else { document.getElementById(\"error\").innerText = \"\"; document.getElementById(\"error\").textContent = \"\"; } } }; xmlHttp.open(\"POST\", \"/ajax_check/\", true, \"json\"); xmlHttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\"); var username = document.getElementById(\"username\").value; xmlHttp.send(\"username=\" + username); } </script> //--------------------------------------------------index.html <h1>\u6ce8\u518c</h1> <form action=\"\" method=\"post\"> \u7528\u6237\u540d\uff1a<input id=\"username\" type=\"text\" name=\"username\" onblur=\"send()\"/><span id=\"error\"></span><br/> \u5bc6\u3000\u7801\uff1a<input type=\"text\" name=\"password\"/><br/> <input type=\"submit\" value=\"\u6ce8\u518c\"/> </form> //--------------------------------------------------views.py from django.views.decorators.csrf import csrf_exempt def login(request): print('hello ajax') return render(request,'index.html') # return HttpResponse('helloyuanhao') @csrf_exempt def ajax_check(request): print('ok') username=request.POST.get('username',None) if username=='yuan': return HttpResponse('true') return HttpResponse('false') jQuery.serialize() serialize() \u51fd\u6570\u7528\u4e8e \u5e8f\u5217\u5316\u4e00\u7ec4\u8868\u5355\u5143\u7d20\uff0c\u5c06\u8868\u5355\u5185\u5bb9\u7f16\u7801\u4e3a\u7528\u4e8e\u63d0\u4ea4\u7684\u5b57\u7b26\u4e32 \u3002 serialize() \u51fd\u6570\u5e38\u7528\u4e8e\u5c06\u8868\u5355\u5185\u5bb9\u5e8f\u5217\u5316\uff0c\u4ee5\u4fbf\u7528\u4e8eAJAX\u63d0\u4ea4\u3002 \u8be5\u51fd\u6570\u4e3b\u8981\u6839\u636e \u7528\u4e8e\u63d0\u4ea4 \u7684 \u6709\u6548 \u8868\u5355\u63a7\u4ef6\u7684name\u548cvalue\uff0c\u5c06\u5b83\u4eec\u62fc\u63a5\u4e3a\u4e00\u4e2a\u53ef\u76f4\u63a5\u7528\u4e8e\u8868\u5355\u63d0\u4ea4\u7684\u6587\u672c\u5b57\u7b26\u4e32\uff0c\u8be5\u5b57\u7b26\u4e32\u5df2\u7ecf\u8fc7\u6807\u51c6\u7684URL\u7f16\u7801\u5904\u7406(\u5b57\u7b26\u96c6\u7f16\u7801\u4e3aUTF-8)\u3002 \u8be5\u51fd\u6570\u4e0d\u4f1a\u5e8f\u5217\u5316\u4e0d\u9700\u8981\u63d0\u4ea4\u7684\u8868\u5355\u63a7\u4ef6\uff0c\u8fd9\u548c\u5e38\u89c4\u7684\u8868\u5355\u63d0\u4ea4\u884c\u4e3a\u662f\u4e00\u81f4\u7684\u3002\u4f8b\u5982\uff1a\u4e0d\u5728 \u6807\u7b7e\u5185\u7684\u8868\u5355\u63a7\u4ef6\u4e0d\u4f1a\u88ab\u63d0\u4ea4\u3001\u6ca1\u6709name\u5c5e\u6027\u7684\u8868\u5355\u63a7\u4ef6\u4e0d\u4f1a\u88ab\u63d0\u4ea4\u3001\u5e26\u6709disabled\u5c5e\u6027\u7684\u8868\u5355\u63a7\u4ef6\u4e0d\u4f1a\u88ab\u63d0\u4ea4\u3001\u6ca1\u6709\u88ab\u9009\u4e2d\u7684\u8868\u5355\u63a7\u4ef6\u4e0d\u4f1a\u88ab\u63d0\u4ea4\u3002 \u4e0e\u5e38\u89c4\u8868\u5355\u63d0\u4ea4\u4e0d\u4e00\u6837\u7684\u662f\uff1a\u5e38\u89c4\u8868\u5355\u4e00\u822c\u4f1a\u63d0\u4ea4\u5e26\u6709name\u7684\u6309\u94ae\u63a7\u4ef6\uff0c\u800cserialize()\u51fd\u6570\u4e0d\u4f1a\u5e8f\u5217\u5316\u5e26\u6709name\u7684\u6309\u94ae\u63a7\u4ef6\u3002\u66f4\u591a\u8be6\u60c5\u8bf7\u70b9\u51fb\u8fd9\u91cc\u3002 \u8bed\u6cd5 jQuery 1.0 \u65b0\u589e\u8be5\u51fd\u6570\u3002 jQueryObject.serialize( ) \u8fd4\u56de\u503c serialize() \u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e3aString\u7c7b\u578b\uff0c\u8fd4\u56de\u5c06\u8868\u5355\u5143\u7d20\u7f16\u7801\u540e\u7684\u53ef\u7528\u4e8e\u8868\u5355\u63d0\u4ea4\u7684\u6587\u672c\u5b57\u7b26\u4e32\u3002 \u8bf7\u53c2\u8003\u4e0b\u9762\u8fd9\u6bb5\u521d\u59cbHTML\u4ee3\u7801\uff1a <form name=\"myForm\" action=\"http://www.365mini.com\" method=\"post\"> <input name=\"uid\" type=\"hidden\" value=\"1\" /> <input name=\"username\" type=\"text\" value=\"\u5f20\u4e09\" /> <input name=\"password\" type=\"text\" value=\"123456\" /> <select name=\"grade\" id=\"grade\"> <option value=\"1\">\u4e00\u5e74\u7ea7</option> <option value=\"2\">\u4e8c\u5e74\u7ea7</option> <option value=\"3\" selected=\"selected\">\u4e09\u5e74\u7ea7</option> <option value=\"4\">\u56db\u5e74\u7ea7</option> <option value=\"5\">\u4e94\u5e74\u7ea7</option> <option value=\"6\">\u516d\u5e74\u7ea7</option> </select> <input name=\"sex\" type=\"radio\" checked=\"checked\" value=\"1\" />\u7537 <input name=\"sex\" type=\"radio\" value=\"0\" />\u5973 <input name=\"hobby\" type=\"checkbox\" checked=\"checked\" value=\"1\" />\u6e38\u6cf3 <input name=\"hobby\" type=\"checkbox\" checked=\"checked\" value=\"2\" />\u8dd1\u6b65 <input name=\"hobby\" type=\"checkbox\" value=\"3\" />\u7fbd\u6bdb\u7403 <input name=\"btn\" id=\"btn\" type=\"button\" value=\"\u70b9\u51fb\" /> \u5bf9 \u5143\u7d20\u8fdb\u884c\u5e8f\u5217\u5316\u53ef\u4ee5\u76f4\u63a5\u5e8f\u5217\u5316\u5176\u5185\u90e8\u7684\u6240\u6709\u8868\u5355\u5143\u7d20\u3002 // \u5e8f\u5217\u5316<form>\u5185\u7684\u6240\u6709\u8868\u5355\u5143\u7d20 // \u5e8f\u5217\u5316\u540e\u7684\u7ed3\u679c\uff1auid=1&username=%E5%BC%A0%E4%B8%89&password=123456&grade=3&sex=1&hobby=1&hobby=2 alert( $(\"form\").serialize() ); \u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5bf9\u90e8\u5206\u8868\u5355\u5143\u7d20\u8fdb\u884c\u5e8f\u5217\u5316\u3002 // \u5e8f\u5217\u5316\u6240\u6709\u7684text\u3001select\u3001checkbox\u8868\u5355\u5143\u7d20 // \u5e8f\u5217\u5316\u540e\u7684\u7ed3\u679c\uff1ausername=%E5%BC%A0%E4%B8%89&password=123456&grade=3&hobby=1&hobby=2 alert( $(\":text, select, :checkbox\").serialize() ); serialize() \u51fd\u6570\u901a\u5e38\u7528\u4e8e\u5c06\u8868\u5355\u5185\u5bb9\u5e8f\u5217\u5316\uff0c\u4ee5\u4fbf\u901a\u8fc7AJAX\u65b9\u5f0f\u63d0\u4ea4\u3002 $(\"#btn\").click( function(){ // \u5c06\u5f53\u524d\u8868\u5355\u5185\u5bb9\u4ee5POST\u8bf7\u6c42\u7684AJAX\u65b9\u5f0f\u63d0\u4ea4\u5230\"http://www.365mini.com\" $.post( \"http://www.365mini.com\", $(\"form\").serialize(), function( data, textStatus, jqXHR ){ alert( \"AJAX\u63d0\u4ea4\u6210\u529f!\" ); } ); } ); \u4e0a\u4f20\u6587\u4ef6 form\u8868\u5355\u4e0a\u4f20\u6587\u4ef6 html <h3>form\u8868\u5355\u4e0a\u4f20\u6587\u4ef6</h3> <form action=\"/upload_file/\" method=\"post\" enctype=\"multipart/form-data\"> <p><input type=\"file\" name=\"upload_file_form\"></p> <input type=\"submit\"> </form> view def index(request): return render(request,\"index.html\") def upload_file(request): print(\"FILES:\",request.FILES) print(\"POST:\",request.POST) return HttpResponse(\"\u4e0a\u4f20\u6210\u529f!\") Ajax(FormData) FormData\u662f\u4ec0\u4e48\u5462\uff1f XMLHttpRequest Level 2\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u63a5\u53e3 FormData .\u5229\u7528 FormData\u5bf9\u8c61 ,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7JavaScript\u7528\u4e00\u4e9b\u952e\u503c\u5bf9\u6765\u6a21\u62df\u4e00\u7cfb\u5217\u8868\u5355\u63a7\u4ef6,\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528XMLHttpRequest\u7684 send() \u65b9\u6cd5\u6765\u5f02\u6b65\u7684\u63d0\u4ea4\u8fd9\u4e2a\"\u8868\u5355\".\u6bd4\u8d77\u666e\u901a\u7684ajax,\u4f7f\u7528 FormData \u7684\u6700\u5927\u4f18\u70b9\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u5f02\u6b65\u4e0a\u4f20\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6. \u6240\u6709\u4e3b\u6d41\u6d4f\u89c8\u5668\u7684\u8f83\u65b0\u7248\u672c\u90fd\u5df2\u7ecf\u652f\u6301\u8fd9\u4e2a\u5bf9\u8c61\u4e86\uff0c\u6bd4\u5982Chrome 7+\u3001Firefox 4+\u3001IE 10+\u3001Opera 12+\u3001Safari 5+\u3002 html <h3>Ajax\u4e0a\u4f20\u6587\u4ef6</h3> <p><input type=\"text\" name=\"username\" id=\"username\" placeholder=\"username\"></p> <p><input type=\"file\" name=\"upload_file_ajax\" id=\"upload_file_ajax\"></p> <button id=\"upload_button\">\u63d0\u4ea4</button> {#\u6ce8\u610fbutton\u6807\u7b7e\u4e0d\u8981\u7528\u5728form\u8868\u5355\u4e2d\u4f7f\u7528#} <script> $(\"#upload_button\").click(function(){ var username=$(\"#username\").val(); var upload_file=$(\"#upload_file_ajax\")[0].files[0]; var formData=new FormData(); formData.append(\"username\",username); formData.append(\"upload_file_ajax\",upload_file); $.ajax({ url:\"/upload_file/\", type:\"POST\", data:formData, contentType:false, processData:false, success:function(){ alert(\"\u4e0a\u4f20\u6210\u529f!\") } }); }) </script> views def index(request): return render(request,\"index.html\") def upload_file(request): print(\"FILES:\",request.FILES) print(\"POST:\",request.POST) return HttpResponse(\"\u4e0a\u4f20\u6210\u529f!\") \u4f2a\u9020Ajax\u4e0a\u4f20\u6587\u4ef6 iframe\u6807\u7b7e < iframe >\u6807\u7b7e\u89c4\u5b9a\u4e00\u4e2a\u5185\u8054\u6846\u67b6\u3002 \u4e00\u4e2a\u5185\u8054\u6846\u67b6\u88ab\u7528\u6765\u5728\u5f53\u524d HTML \u6587\u6863\u4e2d\u5d4c\u5165\u53e6\u4e00\u4e2a\u6587\u6863\u3002 \u793a\u4f8b\uff1a <iframe src=\"http://www.baidu.com\" width=\"1000px\" height=\"600px\"></iframe> iframe+form <h3>\u4f2a\u9020Ajax\u4e0a\u4f20\u6587\u4ef6</h3> <form action=\"/upload_file/\" method=\"post\" id=\"form2\" target=\"ifr\" enctype=\"multipart/form-data\"> <p> <iframe name=\"ifr\" id=\"ifr\"></iframe></p> <p><input type=\"file\" name=\"upload_file\"></p> <p><input type=\"text\" name=\"user\"></p> <input type=\"button\" value=\"\u63d0\u4ea4\" id=\"submitBtn\"> </form> <script> $(\"#submitBtn\").click(function(){ $(\"#ifr\").load(iframeLoaded); $(\"#form2\").submit(); }); function iframeLoaded(){ alert(123) } </script> views def index(request): return render(request,\"index.html\") def upload_file(request): print(\"FILES:\",request.FILES) print(\"POST:\",request.POST) return HttpResponse(\"\u4e0a\u4f20\u6210\u529f!\") \u540c\u6e90\u7b56\u7565\u4e0eJsonp \u540c\u6e90\u7b56\u7565 \u540c\u6e90\u7b56\u7565\uff08Same origin policy\uff09\u662f\u4e00\u79cd\u7ea6\u5b9a\uff0c\u5b83\u662f\u6d4f\u89c8\u5668\u6700\u6838\u5fc3\u4e5f\u6700\u57fa\u672c\u7684\u5b89\u5168\u529f\u80fd\uff0c\u5982\u679c\u7f3a\u5c11\u4e86\u540c\u6e90\u7b56\u7565\uff0c\u5219\u6d4f\u89c8\u5668\u7684\u6b63\u5e38\u529f\u80fd\u53ef\u80fd\u90fd\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\u53ef\u4ee5\u8bf4Web\u662f\u6784\u5efa\u5728\u540c\u6e90\u7b56\u7565\u57fa\u7840\u4e4b\u4e0a\u7684\uff0c\u6d4f\u89c8\u5668\u53ea\u662f\u9488\u5bf9\u540c\u6e90\u7b56\u7565\u7684\u4e00\u79cd\u5b9e\u73b0\u3002 \u540c\u6e90\u7b56\u7565\uff0c\u5b83\u662f\u7531Netscape\u63d0\u51fa\u7684\u4e00\u4e2a\u8457\u540d\u7684\u5b89\u5168\u7b56\u7565\u3002\u73b0\u5728\u6240\u6709\u652f\u6301JavaScript \u7684\u6d4f\u89c8\u5668\u90fd\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u7b56\u7565\u3002\u6240\u8c13\u540c\u6e90\u662f\u6307\uff0c\u57df\u540d\uff0c\u534f\u8bae\uff0c\u7aef\u53e3\u76f8\u540c\u3002\u5f53\u4e00\u4e2a\u6d4f\u89c8\u5668\u7684\u4e24\u4e2atab\u9875\u4e2d\u5206\u522b\u6253\u5f00\u6765 \u767e\u5ea6\u548c\u8c37\u6b4c\u7684\u9875\u9762\u5f53\u6d4f\u89c8\u5668\u7684\u767e\u5ea6tab\u9875\u6267\u884c\u4e00\u4e2a\u811a\u672c\u7684\u65f6\u5019\u4f1a\u68c0\u67e5\u8fd9\u4e2a\u811a\u672c\u662f\u5c5e\u4e8e\u54ea\u4e2a\u9875\u9762\u7684\uff0c\u5373\u68c0\u67e5\u662f\u5426\u540c\u6e90\uff0c\u53ea\u6709\u548c\u767e\u5ea6\u540c\u6e90\u7684\u811a\u672c\u624d\u4f1a\u88ab\u6267\u884c\u3002\u5982\u679c\u975e\u540c\u6e90\uff0c\u90a3\u4e48\u5728\u8bf7\u6c42\u6570\u636e\u65f6\uff0c\u6d4f\u89c8\u5668\u4f1a\u5728\u63a7\u5236\u53f0\u4e2d\u62a5\u4e00\u4e2a\u5f02\u5e38\uff0c\u63d0\u793a\u62d2\u7edd\u8bbf\u95ee\u3002 \u793a\u4f8b\uff1a \u9879\u76ee1: ==================================http://127.0.0.1:8001\u9879\u76ee\u7684index <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"http://code.jquery.com/jquery-latest.js\"></script> </head> <body> <button>ajax</button> {% csrf_token %} <script> $(\"button\").click(function(){ $.ajax({ url:\"http://127.0.0.1:7766/SendAjax/\", type:\"POST\", data:{\"username\":\"yuan\",\"csrfmiddlewaretoken\":$(\"[name='csrfmiddlewaretoken']\").val()}, success:function(data){ alert(123); alert(data) } }) }) </script> </body> </html> ==================================http://127.0.0.1:8001\u9879\u76ee\u7684views def index(request): return render(request,\"index.html\") def ajax(request): import json print(request.POST,\"+++++++++++\") return HttpResponse(json.dumps(\"hello\")) \u9879\u76ee2: ==================================http://127.0.0.1:8001\u9879\u76ee\u7684index <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"http://code.jquery.com/jquery-latest.js\"></script> </head> <body> <button>ajax</button> {% csrf_token %} <script> $(\"button\").click(function(){ $.ajax({ url:\"http://127.0.0.1:7766/SendAjax/\", type:\"POST\", data:{\"username\":\"yuan\",\"csrfmiddlewaretoken\":$(\"[name='csrfmiddlewaretoken']\").val()}, success:function(data){ alert(123); alert(data) } }) }) </script> </body> </html> ==================================http://127.0.0.1:8001\u9879\u76ee\u7684views def index(request): return render(request,\"index.html\") def ajax(request): import json print(request.POST,\"+++++++++++\") return HttpResponse(json.dumps(\"hello\")) \u5f53\u70b9\u51fb\u9879\u76ee1\u7684\u6309\u94ae\u65f6\uff0c\u53d1\u9001\u4e86\u8bf7\u6c42\uff0c\u4f46\u662f\u4f1a\u53d1\u73b0\u62a5\u9519\u5982\u4e0b\uff1a \u5df2\u62e6\u622a\u8de8\u6e90\u8bf7\u6c42\uff1a\u540c\u6e90\u7b56\u7565\u7981\u6b62\u8bfb\u53d6\u4f4d\u4e8e http://127.0.0.1:7766/SendAjax/ \u7684\u8fdc\u7a0b\u8d44\u6e90\u3002 \uff08\u539f\u56e0\uff1aCORS \u5934\u7f3a\u5c11 'Access-Control-Allow-Origin'\uff09\u3002 \u4f46\u662f\u6ce8\u610f\uff0c\u9879\u76ee2\u4e2d\u7684\u8bbf\u95ee\u5df2\u7ecf\u53d1\u751f\u4e86\uff0c\u8bf4\u660e\u662f\u6d4f\u89c8\u5668\u5bf9\u975e\u540c\u6e90\u8bf7\u6c42\u8fd4\u56de\u7684\u7ed3\u679c\u505a\u4e86\u62e6\u622a\u3002 Jsonp jsonp\u662fjson\u7528\u6765\u8de8\u57df\u7684\u4e00\u4e2a\u4e1c\u897f\u3002\u539f\u7406\u662f\u901a\u8fc7script\u6807\u7b7e\u7684\u8de8\u57df\u7279\u6027\u6765\u7ed5\u8fc7\u540c\u6e90\u7b56\u7565\u3002 \u601d\u8003\uff1a\u8fd9\u7b97\u600e\u4e48\u56de\u4e8b\uff1f <script src=\"http://code.jquery.com/jquery-latest.js\"></script> \u501f\u52a9script\u6807\u7b7e\uff0c\u5b9e\u73b0\u8de8\u57df\u8bf7\u6c42\uff0c\u793a\u4f8b\uff1a # =============================http://127.0.0.1:8001/index <button>ajax</button> {% csrf_token %} <script> function func(name){ alert(name) } </script> <script src=\"http://127.0.0.1:7766/SendAjax/\"></script> # =============================http://127.0.0.1:8002/ from django.views.decorators.csrf import csrf_exempt @csrf_exempt def SendAjax(request): import json print(\"++++++++\") # dic={\"k1\":\"v1\"} return HttpResponse(\"func('yuan')\") # return HttpResponse(\"func('%s')\"%json.dumps(dic)) \u8fd9\u5176\u5b9e\u5c31\u662fJSONP\u7684\u7b80\u5355\u5b9e\u73b0\u6a21\u5f0f\uff0c\u6216\u8005\u8bf4\u662fJSONP\u7684\u539f\u578b\uff1a\u521b\u5efa\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u7136\u540e\u5728\u8fdc\u7a0b\u670d\u52a1\u4e0a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5e76\u4e14\u5c06JSON \u6570\u636e\u5f62\u5f0f\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u5b8c\u6210\u56de\u8c03\u3002 \u5c06JSON\u6570\u636e\u586b\u5145\u8fdb\u56de\u8c03\u51fd\u6570\uff0c\u8fd9\u5c31\u662fJSONP\u7684JSON+Padding\u7684\u542b\u4e49\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e2ascript\u6807\u7b7e\u80fd\u591f\u52a8\u6001\u7684\u8c03\u7528\uff0c\u800c\u4e0d\u662f\u50cf\u4e0a\u9762\u56e0\u4e3a\u56fa\u5b9a\u5728html\u91cc\u9762\u6240\u4ee5\u6ca1\u7b49\u9875\u9762\u663e\u793a\u5c31\u6267\u884c\u4e86\uff0c\u5f88\u4e0d\u7075\u6d3b\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7javascript\u52a8\u6001\u7684\u521b\u5efascript\u6807\u7b7e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u7075\u6d3b\u8c03\u7528\u8fdc\u7a0b\u670d\u52a1\u4e86\u3002 <button onclick=\"f()\">sendAjax</button> <script> function addScriptTag(src){ var script = document.createElement('script'); script.setAttribute(\"type\",\"text/javascript\"); script.src = src; document.body.appendChild(script); document.body.removeChild(script); } function func(name){ alert(\"hello\"+name) } function f(){ addScriptTag(\"http://127.0.0.1:7766/SendAjax/\") } </script> \u4e3a\u4e86\u66f4\u52a0\u7075\u6d3b\uff0c\u73b0\u5728\u5c06\u4f60\u81ea\u5df1\u5728\u5ba2\u6237\u7aef\u5b9a\u4e49\u7684\u56de\u8c03\u51fd\u6570\u7684\u51fd\u6570\u540d\u4f20\u9001\u7ed9\u670d\u52a1\u7aef\uff0c\u670d\u52a1\u7aef\u5219\u4f1a\u8fd4\u56de\u4ee5\u4f60\u5b9a\u4e49\u7684\u56de\u8c03\u51fd\u6570\u540d\u7684\u65b9\u6cd5\uff0c\u5c06\u83b7\u53d6\u7684json\u6570\u636e\u4f20\u5165\u8fd9\u4e2a\u65b9\u6cd5\u5b8c\u6210\u56de\u8c03\uff1a \u5c068001\u7684f()\u6539\u5199\u4e3a\uff1a function f(){ addScriptTag(\"http://127.0.0.1:7766/SendAjax/?callbacks=func\") } 8002\u7684views\u6539\u4e3a\uff1a def SendAjax(request): import json dic={\"k1\":\"v1\"} print(\"callbacks:\",request.GET.get(\"callbacks\")) callbacks=request.GET.get(\"callbacks\") return HttpResponse(\"%s('%s')\"%(callbacks,json.dumps(dic))) jQuery\u5bf9JSONP\u7684\u5b9e\u73b0 getJSON jQuery\u6846\u67b6\u4e5f\u5f53\u7136\u652f\u6301JSONP\uff0c\u53ef\u4ee5\u4f7f\u7528$.getJSON(url,[data],[callback])\u65b9\u6cd5 8001\u7684html\u6539\u4e3a\uff1a <button onclick=\"f()\">sendAjax</button> <script> function f(){ $.getJSON(\"http://127.0.0.1:7766/SendAjax/?callbacks=?\",function(arg){ alert(\"hello\"+arg) }); } </script> 8002\u7684views\u4e0d\u6539\u52a8\u3002 \u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u8981\u6ce8\u610f\u7684\u662f\u5728url\u7684\u540e\u9762\u5fc5\u987b\u6dfb\u52a0\u4e00\u4e2acallback\u53c2\u6570\uff0c\u8fd9\u6837getJSON\u65b9\u6cd5\u624d\u4f1a\u77e5\u9053\u662f\u7528JSONP\u65b9\u5f0f\u53bb\u8bbf\u95ee\u670d\u52a1\uff0ccallback\u540e\u9762\u7684\u90a3\u4e2a\u95ee\u53f7\u662f\u5185\u90e8\u81ea\u52a8\u751f\u6210\u7684\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u540d\u3002 \u6b64\u5916\uff0c\u5982\u679c\u8bf4\u6211\u4eec\u60f3\u6307\u5b9a\u81ea\u5df1\u7684\u56de\u8c03\u51fd\u6570\u540d\uff0c\u6216\u8005\u8bf4\u670d\u52a1\u4e0a\u89c4\u5b9a\u4e86\u56fa\u5b9a\u56de\u8c03\u51fd\u6570\u540d\u8be5\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528$.ajax\u65b9\u6cd5\u6765\u5b9e\u73b0 $.ajax 8001\u7684html\u6539\u4e3a\uff1a <script> function f(){ $.ajax({ url:\"http://127.0.0.1:7766/SendAjax/\", dataType:\"jsonp\", jsonp: 'callbacks', jsonpCallback:\"SayHi\" }); } function SayHi(arg){ alert(arg); } </script> 8002\u7684views\u4e0d\u6539\u52a8\u3002 \u5f53\u7136\uff0c\u6700\u7b80\u5355\u7684\u5f62\u5f0f\u8fd8\u662f\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\uff1a <script> function f(){ $.ajax({ url:\"http://127.0.0.1:7766/SendAjax/\", dataType:\"jsonp\", //\u5fc5\u987b\u6709\uff0c\u544a\u8bc9server\uff0c\u8fd9\u6b21\u8bbf\u95ee\u8981\u7684\u662f\u4e00\u4e2ajsonp\u7684\u7ed3\u679c\u3002 jsonp: 'callbacks', //jQuery\u5e2e\u52a9\u968f\u673a\u751f\u6210\u7684\uff1acallbacks=\"wner\" success:function(data){ alert(\"hi \"+data) } }); } </script> jsonp: 'callbacks'\u5c31\u662f\u5b9a\u4e49\u4e00\u4e2a\u5b58\u653e\u56de\u8c03\u51fd\u6570\u7684\u952e\uff0cjsonpCallback\u662f\u524d\u7aef\u5b9a\u4e49\u597d\u7684\u56de\u8c03\u51fd\u6570\u65b9\u6cd5\u540d'SayHi'\uff0cserver\u7aef\u63a5\u53d7callback\u952e\u5bf9\u5e94\u503c\u540e\u5c31\u53ef\u4ee5\u5728\u5176\u4e2d\u586b\u5145\u6570\u636e\u6253\u5305\u8fd4\u56de\u4e86; jsonpCallback\u53c2\u6570\u53ef\u4ee5\u4e0d\u5b9a\u4e49\uff0cjquery\u4f1a\u81ea\u52a8\u5b9a\u4e49\u4e00\u4e2a\u968f\u673a\u540d\u53d1\u8fc7\u53bb\uff0c\u90a3\u524d\u7aef\u5c31\u5f97\u7528\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u5bf9\u5e94\u6570\u636e\u4e86\u3002\u5229\u7528jQuery\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5b9e\u73b0JSONP\u6765\u8fdb\u884c\u8de8\u57df\u8bbf\u95ee\u3002\u3000\u3000 \u6ce8\u610f JSONP\u4e00\u5b9a\u662fGET\u8bf7\u6c42 \u5e94\u7528 <input type=\"button\" onclick=\"AjaxRequest()\" value=\"\u8de8\u57dfAjax\" /> <div id=\"container\"></div> <script type=\"text/javascript\"> function AjaxRequest() { $.ajax({ url: 'http://www.jxntv.cn/data/jmd-jxtv2.html?callback=list&_=1454376870403', type: 'GET', dataType: 'jsonp', jsonp: 'callback', jsonpCallback: 'list', success: function (data) { $.each(data.data,function(i){ var item = data.data[i]; var str = \"<p>\"+ item.week +\"</p>\"; $('#container').append(str); $.each(item.list,function(j){ var temp = \"<a href='\" + item.list[j].link +\"'>\" + item.list[j].name +\" </a><br/>\"; $('#container').append(temp); }); $('#container').append(\"<hr/>\"); }) } }); } </script> CORS \u4e00\u3001\u7b80\u4ecb CORS\u9700\u8981\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u540c\u65f6\u652f\u6301\u3002\u76ee\u524d\uff0c\u6240\u6709\u6d4f\u89c8\u5668\u90fd\u652f\u6301\u8be5\u529f\u80fd\uff0cIE\u6d4f\u89c8\u5668\u4e0d\u80fd\u4f4e\u4e8eIE10\u3002 \u6574\u4e2aCORS\u901a\u4fe1\u8fc7\u7a0b\uff0c\u90fd\u662f\u6d4f\u89c8\u5668\u81ea\u52a8\u5b8c\u6210\uff0c\u4e0d\u9700\u8981\u7528\u6237\u53c2\u4e0e\u3002\u5bf9\u4e8e\u5f00\u53d1\u8005\u6765\u8bf4\uff0cCORS\u901a\u4fe1\u4e0e\u540c\u6e90\u7684AJAX\u901a\u4fe1\u6ca1\u6709\u5dee\u522b\uff0c\u4ee3\u7801\u5b8c\u5168\u4e00\u6837\u3002\u6d4f\u89c8\u5668\u4e00\u65e6\u53d1\u73b0AJAX\u8bf7\u6c42\u8de8\u6e90\uff0c\u5c31\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e9b\u9644\u52a0\u7684\u5934\u4fe1\u606f\uff0c\u6709\u65f6\u8fd8\u4f1a\u591a\u51fa\u4e00\u6b21\u9644\u52a0\u7684\u8bf7\u6c42\uff0c\u4f46\u7528\u6237\u4e0d\u4f1a\u6709\u611f\u89c9\u3002 \u56e0\u6b64\uff0c\u5b9e\u73b0CORS\u901a\u4fe1\u7684\u5173\u952e\u662f\u670d\u52a1\u5668\u3002\u53ea\u8981\u670d\u52a1\u5668\u5b9e\u73b0\u4e86CORS\u63a5\u53e3\uff0c\u5c31\u53ef\u4ee5\u8de8\u6e90\u901a\u4fe1\u3002 \u4e8c\u3001\u4e24\u79cd\u8bf7\u6c42 \u6d4f\u89c8\u5668\u5c06CORS\u8bf7\u6c42\u5206\u6210\u4e24\u7c7b\uff1a\u7b80\u5355\u8bf7\u6c42\uff08simple request\uff09\u548c\u975e\u7b80\u5355\u8bf7\u6c42\uff08not-so-simple request\uff09\u3002 \u53ea\u8981\u540c\u65f6\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u5927\u6761\u4ef6\uff0c\u5c31\u5c5e\u4e8e\u7b80\u5355\u8bf7\u6c42\u3002 \uff081) \u8bf7\u6c42\u65b9\u6cd5\u662f\u4ee5\u4e0b\u4e09\u79cd\u65b9\u6cd5\u4e4b\u4e00\uff1a HEAD GET POST \uff082\uff09HTTP\u7684\u5934\u4fe1\u606f\u4e0d\u8d85\u51fa\u4ee5\u4e0b\u51e0\u79cd\u5b57\u6bb5\uff1a Accept Accept-Language Content-Language Last-Event-ID Content-Type\uff1a\u53ea\u9650\u4e8e\u4e09\u4e2a\u503capplication/x-www-form-urlencoded\u3001multipart/form-data\u3001text/plain \u51e1\u662f\u4e0d\u540c\u65f6\u6ee1\u8db3\u4e0a\u9762\u4e24\u4e2a\u6761\u4ef6\uff0c\u5c31\u5c5e\u4e8e\u975e\u7b80\u5355\u8bf7\u6c42\u3002 \u6d4f\u89c8\u5668\u5bf9\u8fd9\u4e24\u79cd\u8bf7\u6c42\u7684\u5904\u7406\uff0c\u662f\u4e0d\u4e00\u6837\u7684\u3002 * \u7b80\u5355\u8bf7\u6c42\u548c\u975e\u7b80\u5355\u8bf7\u6c42\u7684\u533a\u522b\uff1f \u7b80\u5355\u8bf7\u6c42\uff1a\u4e00\u6b21\u8bf7\u6c42 \u975e\u7b80\u5355\u8bf7\u6c42\uff1a\u4e24\u6b21\u8bf7\u6c42\uff0c\u5728\u53d1\u9001\u6570\u636e\u4e4b\u524d\u4f1a\u5148\u53d1\u4e00\u6b21\u8bf7\u6c42\u7528\u4e8e\u505a\u201c\u9884\u68c0\u201d\uff0c\u53ea\u6709\u201c\u9884\u68c0\u201d\u901a\u8fc7\u540e\u624d\u518d\u53d1\u9001\u4e00\u6b21\u8bf7\u6c42\u7528\u4e8e\u6570\u636e\u4f20\u8f93\u3002 * \u5173\u4e8e\u201c\u9884\u68c0\u201d - \u8bf7\u6c42\u65b9\u5f0f\uff1aOPTIONS - \u201c\u9884\u68c0\u201d\u5176\u5b9e\u505a\u68c0\u67e5\uff0c\u68c0\u67e5\u5982\u679c\u901a\u8fc7\u5219\u5141\u8bb8\u4f20\u8f93\u6570\u636e\uff0c\u68c0\u67e5\u4e0d\u901a\u8fc7\u5219\u4e0d\u518d\u53d1\u9001\u771f\u6b63\u60f3\u8981\u53d1\u9001\u7684\u6d88\u606f - \u5982\u4f55\u201c\u9884\u68c0\u201d => \u5982\u679c\u590d\u6742\u8bf7\u6c42\u662fPUT\u7b49\u8bf7\u6c42\uff0c\u5219\u670d\u52a1\u7aef\u9700\u8981\u8bbe\u7f6e\u5141\u8bb8\u67d0\u8bf7\u6c42\uff0c\u5426\u5219\u201c\u9884\u68c0\u201d\u4e0d\u901a\u8fc7 Access-Control-Request-Method => \u5982\u679c\u590d\u6742\u8bf7\u6c42\u8bbe\u7f6e\u4e86\u8bf7\u6c42\u5934\uff0c\u5219\u670d\u52a1\u7aef\u9700\u8981\u8bbe\u7f6e\u5141\u8bb8\u67d0\u8bf7\u6c42\u5934\uff0c\u5426\u5219\u201c\u9884\u68c0\u201d\u4e0d\u901a\u8fc7 Access-Control-Request-Headers \u652f\u6301\u8de8\u57df\uff0c\u7b80\u5355\u8bf7\u6c42 \u670d\u52a1\u5668\u8bbe\u7f6e\u54cd\u5e94\u5934\uff1aAccess-Control-Allow-Origin = '\u57df\u540d' \u6216 '*' \u652f\u6301\u8de8\u57df\uff0c\u590d\u6742\u8bf7\u6c42 \u7531\u4e8e\u590d\u6742\u8bf7\u6c42\u65f6\uff0c\u9996\u5148\u4f1a\u53d1\u9001\u201c\u9884\u68c0\u201d\u8bf7\u6c42\uff0c\u5982\u679c\u201c\u9884\u68c0\u201d\u6210\u529f\uff0c\u5219\u53d1\u9001\u771f\u5b9e\u6570\u636e\u3002 \u201c\u9884\u68c0\u201d\u8bf7\u6c42\u65f6\uff0c\u5141\u8bb8\u8bf7\u6c42\u65b9\u5f0f\u5219\u9700\u670d\u52a1\u5668\u8bbe\u7f6e\u54cd\u5e94\u5934\uff1aAccess-Control-Request-Method \u201c\u9884\u68c0\u201d\u8bf7\u6c42\u65f6\uff0c\u5141\u8bb8\u8bf7\u6c42\u5934\u5219\u9700\u670d\u52a1\u5668\u8bbe\u7f6e\u54cd\u5e94\u5934\uff1aAccess-Control-Request-Headers Django-model\u57fa\u7840 \u77e5\u8bc6\u9884\u89c8 ORM \u521b\u5efa\u8868(\u5efa\u7acb\u6a21\u578b) \u6dfb\u52a0\u8868\u8bb0\u5f55 \u67e5\u8be2\u8868\u8bb0\u5f55 \u4fee\u6539\u8868\u8bb0\u5f55 \u5220\u9664\u8868\u8bb0\u5f55 ORM \u6620\u5c04\u5173\u7cfb\uff1a \u3000\u3000\u3000 \u8868\u540d <\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d> \u7c7b\u540d \u5b57\u6bb5 <\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d> \u5c5e\u6027 \u3000\u3000\u3000\u3000\u8868\u8bb0\u5f55 <\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d>\u7c7b\u5b9e\u4f8b\u5bf9\u8c61 \u521b\u5efa\u8868(\u5efa\u7acb\u6a21\u578b) \u5b9e\u4f8b\uff1a\u6211\u4eec\u6765\u5047\u5b9a\u4e0b\u9762\u8fd9\u4e9b\u6982\u5ff5\uff0c\u5b57\u6bb5\u548c\u5173\u7cfb \u4f5c\u8005\u6a21\u578b\uff1a\u4e00\u4e2a\u4f5c\u8005\u6709\u59d3\u540d\u548c\u5e74\u9f84\u3002 \u4f5c\u8005\u8be6\u7ec6\u6a21\u578b\uff1a\u628a\u4f5c\u8005\u7684\u8be6\u60c5\u653e\u5230\u8be6\u60c5\u8868\uff0c\u5305\u542b\u751f\u65e5\uff0c\u624b\u673a\u53f7\uff0c\u5bb6\u5ead\u4f4f\u5740\u7b49\u4fe1\u606f\u3002\u4f5c\u8005\u8be6\u60c5\u6a21\u578b\u548c\u4f5c\u8005\u6a21\u578b\u4e4b\u95f4\u662f\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff08one-to-one\uff09 \u51fa\u7248\u5546\u6a21\u578b\uff1a\u51fa\u7248\u5546\u6709\u540d\u79f0\uff0c\u6240\u5728\u57ce\u5e02\u4ee5\u53caemail\u3002 \u4e66\u7c4d\u6a21\u578b\uff1a \u4e66\u7c4d\u6709\u4e66\u540d\u548c\u51fa\u7248\u65e5\u671f\uff0c\u4e00\u672c\u4e66\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u4f5c\u8005\uff0c\u4e00\u4e2a\u4f5c\u8005\u4e5f\u53ef\u4ee5\u5199\u591a\u672c\u4e66\uff0c\u6240\u4ee5\u4f5c\u8005\u548c\u4e66\u7c4d\u7684\u5173\u7cfb\u5c31\u662f\u591a\u5bf9\u591a\u7684\u5173\u8054\u5173\u7cfb(many-to-many);\u4e00\u672c\u4e66\u53ea\u5e94\u8be5\u7531\u4e00\u4e2a\u51fa\u7248\u5546\u51fa\u7248\uff0c\u6240\u4ee5\u51fa\u7248\u5546\u548c\u4e66\u7c4d\u662f\u4e00\u5bf9\u591a\u5173\u8054\u5173\u7cfb(one-to-many)\u3002 \u6a21\u578b\u5efa\u7acb\u5982\u4e0b\uff1a class Author(models.Model): nid = models.AutoField(primary_key=True) name=models.CharField( max_length=32) age=models.IntegerField() # \u4e0eAuthorDetail\u5efa\u7acb\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb authorDetail=models.OneToOneField(to=\"AuthorDetail\") class AuthorDetail(models.Model): nid = models.AutoField(primary_key=True) birthday=models.DateField() telephone=models.BigIntegerField() addr=models.CharField( max_length=64) class Publish(models.Model): nid = models.AutoField(primary_key=True) name=models.CharField( max_length=32) city=models.CharField( max_length=32) email=models.EmailField() class Book(models.Model): nid = models.AutoField(primary_key=True) title = models.CharField( max_length=32) publishDate=models.DateField() price=models.DecimalField(max_digits=5,decimal_places=2) keepNum=models.IntegerField()<br> commentNum=models.IntegerField() # \u4e0ePublish\u5efa\u7acb\u4e00\u5bf9\u591a\u7684\u5173\u7cfb,\u5916\u952e\u5b57\u6bb5\u5efa\u7acb\u5728\u591a\u7684\u4e00\u65b9 publish=models.ForeignKey(to=\"Publish\",to_field=\"nid\") # \u4e0eAuthor\u8868\u5efa\u7acb\u591a\u5bf9\u591a\u7684\u5173\u7cfb,ManyToManyField\u53ef\u4ee5\u5efa\u5728\u4e24\u4e2a\u6a21\u578b\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u81ea\u52a8\u521b\u5efa\u7b2c\u4e09\u5f20\u8868 authors=models.ManyToManyField(to='Author')\u3000\u3000 \u901a\u8fc7logging\u53ef\u4ee5\u67e5\u770b\u7ffb\u8bd1\u6210\u7684sql\u8bed\u53e5 LOGGING = { 'version': 1, 'disable_existing_loggers': False, 'handlers': { 'console':{ 'level':'DEBUG', 'class':'logging.StreamHandler', }, }, 'loggers': { 'django.db.backends': { 'handlers': ['console'], 'propagate': True, 'level':'DEBUG', }, } }\u3000\u3000 \u6ce8\u610f\u4e8b\u9879\uff1a 1\u3001 \u8868\u7684\u540d\u79f0 myapp_modelName \uff0c\u662f\u6839\u636e \u6a21\u578b\u4e2d\u7684\u5143\u6570\u636e\u81ea\u52a8\u751f\u6210\u7684\uff0c\u4e5f\u53ef\u4ee5\u8986\u5199\u4e3a\u522b\u7684\u540d\u79f0\u3000\u3000 2\u3001 id \u5b57\u6bb5\u662f\u81ea\u52a8\u6dfb\u52a0\u7684 3\u3001\u5bf9\u4e8e\u5916\u952e\u5b57\u6bb5\uff0cDjango \u4f1a\u5728\u5b57\u6bb5\u540d\u4e0a\u6dfb\u52a0 \"_id\" \u6765\u521b\u5efa\u6570\u636e\u5e93\u4e2d\u7684\u5217\u540d 4\u3001\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684 CREATE TABLE SQL \u8bed\u53e5\u4f7f\u7528PostgreSQL \u8bed\u6cd5\u683c\u5f0f\uff0c\u8981\u6ce8\u610f\u7684\u662fDjango \u4f1a\u6839\u636esettings \u4e2d\u6307\u5b9a\u7684\u6570\u636e\u5e93\u7c7b\u578b\u6765\u4f7f\u7528\u76f8\u5e94\u7684SQL \u8bed\u53e5\u3002 5\u3001\u5b9a\u4e49\u597d\u6a21\u578b\u4e4b\u540e\uff0c\u4f60\u9700\u8981\u544a\u8bc9Django _\u4f7f\u7528_\u8fd9\u4e9b\u6a21\u578b\u3002\u4f60\u8981\u505a\u7684\u5c31\u662f\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684INSTALL_APPSZ\u4e2d\u8bbe\u7f6e\uff0c\u5728\u5176\u4e2d\u6dfb\u52a0 models.py \u6240\u5728\u5e94\u7528\u7684\u540d\u79f0\u3002 6\u3001\u5916\u952e\u5b57\u6bb5 ForeignKey \u6709\u4e00\u4e2a null=True \u7684\u8bbe\u7f6e(\u5b83\u5141\u8bb8\u5916\u952e\u63a5\u53d7\u7a7a\u503c NULL)\uff0c\u4f60\u53ef\u4ee5\u8d4b\u7ed9\u5b83\u7a7a\u503c None \u3002 \u5b57\u6bb5\u9009\u9879 \u6bcf\u4e2a\u5b57\u6bb5\u6709\u4e00\u4e9b\u7279\u6709\u7684\u53c2\u6570\uff0c\u4f8b\u5982\uff0cCharField\u9700\u8981max_length\u53c2\u6570\u6765\u6307\u5b9a VARCHAR \u6570\u636e\u5e93\u5b57\u6bb5\u7684\u5927\u5c0f\u3002\u8fd8\u6709\u4e00\u4e9b\u9002\u7528\u4e8e\u6240\u6709\u5b57\u6bb5\u7684\u901a\u7528\u53c2\u6570\u3002 \u8fd9\u4e9b\u53c2\u6570\u5728\u6587\u6863\u4e2d\u6709\u8be6\u7ec6\u5b9a\u4e49\uff0c\u8fd9\u91cc\u6211\u4eec\u53ea\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e9b\u6700\u5e38\u7528\u7684\uff1a (1)null \u5982\u679c\u4e3aTrue\uff0cDjango \u5c06\u7528NULL \u6765\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u7a7a\u503c\u3002 \u9ed8\u8ba4\u503c\u662f False. (1)blank \u5982\u679c\u4e3aTrue\uff0c\u8be5\u5b57\u6bb5\u5141\u8bb8\u4e0d\u586b\u3002\u9ed8\u8ba4\u4e3aFalse\u3002 \u8981\u6ce8\u610f\uff0c\u8fd9\u4e0e null \u4e0d\u540c\u3002null\u7eaf\u7cb9\u662f\u6570\u636e\u5e93\u8303\u7574\u7684\uff0c\u800c blank \u662f\u6570\u636e\u9a8c\u8bc1\u8303\u7574\u7684\u3002 \u5982\u679c\u4e00\u4e2a\u5b57\u6bb5\u7684blank=True\uff0c\u8868\u5355\u7684\u9a8c\u8bc1\u5c06\u5141\u8bb8\u8be5\u5b57\u6bb5\u662f\u7a7a\u503c\u3002\u5982\u679c\u5b57\u6bb5\u7684blank=False\uff0c\u8be5\u5b57\u6bb5\u5c31\u662f\u5fc5\u586b\u7684\u3002 (2)default \u5b57\u6bb5\u7684\u9ed8\u8ba4\u503c\u3002\u53ef\u4ee5\u662f\u4e00\u4e2a\u503c\u6216\u8005\u53ef\u8c03\u7528\u5bf9\u8c61\u3002\u5982\u679c\u53ef\u8c03\u7528 \uff0c\u6bcf\u6709\u65b0\u5bf9\u8c61\u88ab\u521b\u5efa\u5b83\u90fd\u4f1a\u88ab\u8c03\u7528\u3002 (3)primary_key \u5982\u679c\u4e3aTrue\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b57\u6bb5\u5c31\u662f\u6a21\u578b\u7684\u4e3b\u952e\u3002\u5982\u679c\u4f60\u6ca1\u6709\u6307\u5b9a\u4efb\u4f55\u4e00\u4e2a\u5b57\u6bb5\u7684primary_key=True\uff0c Django \u5c31\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2aIntegerField\u5b57\u6bb5\u505a\u4e3a\u4e3b\u952e\uff0c\u6240\u4ee5\u9664\u975e\u4f60\u60f3\u8986\u76d6\u9ed8\u8ba4\u7684\u4e3b\u952e\u884c\u4e3a\uff0c \u5426\u5219\u6ca1\u5fc5\u8981\u8bbe\u7f6e\u4efb\u4f55\u4e00\u4e2a\u5b57\u6bb5\u7684primary_key=True\u3002 (4)unique \u5982\u679c\u8be5\u503c\u8bbe\u7f6e\u4e3a True, \u8fd9\u4e2a\u6570\u636e\u5b57\u6bb5\u7684\u503c\u5728\u6574\u5f20\u8868\u4e2d\u5fc5\u987b\u662f\u552f\u4e00\u7684 (5)choices \u7531\u4e8c\u5143\u7ec4\u7ec4\u6210\u7684\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u4f8b\u5982\uff0c\u5217\u8868\u6216\u5143\u7ec4\uff09\uff0c\u7528\u6765\u7ed9\u5b57\u6bb5\u63d0\u4f9b\u9009\u62e9\u9879\u3002 \u5982\u679c\u8bbe\u7f6e\u4e86choices \uff0c\u9ed8\u8ba4\u7684\u8868\u5355\u5c06\u662f\u4e00\u4e2a\u9009\u62e9\u6846\u800c\u4e0d\u662f\u6807\u51c6\u7684\u6587\u672c\u6846\uff0c\u800c\u4e14\u8fd9\u4e2a\u9009\u62e9\u6846\u7684\u9009\u9879\u5c31\u662fchoices \u4e2d\u7684\u9009\u9879\u3002 \u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e choices \u5217\u8868\u7684\u4f8b\u5b50\uff1a YEAR_IN_SCHOOL_CHOICES = ( ('FR', 'Freshman'), ('SO', 'Sophomore'), ('JR', 'Junior'), ('SR', 'Senior'), ('GR', 'Graduate'), ) \u6bcf\u4e2a\u5143\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u662f\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\u7684\u503c\uff1b\u7b2c\u4e8c\u4e2a\u5143\u7d20\u662f\u5728\u7ba1\u7406\u754c\u9762\u6216 ModelChoiceField \u4e2d\u7528\u4f5c\u663e\u793a\u7684\u5185\u5bb9\u3002 \u5728\u4e00\u4e2a\u7ed9\u5b9a\u7684 model \u7c7b\u7684\u5b9e\u4f8b\u4e2d\uff0c\u60f3\u5f97\u5230\u67d0\u4e2a choices \u5b57\u6bb5\u7684\u663e\u793a\u503c\uff0c\u5c31\u8c03\u7528 get_FOO_display \u65b9\u6cd5(\u8fd9\u91cc\u7684 FOO \u5c31\u662f choices \u5b57\u6bb5\u7684\u540d\u79f0 )\u3002\u4f8b\u5982\uff1a from django.db import models class Person(models.Model): SHIRT_SIZES = ( ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ) name = models.CharField(max_length=60) shirt_size = models.CharField(max_length=1, choices=SHIRT_SIZES) >>> p = Person(name=\"Fred Flintstone\", shirt_size=\"L\") >>> p.save() >>> p.shirt_size 'L' >>> p.get_shirt_size_display() 'Large' \u66f4\u591a\u8be6\u89c1 \u6a21\u578b\u5b57\u6bb5\u53c2\u8003 \u4e00\u65e6\u4f60\u5efa\u7acb\u597d\u6570\u636e\u6a21\u578b\u4e4b\u540e\uff0cdjango\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u5957\u6570\u636e\u5e93\u62bd\u8c61\u7684API\uff0c\u53ef\u4ee5\u8ba9\u4f60\u6267\u884c\u5173\u4e8e\u8868\u8bb0\u5f55\u7684\u589e\u5220\u6539\u67e5\u7684\u64cd\u4f5c\u3002 \u6dfb\u52a0\u8868\u8bb0\u5f55 \u666e\u901a\u5b57\u6bb5 \u65b9\u5f0f1 publish_obj=Publish(name=\"\u4eba\u6c11\u51fa\u7248\u793e\",city=\"\u5317\u4eac\",email=\"renMin@163.com\") publish_obj.save() # \u5c06\u6570\u636e\u4fdd\u5b58\u5230\u6570\u636e\u5e93 \u65b9\u5f0f2 # \u8fd4\u56de\u503cpublish_obj\u662f\u6dfb\u52a0\u7684\u8bb0\u5f55\u5bf9\u8c61 publish_obj=Publish.objects.create(name=\"\u4eba\u6c11\u51fa\u7248\u793e\",city=\"\u5317\u4eac\",email=\"renMin@163.com\") \u65b9\u5f0f3 \u8868.objects.create(**request.POST.dict()) \u5916\u952e\u5b57\u6bb5 \u65b9\u5f0f1: publish_obj=Publish.objects.get(nid=1) Book.objects.create(title=\"\u91d1\u74f6\u7709\",publishDate=\"2012-12-12\",price=665,pageNum=334,publish=publish_obj) \u65b9\u5f0f2: Book.objects.create(title=\"\u91d1\u74f6\u7709\",publishDate=\"2012-12-12\",price=665,pageNum=334,publish_id=1)\u3000\u3000 \u5173\u952e\u70b9\uff1abook_obj.publish\u662f\u4ec0\u4e48\uff1f \u591a\u5bf9\u591a\u5b57\u6bb5 book_obj=Book.objects.create(title=\"\u8ffd\u98ce\u7b5d\u7684\u4eba\",publishDate=\"2012-11-12\",price=69,pageNum=314,publish_id=1) author_yuan=Author.objects.create(name=\"yuan\",age=23,authorDetail_id=1) author_egon=Author.objects.create(name=\"egon\",age=32,authorDetail_id=2) book_obj.authors.add(author_egon,author_yuan) # \u5c06\u67d0\u4e2a\u7279\u5b9a\u7684 model \u5bf9\u8c61\u6dfb\u52a0\u5230\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408\u4e2d\u3002 ======= book_obj.authors.add(*[]) book_obj.authors.create() #\u521b\u5efa\u5e76\u4fdd\u5b58\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u5bf9\u8c61\u52a0\u88ab\u5173\u8054\u5bf9\u8c61\u7684\u96c6\u5408\u4e2d\uff0c\u7136\u540e\u8fd4\u56de\u8fd9\u4e2a\u65b0\u5bf9\u8c61\u3002 \u5173\u952e\u70b9\uff1abook_obj.authors\u662f\u4ec0\u4e48\uff1f\u3000\u3000 \u89e3\u9664\u5173\u7cfb\uff1a book_obj.authors.remove() # \u5c06\u67d0\u4e2a\u7279\u5b9a\u7684\u5bf9\u8c61\u4ece\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408\u4e2d\u53bb\u9664\u3002====== book_obj.authors.remove(*[]) book_obj.authors.clear() #\u6e05\u7a7a\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408\u3002 class RelatedManager \"\u5173\u8054\u7ba1\u7406\u5668\"\u662f\u5728\u4e00\u5bf9\u591a\u6216\u8005\u591a\u5bf9\u591a\u7684\u5173\u8054\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u7684\u7ba1\u7406\u5668\u3002\u5b83\u5b58\u5728\u4e8e\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5\uff1a ForeignKey\u5173\u7cfb\u7684\u201c\u53e6\u4e00\u8fb9\u201d\u3002\u50cf\u8fd9\u6837\uff1a from django.db import models class Reporter(models.Model): # ... pass class Article(models.Model): reporter = models.ForeignKey(Reporter) \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u7ba1\u7406\u5668reporter.article_set\u62e5\u6709\u4e0b\u9762\u7684\u65b9\u6cd5\u3002 ManyToManyField\u5173\u7cfb\u7684\u4e24\u8fb9\uff1a class Topping(models.Model): # ... pass class Pizza(models.Model): toppings = models.ManyToManyField(Topping) \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0ctopping.pizza_set \u548cpizza.toppings\u90fd\u62e5\u6709\u4e0b\u9762\u7684\u65b9\u6cd5\u3002 add(obj1[, obj2, ...]) \u628a\u6307\u5b9a\u7684\u6a21\u578b\u5bf9\u8c61\u6dfb\u52a0\u5230\u5173\u8054\u5bf9\u8c61\u96c6\u4e2d\u3002 \u4f8b\u5982\uff1a >>> b = Blog.objects.get(id=1) >>> e = Entry.objects.get(id=234) >>> b.entry_set.add(e) # Associates Entry e with Blog b. \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5bf9\u4e8eForeignKey\u5173\u7cfb\uff0ce.save()\u7531\u5173\u8054\u7ba1\u7406\u5668\u8c03\u7528\uff0c\u6267\u884c\u66f4\u65b0\u64cd\u4f5c\u3002\u7136\u800c\uff0c\u5728\u591a\u5bf9\u591a\u5173\u7cfb\u4e2d\u4f7f\u7528add()\u5e76\u4e0d\u4f1a\u8c03\u7528\u4efb\u4f55 save()\u65b9\u6cd5\uff0c\u800c\u662f\u7531QuerySet.bulk_create()\u521b\u5efa\u5173\u7cfb\u3002 \u5ef6\u4f38\uff1a # 1 *[]\u7684\u4f7f\u7528 >>> book_obj = Book.objects.get(id=1) >>> author_list = Author.objects.filter(id__gt=2) >>> book_obj.authors.add(*author_list) # 2 \u76f4\u63a5\u7ed1\u5b9a\u4e3b\u952e book_obj.authors.add(*[1,3]) # \u5c06id=1\u548cid=3\u7684\u4f5c\u8005\u5bf9\u8c61\u6dfb\u52a0\u5230\u8fd9\u672c\u4e66\u7684\u4f5c\u8005\u96c6\u5408\u4e2d # \u5e94\u7528: \u6dfb\u52a0\u6216\u8005\u7f16\u8f91\u65f6,\u63d0\u4ea4\u4f5c\u8005\u4fe1\u606f\u65f6\u53ef\u4ee5\u7528\u5230. create(**kwargs) \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff0c\u4fdd\u5b58\u5bf9\u8c61\uff0c\u5e76\u5c06\u5b83\u6dfb\u52a0\u5230\u5173\u8054\u5bf9\u8c61\u96c6\u4e4b\u4e2d\u3002\u8fd4\u56de\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\uff1a >>> b = Blog.objects.get(id=1) >>> e = b.entry_set.create( ... headline='Hello', ... body_text='Hi', ... pub_date=datetime.date(2005, 1, 1) ... ) # No need to call e.save() at this point -- it's already been saved. \u8fd9\u5b8c\u5168\u7b49\u4ef7\u4e8e\uff08\u4e0d\u8fc7\u66f4\u52a0\u7b80\u6d01\u4e8e\uff09\uff1a >>> b = Blog.objects.get(id=1) >>> e = Entry( ... blog=b, ... headline='Hello', ... body_text='Hi', ... pub_date=datetime.date(2005, 1, 1) ... ) >>> e.save(force_insert=True) \u8981\u6ce8\u610f\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6307\u5b9a\u6a21\u578b\u4e2d\u7528\u4e8e\u5b9a\u4e49\u5173\u7cfb\u7684\u5173\u952e\u8bcd\u53c2\u6570\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u4f20\u5165blog\u53c2\u6570\u7ed9create()\u3002Django\u4f1a\u660e\u767d\u65b0\u7684 Entry\u5bf9\u8c61blog \u5e94\u8be5\u6dfb\u52a0\u5230b\u4e2d\u3002 remove(obj1[, obj2, ...]) \u4ece\u5173\u8054\u5bf9\u8c61\u96c6\u4e2d\u79fb\u9664\u6267\u884c\u7684\u6a21\u578b\u5bf9\u8c61\uff1a >>> b = Blog.objects.get(id=1) >>> e = Entry.objects.get(id=234) >>> b.entry_set.remove(e) # Disassociates Entry e from Blog b. \u5bf9\u4e8eForeignKey\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4ec5\u5728null=True\u65f6\u5b58\u5728\u3002 clear() \u4ece\u5173\u8054\u5bf9\u8c61\u96c6\u4e2d\u79fb\u9664\u4e00\u5207\u5bf9\u8c61\u3002 >>> b = Blog.objects.get(id=1) >>> b.entry_set.clear() \u6ce8\u610f\u8fd9\u6837\u4e0d\u4f1a\u5220\u9664\u5bf9\u8c61 \u2014\u2014 \u53ea\u4f1a\u5220\u9664\u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u8054\u3002 \u5c31\u50cf remove() \u65b9\u6cd5\u4e00\u6837\uff0cclear()\u53ea\u80fd\u5728 null=True\u7684ForeignKey\u4e0a\u88ab\u8c03\u7528\u3002 set()\u65b9\u6cd5 \u5148\u6e05\u7a7a\uff0c\u5728\u8bbe\u7f6e\uff0c\u7f16\u8f91\u4e66\u7c4d\u65f6\u5373\u53ef\u7528\u5230 \u6ce8\u610f \u5bf9\u4e8e\u6240\u6709\u7c7b\u578b\u7684\u5173\u8054\u5b57\u6bb5\uff0cadd()\u3001create()\u3001remove()\u548cclear(),set()\u90fd\u4f1a\u9a6c\u4e0a\u66f4\u65b0\u6570\u636e\u5e93\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u5173\u8054\u7684\u4efb\u4f55\u4e00\u7aef\uff0c\u90fd\u4e0d\u9700\u8981\u518d\u8c03\u7528save()\u65b9\u6cd5\u3002 \u76f4\u63a5\u8d4b\u503c\uff1a \u901a\u8fc7\u8d4b\u503c\u4e00\u4e2a\u65b0\u7684\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\uff0c\u5173\u8054\u5bf9\u8c61\u96c6\u53ef\u4ee5\u88ab\u6574\u4f53\u66ff\u6362\u6389\u3002 >>> new_list = [obj1, obj2, obj3] >>> e.related_set = new_list \u5982\u679c\u5916\u952e\u5173\u7cfb\u6ee1\u8db3null=True\uff0c\u5173\u8054\u7ba1\u7406\u5668\u4f1a\u5728\u6dfb\u52a0new_list\u4e2d\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u9996\u5148\u8c03\u7528clear()\u65b9\u6cd5\u6765\u89e3\u9664\u5173\u8054\u96c6\u4e2d\u4e00\u5207\u5df2\u5b58\u5728\u5bf9\u8c61\u7684\u5173\u8054\u3002\u5426\u5219\uff0c new_list\u4e2d\u7684\u5bf9\u8c61\u4f1a\u5728\u5df2\u5b58\u5728\u7684\u5173\u8054\u7684\u57fa\u7840\u4e0a\u88ab\u6dfb\u52a0\u3002\u3000\u3000 \u67e5\u8be2\u8868\u8bb0\u5f55 \u67e5\u8be2\u76f8\u5173API <1> all(): \u67e5\u8be2\u6240\u6709\u7ed3\u679c <2> filter(**kwargs): \u5b83\u5305\u542b\u4e86\u4e0e\u6240\u7ed9\u7b5b\u9009\u6761\u4ef6\u76f8\u5339\u914d\u7684\u5bf9\u8c61 <3> get(**kwargs): \u8fd4\u56de\u4e0e\u6240\u7ed9\u7b5b\u9009\u6761\u4ef6\u76f8\u5339\u914d\u7684\u5bf9\u8c61\uff0c\u8fd4\u56de\u7ed3\u679c\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\uff0c \u5982\u679c\u7b26\u5408\u7b5b\u9009\u6761\u4ef6\u7684\u5bf9\u8c61\u8d85\u8fc7\u4e00\u4e2a\u6216\u8005\u6ca1\u6709\u90fd\u4f1a\u629b\u51fa\u9519\u8bef\u3002 <5> exclude(**kwargs): \u5b83\u5305\u542b\u4e86\u4e0e\u6240\u7ed9\u7b5b\u9009\u6761\u4ef6\u4e0d\u5339\u914d\u7684\u5bf9\u8c61 <4> values(*field): \u8fd4\u56de\u4e00\u4e2aValueQuerySet\u2014\u2014\u4e00\u4e2a\u7279\u6b8a\u7684QuerySet\uff0c\u8fd0\u884c\u540e\u5f97\u5230\u7684\u5e76\u4e0d\u662f\u4e00\u7cfb\u5217 model\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u800c\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684\u5b57\u5178\u5e8f\u5217 <9> values_list(*field): \u5b83\u4e0evalues()\u975e\u5e38\u76f8\u4f3c\uff0c\u5b83\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7ec4\u5e8f\u5217\uff0cvalues\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u5178\u5e8f\u5217 <6> order_by(*field): \u5bf9\u67e5\u8be2\u7ed3\u679c\u6392\u5e8f <7> reverse(): \u5bf9\u67e5\u8be2\u7ed3\u679c\u53cd\u5411\u6392\u5e8f <8> distinct(): \u4ece\u8fd4\u56de\u7ed3\u679c\u4e2d\u5254\u9664\u91cd\u590d\u7eaa\u5f55 <10> count(): \u8fd4\u56de\u6570\u636e\u5e93\u4e2d\u5339\u914d\u67e5\u8be2(QuerySet)\u7684\u5bf9\u8c61\u6570\u91cf\u3002 <11> first(): \u8fd4\u56de\u7b2c\u4e00\u6761\u8bb0\u5f55 <12> last(): \u8fd4\u56de\u6700\u540e\u4e00\u6761\u8bb0\u5f55 <13> exists(): \u5982\u679cQuerySet\u5305\u542b\u6570\u636e\uff0c\u5c31\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse \u6ce8\u610f\uff1a\u4e00\u5b9a\u533a\u5206object\u4e0equerySet\u7684\u533a\u522b \uff01\uff01\uff01 \u53cc\u4e0b\u5212\u7ebf\u4e4b\u5355\u8868\u67e5\u8be2 models.Tb1.objects.filter(id__lt=10, id__gt=1) # \u83b7\u53d6id\u5927\u4e8e1 \u4e14 \u5c0f\u4e8e10\u7684\u503c models.Tb1.objects.filter(id__in=[11, 22, 33]) # \u83b7\u53d6id\u7b49\u4e8e11\u300122\u300133\u7684\u6570\u636e models.Tb1.objects.exclude(id__in=[11, 22, 33]) # not in models.Tb1.objects.filter(name__contains=\"ven\") models.Tb1.objects.filter(name__icontains=\"ven\") # icontains\u5927\u5c0f\u5199\u4e0d\u654f\u611f models.Tb1.objects.filter(id__range=[1, 2]) # \u8303\u56f4bettwen and startswith\uff0cistartswith, endswith, iendswith\u3000 \u57fa\u4e8e\u5bf9\u8c61\u7684\u8de8\u8868\u67e5\u8be2 \u4e00\u5bf9\u591a\u67e5\u8be2\uff08Publish \u4e0e Book\uff09 \u6b63\u5411\u67e5\u8be2(\u6309\u5b57\u6bb5\uff1apublish)\uff1a # \u67e5\u8be2nid=1\u7684\u4e66\u7c4d\u7684\u51fa\u7248\u793e\u6240\u5728\u7684\u57ce\u5e02<br> book_obj=Book.objects.get(nid=1)<br>print(book_obj.publish.city) # book_obj.publish \u662fnid=1\u7684\u4e66\u7c4d\u5bf9\u8c61\u5173\u8054\u7684\u51fa\u7248\u793e\u5bf9\u8c61\u3000\u3000 \u53cd\u5411\u67e5\u8be2(\u6309\u8868\u540d\uff1abook_set)\uff1a # \u67e5\u8be2 \u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d publish=Publish.objects.get(name=\"\u4eba\u6c11\u51fa\u7248\u793e\") book_list=publish.book_set.all() # \u4e0e\u4eba\u6c11\u51fa\u7248\u793e\u5173\u8054\u7684\u6240\u6709\u4e66\u7c4d\u5bf9\u8c61\u96c6\u5408 for book_obj in book_list: print(book_obj.title) \u4e00\u5bf9\u4e00\u67e5\u8be2(Author \u4e0e AuthorDetail) \u6b63\u5411\u67e5\u8be2(\u6309\u5b57\u6bb5\uff1aauthorDetail)\uff1a # \u67e5\u8be2egon\u4f5c\u8005\u7684\u624b\u673a\u53f7 author_egon=Author.objects.get(name=\"egon\") print(author_egon.authorDetail.telephone) \u53cd\u5411\u67e5\u8be2(\u6309\u8868\u540d\uff1aauthor)\uff1a # \u67e5\u8be2\u6240\u6709\u4f4f\u5740\u5728\u5317\u4eac\u7684\u4f5c\u8005\u7684\u59d3\u540d authorDetail_list=AuthorDetail.objects.filter(addr=\"beijing\") for obj in authorDetail_list: print(obj.author.name) \u591a\u5bf9\u591a\u67e5\u8be2 (Author \u4e0e Book) \u6b63\u5411\u67e5\u8be2(\u6309\u5b57\u6bb5\uff1aauthors)\uff1a # \u91d1\u74f6\u7709\u6240\u6709\u4f5c\u8005\u7684\u540d\u5b57\u4ee5\u53ca\u624b\u673a\u53f7 book_obj=Book.objects.filter(title=\"\u91d1\u74f6\u7709\").first() authors=book_obj.authors.all() for author_obj in authors: print(author_obj.name,author_obj.authorDetail.telephone) \u53cd\u5411\u67e5\u8be2(\u6309\u8868\u540d\uff1abook_set)\uff1a # \u67e5\u8be2egon\u51fa\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57 author_obj=Author.objects.get(name=\"egon\") book_list=author_obj.book_set.all() #\u4e0eegon\u4f5c\u8005\u76f8\u5173\u7684\u6240\u6709\u4e66\u7c4d for book_obj in book_list: print(book_obj.title) \u6ce8\u610f\uff1a \u4f60\u53ef\u4ee5\u901a\u8fc7\u5728 ForeignKey() \u548cManyToManyField\u7684\u5b9a\u4e49\u4e2d\u8bbe\u7f6e related_name \u7684\u503c\u6765\u8986\u5199 FOO_set \u7684\u540d\u79f0\u3002\u4f8b\u5982\uff0c\u5982\u679c Article model \u4e2d\u505a\u4e00\u4e0b\u66f4\u6539\uff1a publish = ForeignKey(Blog, related_name='bookList')\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u4f1a\u5982\u6211\u4eec\u770b\u5230\u8fd9\u822c\uff1a # \u67e5\u8be2 \u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d publish=Publish.objects.get(name=\"\u4eba\u6c11\u51fa\u7248\u793e\") book_list=publish.bookList.all() # \u4e0e\u4eba\u6c11\u51fa\u7248\u793e\u5173\u8054\u7684\u6240\u6709\u4e66\u7c4d\u5bf9\u8c61\u96c6\u5408 \u57fa\u4e8e\u53cc\u4e0b\u5212\u7ebf\u7684\u8de8\u8868\u67e5\u8be2 Django \u8fd8\u63d0\u4f9b\u4e86\u4e00\u79cd\u76f4\u89c2\u800c\u9ad8\u6548\u7684\u65b9\u5f0f\u5728\u67e5\u8be2(lookups)\u4e2d\u8868\u793a\u5173\u8054\u5173\u7cfb\uff0c\u5b83\u80fd\u81ea\u52a8\u786e\u8ba4 SQL JOIN \u8054\u7cfb\u3002\u8981\u505a\u8de8\u5173\u7cfb\u67e5\u8be2\uff0c\u5c31\u4f7f\u7528\u4e24\u4e2a\u4e0b\u5212\u7ebf\u6765\u94fe\u63a5\u6a21\u578b(model)\u95f4\u5173\u8054\u5b57\u6bb5\u7684\u540d\u79f0\uff0c\u76f4\u5230\u6700\u7ec8\u94fe\u63a5\u5230\u4f60\u60f3\u8981\u7684 model \u4e3a\u6b62\u3002 \u5173\u952e\u70b9\uff1a\u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\uff0c\u53cd\u5411\u67e5\u8be2\u6309\u8868\u660e\u3002 # \u7ec3\u4e601: \u67e5\u8be2\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4e0e\u4ef7\u683c(\u4e00\u5bf9\u591a) # \u6b63\u5411\u67e5\u8be2 \u6309\u5b57\u6bb5:publish queryResult=Book.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(publish__name=\"\u4eba\u6c11\u51fa\u7248\u793e\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\",\"price\") # \u53cd\u5411\u67e5\u8be2 \u6309\u8868\u540d:book queryResult=Publish.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"\u4eba\u6c11\u51fa\u7248\u793e\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"book__title\",\"book__price\") # \u7ec3\u4e602: \u67e5\u8be2egon\u51fa\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57(\u591a\u5bf9\u591a) # \u6b63\u5411\u67e5\u8be2 \u6309\u5b57\u6bb5:authors: queryResult=Book.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(authors__name=\"yuan\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\") # \u53cd\u5411\u67e5\u8be2 \u6309\u8868\u540d:book queryResult=Author.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"yuan\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"book__title\",\"book__price\") # \u7ec3\u4e603: \u67e5\u8be2\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4ee5\u53ca\u4f5c\u8005\u7684\u59d3\u540d # \u6b63\u5411\u67e5\u8be2 queryResult=Book.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(publish__name=\"\u4eba\u6c11\u51fa\u7248\u793e\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\",\"authors__name\") # \u53cd\u5411\u67e5\u8be2 queryResult=Publish.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"\u4eba\u6c11\u51fa\u7248\u793e\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"book__title\",\"book__authors__age\",\"book__authors__name\") # \u7ec3\u4e604: \u624b\u673a\u53f7\u4ee5151\u5f00\u5934\u7684\u4f5c\u8005\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u540d\u79f0\u4ee5\u53ca\u51fa\u7248\u793e\u540d\u79f0 queryResult=Book.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(authors__authorDetail__telephone__regex=\"151\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\",\"publish__name\") \u6ce8\u610f\uff1a \u53cd\u5411\u67e5\u8be2\u65f6\uff0c\u5982\u679c\u5b9a\u4e49\u4e86related_name \uff0c\u5219\u7528related_name\u66ff\u6362\u8868\u540d\uff0c\u4f8b\u5982\uff1a publish = ForeignKey(Blog, related_name='bookList')\uff1a # \u7ec3\u4e601: \u67e5\u8be2\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4e0e\u4ef7\u683c(\u4e00\u5bf9\u591a) # \u53cd\u5411\u67e5\u8be2 \u4e0d\u518d\u6309\u8868\u540d:book,\u800c\u662frelated_name:bookList queryResult=Publish.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"\u4eba\u6c11\u51fa\u7248\u793e\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"bookList__title\",\"bookList__price\") \u805a\u5408\u67e5\u8be2\u4e0e\u5206\u7ec4\u67e5\u8be2 \u5148\u4e86\u89e3sql\u4e2d\u7684\u805a\u5408\u4e0e\u5206\u7ec4\u6982\u5ff5 \u805a\u5408\uff1aaggregate ( args, *kwargs) # \u8ba1\u7b97\u6240\u6709\u56fe\u4e66\u7684\u5e73\u5747\u4ef7\u683c >>> from django.db.models import Avg >>> Book.objects.all().aggregate(Avg('price')) {'price__avg': 34.35} aggregate() \u662f QuerySet \u7684\u4e00\u4e2a\u7ec8\u6b62\u5b50\u53e5\uff0c\u610f\u601d\u662f\u8bf4\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u4e00\u4e9b\u952e\u503c\u5bf9\u7684\u5b57\u5178\u3002\u952e\u7684\u540d\u79f0\u662f\u805a\u5408\u503c\u7684\u6807\u8bc6\u7b26\uff0c\u503c\u662f\u8ba1\u7b97\u51fa\u6765\u7684\u805a\u5408\u503c\u3002\u952e\u7684\u540d\u79f0\u662f\u6309\u7167\u5b57\u6bb5\u548c\u805a\u5408\u51fd\u6570\u7684\u540d\u79f0\u81ea\u52a8\u751f\u6210\u51fa\u6765\u7684\u3002\u5982\u679c\u4f60\u60f3\u8981\u4e3a\u805a\u5408\u503c\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0\uff0c\u53ef\u4ee5\u5411\u805a\u5408\u5b50\u53e5\u63d0\u4f9b\u5b83\u3002 >>> Book.objects.aggregate(average_price=Avg('price')) {'average_price': 34.35} \u5982\u679c\u4f60\u5e0c\u671b\u751f\u6210\u4e0d\u6b62\u4e00\u4e2a\u805a\u5408\uff0c\u4f60\u53ef\u4ee5\u5411 aggregate() \u5b50\u53e5\u4e2d\u6dfb\u52a0\u53e6\u4e00\u4e2a\u53c2\u6570\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u4e5f\u60f3\u77e5\u9053\u6240\u6709\u56fe\u4e66\u4ef7\u683c\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u53ef\u4ee5\u8fd9\u6837\u67e5\u8be2\uff1a >>> from django.db.models import Avg, Max, Min >>> Book.objects.aggregate(Avg('price'), Max('price'), Min('price')) {'price__avg': 34.35, 'price__max': Decimal('81.20'), 'price__min': Decimal('12.99')} \u5206\u7ec4\uff1aannotate() \u4e3a\u8c03\u7528\u7684 QuerySet \u4e2d\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u751f\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u7edf\u8ba1\u503c\uff08\u7edf\u8ba1\u65b9\u6cd5\u7528\u805a\u5408\u51fd\u6570\uff09\u3002\u3000 (1) \u7ec3\u4e60\uff1a\u7edf\u8ba1\u6bcf\u4e00\u672c\u4e66\u7684\u4f5c\u8005\u4e2a\u6570 bookList=Book.objects.annotate(authorsNum=Count('authors')) for book_obj in bookList: print(book_obj.title,book_obj.authorsNum) SELECT \"app01_book\".\"nid\", \"app01_book\".\"title\", \"app01_book\".\"publishDate\", \"app01_book\".\"price\", \"app01_book\".\"pageNum\", \"app01_book\".\"publish_id\", COUNT(\"app01_book_authors\".\"author_id\") AS \"authorsNum\" FROM \"app01_book\" LEFT OUTER JOIN \"app01_book_authors\" ON (\"app01_book\".\"nid\" = \"app01_book_authors\".\"book_id\") GROUP BY \"app01_book\".\"nid\", \"app01_book\".\"title\", \"app01_book\".\"publishDate\", \"app01_book\".\"price\", \"app01_book\".\"pageNum\", \"app01_book\".\"publish_id\" \u89e3\u6790\uff1a ''' Book.objects.annotate(authorsNum=Count('authors')) \u62c6\u5206\u89e3\u6790\uff1a Book.objects\u7b49\u540c\u4e8eBook.objects.all(),\u7ffb\u8bd1\u6210\u7684sql\u7c7b\u4f3c\u4e8e\uff1a select id,name,.. from Book \u8fd9\u6837\u5f97\u5230\u7684\u5bf9\u8c61\u4e00\u5b9a\u662f\u6bcf\u4e00\u672c\u4e66\u5bf9\u8c61\uff0c\u6709n\u672c\u4e66\u7c4d\u8bb0\u5f55\uff0c\u5c31\u5206n\u4e2a\u7ec4\uff0c\u4e0d\u4f1a\u6709\u91cd\u590d\u5bf9\u8c61\uff0c\u6bcf\u4e00\u7ec4\u518d\u7531annotate\u5206\u7ec4\u7edf\u8ba1\u3002''' (2) \u5982\u679c\u60f3\u5bf9\u6240\u67e5\u8be2\u5bf9\u8c61\u7684\u5173\u8054\u5bf9\u8c61\u8fdb\u884c\u805a\u5408\uff1a \u7ec3\u4e60\uff1a\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u51fa\u7248\u793e\u7684\u6700\u4fbf\u5b9c\u7684\u4e66 publishList=Publish.objects.annotate(MinPrice=Min(\"book__price\")) for publish_obj in publishList: print(publish_obj.name,publish_obj.MinPrice) annotate\u7684\u8fd4\u56de\u503c\u662fquerySet\uff0c\u5982\u679c\u4e0d\u60f3\u904d\u5386\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7528\u4e0avaluelist\uff1a queryResult= Publish.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.annotate(MinPrice=Min(\"book__price\")) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"name\",\"MinPrice\") print(queryResult) \u89e3\u6790\u540c\u4e0a\u3002 \u65b9\u5f0f2:\u3000 queryResult=Book.objects.values(\"publish__name\").annotate(MinPrice=Min('price')) \uff03 \u601d\u8003\uff1a if \u6709\u4e00\u4e2a\u51fa\u7248\u793e\u6ca1\u6709\u51fa\u7248\u8fc7\u4e66\u4f1a\u600e\u6837\uff1f \u89e3\u6790\uff1a ''' \u67e5\u770b Book.objects.values(\"publish__name\")\u7684\u7ed3\u679c\u548c\u5bf9\u5e94\u7684sql\u8bed\u53e5 \u53ef\u4ee5\u7406\u89e3\u4e3avalues\u5185\u7684\u5b57\u6bb5\u5373group by\u7684\u5b57\u6bb5''' (3) \u7edf\u8ba1\u6bcf\u4e00\u672c\u4ee5py\u5f00\u5934\u7684\u4e66\u7c4d\u7684\u4f5c\u8005\u4e2a\u6570\uff1a queryResult=Book.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 .filter(title__startswith=\"Py\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 \u3000.annotate(num_authors=Count('authors')) (4) \u7edf\u8ba1\u4e0d\u6b62\u4e00\u4e2a\u4f5c\u8005\u7684\u56fe\u4e66\uff1a queryResult=Book.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.annotate(num_authors=Count('authors')) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(num_authors__gt=1) (5) \u6839\u636e\u4e00\u672c\u56fe\u4e66\u4f5c\u8005\u6570\u91cf\u7684\u591a\u5c11\u5bf9\u67e5\u8be2\u96c6 QuerySet \u8fdb\u884c\u6392\u5e8f: Book.objects.annotate(num_authors=Count('authors')).order_by('num_authors') (6) \u67e5\u8be2\u5404\u4e2a\u4f5c\u8005\u51fa\u7684\u4e66\u7684\u603b\u4ef7\u683c: # \u6309author\u8868\u7684\u6240\u6709\u5b57\u6bb5 group by queryResult=Author.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.annotate(SumPrice=Sum(\"book__price\"))\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"name\",\"SumPrice\") print(queryResult) # \u6309authors__name group by queryResult2=Book.objects.values(\"authors__name\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.annotate(SumPrice=Sum(\"price\"))\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"authors__name\",\"SumPrice\") print(queryResult2) F\u67e5\u8be2\u4e0eQ\u67e5\u8be2 F\u67e5\u8be2 \u5728\u4e0a\u9762\u6240\u6709\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6784\u9020\u7684\u8fc7\u6ee4\u5668\u90fd\u53ea\u662f\u5c06\u5b57\u6bb5\u503c\u4e0e\u67d0\u4e2a\u5e38\u91cf\u505a\u6bd4\u8f83\u3002\u5982\u679c\u6211\u4eec\u8981\u5bf9\u4e24\u4e2a\u5b57\u6bb5\u7684\u503c\u505a\u6bd4\u8f83\uff0c\u90a3\u8be5\u600e\u4e48\u505a\u5462\uff1f Django \u63d0\u4f9b F() \u6765\u505a\u8fd9\u6837\u7684\u6bd4\u8f83\u3002F() \u7684\u5b9e\u4f8b\u53ef\u4ee5\u5728\u67e5\u8be2\u4e2d\u5f15\u7528\u5b57\u6bb5\uff0c\u6765\u6bd4\u8f83\u540c\u4e00\u4e2a model \u5b9e\u4f8b\u4e2d\u4e24\u4e2a\u4e0d\u540c\u5b57\u6bb5\u7684\u503c\u3002 # \u67e5\u8be2\u8bc4\u8bba\u6570\u5927\u4e8e\u6536\u85cf\u6570\u7684\u4e66\u7c4d from django.db.models import F Book.objects.filter(commnetNum__lt=F('keepNum')) Django \u652f\u6301 F() \u5bf9\u8c61\u4e4b\u95f4\u4ee5\u53ca F() \u5bf9\u8c61\u548c\u5e38\u6570\u4e4b\u95f4\u7684\u52a0\u51cf\u4e58\u9664\u548c\u53d6\u6a21\u7684\u64cd\u4f5c\u3002 # \u67e5\u8be2\u8bc4\u8bba\u6570\u5927\u4e8e\u6536\u85cf\u65702\u500d\u7684\u4e66\u7c4d Book.objects.filter(commnetNum__lt=F('keepNum')*2) \u4fee\u6539\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u4f7f\u7528F\u51fd\u6570,\u6bd4\u5982\u5c06\u6bcf\u4e00\u672c\u4e66\u7684\u4ef7\u683c\u63d0\u9ad830\u5143\uff1a Book.objects.all().update(price=F(\"price\")+30)\u3000 Q\u67e5\u8be2 filter() \u7b49\u65b9\u6cd5\u4e2d\u7684\u5173\u952e\u5b57\u53c2\u6570\u67e5\u8be2\u90fd\u662f\u4e00\u8d77\u8fdb\u884c\u201cAND\u201d \u7684\u3002 \u5982\u679c\u4f60\u9700\u8981\u6267\u884c\u66f4\u590d\u6742\u7684\u67e5\u8be2\uff08\u4f8b\u5982 OR \u8bed\u53e5\uff09\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Q \u5bf9\u8c61 \u3002 from django.db.models import Q Q(title__startswith='Py') Q \u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 & \u548c | \u64cd\u4f5c\u7b26\u7ec4\u5408\u8d77\u6765\u3002\u5f53\u4e00\u4e2a\u64cd\u4f5c\u7b26\u5728\u4e24\u4e2a Q \u5bf9\u8c61\u4e0a\u4f7f\u7528\u65f6\uff0c\u5b83\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684 Q \u5bf9\u8c61\u3002 bookList=Book.objects.filter(Q(authors__name=\"yuan\")|Q(authors__name=\"egon\")) \u7b49\u540c\u4e8e\u4e0b\u9762\u7684SQL WHERE \u5b50\u53e5\uff1a WHERE name =\"yuan\" OR name =\"egon\" \u4f60\u53ef\u4ee5\u7ec4\u5408 & \u548c | \u64cd\u4f5c\u7b26\u4ee5\u53ca\u4f7f\u7528\u62ec\u53f7\u8fdb\u884c\u5206\u7ec4\u6765\u7f16\u5199\u4efb\u610f\u590d\u6742\u7684 Q \u5bf9\u8c61\u3002\u540c\u65f6\uff0c Q \u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 ~ \u64cd\u4f5c\u7b26\u53d6\u53cd\uff0c\u8fd9\u5141\u8bb8\u7ec4\u5408\u6b63\u5e38\u7684\u67e5\u8be2\u548c\u53d6\u53cd( NOT ) \u67e5\u8be2\uff1a bookList=Book.objects.filter(Q(authors__name=\"yuan\") & ~Q(publishDate__year=2017)).values_list(\"title\") \u67e5\u8be2\u51fd\u6570\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528 Q \u5bf9\u8c61 \u548c\u5173\u952e\u5b57\u53c2\u6570\u3002\u6240\u6709\u63d0\u4f9b\u7ed9\u67e5\u8be2\u51fd\u6570\u7684\u53c2\u6570\uff08\u5173\u952e\u5b57\u53c2\u6570\u6216 Q \u5bf9\u8c61\uff09\u90fd\u5c06\"AND\u201d\u5728\u4e00\u8d77\u3002\u4f46\u662f\uff0c\u5982\u679c\u51fa\u73b0 Q \u5bf9\u8c61\uff0c\u5b83\u5fc5\u987b\u4f4d\u4e8e\u6240\u6709\u5173\u952e\u5b57\u53c2\u6570\u7684\u524d\u9762\u3002\u4f8b\u5982\uff1a bookList=Book.objects.filter(Q(publishDate__year=2016) | Q(publishDate__year=2017),title__icontains=\"python\") \u4fee\u6539\u8868\u8bb0\u5f55 \u6ce8\u610f\uff1a <1> \u7b2c\u4e8c\u79cd\u65b9\u5f0f\u4fee\u6539\u4e0d\u80fd\u7528get\u7684\u539f\u56e0\u662f\uff1aupdate\u662fQuerySet\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0cget\u8fd4\u56de\u7684\u662f\u4e00\u4e2amodel\u5bf9\u8c61\uff0c\u5b83\u6ca1\u6709update\u65b9\u6cd5\uff0c\u800cfilter\u8fd4\u56de\u7684\u662f\u4e00\u4e2aQuerySet\u5bf9\u8c61(filter\u91cc\u9762\u7684\u6761\u4ef6\u53ef\u80fd\u6709\u591a\u4e2a\u6761\u4ef6\u7b26\u5408\uff0c\u6bd4\u5982name\uff1d'alvin',\u53ef\u80fd\u6709\u4e24\u4e2aname\uff1d'alvin'\u7684\u884c\u6570\u636e)\u3002 <2>\u5728\u201c\u63d2\u5165\u548c\u66f4\u65b0\u6570\u636e\u201d\u5c0f\u8282\u4e2d\uff0c\u6211\u4eec\u6709\u63d0\u5230\u6a21\u578b\u7684save()\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u66f4\u65b0\u4e00\u884c\u91cc\u7684\u6240\u6709\u5217\u3002 \u800c\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0\u884c\u91cc\u7684\u67d0\u51e0\u5217\u3002 \u6b64\u5916\uff0cupdate()\u65b9\u6cd5\u5bf9\u4e8e\u4efb\u4f55\u7ed3\u679c\u96c6\uff08QuerySet\uff09\u5747\u6709\u6548\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u540c\u65f6\u66f4\u65b0\u591a\u6761\u8bb0\u5f55update()\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\u503c\uff0c\u8868\u793a\u53d7\u5f71\u54cd\u7684\u8bb0\u5f55\u6761\u6570\u3002 \u6ce8\u610f\uff0c\u8fd9\u91cc\u56e0\u4e3aupdate\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u6574\u5f62\uff0c\u6240\u4ee5\u6ca1\u6cd5\u7528query\u5c5e\u6027\uff1b\u5bf9\u4e8e\u6bcf\u6b21\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u60f3\u663e\u793a\u5bf9\u5e94\u7684raw sql\uff0c\u9700\u8981\u5728settings\u52a0\u4e0a\u65e5\u5fd7\u8bb0\u5f55\u90e8\u5206 \u5220\u9664\u8868\u8bb0\u5f55 \u5220\u9664\u65b9\u6cd5\u5c31\u662f delete()\u3002\u5b83\u8fd0\u884c\u65f6\u7acb\u5373\u5220\u9664\u5bf9\u8c61\u800c\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\u3002\u4f8b\u5982\uff1a e.delete() \u4f60\u4e5f\u53ef\u4ee5\u4e00\u6b21\u6027\u5220\u9664\u591a\u4e2a\u5bf9\u8c61\u3002\u6bcf\u4e2a QuerySet \u90fd\u6709\u4e00\u4e2a delete() \u65b9\u6cd5\uff0c\u5b83\u4e00\u6b21\u6027\u5220\u9664 QuerySet \u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u5220\u9664 pub_date \u662f2005\u5e74\u7684 Entry \u5bf9\u8c61\uff1a Entry.objects.filter(pub_date__year=2005).delete() \u8981\u7262\u8bb0\u8fd9\u4e00\u70b9\uff1a\u65e0\u8bba\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\uff0cQuerySet \u4e2d\u7684 delete() \u65b9\u6cd5\u90fd\u53ea\u4f7f\u7528\u4e00\u6761 SQL \u8bed\u53e5\u4e00\u6b21\u6027\u5220\u9664\u6240\u6709\u5bf9\u8c61\uff0c\u800c\u5e76\u4e0d\u662f\u5206\u522b\u5220\u9664\u6bcf\u4e2a\u5bf9\u8c61\u3002\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u5728 model \u4e2d\u81ea\u5b9a\u4e49\u7684 delete() \u65b9\u6cd5\uff0c\u5c31\u8981\u81ea\u884c\u8c03\u7528\u6bcf\u4e2a\u5bf9\u8c61\u7684delete \u65b9\u6cd5\u3002(\u4f8b\u5982\uff0c\u904d\u5386 QuerySet\uff0c\u5728\u6bcf\u4e2a\u5bf9\u8c61\u4e0a\u8c03\u7528 delete()\u65b9\u6cd5)\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 QuerySet \u4e2d\u7684 delete()\u65b9\u6cd5\u3002 \u5728 Django \u5220\u9664\u5bf9\u8c61\u65f6\uff0c\u4f1a\u6a21\u4eff SQL \u7ea6\u675f ON DELETE CASCADE \u7684\u884c\u4e3a\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5220\u9664\u4e00\u4e2a\u5bf9\u8c61\u65f6\u4e5f\u4f1a\u5220\u9664\u4e0e\u5b83\u76f8\u5173\u8054\u7684\u5916\u952e\u5bf9\u8c61\u3002\u4f8b\u5982\uff1a b = Blog.objects.get(pk=1) # This will delete the Blog and all of its Entry objects. b.delete() \u8981\u6ce8\u610f\u7684\u662f\uff1a delete() \u65b9\u6cd5\u662f QuerySet \u4e0a\u7684\u65b9\u6cd5\uff0c\u4f46\u5e76\u4e0d\u9002\u7528\u4e8e Manager \u672c\u8eab\u3002\u8fd9\u662f\u4e00\u79cd\u4fdd\u62a4\u673a\u5236\uff0c\u662f\u4e3a\u4e86\u907f\u514d\u610f\u5916\u5730\u8c03\u7528 Entry.objects.delete() \u65b9\u6cd5\u5bfc\u81f4 \u6240\u6709\u7684 \u8bb0\u5f55\u88ab\u8bef\u5220\u9664\u3002\u5982\u679c\u4f60\u786e\u8ba4\u8981\u5220\u9664\u6240\u6709\u7684\u5bf9\u8c61\uff0c\u90a3\u4e48\u4f60\u5fc5\u987b\u663e\u5f0f\u5730\u8c03\u7528\uff1a Entry.objects.all().delete()\u3000\u3000 \u5982\u679c\u4e0d\u60f3\u7ea7\u8054\u5220\u9664\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\uff1a pubHouse = models.ForeignKey(to='Publisher', on_delete=models.SET_NULL, blank=True, null=True) Django-model\u8fdb\u9636 \u77e5\u8bc6\u9884\u89c8 QuerySet \u4e2d\u4ecb\u6a21\u578b \u67e5\u8be2\u4f18\u5316 extra \u6574\u4f53\u63d2\u5165 QuerySet \u53ef\u5207\u7247 \u4f7f\u7528Python \u7684\u5207\u7247\u8bed\u6cd5\u6765\u9650\u5236 \u67e5\u8be2\u96c6 \u8bb0\u5f55\u7684\u6570\u76ee \u3002\u5b83\u7b49\u540c\u4e8eSQL \u7684 LIMIT \u548c OFFSET \u5b50\u53e5\u3002 >>> Entry.objects.all()[:5] # (LIMIT 5) >>> Entry.objects.all()[5:10] # (OFFSET 5 LIMIT 5) \u4e0d\u652f\u6301\u8d1f\u7684\u7d22\u5f15\uff08\u4f8b\u5982 Entry.objects.all()[-1] \uff09\u3002\u901a\u5e38\uff0c \u67e5\u8be2\u96c6 \u7684\u5207\u7247\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 \u67e5\u8be2\u96c6 \u2014\u2014 \u5b83\u4e0d\u4f1a\u6267\u884c\u67e5\u8be2\u3002 \u53ef\u8fed\u4ee3 articleList=models.Article.objects.all() for article in articleList: print(article.title) \u60f0\u6027\u67e5\u8be2 \u67e5\u8be2\u96c6 \u662f\u60f0\u6027\u6267\u884c\u7684 \u2014\u2014 \u521b\u5efa \u67e5\u8be2\u96c6 \u4e0d\u4f1a\u5e26\u6765\u4efb\u4f55\u6570\u636e\u5e93\u7684\u8bbf\u95ee\u3002\u4f60\u53ef\u4ee5\u5c06\u8fc7\u6ee4\u5668\u4fdd\u6301\u4e00\u6574\u5929\uff0c\u76f4\u5230 \u67e5\u8be2\u96c6 \u9700\u8981\u6c42\u503c\u65f6\uff0cDjango \u624d\u4f1a\u771f\u6b63\u8fd0\u884c\u8fd9\u4e2a\u67e5\u8be2\u3002 queryResult=models.Article.objects.all() # not hits database print(queryResult) # hits database for article in queryResult: print(article.title) # hits database \u4e00\u822c\u6765\u8bf4\uff0c\u53ea\u6709\u5728\u201c\u8bf7\u6c42\u201d \u67e5\u8be2\u96c6 \u7684\u7ed3\u679c\u65f6\u624d\u4f1a\u5230\u6570\u636e\u5e93\u4e2d\u53bb\u83b7\u53d6\u5b83\u4eec\u3002\u5f53\u4f60\u786e\u5b9e\u9700\u8981\u7ed3\u679c\u65f6\uff0c \u67e5\u8be2\u96c6 \u901a\u8fc7\u8bbf\u95ee\u6570\u636e\u5e93\u6765 \u6c42\u503c \u3002 \u5173\u4e8e\u6c42\u503c\u53d1\u751f\u7684\u51c6\u786e\u65f6\u95f4\uff0c\u53c2\u89c1 \u4f55\u65f6\u8ba1\u7b97\u67e5\u8be2\u96c6 \u3002 \u7f13\u5b58\u673a\u5236 \u6bcf\u4e2a \u67e5\u8be2\u96c6 \u90fd\u5305\u542b\u4e00\u4e2a\u7f13\u5b58\u6765\u6700\u5c0f\u5316\u5bf9\u6570\u636e\u5e93\u7684\u8bbf\u95ee\u3002\u7406\u89e3\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u5c06\u8ba9\u4f60\u7f16\u5199\u6700\u9ad8\u6548\u7684\u4ee3\u7801\u3002 \u5728\u4e00\u4e2a\u65b0\u521b\u5efa\u7684 \u67e5\u8be2\u96c6 \u4e2d\uff0c\u7f13\u5b58\u4e3a\u7a7a\u3002\u9996\u6b21\u5bf9 \u67e5\u8be2\u96c6 \u8fdb\u884c\u6c42\u503c \u2014\u2014 \u540c\u65f6\u53d1\u751f\u6570\u636e\u5e93\u67e5\u8be2 \u2014\u2014Django \u5c06\u4fdd\u5b58\u67e5\u8be2\u7684\u7ed3\u679c\u5230 \u67e5\u8be2\u96c6 \u7684\u7f13\u5b58\u4e2d\u5e76\u8fd4\u56de\u660e\u786e\u8bf7\u6c42\u7684\u7ed3\u679c\uff08\u4f8b\u5982\uff0c\u5982\u679c\u6b63\u5728\u8fed\u4ee3 \u67e5\u8be2\u96c6 \uff0c\u5219\u8fd4\u56de\u4e0b\u4e00\u4e2a\u7ed3\u679c\uff09\u3002\u63a5\u4e0b\u6765\u5bf9\u8be5 \u67e5\u8be2\u96c6 \u7684\u6c42\u503c\u5c06\u91cd\u7528\u7f13\u5b58\u7684\u7ed3\u679c\u3002 \u8bf7\u7262\u8bb0\u8fd9\u4e2a\u7f13\u5b58\u884c\u4e3a\uff0c\u56e0\u4e3a\u5bf9 \u67e5\u8be2\u96c6 \u4f7f\u7528\u4e0d\u5f53\u7684\u8bdd\uff0c\u5b83\u4f1a\u5751\u4f60\u7684\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u8bed\u53e5\u521b\u5efa\u4e24\u4e2a \u67e5\u8be2\u96c6 \uff0c\u5bf9\u5b83\u4eec\u6c42\u503c\uff0c\u7136\u540e\u6254\u6389\u5b83\u4eec\uff1a print([a.title for a in models.Article.objects.all()]) print([a.create_time for a in models.Article.objects.all()]) \u8fd9\u610f\u5473\u7740\u76f8\u540c\u7684\u6570\u636e\u5e93\u67e5\u8be2\u5c06\u6267\u884c\u4e24\u6b21\uff0c\u663e\u7136\u500d\u589e\u4e86\u4f60\u7684\u6570\u636e\u5e93\u8d1f\u8f7d\u3002\u540c\u65f6\uff0c\u8fd8\u6709\u53ef\u80fd\u4e24\u4e2a\u7ed3\u679c\u5217\u8868\u5e76\u4e0d\u5305\u542b\u76f8\u540c\u7684\u6570\u636e\u5e93\u8bb0\u5f55\uff0c\u56e0\u4e3a\u5728\u4e24\u6b21\u8bf7\u6c42\u671f\u95f4\u6709\u53ef\u80fd\u6709Article\u88ab\u6dfb\u52a0\u8fdb\u6765\u6216\u5220\u9664\u6389\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ea\u9700\u4fdd\u5b58 \u67e5\u8be2\u96c6 \u5e76\u91cd\u65b0\u4f7f\u7528\u5b83\uff1a queryResult=models.Article.objects.all() print([a.title for a in queryResult]) print([a.create_time for a in queryResult]) \u4f55\u65f6\u67e5\u8be2\u96c6\u4e0d\u4f1a\u88ab\u7f13\u5b58? \u67e5\u8be2\u96c6\u4e0d\u4f1a\u6c38\u8fdc\u7f13\u5b58\u5b83\u4eec\u7684\u7ed3\u679c\u3002\u5f53\u53ea\u5bf9\u67e5\u8be2\u96c6\u7684\u90e8\u5206\u8fdb\u884c\u6c42\u503c\u65f6\u4f1a\u68c0\u67e5\u7f13\u5b58\uff0c \u5982\u679c\u8fd9\u4e2a\u90e8\u5206\u4e0d\u5728\u7f13\u5b58\u4e2d\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u67e5\u8be2\u8fd4\u56de\u7684\u8bb0\u5f55\u90fd\u5c06\u4e0d\u4f1a\u88ab\u7f13\u5b58\u3002\u6240\u4ee5\uff0c\u8fd9\u610f\u5473\u7740\u4f7f\u7528\u5207\u7247\u6216\u7d22\u5f15\u6765\u9650\u5236\u67e5\u8be2\u96c6\u5c06\u4e0d\u4f1a\u586b\u5145\u7f13\u5b58\u3002 \u4f8b\u5982\uff0c\u91cd\u590d\u83b7\u53d6\u67e5\u8be2\u96c6\u5bf9\u8c61\u4e2d\u4e00\u4e2a\u7279\u5b9a\u7684\u7d22\u5f15\u5c06\u6bcf\u6b21\u90fd\u67e5\u8be2\u6570\u636e\u5e93\uff1a >>> queryset = Entry.objects.all() >>> print queryset[5] # Queries the database >>> print queryset[5] # Queries the database again \u7136\u800c\uff0c\u5982\u679c\u5df2\u7ecf\u5bf9\u5168\u90e8\u67e5\u8be2\u96c6\u6c42\u503c\u8fc7\uff0c\u5219\u5c06\u68c0\u67e5\u7f13\u5b58\uff1a >>> queryset = Entry.objects.all() >>> [entry for entry in queryset] # Queries the database >>> print queryset[5] # Uses cache >>> print queryset[5] # Uses cache \u4e0b\u9762\u662f\u4e00\u4e9b\u5176\u5b83\u4f8b\u5b50\uff0c\u5b83\u4eec\u4f1a\u4f7f\u5f97\u5168\u90e8\u7684\u67e5\u8be2\u96c6\u88ab\u6c42\u503c\u5e76\u586b\u5145\u5230\u7f13\u5b58\u4e2d\uff1a >>> [entry for entry in queryset] >>> bool(queryset) >>> entry in queryset >>> list(queryset) \u6ce8\uff1a\u7b80\u5355\u5730\u6253\u5370\u67e5\u8be2\u96c6\u4e0d\u4f1a\u586b\u5145\u7f13\u5b58\u3002 queryResult=models.Article.objects.all() print(queryResult) # hits database print(queryResult) # hits database exists()\u4e0eiterator()\u65b9\u6cd5 exists\uff1a \u7b80\u5355\u7684\u4f7f\u7528if\u8bed\u53e5\u8fdb\u884c\u5224\u65ad\u4e5f\u4f1a\u5b8c\u5168\u6267\u884c\u6574\u4e2aqueryset\u5e76\u4e14\u628a\u6570\u636e\u653e\u5165cache\uff0c\u867d\u7136\u4f60\u5e76\u4e0d\u9700\u8981\u8fd9\u4e9b \u6570\u636e\uff01\u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\uff0c\u53ef\u4ee5\u7528exists()\u65b9\u6cd5\u6765\u68c0\u67e5\u662f\u5426\u6709\u6570\u636e\uff1a if queryResult.exists(): #SELECT (1) AS \"a\" FROM \"blog_article\" LIMIT 1; args=() print(\"exists...\") iterator: \u5f53queryset\u975e\u5e38\u5de8\u5927\u65f6\uff0ccache\u4f1a\u6210\u4e3a\u95ee\u9898\u3002 \u5904\u7406\u6210\u5343\u4e0a\u4e07\u7684\u8bb0\u5f55\u65f6\uff0c\u5c06\u5b83\u4eec\u4e00\u6b21\u88c5\u5165\u5185\u5b58\u662f\u5f88\u6d6a\u8d39\u7684\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5de8\u5927\u7684queryset\u53ef\u80fd\u4f1a\u9501\u4f4f\u7cfb\u7edf \u8fdb\u7a0b\uff0c\u8ba9\u4f60\u7684\u7a0b\u5e8f\u6fd2\u4e34\u5d29\u6e83\u3002\u8981\u907f\u514d\u5728\u904d\u5386\u6570\u636e\u7684\u540c\u65f6\u4ea7\u751fqueryset cache\uff0c\u53ef\u4ee5\u4f7f\u7528iterator()\u65b9\u6cd5 \u6765\u83b7\u53d6\u6570\u636e\uff0c\u5904\u7406\u5b8c\u6570\u636e\u5c31\u5c06\u5176\u4e22\u5f03\u3002 objs = Book.objects.all().iterator() # iterator()\u53ef\u4ee5\u4e00\u6b21\u53ea\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u5c11\u91cf\u6570\u636e\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u5185\u5b58 for obj in objs: print(obj.title) #BUT,\u518d\u6b21\u904d\u5386\u6ca1\u6709\u6253\u5370,\u56e0\u4e3a\u8fed\u4ee3\u5668\u5df2\u7ecf\u5728\u4e0a\u4e00\u6b21\u904d\u5386(next)\u5230\u6700\u540e\u4e00\u6b21\u4e86,\u6ca1\u5f97\u904d\u5386\u4e86 for obj in objs: print(obj.title) \u5f53\u7136\uff0c\u4f7f\u7528iterator()\u65b9\u6cd5\u6765\u9632\u6b62\u751f\u6210cache\uff0c\u610f\u5473\u7740\u904d\u5386\u540c\u4e00\u4e2aqueryset\u65f6\u4f1a\u91cd\u590d\u6267\u884c\u67e5\u8be2\u3002\u6240\u4ee5\u4f7f #\u7528iterator()\u7684\u65f6\u5019\u8981\u5f53\u5fc3\uff0c\u786e\u4fdd\u4f60\u7684\u4ee3\u7801\u5728\u64cd\u4f5c\u4e00\u4e2a\u5927\u7684queryset\u65f6\u6ca1\u6709\u91cd\u590d\u6267\u884c\u67e5\u8be2\u3002 \u603b\u7ed3: queryset\u7684cache\u662f\u7528\u4e8e\u51cf\u5c11\u7a0b\u5e8f\u5bf9\u6570\u636e\u5e93\u7684\u67e5\u8be2\uff0c\u5728\u901a\u5e38\u7684\u4f7f\u7528\u4e0b\u4f1a\u4fdd\u8bc1\u53ea\u6709\u5728\u9700\u8981\u7684\u65f6\u5019\u624d\u4f1a\u67e5\u8be2\u6570\u636e\u5e93\u3002 \u4f7f\u7528exists()\u548citerator()\u65b9\u6cd5\u53ef\u4ee5\u4f18\u5316\u7a0b\u5e8f\u5bf9\u5185\u5b58\u7684\u4f7f\u7528\u3002\u4e0d\u8fc7\uff0c\u7531\u4e8e\u5b83\u4eec\u5e76\u4e0d\u4f1a\u751f\u6210queryset cache\uff0c\u53ef\u80fd \u4f1a\u9020\u6210\u989d\u5916\u7684\u6570\u636e\u5e93\u67e5\u8be2\u3002\u3000 \u4e2d\u4ecb\u6a21\u578b \u5904\u7406\u7c7b\u4f3c\u642d\u914d pizza \u548c topping \u8fd9\u6837\u7b80\u5355\u7684\u591a\u5bf9\u591a\u5173\u7cfb\u65f6\uff0c\u4f7f\u7528\u6807\u51c6\u7684 ManyToManyField \u5c31\u53ef\u4ee5\u4e86\u3002\u4f46\u662f\uff0c\u6709\u65f6\u4f60\u53ef\u80fd\u9700\u8981\u5173\u8054\u6570\u636e\u5230\u4e24\u4e2a\u6a21\u578b\u4e4b\u95f4\u7684\u5173\u7cfb\u4e0a\u3002 \u4f8b\u5982\uff0c\u6709\u8fd9\u6837\u4e00\u4e2a\u5e94\u7528\uff0c\u5b83\u8bb0\u5f55\u97f3\u4e50\u5bb6\u6240\u5c5e\u7684\u97f3\u4e50\u5c0f\u7ec4\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a ManyToManyField \u8868\u793a\u5c0f\u7ec4\u548c\u6210\u5458\u4e4b\u95f4\u7684\u591a\u5bf9\u591a\u5173\u7cfb\u3002\u4f46\u662f\uff0c\u6709\u65f6\u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u66f4\u591a\u6210\u5458\u5173\u7cfb\u7684\u7ec6\u8282\uff0c\u6bd4\u5982\u6210\u5458\u662f\u4f55\u65f6\u52a0\u5165\u5c0f\u7ec4\u7684\u3002 \u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\uff0cDjango \u5141\u8bb8\u4f60\u6307\u5b9a\u4e00\u4e2a\u4e2d\u4ecb\u6a21\u578b\u6765\u5b9a\u4e49\u591a\u5bf9\u591a\u5173\u7cfb\u3002 \u4f60\u53ef\u4ee5\u5c06\u5176\u4ed6\u5b57\u6bb5\u653e\u5728\u4e2d\u4ecb\u6a21\u578b\u91cc\u9762\u3002\u6e90\u6a21\u578b\u7684 ManyToManyField \u5b57\u6bb5\u5c06\u4f7f\u7528 through \u53c2\u6570\u6307\u5411\u4e2d\u4ecb\u6a21\u578b\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684\u97f3\u4e50\u5c0f\u7ec4\u7684\u4f8b\u5b50\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a from django.db import models class Person(models.Model): name = models.CharField(max_length=128) def __str__(self): # __unicode__ on Python 2 return self.name class Group(models.Model): name = models.CharField(max_length=128) members = models.ManyToManyField(Person, through='Membership') def __str__(self): # __unicode__ on Python 2 return self.name class Membership(models.Model): person = models.ForeignKey(Person) group = models.ForeignKey(Group) date_joined = models.DateField() invite_reason = models.CharField(max_length=64) \u65e2\u7136\u4f60\u5df2\u7ecf\u8bbe\u7f6e\u597d ManyToManyField \u6765\u4f7f\u7528\u4e2d\u4ecb\u6a21\u578b\uff08\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u5c31\u662f Membership \uff09\uff0c\u63a5\u4e0b\u6765\u4f60\u8981\u5f00\u59cb\u521b\u5efa\u591a\u5bf9\u591a\u5173\u7cfb\u3002\u4f60\u8981\u505a\u7684\u5c31\u662f\u521b\u5efa\u4e2d\u4ecb\u6a21\u578b\u7684\u5b9e\u4f8b\uff1a >>> ringo = Person.objects.create(name=\"Ringo Starr\") >>> paul = Person.objects.create(name=\"Paul McCartney\") >>> beatles = Group.objects.create(name=\"The Beatles\") >>> m1 = Membership(person=ringo, group=beatles, ... date_joined=date(1962, 8, 16), ... invite_reason=\"Needed a new drummer.\") >>> m1.save() >>> beatles.members.all() [<Person: Ringo Starr>] >>> ringo.group_set.all() [<Group: The Beatles>] >>> m2 = Membership.objects.create(person=paul, group=beatles, ... date_joined=date(1960, 8, 1), ... invite_reason=\"Wanted to form a band.\") >>> beatles.members.all() [<Person: Ringo Starr>, <Person: Paul McCartney>] \u4e0e\u666e\u901a\u7684\u591a\u5bf9\u591a\u5b57\u6bb5\u4e0d\u540c\uff0c\u4f60\u4e0d\u80fd\u4f7f\u7528 add \u3001 create \u548c\u8d4b\u503c\u8bed\u53e5\uff08\u6bd4\u5982\uff0c beatles.members = [...] \uff09\u6765\u521b\u5efa\u5173\u7cfb\uff1a # THIS WILL NOT WORK >>> beatles.members.add(john) # NEITHER WILL THIS >>> beatles.members.create(name=\"George Harrison\") # AND NEITHER WILL THIS >>> beatles.members = [john, paul, ringo, george] \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u8fd9\u6837\u505a\uff1f \u8fd9\u662f\u56e0\u4e3a\u4f60\u4e0d\u80fd\u53ea\u521b\u5efa Person \u548c Group \u4e4b\u95f4\u7684\u5173\u8054\u5173\u7cfb\uff0c\u4f60\u8fd8\u8981\u6307\u5b9a Membership \u6a21\u578b\u4e2d\u6240\u9700\u8981\u7684\u6240\u6709\u4fe1\u606f\uff1b\u800c\u7b80\u5355\u7684 add \u3001 create \u548c\u8d4b\u503c\u8bed\u53e5\u662f\u505a\u4e0d\u5230\u8fd9\u4e00\u70b9\u7684\u3002\u6240\u4ee5\u5b83\u4eec\u4e0d\u80fd\u5728\u4f7f\u7528\u4e2d\u4ecb\u6a21\u578b\u7684\u591a\u5bf9\u591a\u5173\u7cfb\u4e2d\u4f7f\u7528\u3002\u6b64\u65f6\uff0c\u552f\u4e00\u7684\u529e\u6cd5\u5c31\u662f\u521b\u5efa\u4e2d\u4ecb\u6a21\u578b\u7684\u5b9e\u4f8b\u3002 remove() \u65b9\u6cd5\u88ab\u7981\u7528\u4e5f\u662f\u51fa\u4e8e\u540c\u6837\u7684\u539f\u56e0\u3002\u4f46\u662f clear() \u65b9\u6cd5\u5374\u662f\u53ef\u7528\u7684\u3002\u5b83\u53ef\u4ee5\u6e05\u7a7a\u67d0\u4e2a\u5b9e\u4f8b\u6240\u6709\u7684\u591a\u5bf9\u591a\u5173\u7cfb\uff1a >>> # Beatles have broken up >>> beatles.members.clear() >>> # Note that this deletes the intermediate model instances >>> Membership.objects.all() [] \u67e5\u8be2\u4f18\u5316 \u8868\u6570\u636e class UserInfo(AbstractUser): \"\"\" \u7528\u6237\u4fe1\u606f \"\"\" nid = models.BigAutoField(primary_key=True) nickname = models.CharField(verbose_name='\u6635\u79f0', max_length=32) telephone = models.CharField(max_length=11, blank=True, null=True, unique=True, verbose_name='\u624b\u673a\u53f7\u7801') avatar = models.FileField(verbose_name='\u5934\u50cf',upload_to = 'avatar/',default=\"/avatar/default.png\") create_time = models.DateTimeField(verbose_name='\u521b\u5efa\u65f6\u95f4', auto_now_add=True) fans = models.ManyToManyField(verbose_name='\u7c89\u4e1d\u4eec', to='UserInfo', through='UserFans', related_name='f', through_fields=('user', 'follower')) def __str__(self): return self.username class UserFans(models.Model): \"\"\" \u4e92\u7c89\u5173\u7cfb\u8868 \"\"\" nid = models.AutoField(primary_key=True) user = models.ForeignKey(verbose_name='\u535a\u4e3b', to='UserInfo', to_field='nid', related_name='users') follower = models.ForeignKey(verbose_name='\u7c89\u4e1d', to='UserInfo', to_field='nid', related_name='followers') class Blog(models.Model): \"\"\" \u535a\u5ba2\u4fe1\u606f \"\"\" nid = models.BigAutoField(primary_key=True) title = models.CharField(verbose_name='\u4e2a\u4eba\u535a\u5ba2\u6807\u9898', max_length=64) site = models.CharField(verbose_name='\u4e2a\u4eba\u535a\u5ba2\u540e\u7f00', max_length=32, unique=True) theme = models.CharField(verbose_name='\u535a\u5ba2\u4e3b\u9898', max_length=32) user = models.OneToOneField(to='UserInfo', to_field='nid') def __str__(self): return self.title class Category(models.Model): \"\"\" \u535a\u4e3b\u4e2a\u4eba\u6587\u7ae0\u5206\u7c7b\u8868 \"\"\" nid = models.AutoField(primary_key=True) title = models.CharField(verbose_name='\u5206\u7c7b\u6807\u9898', max_length=32) blog = models.ForeignKey(verbose_name='\u6240\u5c5e\u535a\u5ba2', to='Blog', to_field='nid') class Article(models.Model): nid = models.BigAutoField(primary_key=True) title = models.CharField(max_length=50, verbose_name='\u6587\u7ae0\u6807\u9898') desc = models.CharField(max_length=255, verbose_name='\u6587\u7ae0\u63cf\u8ff0') read_count = models.IntegerField(default=0) comment_count= models.IntegerField(default=0) up_count = models.IntegerField(default=0) down_count = models.IntegerField(default=0) category = models.ForeignKey(verbose_name='\u6587\u7ae0\u7c7b\u578b', to='Category', to_field='nid', null=True) create_time = models.DateField(verbose_name='\u521b\u5efa\u65f6\u95f4') blog = models.ForeignKey(verbose_name='\u6240\u5c5e\u535a\u5ba2', to='Blog', to_field='nid') tags = models.ManyToManyField( to=\"Tag\", through='Article2Tag', through_fields=('article', 'tag'), ) class ArticleDetail(models.Model): \"\"\" \u6587\u7ae0\u8be6\u7ec6\u8868 \"\"\" nid = models.AutoField(primary_key=True) content = models.TextField(verbose_name='\u6587\u7ae0\u5185\u5bb9', ) article = models.OneToOneField(verbose_name='\u6240\u5c5e\u6587\u7ae0', to='Article', to_field='nid') class Comment(models.Model): \"\"\" \u8bc4\u8bba\u8868 \"\"\" nid = models.BigAutoField(primary_key=True) article = models.ForeignKey(verbose_name='\u8bc4\u8bba\u6587\u7ae0', to='Article', to_field='nid') content = models.CharField(verbose_name='\u8bc4\u8bba\u5185\u5bb9', max_length=255) create_time = models.DateTimeField(verbose_name='\u521b\u5efa\u65f6\u95f4', auto_now_add=True) parent_comment = models.ForeignKey('self', blank=True, null=True, verbose_name='\u7236\u7ea7\u8bc4\u8bba') user = models.ForeignKey(verbose_name='\u8bc4\u8bba\u8005', to='UserInfo', to_field='nid') up_count = models.IntegerField(default=0) def __str__(self): return self.content class ArticleUpDown(models.Model): \"\"\" \u70b9\u8d5e\u8868 \"\"\" nid = models.AutoField(primary_key=True) user = models.ForeignKey('UserInfo', null=True) article = models.ForeignKey(\"Article\", null=True) models.BooleanField(verbose_name='\u662f\u5426\u8d5e') class CommentUp(models.Model): \"\"\" \u70b9\u8d5e\u8868 \"\"\" nid = models.AutoField(primary_key=True) user = models.ForeignKey('UserInfo', null=True) comment = models.ForeignKey(\"Comment\", null=True) class Tag(models.Model): nid = models.AutoField(primary_key=True) title = models.CharField(verbose_name='\u6807\u7b7e\u540d\u79f0', max_length=32) blog = models.ForeignKey(verbose_name='\u6240\u5c5e\u535a\u5ba2', to='Blog', to_field='nid') class Article2Tag(models.Model): nid = models.AutoField(primary_key=True) article = models.ForeignKey(verbose_name='\u6587\u7ae0', to=\"Article\", to_field='nid') tag = models.ForeignKey(verbose_name='\u6807\u7b7e', to=\"Tag\", to_field='nid') select_related \u7b80\u5355\u4f7f\u7528 \u5bf9\u4e8e\u4e00\u5bf9\u4e00\u5b57\u6bb5\uff08OneToOneField\uff09\u548c\u5916\u952e\u5b57\u6bb5\uff08ForeignKey\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528select_related \u6765\u5bf9QuerySet\u8fdb\u884c\u4f18\u5316\u3002 select_related \u8fd4\u56de\u4e00\u4e2a QuerySet \uff0c\u5f53\u6267\u884c\u5b83\u7684\u67e5\u8be2\u65f6\u5b83\u6cbf\u7740\u5916\u952e\u5173\u7cfb\u67e5\u8be2\u5173\u8054\u7684\u5bf9\u8c61\u7684\u6570\u636e\u3002\u5b83\u4f1a\u751f\u6210\u4e00\u4e2a\u590d\u6742\u7684\u67e5\u8be2\u5e76\u5f15\u8d77\u6027\u80fd\u7684\u635f\u8017\uff0c\u4f46\u662f\u5728\u4ee5\u540e\u4f7f\u7528\u5916\u952e\u5173\u7cfb\u65f6\u5c06\u4e0d\u9700\u8981\u6570\u636e\u5e93\u67e5\u8be2\u3002 \u7b80\u5355\u8bf4\uff0c\u5728\u5bf9QuerySet\u4f7f\u7528select_related()\u51fd\u6570\u540e\uff0cDjango\u4f1a\u83b7\u53d6\u76f8\u5e94\u5916\u952e\u5bf9\u5e94\u7684\u5bf9\u8c61\uff0c\u4ece\u800c\u5728\u4e4b\u540e\u9700\u8981\u7684\u65f6\u5019\u4e0d\u5fc5\u518d\u67e5\u8be2\u6570\u636e\u5e93\u4e86\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u89e3\u91ca\u4e86\u666e\u901a\u67e5\u8be2\u548c select_related() \u67e5\u8be2\u7684\u533a\u522b\u3002 \u67e5\u8be2id=2\u7684\u6587\u7ae0\u7684\u5206\u7c7b\u540d\u79f0,\u4e0b\u9762\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u67e5\u8be2\uff1a # Hits the database. article=models.Article.objects.get(nid=2) # Hits the database again to get the related Blog object. print(article.category.title) ''' SELECT \"blog_article\".\"nid\", \"blog_article\".\"title\", \"blog_article\".\"desc\", \"blog_article\".\"read_count\", \"blog_article\".\"comment_count\", \"blog_article\".\"up_count\", \"blog_article\".\"down_count\", \"blog_article\".\"category_id\", \"blog_article\".\"create_time\", \"blog_article\".\"blog_id\", \"blog_article\".\"article_type_id\" FROM \"blog_article\" WHERE \"blog_article\".\"nid\" = 2; args=(2,) SELECT \"blog_category\".\"nid\", \"blog_category\".\"title\", \"blog_category\".\"blog_id\" FROM \"blog_category\" WHERE \"blog_category\".\"nid\" = 4; args=(4,) ''' \u5982\u679c\u6211\u4eec\u4f7f\u7528select_related()\u51fd\u6570\uff1a articleList=models.Article.objects.select_related(\"category\").all() for article_obj in articleList: # Doesn't hit the database, because article_obj.category # has been prepopulated in the previous query. print(article_obj.category.title) SELECT \"blog_article\".\"nid\", \"blog_article\".\"title\", \"blog_article\".\"desc\", \"blog_article\".\"read_count\", \"blog_article\".\"comment_count\", \"blog_article\".\"up_count\", \"blog_article\".\"down_count\", \"blog_article\".\"category_id\", \"blog_article\".\"create_time\", \"blog_article\".\"blog_id\", \"blog_article\".\"article_type_id\", \"blog_category\".\"nid\", \"blog_category\".\"title\", \"blog_category\".\"blog_id\" FROM \"blog_article\" LEFT OUTER JOIN \"blog_category\" ON (\"blog_article\".\"category_id\" = \"blog_category\".\"nid\"); \u591a\u5916\u952e\u67e5\u8be2 \u8fd9\u662f\u9488\u5bf9category\u7684\u5916\u952e\u67e5\u8be2\uff0c\u5982\u679c\u662f\u53e6\u5916\u4e00\u4e2a\u5916\u952e\u5462\uff1f\u8ba9\u6211\u4eec\u4e00\u8d77\u770b\u4e0b\uff1a article=models.Article.objects.select_related(\"category\").get(nid=1) print(article.articledetail) \u89c2\u5bdflogging\u7ed3\u679c\uff0c\u53d1\u73b0\u4f9d\u7136\u9700\u8981\u67e5\u8be2\u4e24\u6b21\uff0c\u6240\u4ee5\u9700\u8981\u6539\u4e3a\uff1a article=models.Article.objects.select_related(\"category\",\"articledetail\").get(nid=1) print(article.articledetail) \u6216\u8005\uff1a article=models.Article.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.select_related(\"category\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.select_related(\"articledetail\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.get(nid=1) # django 1.7 \u652f\u6301\u94fe\u5f0f\u64cd\u4f5c print(article.articledetail) SELECT \"blog_article\".\"nid\", \"blog_article\".\"title\", ...... \"blog_category\".\"nid\", \"blog_category\".\"title\", \"blog_category\".\"blog_id\", \"blog_articledetail\".\"nid\", \"blog_articledetail\".\"content\", \"blog_articledetail\".\"article_id\" FROM \"blog_article\" LEFT OUTER JOIN \"blog_category\" ON (\"blog_article\".\"category_id\" = \"blog_category\".\"nid\") LEFT OUTER JOIN \"blog_articledetail\" ON (\"blog_article\".\"nid\" = \"blog_articledetail\".\"article_id\") WHERE \"blog_article\".\"nid\" = 1; args=(1,) \u6df1\u5c42\u67e5\u8be2 # \u67e5\u8be2id=1\u7684\u6587\u7ae0\u7684\u7528\u6237\u59d3\u540d article=models.Article.objects.select_related(\"blog\").get(nid=1) print(article.blog.user.username) \u4f9d\u7136\u9700\u8981\u67e5\u8be2\u4e24\u6b21\uff1a SELECT \"blog_article\".\"nid\", \"blog_article\".\"title\", ...... \"blog_blog\".\"nid\", \"blog_blog\".\"title\", FROM \"blog_article\" INNER JOIN \"blog_blog\" ON (\"blog_article\".\"blog_id\" = \"blog_blog\".\"nid\") WHERE \"blog_article\".\"nid\" = 1; SELECT \"blog_userinfo\".\"password\", \"blog_userinfo\".\"last_login\", ...... FROM \"blog_userinfo\" WHERE \"blog_userinfo\".\"nid\" = 1; \u8fd9\u662f\u56e0\u4e3a\u7b2c\u4e00\u6b21\u67e5\u8be2\u6ca1\u6709query\u5230userInfo\u8868\uff0c\u6240\u4ee5\uff0c\u4fee\u6539\u5982\u4e0b\uff1a article=models.Article.objects.select_related(\"blog__user\").get(nid=1) print(article.blog.user.username) SELECT \"blog_article\".\"nid\", \"blog_article\".\"title\", ...... \"blog_blog\".\"nid\", \"blog_blog\".\"title\", ...... \"blog_userinfo\".\"password\", \"blog_userinfo\".\"last_login\", ...... FROM \"blog_article\" INNER JOIN \"blog_blog\" ON (\"blog_article\".\"blog_id\" = \"blog_blog\".\"nid\") INNER JOIN \"blog_userinfo\" ON (\"blog_blog\".\"user_id\" = \"blog_userinfo\".\"nid\") WHERE \"blog_article\".\"nid\" = 1; \u603b\u7ed3 select_related\u4e3b\u8981\u9488\u4e00\u5bf9\u4e00\u548c\u591a\u5bf9\u4e00\u5173\u7cfb\u8fdb\u884c\u4f18\u5316\u3002 select_related\u4f7f\u7528SQL\u7684JOIN\u8bed\u53e5\u8fdb\u884c\u4f18\u5316\uff0c\u901a\u8fc7\u51cf\u5c11SQL\u67e5\u8be2\u7684\u6b21\u6570\u6765\u8fdb\u884c\u4f18\u5316\u3001\u63d0\u9ad8\u6027\u80fd\u3002 \u53ef\u4ee5\u901a\u8fc7\u53ef\u53d8\u957f\u53c2\u6570\u6307\u5b9a\u9700\u8981select_related\u7684\u5b57\u6bb5\u540d\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u53cc\u4e0b\u5212\u7ebf\u201c__\u201d\u8fde\u63a5\u5b57\u6bb5\u540d\u6765\u5b9e\u73b0\u6307\u5b9a\u7684\u9012\u5f52\u67e5\u8be2\u3002 \u6ca1\u6709\u6307\u5b9a\u7684\u5b57\u6bb5\u4e0d\u4f1a\u7f13\u5b58\uff0c\u6ca1\u6709\u6307\u5b9a\u7684\u6df1\u5ea6\u4e0d\u4f1a\u7f13\u5b58\uff0c\u5982\u679c\u8981\u8bbf\u95ee\u7684\u8bddDjango\u4f1a\u518d\u6b21\u8fdb\u884cSQL\u67e5\u8be2\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7depth\u53c2\u6570\u6307\u5b9a\u9012\u5f52\u7684\u6df1\u5ea6\uff0cDjango\u4f1a\u81ea\u52a8\u7f13\u5b58\u6307\u5b9a\u6df1\u5ea6\u5185\u6240\u6709\u7684\u5b57\u6bb5\u3002\u5982\u679c\u8981\u8bbf\u95ee\u6307\u5b9a\u6df1\u5ea6\u5916\u7684\u5b57\u6bb5\uff0cDjango\u4f1a\u518d\u6b21\u8fdb\u884cSQL\u67e5\u8be2\u3002 \u4e5f\u63a5\u53d7\u65e0\u53c2\u6570\u7684\u8c03\u7528\uff0cDjango\u4f1a\u5c3d\u53ef\u80fd\u6df1\u7684\u9012\u5f52\u67e5\u8be2\u6240\u6709\u7684\u5b57\u6bb5\u3002\u4f46\u6ce8\u610f\u6709Django\u9012\u5f52\u7684\u9650\u5236\u548c\u6027\u80fd\u7684\u6d6a\u8d39\u3002 Django >= 1.7\uff0c\u94fe\u5f0f\u8c03\u7528\u7684select_related\u76f8\u5f53\u4e8e\u4f7f\u7528\u53ef\u53d8\u957f\u53c2\u6570\u3002Django < 1.7\uff0c\u94fe\u5f0f\u8c03\u7528\u4f1a\u5bfc\u81f4\u524d\u8fb9\u7684select_related\u5931\u6548\uff0c\u53ea\u4fdd\u7559\u6700\u540e\u4e00\u4e2a\u3002 prefetch_related() \u5bf9\u4e8e\u591a\u5bf9\u591a\u5b57\u6bb5\uff08ManyToManyField\uff09\u548c\u4e00\u5bf9\u591a\u5b57\u6bb5\uff0c\u53ef\u4ee5\u4f7f\u7528prefetch_related()\u6765\u8fdb\u884c\u4f18\u5316\u3002 prefetch_related()\u548cselect_related()\u7684\u8bbe\u8ba1\u76ee\u7684\u5f88\u76f8\u4f3c\uff0c\u90fd\u662f\u4e3a\u4e86\u51cf\u5c11SQL\u67e5\u8be2\u7684\u6570\u91cf\uff0c\u4f46\u662f\u5b9e\u73b0\u7684\u65b9\u5f0f\u4e0d\u4e00\u6837\u3002\u540e\u8005\u662f\u901a\u8fc7JOIN\u8bed\u53e5\uff0c\u5728SQL\u67e5\u8be2\u5185\u89e3\u51b3\u95ee\u9898\u3002\u4f46\u662f\u5bf9\u4e8e\u591a\u5bf9\u591a\u5173\u7cfb\uff0c\u4f7f\u7528SQL\u8bed\u53e5\u89e3\u51b3\u5c31\u663e\u5f97\u6709\u4e9b\u4e0d\u592a\u660e\u667a\uff0c\u56e0\u4e3aJOIN\u5f97\u5230\u7684\u8868\u5c06\u4f1a\u5f88\u957f\uff0c\u4f1a\u5bfc\u81f4SQL\u8bed\u53e5\u8fd0\u884c\u65f6\u95f4\u7684\u589e\u52a0\u548c\u5185\u5b58\u5360\u7528\u7684\u589e\u52a0\u3002\u82e5\u6709n\u4e2a\u5bf9\u8c61\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u7684\u591a\u5bf9\u591a\u5b57\u6bb5\u5bf9\u5e94Mi\u6761\uff0c\u5c31\u4f1a\u751f\u6210\u03a3(n)Mi \u884c\u7684\u7ed3\u679c\u8868\u3002 prefetch_related()\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u5206\u522b\u67e5\u8be2\u6bcf\u4e2a\u8868\uff0c\u7136\u540e\u7528Python\u5904\u7406\u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 # \u67e5\u8be2\u6240\u6709\u6587\u7ae0\u5173\u8054\u7684\u6240\u6709\u6807\u7b7e article_obj=models.Article.objects.all() for i in article_obj: print(i.tags.all()) #4\u7bc7\u6587\u7ae0: hits database 5 \u6539\u4e3aprefetch_related\uff1a # \u67e5\u8be2\u6240\u6709\u6587\u7ae0\u5173\u8054\u7684\u6240\u6709\u6807\u7b7e article_obj=models.Article.objects.prefetch_related(\"tags\").all() for i in article_obj: print(i.tags.all()) #4\u7bc7\u6587\u7ae0: hits database 2 SELECT \"blog_article\".\"nid\", \"blog_article\".\"title\", ...... FROM \"blog_article\"; SELECT (\"blog_article2tag\".\"article_id\") AS \"_prefetch_related_val_article_id\", \"blog_tag\".\"nid\", \"blog_tag\".\"title\", \"blog_tag\".\"blog_id\" FROM \"blog_tag\" INNER JOIN \"blog_article2tag\" ON (\"blog_tag\".\"nid\" = \"blog_article2tag\".\"tag_id\") WHERE \"blog_article2tag\".\"article_id\" IN (1, 2, 3, 4); extra extra(select=None, where=None, params=None, tables=None, order_by=None, select_params=None) \u6709\u4e9b\u60c5\u51b5\u4e0b\uff0cDjango\u7684\u67e5\u8be2\u8bed\u6cd5\u96be\u4ee5\u7b80\u5355\u7684\u8868\u8fbe\u590d\u6742\u7684 WHERE \u5b50\u53e5\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5, Django \u63d0\u4f9b\u4e86 extra() QuerySet \u4fee\u6539\u673a\u5236 \u2014 \u5b83\u80fd\u5728 QuerySet \u751f\u6210\u7684SQL\u4ece\u53e5\u4e2d\u6ce8\u5165\u65b0\u5b50\u53e5 extra\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a \u53c2\u6570 ,\u4f8b\u5982 select , where or tables . \u8fd9\u4e9b\u53c2\u6570\u90fd\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f\u4f60\u81f3\u5c11\u8981\u4f7f\u7528\u4e00\u4e2a!\u8981\u6ce8\u610f\u8fd9\u4e9b\u989d\u5916\u7684\u65b9\u5f0f\u5bf9\u4e0d\u540c\u7684\u6570\u636e\u5e93\u5f15\u64ce\u53ef\u80fd\u5b58\u5728\u79fb\u690d\u6027\u95ee\u9898.(\u56e0\u4e3a\u4f60\u5728\u663e\u5f0f\u7684\u4e66\u5199SQL\u8bed\u53e5),\u9664\u975e\u4e07\u4e0d\u5f97\u5df2,\u5c3d\u91cf\u907f\u514d\u8fd9\u6837\u505a \u53c2\u6570\u4e4bselect The select \u53c2\u6570\u53ef\u4ee5\u8ba9\u4f60\u5728 SELECT \u4ece\u53e5\u4e2d\u6dfb\u52a0\u5176\u4ed6\u5b57\u6bb5\u4fe1\u606f\uff0c\u5b83\u5e94\u8be5\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u5b58\u653e\u7740\u5c5e\u6027\u540d\u5230 SQL \u4ece\u53e5\u7684\u6620\u5c04\u3002 queryResult=models.Article \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.objects.extra(select={'is_recent': \"create_time > '2017-09-05'\"}) \u7ed3\u679c\u96c6\u4e2d\u6bcf\u4e2a Entry \u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u989d\u5916\u7684\u5c5e\u6027is_recent, \u5b83\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u8868\u793a Article\u5bf9\u8c61\u7684create_time \u662f\u5426\u665a\u4e8e2017-09-05. \u7ec3\u4e60\uff1a # in sqlite: article_obj=models.Article.objects.filter(nid=1).extra(select={\"standard_time\":\"strftime('%%Y-%%m-%%d',create_time)\"}).values(\"standard_time\",\"nid\",\"title\") print(article_obj) # <QuerySet [{'title': 'MongoDb \u5165\u95e8\u6559\u7a0b', 'standard_time': '2017-09-03', 'nid': 1}]> \u53c2\u6570\u4e4b where / tables \u60a8\u53ef\u4ee5\u4f7f\u7528 where \u5b9a\u4e49\u663e\u5f0fSQL WHERE \u5b50\u53e5 - \u4e5f\u8bb8\u6267\u884c\u975e\u663e\u5f0f\u8fde\u63a5\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 tables \u624b\u52a8\u5c06\u8868\u6dfb\u52a0\u5230SQL FROM \u5b50\u53e5\u3002 where \u548c tables \u90fd\u63a5\u53d7\u5b57\u7b26\u4e32\u5217\u8868\u3002\u6240\u6709 where \u53c2\u6570\u5747\u4e3a\u201c\u4e0e\u201d\u4efb\u4f55\u5176\u4ed6\u641c\u7d22\u6761\u4ef6\u3002 \u4e3e\u4f8b\u6765\u8bb2\uff1a queryResult=models.Article \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.objects.extra(where=['nid in (1,3) OR title like \"py%\" ','nid>2']) \u6574\u4f53\u63d2\u5165 \u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u5c3d\u53ef\u80fd\u4f7f\u7528bulk_create()\u6765\u51cf\u5c11SQL\u67e5\u8be2\u7684\u6570\u91cf\u3002\u4f8b\u5982\uff1a Entry.objects.bulk_create([ Entry(headline=\"Python 3.0 Released\"), Entry(headline=\"Python 3.1 Planned\") ]) ...\u66f4\u4f18\u4e8e\uff1a Entry.objects.create(headline=\"Python 3.0 Released\") Entry.objects.create(headline=\"Python 3.1 Planned\") \u6ce8\u610f\u8be5\u65b9\u6cd5\u6709\u5f88\u591a\u6ce8\u610f\u4e8b\u9879\uff0c\u6240\u4ee5\u786e\u4fdd\u5b83\u9002\u7528\u4e8e\u4f60\u7684\u60c5\u51b5\u3002 \u8fd9\u4e5f\u53ef\u4ee5\u7528\u5728ManyToManyFields\u4e2d\uff0c\u6240\u4ee5\uff1a my_band.members.add(me, my_friend) ...\u66f4\u4f18\u4e8e\uff1a my_band.members.add(me) my_band.members.add(my_friend) ...\u5176\u4e2dBands\u548cArtists\u5177\u6709\u591a\u5bf9\u591a\u5173\u8054\u3002 Django-admin\u7ba1\u7406\u5de5\u5177 \u77e5\u8bc6\u9884\u89c8 admin\u7ec4\u4ef6\u4f7f\u7528 admin\u6e90\u7801\u89e3\u6790 admin\u7ec4\u4ef6\u4f7f\u7528 Django \u63d0\u4f9b\u4e86\u57fa\u4e8e web \u7684\u7ba1\u7406\u5de5\u5177\u3002 Django \u81ea\u52a8\u7ba1\u7406\u5de5\u5177\u662f django.contrib \u7684\u4e00\u90e8\u5206\u3002\u4f60\u53ef\u4ee5\u5728\u9879\u76ee\u7684 settings.py \u4e2d\u7684 INSTALLED_APPS \u770b\u5230\u5b83\uff1a # Application definition INSTALLED_APPS = [ 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', \"app01\" ] django.contrib\u662f\u4e00\u5957\u5e9e\u5927\u7684\u529f\u80fd\u96c6\uff0c\u5b83\u662fDjango\u57fa\u672c\u4ee3\u7801\u7684\u7ec4\u6210\u90e8\u5206\u3002 \u6fc0\u6d3b\u7ba1\u7406\u5de5\u5177 \u901a\u5e38\u6211\u4eec\u5728\u751f\u6210\u9879\u76ee\u65f6\u4f1a\u5728 urls.py \u4e2d\u81ea\u52a8\u8bbe\u7f6e\u597d\uff0c from django.conf.urls import url from django.contrib import admin urlpatterns = [ url(r'^admin/', admin.site.urls), ] \u5f53\u8fd9\u4e00\u5207\u90fd\u914d\u7f6e\u597d\u540e\uff0cDjango \u7ba1\u7406\u5de5\u5177\u5c31\u53ef\u4ee5\u8fd0\u884c\u4e86\u3002 \u4f7f\u7528\u7ba1\u7406\u5de5\u5177 \u542f\u52a8\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8000/admin/\uff0c\u5f97\u5230\u767b\u9646\u754c\u9762\uff0c \u4f60\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4 python manage.py createsuperuser \u6765\u521b\u5efa\u8d85\u7ea7\u7528\u6237\u3002 \u4e3a\u4e86\u8ba9 admin \u754c\u9762\u7ba1\u7406\u67d0\u4e2a\u6570\u636e\u6a21\u578b\uff0c\u6211\u4eec\u9700\u8981\u5148\u6ce8\u518c\u8be5\u6570\u636e\u6a21\u578b\u5230 admin from django.db import models # Create your models here. class Author(models.Model): name=models.CharField( max_length=32) age=models.IntegerField() def __str__(self): return self.name class Publish(models.Model): name=models.CharField( max_length=32) email=models.EmailField() def __str__(self): return self.name class Book(models.Model): title = models.CharField( max_length=32) publishDate=models.DateField() price=models.DecimalField(max_digits=5,decimal_places=2) publisher=models.ForeignKey(to=\"Publish\") authors=models.ManyToManyField(to='Author') def __str__(self): return self.title admin\u7684\u5b9a\u5236 \u5728admin.py\u4e2d\u53ea\u9700\u8981\u8bb2Mode\u4e2d\u7684\u67d0\u4e2a\u7c7b\u6ce8\u518c\uff0c\u5373\u53ef\u5728Admin\u4e2d\u5b9e\u73b0\u589e\u5220\u6539\u67e5\u7684\u529f\u80fd\uff0c\u5982\uff1a admin.site.register(models.UserInfo) \u4f46\u662f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u8f83\u7b80\u5355\uff0c\u5982\u679c\u60f3\u8981\u8fdb\u884c\u66f4\u591a\u7684\u5b9a\u5236\u64cd\u4f5c\uff0c\u9700\u8981\u5229\u7528ModelAdmin\u8fdb\u884c\u64cd\u4f5c\uff0c\u5982\uff1a \u65b9\u5f0f\u4e00\uff1a class UserAdmin(admin.ModelAdmin): list_display = ('user', 'pwd',) admin.site.register(models.UserInfo, UserAdmin) # \u7b2c\u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u662f\u5217\u8868 \u65b9\u5f0f\u4e8c\uff1a @admin.register(models.UserInfo) # \u7b2c\u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u662f\u5217\u8868 class UserAdmin(admin.ModelAdmin): list_display = ('user', 'pwd',) ModelAdmin\u4e2d\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u53ef\u5b9a\u5236\u529f\u80fd\uff0c\u5982 list_display\uff0c\u5217\u8868\u65f6\uff0c\u5b9a\u5236\u663e\u793a\u7684\u5217\u3002 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): list_display = ('user', 'pwd', 'xxxxx') def xxxxx(self, obj): return \"xxxxx\" list_display_links\uff0c\u5217\u8868\u65f6\uff0c\u5b9a\u5236\u5217\u53ef\u4ee5\u70b9\u51fb\u8df3\u8f6c\u3002 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): list_display = ('user', 'pwd', 'xxxxx') list_display_links = ('pwd',) list_filter\uff0c\u5217\u8868\u65f6\uff0c\u5b9a\u5236\u53f3\u4fa7\u5feb\u901f\u7b5b\u9009\u3002 list_select_related\uff0c\u5217\u8868\u65f6\uff0c\u8fde\u8868\u67e5\u8be2\u662f\u5426\u81ea\u52a8select_related list_editable\uff0c\u5217\u8868\u65f6\uff0c\u53ef\u4ee5\u7f16\u8f91\u7684\u5217 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): list_display = ('user', 'pwd','ug',) list_editable = ('ug',) search_fields\uff0c\u5217\u8868\u65f6\uff0c\u6a21\u7cca\u641c\u7d22\u7684\u529f\u80fd @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): search_fields = ('user', 'pwd') date_hierarchy\uff0c\u5217\u8868\u65f6\uff0c\u5bf9Date\u548cDateTime\u7c7b\u578b\u8fdb\u884c\u641c\u7d22 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): date_hierarchy = 'ctime' 8 inlines\uff0c\u8be6\u7ec6\u9875\u9762\uff0c\u5982\u679c\u6709\u5176\u4ed6\u8868\u548c\u5f53\u524d\u8868\u505aFK\uff0c\u90a3\u4e48\u8be6\u7ec6\u9875\u9762\u53ef\u4ee5\u8fdb\u884c\u52a8\u6001\u589e\u52a0\u548c\u5220\u9664 class UserInfoInline(admin.StackedInline): # TabularInline extra = 0 model = models.UserInfo class GroupAdminMode(admin.ModelAdmin): list_display = ('id', 'title',) inlines = [UserInfoInline, ] 9 action\uff0c\u5217\u8868\u65f6\uff0c\u5b9a\u5236action\u4e2d\u7684\u64cd\u4f5c @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): # \u5b9a\u5236Action\u884c\u4e3a\u5177\u4f53\u65b9\u6cd5 def func(self, request, queryset): print(self, request, queryset) print(request.POST.getlist('_selected_action')) func.short_description = \"\u4e2d\u6587\u663e\u793a\u81ea\u5b9a\u4e49Actions\" actions = [func, ] # Action\u9009\u9879\u90fd\u662f\u5728\u9875\u9762\u4e0a\u65b9\u663e\u793a actions_on_top = True # Action\u9009\u9879\u90fd\u662f\u5728\u9875\u9762\u4e0b\u65b9\u663e\u793a actions_on_bottom = False # \u662f\u5426\u663e\u793a\u9009\u62e9\u4e2a\u6570 actions_selection_counter = True 10 \u5b9a\u5236HTML\u6a21\u677f add_form_template = None change_form_template = None change_list_template = None delete_confirmation_template = None delete_selected_confirmation_template = None object_history_template = None 11 raw_id_fields\uff0c\u8be6\u7ec6\u9875\u9762\uff0c\u9488\u5bf9FK\u548cM2M\u5b57\u6bb5\u53d8\u6210\u4ee5Input\u6846\u5f62\u5f0f @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): raw_id_fields = ('FK\u5b57\u6bb5', 'M2M\u5b57\u6bb5',) 12 fields\uff0c\u8be6\u7ec6\u9875\u9762\u65f6\uff0c\u663e\u793a\u5b57\u6bb5\u7684\u5b57\u6bb5 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): fields = ('user',) 13 exclude\uff0c\u8be6\u7ec6\u9875\u9762\u65f6\uff0c\u6392\u9664\u7684\u5b57\u6bb5 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): exclude = ('user',) 14 readonly_fields\uff0c\u8be6\u7ec6\u9875\u9762\u65f6\uff0c\u53ea\u8bfb\u5b57\u6bb5 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): readonly_fields = ('user',) 15 fieldsets\uff0c\u8be6\u7ec6\u9875\u9762\u65f6\uff0c\u4f7f\u7528fieldsets\u6807\u7b7e\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u5272\u663e\u793a @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): fieldsets = ( ('\u57fa\u672c\u6570\u636e', { 'fields': ('user', 'pwd', 'ctime',) }), ('\u5176\u4ed6', { 'classes': ('collapse', 'wide', 'extrapretty'), # 'collapse','wide', 'extrapretty' 'fields': ('user', 'pwd'), }), ) 16 \u8be6\u7ec6\u9875\u9762\u65f6\uff0cM2M\u663e\u793a\u65f6\uff0c\u6570\u636e\u79fb\u52a8\u9009\u62e9\uff08\u65b9\u5411\uff1a\u4e0a\u4e0b\u548c\u5de6\u53f3\uff09 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): filter_vertical = (\"m2m\u5b57\u6bb5\",) # \u6216filter_horizontal = (\"m2m\u5b57\u6bb5\",) 17 ordering\uff0c\u5217\u8868\u65f6\uff0c\u6570\u636e\u6392\u5e8f\u89c4\u5219 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): ordering = ('-id',) \u6216 def get_ordering(self, request): return ['-id', ] radio_fields\uff0c\u8be6\u7ec6\u9875\u9762\u65f6\uff0c\u4f7f\u7528radio\u663e\u793a\u9009\u9879\uff08FK\u9ed8\u8ba4\u4f7f\u7528select\uff09 radio_fields = {\"ug\": admin.VERTICAL} # \u6216admin.HORIZONTAL 19 form = ModelForm\uff0c\u7528\u4e8e\u5b9a\u5236\u7528\u6237\u8bf7\u6c42\u65f6\u5019\u8868\u5355\u9a8c\u8bc1 from app01 import models from django.forms import ModelForm from django.forms import fields class MyForm(ModelForm): others = fields.CharField() class Meta: model = models = models.UserInfo fields = \"__all__\" @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): form = MyForm 20 empty_value_display = \"\u5217\u6570\u636e\u4e3a\u7a7a\u65f6\uff0c\u663e\u793a\u9ed8\u8ba4\u503c\" @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): empty_value_display = \"\u5217\u6570\u636e\u4e3a\u7a7a\u65f6\uff0c\u9ed8\u8ba4\u663e\u793a\" list_display = ('user','pwd','up') def up(self,obj): return obj.user up.empty_value_display = \"\u6307\u5b9a\u5217\u6570\u636e\u4e3a\u7a7a\u65f6\uff0c\u9ed8\u8ba4\u663e\u793a\" from django.contrib import admin # Register your models here. from .models import * class BookInline(admin.StackedInline): # TabularInline extra = 0 model = Book class BookAdmin(admin.ModelAdmin): list_display = (\"title\",'publishDate', 'price',\"foo\",\"publisher\") list_display_links = ('publishDate',\"price\") list_filter = ('price',) list_editable=(\"title\",\"publisher\") search_fields = ('title',) date_hierarchy = 'publishDate' preserve_filters=False def foo(self,obj): return obj.title+str(obj.price) # \u5b9a\u5236Action\u884c\u4e3a\u5177\u4f53\u65b9\u6cd5 def func(self, request, queryset): print(self, request, queryset) print(request.POST.getlist('_selected_action')) func.short_description = \"\u4e2d\u6587\u663e\u793a\u81ea\u5b9a\u4e49Actions\" actions = [func, ] # Action\u9009\u9879\u90fd\u662f\u5728\u9875\u9762\u4e0a\u65b9\u663e\u793a actions_on_top = True # Action\u9009\u9879\u90fd\u662f\u5728\u9875\u9762\u4e0b\u65b9\u663e\u793a actions_on_bottom = False # \u662f\u5426\u663e\u793a\u9009\u62e9\u4e2a\u6570 actions_selection_counter = True change_list_template=\"my_change_list_template.html\" class PublishAdmin(admin.ModelAdmin): list_display = ('name', 'email',) inlines = [BookInline, ] admin.site.register(Book, BookAdmin) # \u7b2c\u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u662f\u5217\u8868 admin.site.register(Publish,PublishAdmin) admin.site.register(Author) admin\u6e90\u7801\u89e3\u6790 \u5355\u4f8b\u6a21\u5f0f \u5355\u4f8b\u6a21\u5f0f\uff08Singleton Pattern\uff09 \u662f\u4e00\u79cd\u5e38\u7528\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u8be5\u6a21\u5f0f\u7684\u4e3b\u8981\u76ee\u7684\u662f\u786e\u4fdd \u67d0\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5b58\u5728 \u3002\u5f53\u4f60\u5e0c\u671b\u5728\u6574\u4e2a\u7cfb\u7edf\u4e2d\uff0c\u67d0\u4e2a\u7c7b\u53ea\u80fd\u51fa\u73b0\u4e00\u4e2a\u5b9e\u4f8b\u65f6\uff0c\u5355\u4f8b\u5bf9\u8c61\u5c31\u80fd\u6d3e\u4e0a\u7528\u573a\u3002 \u6bd4\u5982\uff0c\u67d0\u4e2a\u670d\u52a1\u5668\u7a0b\u5e8f\u7684\u914d\u7f6e\u4fe1\u606f\u5b58\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5ba2\u6237\u7aef\u901a\u8fc7\u4e00\u4e2a AppConfig \u7684\u7c7b\u6765\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u7684\u4fe1\u606f\u3002\u5982\u679c\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\uff0c\u6709\u5f88\u591a\u5730\u65b9\u90fd\u9700\u8981\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f88\u591a\u5730\u65b9\u90fd\u9700\u8981\u521b\u5efa AppConfig \u5bf9\u8c61\u7684\u5b9e\u4f8b\uff0c\u8fd9\u5c31\u5bfc\u81f4\u7cfb\u7edf\u4e2d\u5b58\u5728\u591a\u4e2a AppConfig \u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u800c\u8fd9\u6837\u4f1a\u4e25\u91cd\u6d6a\u8d39\u5185\u5b58\u8d44\u6e90\uff0c\u5c24\u5176\u662f\u5728\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u5f88\u591a\u7684\u60c5\u51b5\u4e0b\u3002\u4e8b\u5b9e\u4e0a\uff0c\u7c7b\u4f3c AppConfig \u8fd9\u6837\u7684\u7c7b\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u53ea\u5b58\u5728\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u3002 \u5728 Python \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u591a\u79cd\u65b9\u6cd5\u6765\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\uff1a \u4f7f\u7528\u6a21\u5757 \u4f7f\u7528 __new__ \u4f7f\u7528\u88c5\u9970\u5668\uff08decorator\uff09 \u4f7f\u7528\u5143\u7c7b\uff08metaclass\uff09 \uff081\uff09\u4f7f\u7528 __new__ \u4e3a\u4e86\u4f7f\u7c7b\u53ea\u80fd\u51fa\u73b0\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 __new__ \u6765\u63a7\u5236\u5b9e\u4f8b\u7684\u521b\u5efa\u8fc7\u7a0b\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a class Singleton(object): _instance = None def __new__(cls, *args, **kw): if not cls._instance: cls._instance = super(Singleton, cls).__new__(cls, *args, **kw) return cls._instance class MyClass(Singleton): a = 1 \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06\u7c7b\u7684\u5b9e\u4f8b\u548c\u4e00\u4e2a\u7c7b\u53d8\u91cf _instance \u5173\u8054\u8d77\u6765\uff0c\u5982\u679c cls._instance \u4e3a None \u5219\u521b\u5efa\u5b9e\u4f8b\uff0c\u5426\u5219\u76f4\u63a5\u8fd4\u56de cls._instance \u3002 \u6267\u884c\u60c5\u51b5\u5982\u4e0b\uff1a >>> one = MyClass() >>> two = MyClass() >>> one == two True >>> one is two True >>> id(one), id(two) (4303862608, 4303862608) \uff082\uff09\u4f7f\u7528\u6a21\u5757 \u5176\u5b9e\uff0c Python \u7684\u6a21\u5757\u5c31\u662f\u5929\u7136\u7684\u5355\u4f8b\u6a21\u5f0f \uff0c\u56e0\u4e3a\u6a21\u5757\u5728\u7b2c\u4e00\u6b21\u5bfc\u5165\u65f6\uff0c\u4f1a\u751f\u6210 .pyc \u6587\u4ef6\uff0c\u5f53\u7b2c\u4e8c\u6b21\u5bfc\u5165\u65f6\uff0c\u5c31\u4f1a\u76f4\u63a5\u52a0\u8f7d .pyc \u6587\u4ef6\uff0c\u800c\u4e0d\u4f1a\u518d\u6b21\u6267\u884c\u6a21\u5757\u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u628a\u76f8\u5173\u7684\u51fd\u6570\u548c\u6570\u636e\u5b9a\u4e49\u5728\u4e00\u4e2a\u6a21\u5757\u4e2d\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u5355\u4f8b\u5bf9\u8c61\u4e86\u3002\u5982\u679c\u6211\u4eec\u771f\u7684\u60f3\u8981\u4e00\u4e2a\u5355\u4f8b\u7c7b\uff0c\u53ef\u4ee5\u8003\u8651\u8fd9\u6837\u505a\uff1a # mysingleton.py class My_Singleton(object): def foo(self): pass my_singleton = My_Singleton() \u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u4fdd\u5b58\u5728\u6587\u4ef6 mysingleton.py \u4e2d\uff0c\u7136\u540e\u8fd9\u6837\u4f7f\u7528\uff1a from mysingleton import my_singleton my_singleton.foo() admin\u6267\u884c\u6d41\u7a0b <1> \u5faa\u73af\u52a0\u8f7d\u6267\u884c\u6240\u6709\u5df2\u7ecf\u6ce8\u518c\u7684app\u4e2d\u7684admin.py\u6587\u4ef6 def autodiscover(): autodiscover_modules('admin', register_to=site) <2> \u6267\u884c\u4ee3\u7801 \uff03admin.py class BookAdmin(admin.ModelAdmin): list_display = (\"title\",'publishDate', 'price') admin.site.register(Book, BookAdmin) admin.site.register(Publish) <3> admin.site \u8fd9\u91cc\u5e94\u7528\u7684\u662f\u4e00\u4e2a\u5355\u4f8b\u6a21\u5f0f\uff0c\u5bf9\u4e8eAdminSite\u7c7b\u7684\u4e00\u4e2a\u5355\u4f8b\u6a21\u5f0f\uff0c\u6267\u884c\u7684\u6bcf\u4e00\u4e2aapp\u4e2d\u7684\u6bcf\u4e00\u4e2aadmin.site\u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61 <4> \u6267\u884cregister\u65b9\u6cd5 admin.site.register(Book, BookAdmin) admin.site.register(Publish) class ModelAdmin(BaseModelAdmin):pass def register(self, model_or_iterable, admin_class=None, **options): if not admin_class: admin_class = ModelAdmin # Instantiate the admin class to save in the registry self._registry[model] = admin_class(model, self) \u601d\u8003\uff1a\u5728\u6bcf\u4e00\u4e2aapp\u7684admin .py\u4e2d\u52a0\u4e0a print(admin.site._registry) \uff03 \u6267\u884c\u7ed3\u679c\uff1f \u5230\u8fd9\u91cc\uff0c\u6ce8\u518c\u7ed3\u675f\uff01 <5> admin\u7684URL\u914d\u7f6e urlpatterns = [ url(r'^admin/', admin.site.urls), ] class AdminSite(object): def get_urls(self): from django.conf.urls import url, include urlpatterns = [] # Add in each model's views, and create a list of valid URLS for the # app_index valid_app_labels = [] for model, model_admin in self._registry.items(): urlpatterns += [ url(r'^%s/%s/' % (model._meta.app_label, model._meta.model_name), include(model_admin.urls)), ] if model._meta.app_label not in valid_app_labels: valid_app_labels.append(model._meta.app_label) return urlpatterns @property def urls(self): return self.get_urls(), 'admin', self.name <6> url()\u65b9\u6cd5\u7684\u6269\u5c55\u5e94\u7528 from django.shortcuts import HttpResponse def test01(request): return HttpResponse(\"test01\") def test02(request): return HttpResponse(\"test02\") urlpatterns = [ url(r'^admin/', admin.site.urls), url(r'^yuan/', ([ url(r'^test01/', test01), url(r'^test02/', test02), ],None,None)), ] \u6269\u5c55\u4f18\u5316 from django.conf.urls import url,include from django.contrib import admin from django.shortcuts import HttpResponse def change_list_view(request): return HttpResponse(\"change_list_view\") def add_view(request): return HttpResponse(\"add_view\") def delete_view(request): return HttpResponse(\"delete_view\") def change_view(request): return HttpResponse(\"change_view\") def get_urls(): temp=[ url(r\"^$\".format(app_name,model_name),change_list_view), url(r\"^add/$\".format(app_name,model_name),add_view), url(r\"^\\d+/del/$\".format(app_name,model_name),delete_view), url(r\"^\\d+/change/$\".format(app_name,model_name),change_view), ] return temp url_list=[] for model_class,obj in admin.site._registry.items(): model_name=model_class._meta.model_name app_name=model_class._meta.app_label # temp=url(r\"{0}/{1}/\".format(app_name,model_name),(get_urls(),None,None)) temp=url(r\"{0}/{1}/\".format(app_name,model_name),include(get_urls())) url_list.append(temp) urlpatterns = [ url(r'^admin/', admin.site.urls), url(r'^yuan/', (url_list,None,None)), ] Django-\u8fdb\u9636 \u77e5\u8bc6\u9884\u89c8 \u5206\u9875 \u4e2d\u95f4\u4ef6 \u5206\u9875 Django\u7684\u5206\u9875\u5668\uff08paginator\uff09 view from django.shortcuts import render,HttpResponse # Create your views here. from app01.models import * from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger def index(request): ''' \u6279\u91cf\u5bfc\u5165\u6570\u636e: Booklist=[] for i in range(100): Booklist.append(Book(title=\"book\"+str(i),price=30+i*i)) Book.objects.bulk_create(Booklist) ''' ''' \u5206\u9875\u5668\u7684\u4f7f\u7528: book_list=Book.objects.all() paginator = Paginator(book_list, 10) print(\"count:\",paginator.count) #\u6570\u636e\u603b\u6570 print(\"num_pages\",paginator.num_pages) #\u603b\u9875\u6570 print(\"page_range\",paginator.page_range) #\u9875\u7801\u7684\u5217\u8868 page1=paginator.page(1) #\u7b2c1\u9875\u7684page\u5bf9\u8c61 for i in page1: #\u904d\u5386\u7b2c1\u9875\u7684\u6240\u6709\u6570\u636e\u5bf9\u8c61 print(i) print(page1.object_list) #\u7b2c1\u9875\u7684\u6240\u6709\u6570\u636e page2=paginator.page(2) print(page2.has_next()) #\u662f\u5426\u6709\u4e0b\u4e00\u9875 print(page2.next_page_number()) #\u4e0b\u4e00\u9875\u7684\u9875\u7801 print(page2.has_previous()) #\u662f\u5426\u6709\u4e0a\u4e00\u9875 print(page2.previous_page_number()) #\u4e0a\u4e00\u9875\u7684\u9875\u7801 # \u629b\u9519 #page=paginator.page(12) # error:EmptyPage #page=paginator.page(\"z\") # error:PageNotAnInteger ''' book_list=Book.objects.all() paginator = Paginator(book_list, 10) page = request.GET.get('page',1) currentPage=int(page) try: print(page) book_list = paginator.page(page) except PageNotAnInteger: book_list = paginator.page(1) except EmptyPage: book_list = paginator.page(paginator.num_pages) return render(request,\"index.html\",{\"book_list\":book_list,\"paginator\":paginator,\"currentPage\":currentPage}) index.html: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"> </head> <body> <div class=\"container\"> <h4>\u5206\u9875\u5668</h4> <ul> {% for book in book_list %} <li>{{ book.title }} -----{{ book.price }}</li> {% endfor %} </ul> <ul class=\"pagination\" id=\"pager\"> {% if book_list.has_previous %} <li class=\"previous\"><a href=\"/index/?page={{ book_list.previous_page_number }}\">\u4e0a\u4e00\u9875</a></li> {% else %} <li class=\"previous disabled\"><a href=\"#\">\u4e0a\u4e00\u9875</a></li> {% endif %} {% for num in paginator.page_range %} {% if num == currentPage %} <li class=\"item active\"><a href=\"/index/?page={{ num }}\">{{ num }}</a></li> {% else %} <li class=\"item\"><a href=\"/index/?page={{ num }}\">{{ num }}</a></li> {% endif %} {% endfor %} {% if book_list.has_next %} <li class=\"next\"><a href=\"/index/?page={{ book_list.next_page_number }}\">\u4e0b\u4e00\u9875</a></li> {% else %} <li class=\"next disabled\"><a href=\"#\">\u4e0b\u4e00\u9875</a></li> {% endif %} </ul> </div> </body> </html> \u6269\u5c55 def index(request): book_list=Book.objects.all() paginator = Paginator(book_list, 15) page = request.GET.get('page',1) currentPage=int(page) # \u5982\u679c\u9875\u6570\u5341\u5206\u591a\u65f6\uff0c\u6362\u53e6\u5916\u4e00\u79cd\u663e\u793a\u65b9\u5f0f if paginator.num_pages>30: if currentPage-5<1: pageRange=range(1,11) elif currentPage+5>paginator.num_pages: pageRange=range(currentPage-5,paginator.num_pages+1) else: pageRange=range(currentPage-5,currentPage+5) else: pageRange=paginator.page_range try: print(page) book_list = paginator.page(page) except PageNotAnInteger: book_list = paginator.page(1) except EmptyPage: book_list = paginator.page(paginator.num_pages) return render(request,\"index.html\",locals()) \u81ea\u5b9a\u4e49\u5206\u9875\u5668 \"\"\" \u5206\u9875\u7ec4\u4ef6\u4f7f\u7528\u793a\u4f8b\uff1a obj = Pagination(request.GET.get('page',1),len(USER_LIST),request.path_info) page_user_list = USER_LIST[obj.start:obj.end] page_html = obj.page_html() return render(request,'index.html',{'users':page_user_list,'page_html':page_html}) \"\"\" class Pagination(object): def __init__(self,current_page,all_count,base_url,per_page_num=2,pager_count=11): \"\"\" \u5c01\u88c5\u5206\u9875\u76f8\u5173\u6570\u636e :param current_page: \u5f53\u524d\u9875 :param all_count: \u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u603b\u6761\u6570 :param per_page_num: \u6bcf\u9875\u663e\u793a\u7684\u6570\u636e\u6761\u6570 :param base_url: \u5206\u9875\u4e2d\u663e\u793a\u7684URL\u524d\u7f00 :param pager_count: \u6700\u591a\u663e\u793a\u7684\u9875\u7801\u4e2a\u6570 \"\"\" try: current_page = int(current_page) except Exception as e: current_page = 1 if current_page <1: current_page = 1 self.current_page = current_page self.all_count = all_count self.per_page_num = per_page_num self.base_url = base_url # \u603b\u9875\u7801 all_pager, tmp = divmod(all_count, per_page_num) if tmp: all_pager += 1 self.all_pager = all_pager self.pager_count = pager_count self.pager_count_half = int((pager_count - 1) / 2) @property def start(self): return (self.current_page - 1) * self.per_page_num @property def end(self): return self.current_page * self.per_page_num def page_html(self): # \u5982\u679c\u603b\u9875\u7801 < 11\u4e2a\uff1a if self.all_pager <= self.pager_count: pager_start = 1 pager_end = self.all_pager + 1 # \u603b\u9875\u7801 > 11 else: # \u5f53\u524d\u9875\u5982\u679c<=\u9875\u9762\u4e0a\u6700\u591a\u663e\u793a11/2\u4e2a\u9875\u7801 if self.current_page <= self.pager_count_half: pager_start = 1 pager_end = self.pager_count + 1 # \u5f53\u524d\u9875\u5927\u4e8e5 else: # \u9875\u7801\u7ffb\u5230\u6700\u540e if (self.current_page + self.pager_count_half) > self.all_pager: pager_end = self.all_pager + 1 pager_start = self.all_pager - self.pager_count + 1 else: pager_start = self.current_page - self.pager_count_half pager_end = self.current_page + self.pager_count_half + 1 page_html_list = [] first_page = '<li><a href=\"%s?page=%s\">\u9996\u9875</a></li>' % (self.base_url,1,) page_html_list.append(first_page) if self.current_page <= 1: prev_page = '<li class=\"disabled\"><a href=\"#\">\u4e0a\u4e00\u9875</a></li>' else: prev_page = '<li><a href=\"%s?page=%s\">\u4e0a\u4e00\u9875</a></li>' % (self.base_url,self.current_page - 1,) page_html_list.append(prev_page) for i in range(pager_start, pager_end): if i == self.current_page: temp = '<li class=\"active\"><a href=\"%s?page=%s\">%s</a></li>' % (self.base_url,i, i,) else: temp = '<li><a href=\"%s?page=%s\">%s</a></li>' % (self.base_url,i, i,) page_html_list.append(temp) if self.current_page >= self.all_pager: next_page = '<li class=\"disabled\"><a href=\"#\">\u4e0b\u4e00\u9875</a></li>' else: next_page = '<li><a href=\"%s?page=%s\">\u4e0b\u4e00\u9875</a></li>' % (self.base_url,self.current_page + 1,) page_html_list.append(next_page) last_page = '<li><a href=\"%s?page=%s\">\u5c3e\u9875</a></li>' % (self.base_url,self.all_pager,) page_html_list.append(last_page) return ''.join(page_html_list) \u4e2d\u95f4\u4ef6 \u4e2d\u95f4\u4ef6\u7684\u6982\u5ff5 \u4e2d\u95f4\u4ef6\u987e\u540d\u601d\u4e49\uff0c\u662f\u4ecb\u4e8erequest\u4e0eresponse\u5904\u7406\u4e4b\u95f4\u7684\u4e00\u9053\u5904\u7406\u8fc7\u7a0b\uff0c\u76f8\u5bf9\u6bd4\u8f83\u8f7b\u91cf\u7ea7\uff0c\u5e76\u4e14\u5728\u5168\u5c40\u4e0a\u6539\u53d8django\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u3002\u56e0\u4e3a\u6539\u53d8\u7684\u662f\u5168\u5c40\uff0c\u6240\u4ee5\u9700\u8981\u8c28\u614e\u5b9e\u7528\uff0c\u7528\u4e0d\u597d\u4f1a\u5f71\u54cd\u5230\u6027\u80fd\u3002 Django\u7684\u4e2d\u95f4\u4ef6\u7684\u5b9a\u4e49\uff1a Middleware is a framework of hooks into Django\u2019s request/response processing. <br>It\u2019s a light, low-level \u201cplugin\u201d system for globally altering Django\u2019s input or output. \u5982\u679c\u4f60\u60f3\u4fee\u6539\u8bf7\u6c42\uff0c\u4f8b\u5982\u88ab\u4f20\u9001\u5230view\u4e2d\u7684 HttpRequest \u5bf9\u8c61\u3002 \u6216\u8005\u4f60\u60f3\u4fee\u6539view\u8fd4\u56de\u7684 HttpResponse \u5bf9\u8c61\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u901a\u8fc7\u4e2d\u95f4\u4ef6\u6765\u5b9e\u73b0\u3002 \u53ef\u80fd\u4f60\u8fd8\u60f3\u5728view\u6267\u884c\u4e4b\u524d\u505a\u4e00\u4e9b\u64cd\u4f5c\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u53ef\u4ee5\u7528 middleware\u6765\u5b9e\u73b0\u3002 \u5927\u5bb6\u53ef\u80fd\u9891\u7e41\u5728view\u4f7f\u7528 request.user \u5427\u3002 Django\u60f3\u5728\u6bcf\u4e2aview\u6267\u884c\u4e4b\u524d\u628auser\u8bbe\u7f6e\u4e3arequest\u7684\u5c5e\u6027\uff0c\u4e8e\u662f\u5c31\u7528\u4e86\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\u3002\u6240\u4ee5Django\u63d0\u4f9b\u4e86\u53ef\u4ee5\u4fee\u6539request \u5bf9\u8c61\u7684\u4e2d\u95f4\u4ef6 AuthenticationMiddleware \u3002 Django\u9ed8\u8ba4\u7684 Middleware \uff1a MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', ] \u6bcf\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u90fd\u6709\u5177\u4f53\u7684\u529f\u80fd\u3002 \u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6 \u4e2d\u95f4\u4ef6\u4e2d\u4e00\u5171\u6709\u56db\u4e2a\u65b9\u6cd5\uff1a process_request process_view process_exception process_response process_request\uff0cprocess_response \u5f53\u7528\u6237\u53d1\u8d77\u8bf7\u6c42\u7684\u65f6\u5019\u4f1a\u4f9d\u6b21\u7ecf\u8fc7\u6240\u6709\u7684\u7684\u4e2d\u95f4\u4ef6\uff0c\u8fd9\u4e2a\u65f6\u5019\u7684\u8bf7\u6c42\u65f6process_request,\u6700\u540e\u5230\u8fbeviews\u7684\u51fd\u6570\u4e2d\uff0cviews\u51fd\u6570\u5904\u7406\u540e\uff0c\u5728\u4f9d\u6b21\u7a7f\u8fc7\u4e2d\u95f4\u4ef6\uff0c\u8fd9\u4e2a\u65f6\u5019\u662fprocess_response,\u6700\u540e\u8fd4\u56de\u7ed9\u8bf7\u6c42\u8005\u3002 \u4e0a\u8ff0\u622a\u56fe\u4e2d\u7684\u4e2d\u95f4\u4ef6\u90fd\u662fdjango\u4e2d\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2a\u4e2d\u95f4\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u5199\u4e00\u4e2a\u7c7b\uff0c\u4f46\u662f\u5fc5\u987b\u7ee7\u627fMiddlewareMixin \u9700\u8981\u5bfc\u5165 from django.utils.deprecation import MiddlewareMixin in views: def index(request): print(\"view\u51fd\u6570...\") return HttpResponse(\"OK\") in Mymiddlewares.py\uff1a from django.utils.deprecation import MiddlewareMixin from django.shortcuts import HttpResponse class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response class Md2(MiddlewareMixin): def process_request(self,request): print(\"Md2\u8bf7\u6c42\") #return HttpResponse(\"Md2\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md2\u8fd4\u56de\") return response \u7ed3\u679c\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u6ce8\u610f\uff1a \u5982\u679c\u5f53\u8bf7\u6c42\u5230\u8fbe\u8bf7\u6c422\u7684\u65f6\u5019\u76f4\u63a5\u4e0d\u7b26\u5408\u6761\u4ef6\u8fd4\u56de\uff0c\u5373return HttpResponse(\"Md2\u4e2d\u65ad\")\uff0c\u7a0b\u5e8f\u5c06\u628a\u8bf7\u6c42\u76f4\u63a5\u53d1\u7ed9\u4e2d\u95f4\u4ef62\u8fd4\u56de\uff0c\u7136\u540e\u4f9d\u6b21\u8fd4\u56de\u5230\u8bf7\u6c42\u8005\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a \u8fd4\u56deMd2\u4e2d\u65ad\u7684\u9875\u9762\uff0c\u540e\u53f0\u6253\u5370\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 Md2\u8fd4\u56de Md1\u8fd4\u56de \u6d41\u7a0b\u56fe\u5982\u4e0b\uff1a process_view process_view(self, request, callback, callback_args, callback_kwargs) Mymiddlewares.py \u4fee\u6539\u5982\u4e0b from django.utils.deprecation import MiddlewareMixin from django.shortcuts import HttpResponse class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") #return HttpResponse(\"Md1\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): print(\"Md1view\") class Md2(MiddlewareMixin): def process_request(self,request): print(\"Md2\u8bf7\u6c42\") return HttpResponse(\"Md2\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md2\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): print(\"Md2view\") \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 Md1view Md2view view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u4e0b\u56fe\u8fdb\u884c\u5206\u6790\u4e0a\u9762\u7684\u8fc7\u7a0b\uff1a \u5f53\u6700\u540e\u4e00\u4e2a\u4e2d\u95f4\u7684process_request\u5230\u8fbe\u8def\u7531\u5173\u7cfb\u6620\u5c04\u4e4b\u540e\uff0c\u8fd4\u56de\u5230\u4e2d\u95f4\u4ef61\u7684process_view\uff0c\u7136\u540e\u4f9d\u6b21\u5f80\u4e0b\uff0c\u5230\u8fbeviews\u51fd\u6570\uff0c\u6700\u540e\u901a\u8fc7process_response\u4f9d\u6b21\u8fd4\u56de\u5230\u8fbe\u7528\u6237\u3002 process_view\u53ef\u4ee5\u7528\u6765\u8c03\u7528\u89c6\u56fe\u51fd\u6570\uff1a class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") #return HttpResponse(\"Md1\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): # return HttpResponse(\"hello\") response=callback(request,*callback_args,**callback_kwargs) return response \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u6ce8\u610f\uff1aprocess_view\u5982\u679c\u6709\u8fd4\u56de\u503c\uff0c\u4f1a\u8d8a\u8fc7\u5176\u4ed6\u7684process_view\u4ee5\u53ca\u89c6\u56fe\u51fd\u6570\uff0c\u4f46\u662f\u6240\u6709\u7684process_response\u90fd\u8fd8\u4f1a\u6267\u884c\u3002 process_exception process_exception(self, request, exception) \u793a\u4f8b\u4fee\u6539\u5982\u4e0b\uff1a class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") #return HttpResponse(\"Md1\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): # return HttpResponse(\"hello\") # response=callback(request,*callback_args,**callback_kwargs) # return response print(\"md1 process_view...\") def process_exception(self): print(\"md1 process_exception...\") class Md2(MiddlewareMixin): def process_request(self,request): print(\"Md2\u8bf7\u6c42\") # return HttpResponse(\"Md2\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md2\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): print(\"md2 process_view...\") def process_exception(self): print(\"md1 process_exception...\") \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 md1 process_view... md2 process_view... view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u6d41\u7a0b\u56fe\u5982\u4e0b\uff1a \u5f53views\u51fa\u73b0\u9519\u8bef\u65f6\uff1a \u5c06md2\u7684process_exception\u4fee\u6539\u5982\u4e0b\uff1a def process_exception(self,request,exception): print(\"md2 process_exception...\") return HttpResponse(\"error\") \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 md1 process_view... md2 process_view... view\u51fd\u6570... md2 process_exception... Md2\u8fd4\u56de Md1\u8fd4\u56de","title":"Index"},{"location":"#1-web","text":"Web\u5e94\u7528\u7a0b\u5e8f\u662f\u4e00\u79cd\u53ef\u4ee5\u901a\u8fc7Web\u8bbf\u95ee\u7684\u5e94\u7528\u7a0b\u5e8f\uff0c\u7a0b\u5e8f\u7684\u6700\u5927\u597d\u5904\u662f\u7528\u6237\u5f88\u5bb9\u6613\u8bbf\u95ee\u5e94\u7528\u7a0b\u5e8f\uff0c\u7528\u6237\u53ea\u9700\u8981\u6709\u6d4f\u89c8\u5668\u5373\u53ef\uff0c\u4e0d\u9700\u8981\u518d\u5b89\u88c5\u5176\u4ed6\u8f6f\u4ef6\u3002\u5e94\u7528\u7a0b\u5e8f\u6709\u4e24\u79cd\u6a21\u5f0fC/S\u3001B/S\u3002C/S\u662f\u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u7aef\u7a0b\u5e8f\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9\u7c7b\u7a0b\u5e8f\u4e00\u822c\u72ec\u7acb\u8fd0\u884c\u3002\u800cB/S\u5c31\u662f\u6d4f\u89c8\u5668\u7aef/\u670d\u52a1\u5668\u7aef\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u7c7b\u5e94\u7528\u7a0b\u5e8f\u4e00\u822c\u501f\u52a9\u8c37\u6b4c\uff0c\u706b\u72d0\u7b49\u6d4f\u89c8\u5668\u6765\u8fd0\u884c\u3002WEB\u5e94\u7528\u7a0b\u5e8f\u4e00\u822c\u662fB/S\u6a21\u5f0f\u3002Web\u5e94\u7528\u7a0b\u5e8f\u9996\u5148\u662f\u201c\u5e94\u7528\u7a0b\u5e8f\u201d\uff0c\u548c\u7528\u6807\u51c6\u7684\u7a0b\u5e8f\u8bed\u8a00\uff0c\u5982java\uff0cpython\u7b49\u7f16\u5199\u51fa\u6765\u7684\u7a0b\u5e8f\u6ca1\u6709\u4ec0\u4e48\u672c\u8d28\u4e0a\u7684\u4e0d\u540c\u3002\u5728\u7f51\u7edc\u7f16\u7a0b\u7684\u610f\u4e49\u4e0b\uff0c\u6d4f\u89c8\u5668\u662f\u4e00\u4e2asocket\u5ba2\u6237\u7aef\uff0c\u670d\u52a1\u5668\u662f\u4e00\u4e2asocket\u670d\u52a1\u7aef\u3002 import socket def handle_request(client): request_data = client.recv(1024) print(\"request_data: \",request_data) client.send(\"HTTP/1.1 200 OK\\r\\nstatus: 200\\r\\nContent-Type:text/html\\r\\n\\r\\n\".encode(\"utf8\")) client.send(\"<h1>Hello, luffycity!</h1><img src=''>\".encode(\"utf8\")) def main(): sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind(('localhost',8812)) sock.listen(5) while True: print(\"the server is waiting for client-connection....\") connection, address = sock.accept() handle_request(connection) connection.close() if __name__ == '__main__': main()","title":"1 web\u5e94\u7528"},{"location":"#2-http","text":"","title":"2 http\u534f\u8bae"},{"location":"#http","text":"HTTP\u534f\u8bae\u662fHyper Text Transfer Protocol\uff08\u8d85\u6587\u672c\u4f20\u8f93\u534f\u8bae\uff09\u7684\u7f29\u5199,\u662f\u7528\u4e8e\u4e07\u7ef4\u7f51\uff08WWW:World Wide Web \uff09\u670d\u52a1\u5668\u4e0e\u672c\u5730\u6d4f\u89c8\u5668\u4e4b\u95f4\u4f20\u8f93\u8d85\u6587\u672c\u7684\u4f20\u9001\u534f\u8bae\u3002 HTTP\u662f\u4e00\u4e2a\u5c5e\u4e8e\u5e94\u7528\u5c42\u7684\u9762\u5411\u5bf9\u8c61\u7684\u534f\u8bae\uff0c\u7531\u4e8e\u5176\u7b80\u6377\u3001\u5feb\u901f\u7684\u65b9\u5f0f\uff0c\u9002\u7528\u4e8e\u5206\u5e03\u5f0f\u8d85\u5a92\u4f53\u4fe1\u606f\u7cfb\u7edf\u3002\u5b83\u4e8e1990\u5e74\u63d0\u51fa\uff0c\u7ecf\u8fc7\u51e0\u5e74\u7684\u4f7f\u7528\u4e0e\u53d1\u5c55\uff0c\u5f97\u5230\u4e0d\u65ad\u5730\u5b8c\u5584\u548c\u6269\u5c55\u3002HTTP\u534f\u8bae\u5de5\u4f5c\u4e8e\u5ba2\u6237\u7aef-\u670d\u52a1\u7aef\u67b6\u6784\u4e3a\u4e0a\u3002\u6d4f\u89c8\u5668\u4f5c\u4e3aHTTP\u5ba2\u6237\u7aef\u901a\u8fc7URL\u5411HTTP\u670d\u52a1\u7aef\u5373WEB\u670d\u52a1\u5668\u53d1\u9001\u6240\u6709\u8bf7\u6c42\u3002Web\u670d\u52a1\u5668\u6839\u636e\u63a5\u6536\u5230\u7684\u8bf7\u6c42\u540e\uff0c\u5411\u5ba2\u6237\u7aef\u53d1\u9001\u54cd\u5e94\u4fe1\u606f\u3002","title":"http\u534f\u8bae\u7b80\u4ecb"},{"location":"#http_1","text":"","title":"http\u534f\u8bae\u7279\u6027"},{"location":"#1-tcpip","text":"http\u534f\u8bae\u662f\u57fa\u4e8eTCP/IP\u534f\u8bae\u4e4b\u4e0a\u7684\u5e94\u7528\u5c42\u534f\u8bae\u3002","title":"(1) \u57fa\u4e8eTCP/IP"},{"location":"#2-","text":"HTTP\u534f\u8bae\u89c4\u5b9a,\u8bf7\u6c42\u4ece\u5ba2\u6237\u7aef\u53d1\u51fa,\u6700\u540e\u670d\u52a1\u5668\u7aef\u54cd\u5e94\u8be5\u8bf7\u6c42\u5e76 \u8fd4\u56de\u3002\u6362\u53e5\u8bdd\u8bf4,\u80af\u5b9a\u662f\u5148\u4ece\u5ba2\u6237\u7aef\u5f00\u59cb\u5efa\u7acb\u901a\u4fe1\u7684,\u670d\u52a1\u5668\u7aef\u5728\u6ca1\u6709 \u63a5\u6536\u5230\u8bf7\u6c42\u4e4b\u524d\u4e0d\u4f1a\u53d1\u9001\u54cd\u5e94","title":"(2) \u57fa\u4e8e\u8bf7\u6c42\uff0d\u54cd\u5e94\u6a21\u5f0f"},{"location":"#3","text":"HTTP\u662f\u4e00\u79cd\u4e0d\u4fdd\u5b58\u72b6\u6001,\u5373\u65e0\u72b6\u6001(stateless)\u534f\u8bae\u3002HTTP\u534f\u8bae \u81ea\u8eab\u4e0d\u5bf9\u8bf7\u6c42\u548c\u54cd\u5e94\u4e4b\u95f4\u7684\u901a\u4fe1\u72b6\u6001\u8fdb\u884c\u4fdd\u5b58\u3002\u4e5f\u5c31\u662f\u8bf4\u5728HTTP\u8fd9\u4e2a \u7ea7\u522b,\u534f\u8bae\u5bf9\u4e8e\u53d1\u9001\u8fc7\u7684\u8bf7\u6c42\u6216\u54cd\u5e94\u90fd\u4e0d\u505a\u6301\u4e45\u5316\u5904\u7406\u3002 \u4f7f\u7528HTTP\u534f\u8bae,\u6bcf\u5f53\u6709\u65b0\u7684\u8bf7\u6c42\u53d1\u9001\u65f6,\u5c31\u4f1a\u6709\u5bf9\u5e94\u7684\u65b0\u54cd\u5e94\u4ea7 \u751f\u3002\u534f\u8bae\u672c\u8eab\u5e76\u4e0d\u4fdd\u7559\u4e4b\u524d\u4e00\u5207\u7684\u8bf7\u6c42\u6216\u54cd\u5e94\u62a5\u6587\u7684\u4fe1\u606f\u3002\u8fd9\u662f\u4e3a\u4e86\u66f4\u5feb\u5730\u5904\u7406\u5927\u91cf\u4e8b\u52a1,\u786e\u4fdd\u534f\u8bae\u7684\u53ef\u4f38\u7f29\u6027,\u800c\u7279\u610f\u628aHTTP\u534f\u8bae\u8bbe\u8ba1\u6210 \u5982\u6b64\u7b80\u5355\u7684\u3002\u53ef\u662f,\u968f\u7740Web\u7684\u4e0d\u65ad\u53d1\u5c55,\u56e0\u65e0\u72b6\u6001\u800c\u5bfc\u81f4\u4e1a\u52a1\u5904\u7406\u53d8\u5f97\u68d8\u624b \u7684\u60c5\u51b5\u589e\u591a\u4e86\u3002\u6bd4\u5982,\u7528\u6237\u767b\u5f55\u5230\u4e00\u5bb6\u8d2d\u7269\u7f51\u7ad9,\u5373\u4f7f\u4ed6\u8df3\u8f6c\u5230\u8be5\u7ad9\u7684 \u5176\u4ed6\u9875\u9762\u540e,\u4e5f\u9700\u8981\u80fd\u7ee7\u7eed\u4fdd\u6301\u767b\u5f55\u72b6\u6001\u3002\u9488\u5bf9\u8fd9\u4e2a\u5b9e\u4f8b,\u7f51\u7ad9\u4e3a\u4e86\u80fd \u591f\u638c\u63e1\u662f\u8c01\u9001\u51fa\u7684\u8bf7\u6c42,\u9700\u8981\u4fdd\u5b58\u7528\u6237\u7684\u72b6\u6001\u3002HTTP/1.1\u867d\u7136\u662f\u65e0\u72b6\u6001\u534f\u8bae,\u4f46\u4e3a\u4e86\u5b9e\u73b0\u671f\u671b\u7684\u4fdd\u6301\u72b6\u6001\u529f\u80fd, \u4e8e\u662f\u5f15\u5165\u4e86Cookie\u6280\u672f\u3002\u6709\u4e86Cookie\u518d\u7528HTTP\u534f\u8bae\u901a\u4fe1,\u5c31\u53ef\u4ee5\u7ba1 \u7406\u72b6\u6001\u4e86\u3002\u6709\u5173Cookie\u7684\u8be6\u7ec6\u5185\u5bb9\u7a0d\u540e\u8bb2\u89e3\u3002","title":"(3) \u65e0\u72b6\u6001\u4fdd\u5b58"},{"location":"#_1","text":"\u65e0\u8fde\u63a5\u7684\u542b\u4e49\u662f\u9650\u5236\u6bcf\u6b21\u8fde\u63a5\u53ea\u5904\u7406\u4e00\u4e2a\u8bf7\u6c42\u3002\u670d\u52a1\u5668\u5904\u7406\u5b8c\u5ba2\u6237\u7684\u8bf7\u6c42\uff0c\u5e76\u6536\u5230\u5ba2\u6237\u7684\u5e94\u7b54\u540e\uff0c\u5373\u65ad\u5f00\u8fde\u63a5\u3002\u91c7\u7528\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u8282\u7701\u4f20\u8f93\u65f6\u95f4\u3002","title":"\u65e0\u8fde\u63a5"},{"location":"#http_2","text":"http\u534f\u8bae\u5305\u542b\u7531\u6d4f\u89c8\u5668\u53d1\u9001\u6570\u636e\u5230\u670d\u52a1\u5668\u9700\u8981\u9075\u5faa\u7684\u8bf7\u6c42\u534f\u8bae\u4e0e\u670d\u52a1\u5668\u53d1\u9001\u6570\u636e\u5230\u6d4f\u89c8\u5668\u9700\u8981\u9075\u5faa\u7684\u8bf7\u6c42\u534f\u8bae\u3002\u7528\u4e8eHTTP\u534f\u8bae\u4ea4\u4e92\u7684\u4fe1\u88ab\u4e3aHTTP\u62a5\u6587\u3002\u8bf7\u6c42\u7aef(\u5ba2\u6237\u7aef)\u7684HTTP\u62a5\u6587 \u505a\u8bf7\u6c42\u62a5\u6587,\u54cd\u5e94\u7aef(\u670d\u52a1\u5668\u7aef)\u7684 \u505a\u54cd\u5e94\u62a5\u6587\u3002HTTP\u62a5\u6587\u672c\u8eab\u662f\u7531\u591a\u884c\u6570\u636e\u6784\u6210\u7684\u5b57 \u6587\u672c\u3002","title":"http\u8bf7\u6c42\u534f\u8bae\u4e0e\u54cd\u5e94\u534f\u8bae"},{"location":"#_2","text":"","title":"\u8bf7\u6c42\u534f\u8bae"},{"location":"#_3","text":"","title":"\u8bf7\u6c42\u683c\u5f0f"},{"location":"#getpost","text":"GET\u63d0\u4ea4\u7684\u6570\u636e\u4f1a\u653e\u5728URL\u4e4b\u540e\uff0c\u4ee5?\u5206\u5272URL\u548c\u4f20\u8f93\u6570\u636e\uff0c\u53c2\u6570\u4e4b\u95f4\u4ee5&\u76f8\u8fde\uff0c\u5982EditBook?name=test1&id=123456. POST\u65b9\u6cd5\u662f\u628a\u63d0\u4ea4\u7684\u6570\u636e\u653e\u5728HTTP\u5305\u7684\u8bf7\u6c42\u4f53\u4e2d. GET\u63d0\u4ea4\u7684\u6570\u636e\u5927\u5c0f\u6709\u9650\u5236\uff08\u56e0\u4e3a\u6d4f\u89c8\u5668\u5bf9URL\u7684\u957f\u5ea6\u6709\u9650\u5236\uff09\uff0c\u800cPOST\u65b9\u6cd5\u63d0\u4ea4\u7684\u6570\u636e\u6ca1\u6709\u9650\u5236. GET\u4e0ePOST\u8bf7\u6c42\u5728\u670d\u52a1\u7aef\u83b7\u53d6\u8bf7\u6c42\u6570\u636e\u65b9\u5f0f\u4e0d\u540c\u3002","title":"\u8bf7\u6c42\u65b9\u5f0f: get\u4e0epost\u8bf7\u6c42"},{"location":"#_4","text":"","title":"\u54cd\u5e94\u534f\u8bae"},{"location":"#_5","text":"","title":"\u54cd\u5e94\u683c\u5f0f"},{"location":"#_6","text":"\u72b6\u6001\u7801\u7684\u804c \u662f\u5f53\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u7aef\u53d1\u9001\u8bf7\u6c42\u65f6, \u8fd4\u56de\u7684\u8bf7\u6c42 \u7ed3\u679c\u3002\u501f\u52a9\u72b6\u6001\u7801,\u7528\u6237\u53ef\u4ee5\u77e5\u9053\u670d\u52a1\u5668\u7aef\u662f\u6b63\u5e38 \u7406\u4e86\u8bf7\u6c42,\u8fd8\u662f\u51fa \u73b0\u4e86 \u3002\u72b6\u6001\u7801\u5982200 OK,\u4ee53\u4f4d\u6570\u5b57\u548c\u539f\u56e0 \u6210\u3002\u6570\u5b57\u4e2d\u7684 \u4e00\u4f4d\u6307\u5b9a\u4e86\u54cd\u5e94 \u522b,\u540e\u4e24\u4f4d\u65e0\u5206 \u3002\u54cd\u5e94 \u522b\u6709\u4ee55\u79cd\u3002 import socket sock=socket.socket() sock.bind((\"127.0.0.1\",8808)) sock.listen(5) while 1: print(\"server waiting.....\") conn,addr=sock.accept() data=conn.recv(1024) print(\"data\",data) # \u8bfb\u53d6html\u6587\u4ef6 with open(\"login.html\",\"rb\") as f: data=f.read() conn.send((b\"HTTP/1.1 200 OK\\r\\n\\r\\n%s\"%data)) conn.close() login.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <form action=\"\" method=\"post\"> \u7528\u6237\u540d <input type=\"text\" name=\"user\"> \u5bc6\u7801 <input type=\"password\" name=\"pwd\"> <input type=\"submit\"> </form> </body> </html>","title":"\u54cd\u5e94\u72b6\u6001\u7801"},{"location":"#3-web","text":"Web\u6846\u67b6\uff08Web framework\uff09\u662f\u4e00\u79cd\u5f00\u53d1\u6846\u67b6\uff0c\u7528\u6765\u652f\u6301\u52a8\u6001\u7f51\u7ad9\u3001\u7f51\u7edc\u5e94\u7528\u548c\u7f51\u7edc\u670d\u52a1\u7684\u5f00\u53d1\u3002\u8fd9\u5927\u591a\u6570\u7684web\u6846\u67b6\u63d0\u4f9b\u4e86\u4e00\u5957\u5f00\u53d1\u548c\u90e8\u7f72\u7f51\u7ad9\u7684\u65b9\u5f0f\uff0c\u4e5f\u4e3aweb\u884c\u4e3a\u63d0\u4f9b\u4e86\u4e00\u5957\u901a\u7528\u7684\u65b9\u6cd5\u3002web\u6846\u67b6\u5df2\u7ecf\u5b9e\u73b0\u4e86\u5f88\u591a\u529f\u80fd\uff0c\u5f00\u53d1\u4eba\u5458\u4f7f\u7528\u6846\u67b6\u63d0\u4f9b\u7684\u65b9\u6cd5\u5e76\u4e14\u5b8c\u6210\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\uff0c\u5c31\u80fd\u5feb\u901f\u5f00\u53d1web\u5e94\u7528\u4e86\u3002\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u7684\u662f\u57fa\u4e8eHTTP\u534f\u8bae\u8fdb\u884c\u901a\u4fe1\u7684\u3002\u4e5f\u53ef\u4ee5\u8bf4web\u6846\u67b6\u5c31\u662f\u5728\u4ee5\u4e0a\u5341\u51e0\u884c\u4ee3\u7801\u57fa\u7840\u5f20\u6269\u5c55\u51fa\u6765\u7684\uff0c\u6709\u5f88\u591a\u7b80\u5355\u65b9\u4fbf\u4f7f\u7528\u7684\u65b9\u6cd5\uff0c\u5927\u5927\u63d0\u9ad8\u4e86\u5f00\u53d1\u7684\u6548\u7387\u3002","title":"3 web\u6846\u67b6"},{"location":"#wsgiref","text":"\u6700\u7b80\u5355\u7684Web\u5e94\u7528\u5c31\u662f\u5148\u628aHTML\u7528\u6587\u4ef6\u4fdd\u5b58\u597d\uff0c\u7528\u4e00\u4e2a\u73b0\u6210\u7684HTTP\u670d\u52a1\u5668\u8f6f\u4ef6\uff0c\u63a5\u6536\u7528\u6237\u8bf7\u6c42\uff0c\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6HTML\uff0c\u8fd4\u56de\u3002 \u5982\u679c\u8981\u52a8\u6001\u751f\u6210HTML\uff0c\u5c31\u9700\u8981\u628a\u4e0a\u8ff0\u6b65\u9aa4\u81ea\u5df1\u6765\u5b9e\u73b0\u3002\u4e0d\u8fc7\uff0c\u63a5\u53d7HTTP\u8bf7\u6c42\u3001\u89e3\u6790HTTP\u8bf7\u6c42\u3001\u53d1\u9001HTTP\u54cd\u5e94\u90fd\u662f\u82e6\u529b\u6d3b\uff0c\u5982\u679c\u6211\u4eec\u81ea\u5df1\u6765\u5199\u8fd9\u4e9b\u5e95\u5c42\u4ee3\u7801\uff0c\u8fd8\u6ca1\u5f00\u59cb\u5199\u52a8\u6001HTML\u5462\uff0c\u5c31\u5f97\u82b1\u4e2a\u628a\u6708\u53bb\u8bfbHTTP\u89c4\u8303\u3002 \u6b63\u786e\u7684\u505a\u6cd5\u662f\u5e95\u5c42\u4ee3\u7801\u7531\u4e13\u95e8\u7684\u670d\u52a1\u5668\u8f6f\u4ef6\u5b9e\u73b0\uff0c\u6211\u4eec\u7528Python\u4e13\u6ce8\u4e8e\u751f\u6210HTML\u6587\u6863\u3002\u56e0\u4e3a\u6211\u4eec\u4e0d\u5e0c\u671b\u63a5\u89e6\u5230TCP\u8fde\u63a5\u3001HTTP\u539f\u59cb\u8bf7\u6c42\u548c\u54cd\u5e94\u683c\u5f0f\uff0c\u6240\u4ee5\uff0c\u9700\u8981\u4e00\u4e2a\u7edf\u4e00\u7684\u63a5\u53e3\u534f\u8bae\u6765\u5b9e\u73b0\u8fd9\u6837\u7684\u670d\u52a1\u5668\u8f6f\u4ef6\uff0c\u8ba9\u6211\u4eec\u4e13\u5fc3\u7528Python\u7f16\u5199Web\u4e1a\u52a1\u3002\u8fd9\u4e2a\u63a5\u53e3\u5c31\u662fWSGI\uff1aWeb Server Gateway Interface\u3002\u800cwsgiref\u6a21\u5757\u5c31\u662fpython\u57fa\u4e8ewsgi\u534f\u8bae\u5f00\u53d1\u7684\u670d\u52a1\u6a21\u5757\u3002 from wsgiref.simple_server import make_server def application(environ, start_response): start_response('200 OK', [('Content-Type', 'text/html')]) return [b'<h1>Hello, web!</h1>'] httpd = make_server('', 8080, application) print('Serving HTTP on port 8000...') # \u5f00\u59cb\u76d1\u542cHTTP\u8bf7\u6c42: httpd.serve_forever()","title":"wsgiref\u6a21\u5757"},{"location":"#diyweb","text":"models.py import pymysql #\u8fde\u63a5\u6570\u636e\u5e93 conn = pymysql.connect(host='127.0.0.1',port= 3306,user = 'root',passwd='',db='web') #db\uff1a\u5e93\u540d #\u521b\u5efa\u6e38\u6807 cur = conn.cursor() sql=''' create table userinfo( id INT PRIMARY KEY , name VARCHAR(32) , password VARCHAR(32) ) ''' cur.execute(sql) #\u63d0\u4ea4 conn.commit() #\u5173\u95ed\u6307\u9488\u5bf9\u8c61 cur.close() #\u5173\u95ed\u8fde\u63a5\u5bf9\u8c61 conn.close() \u542f\u52a8\u6587\u4ef6manage.py from wsgiref.simple_server import make_server from app01.views import * import urls def routers(): URLpattern=urls.URLpattern return URLpattern def applications(environ,start_response): path=environ.get(\"PATH_INFO\") start_response('200 OK', [('Content-Type', 'text/html'),('Charset', 'utf8')]) urlpattern=routers() func=None for item in urlpattern: if path==item[0]: func=item[1] break if func: return [func(environ)] else: return [b\"<h1>404!<h1>\"] if __name__ == '__main__': server=make_server(\"\",8889,applications) print(\"server is working...\") server.serve_forever() urls.py from app01.views import * URLpattern = ( (\"/login/\", login), ) views import pymysql from urllib.parse import parse_qs def login(request): if request.get(\"REQUEST_METHOD\")==\"POST\": try: request_body_size = int(request.get('CONTENT_LENGTH', 0)) except (ValueError): request_body_size = 0 request_body = request['wsgi.input'].read(request_body_size) data = parse_qs(request_body) user=data.get(b\"user\")[0].decode(\"utf8\") pwd=data.get(b\"pwd\")[0].decode(\"utf8\") #\u8fde\u63a5\u6570\u636e\u5e93 conn = pymysql.connect(host='127.0.0.1',port= 3306,user = 'root',passwd='',db='web') # db\uff1a\u5e93\u540d #\u521b\u5efa\u6e38\u6807 cur = conn.cursor() SQL=\"select * from userinfo WHERE NAME ='%s' AND PASSWORD ='%s'\"%(user,pwd) cur.execute(SQL) if cur.fetchone(): f=open(\"templates/backend.html\",\"rb\") data=f.read() data=data.decode(\"utf8\") return data.encode(\"utf8\") else: print(\"OK456\") return b\"user or pwd is wrong\" else: f = open(\"templates/login.html\", \"rb\") data = f.read() f.close() return data login.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h4>\u767b\u5f55\u9875\u9762</h4> <form action=\"\" method=\"post\"> \u7528\u6237\u540d <input type=\"text\" name=\"user\"> \u5bc6\u7801 <input type=\"text\" name=\"pwd\"> <input type=\"submit\"> </form> </body> </html> backend.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h4>welcome to oldboy!</h4> </body> </html> yuan\u8fd9\u4e2apackage\u5c31\u662f\u4e00\u4e2aweb\u6846\u67b6\uff0c\u4e0b\u8f7d\u8fd9\u4e2aweb\u6846\u67b6\u5c31\u53ef\u4ee5\u5feb\u901f\u5b9e\u73b0\u4e00\u4e9b\u7b80\u5355\u7684web\u529f\u80fd\uff0c\u6bd4\u5982\u67e5\u770b\u65f6\u95f4\u3002","title":"DIY\u4e00\u4e2aweb\u6846\u67b6"},{"location":"#4-4-django","text":"","title":"4 4 Django\u7b80\u4ecb"},{"location":"#mvcmtv","text":"","title":"MVC\u4e0eMTV\u6a21\u578b"},{"location":"#mvc","text":"Web\u670d\u52a1\u5668\u5f00\u53d1\u9886\u57df\u91cc\u8457\u540d\u7684MVC\u6a21\u5f0f\uff0c\u6240\u8c13MVC\u5c31\u662f\u628aWeb\u5e94\u7528\u5206\u4e3a\u6a21\u578b(M)\uff0c\u63a7\u5236\u5668(C)\u548c\u89c6\u56fe(V)\u4e09\u5c42\uff0c\u4ed6\u4eec\u4e4b\u95f4\u4ee5\u4e00\u79cd\u63d2\u4ef6\u5f0f\u7684\u3001\u677e\u8026\u5408\u7684\u65b9\u5f0f\u8fde\u63a5\u5728\u4e00\u8d77\uff0c\u6a21\u578b\u8d1f\u8d23\u4e1a\u52a1\u5bf9\u8c61\u4e0e\u6570\u636e\u5e93\u7684\u6620\u5c04(ORM)\uff0c\u89c6\u56fe\u8d1f\u8d23\u4e0e\u7528\u6237\u7684\u4ea4\u4e92(\u9875\u9762)\uff0c\u63a7\u5236\u5668\u63a5\u53d7\u7528\u6237\u7684\u8f93\u5165\u8c03\u7528\u6a21\u578b\u548c\u89c6\u56fe\u5b8c\u6210\u7528\u6237\u7684\u8bf7\u6c42\uff0c\u5176\u793a\u610f\u56fe\u5982\u4e0b\u6240\u793a\uff1a","title":"MVC"},{"location":"#mtv","text":"Django\u7684MTV\u6a21\u5f0f\u672c\u8d28\u4e0a\u548cMVC\u662f\u4e00\u6837\u7684\uff0c\u4e5f\u662f\u4e3a\u4e86\u5404\u7ec4\u4ef6\u95f4\u4fdd\u6301\u677e\u8026\u5408\u5173\u7cfb\uff0c\u53ea\u662f\u5b9a\u4e49\u4e0a\u6709\u4e9b\u8bb8\u4e0d\u540c\uff0cDjango\u7684MTV\u5206\u522b\u662f\u503c\uff1a M \u4ee3\u8868\u6a21\u578b\uff08Model\uff09\uff1a \u8d1f\u8d23\u4e1a\u52a1\u5bf9\u8c61\u548c\u6570\u636e\u5e93\u7684\u5173\u7cfb\u6620\u5c04(ORM)\u3002 T \u4ee3\u8868\u6a21\u677f (Template)\uff1a\u8d1f\u8d23\u5982\u4f55\u628a\u9875\u9762\u5c55\u793a\u7ed9\u7528\u6237(html)\u3002 V \u4ee3\u8868\u89c6\u56fe\uff08View\uff09\uff1a \u8d1f\u8d23\u4e1a\u52a1\u903b\u8f91\uff0c\u5e76\u5728\u9002\u5f53\u65f6\u5019\u8c03\u7528Model\u548cTemplate\u3002 \u9664\u4e86\u4ee5\u4e0a\u4e09\u5c42\u4e4b\u5916\uff0c\u8fd8\u9700\u8981\u4e00\u4e2aURL\u5206\u53d1\u5668\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5c06\u4e00\u4e2a\u4e2aURL\u7684\u9875\u9762\u8bf7\u6c42\u5206\u53d1\u7ed9\u4e0d\u540c\u7684View\u5904\u7406\uff0cView\u518d\u8c03\u7528\u76f8\u5e94\u7684Model\u548cTemplate\uff0cMTV\u7684\u54cd\u5e94\u6a21\u5f0f\u5982\u4e0b\u6240\u793a\uff1a \u4e00\u822c\u662f\u7528\u6237\u901a\u8fc7\u6d4f\u89c8\u5668\u5411\u6211\u4eec\u7684\u670d\u52a1\u5668\u53d1\u8d77\u4e00\u4e2a\u8bf7\u6c42(request)\uff0c\u8fd9\u4e2a\u8bf7\u6c42\u56de\u53bb\u8bbf\u95ee\u89c6\u56fe\u51fd\u6570\uff0c\uff08\u5982\u679c\u4e0d\u6d89\u53ca\u5230\u6570\u636e\u8c03\u7528\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u89c6\u56fe\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u6a21\u677f\u4e5f\u5c31\u662f\u4e00\u4e2a\u7f51\u9875\u7ed9\u7528\u6237\uff09\uff0c\u89c6\u56fe\u51fd\u6570\u8c03\u7528\u6a21\u578b\uff0c\u6a21\u578b\u53bb\u6570\u636e\u5e93\u67e5\u627e\u6570\u636e\uff0c\u7136\u540e\u9010\u7ea7\u8fd4\u56de\uff0c\u89c6\u56fe\u51fd\u6570\u628a\u8fd4\u56de\u7684\u6570\u636e\u586b\u5145\u5230\u6a21\u677f\u4e2d\u7a7a\u683c\u4e2d\uff0c\u6700\u540e\u8fd4\u56de\u7f51\u9875\u7ed9\u7528\u6237\u3002","title":"MTV"},{"location":"#django","text":"","title":"Django\u7684\u4e0b\u8f7d\u4e0e\u57fa\u672c\u547d\u4ee4"},{"location":"#1django","text":"pip3 install django pip3 install django==2.0.1","title":"1\u3001\u4e0b\u8f7dDjango\uff1a"},{"location":"#2django-project","text":"#\u5b89\u88c5\u4e4b\u540e \u6587\u4ef6\u6240\u5728\u4f4d\u7f6e /Library/Frameworks/Python.framework/Versions/3.9/bin/django-admin.py django-admin.py startproject mysite \u5f53\u524d\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210mysite\u7684\u5de5\u7a0b\uff0c\u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a \u200b manage.py ----- Django\u9879\u76ee\u91cc\u9762\u7684\u5de5\u5177\uff0c\u901a\u8fc7\u5b83\u53ef\u4ee5\u8c03\u7528django shell\u548c\u6570\u636e\u5e93\u7b49\u3002 settings.py ---- \u5305\u542b\u4e86\u9879\u76ee\u7684\u9ed8\u8ba4\u8bbe\u7f6e\uff0c\u5305\u62ec\u6570\u636e\u5e93\u4fe1\u606f\uff0c\u8c03\u8bd5\u6807\u5fd7\u4ee5\u53ca\u5176\u4ed6\u4e00\u4e9b\u5de5\u4f5c\u7684\u53d8\u91cf\u3002 urls.py ----- \u8d1f\u8d23\u628aURL\u6a21\u5f0f\u6620\u5c04\u5230\u5e94\u7528\u7a0b\u5e8f\u3002","title":"2\u3001\u521b\u5efa\u4e00\u4e2adjango project"},{"location":"#3mysite","text":"python manage.py startapp blog \u200b","title":"3\u3001\u5728mysite\u76ee\u5f55\u4e0b\u521b\u5efa\u5e94\u7528"},{"location":"#4django","text":"python manage.py runserver 8080 \u200b \u8fd9\u6837\u6211\u4eec\u7684django\u5c31\u542f\u52a8\u8d77\u6765\u4e86\uff01\u5f53\u6211\u4eec\u8bbf\u95ee\uff1ahttp://127.0.0.1:8080/\u65f6\u5c31\u53ef\u4ee5\u770b\u5230\uff1a \u200b","title":"4\u3001\u542f\u52a8django\u9879\u76ee"},{"location":"#django_1","text":"","title":"\u57fa\u4e8eDjango\u5b9e\u73b0\u7684\u4e00\u4e2a\u7b80\u5355\u793a\u4f8b"},{"location":"#url","text":"from django.contrib import admin from django.urls import path from app01 import views urlpatterns = [ path('admin/', admin.site.urls), path('index/',views.index), ]","title":"url\u63a7\u5236\u5668"},{"location":"#_7","text":"from django.shortcuts import render # Create your views here. def index(request): import datetime now=datetime.datetime.now() ctime=now.strftime(\"%Y-%m-%d %X\") return render(request,\"index.html\",{\"ctime\":ctime})","title":"\u89c6\u56fe"},{"location":"#_8","text":"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h4>\u5f53\u524d\u65f6\u95f4:{{ ctime }}</h4> </body> </html> \u6267\u884c\u6548\u679c\u5982\u4e0b\uff1a ```python #\u5c0f\u63d0\u793a: #settings.py \u914d\u7f6e \u5e94\u7528\u540d\u79f0 \u548ctemplates \u8def\u5f84 INSTALLED_APPS = [ 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', 'blog' # \u521b\u5efa\u7684\u5e94\u7528\u540d\u79f0 ] TEMPLATES = [ { 'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS': [os.path.join(BASE_DIR,'templates')], # templates \u76ee\u5f55\u8def\u5f84 'APP_DIRS': True, 'OPTIONS': { 'context_processors': [ 'django.template.context_processors.debug', 'django.template.context_processors.request', 'django.contrib.auth.context_processors.auth', 'django.contrib.messages.context_processors.messages', ], }, }, ] # \u5728pycharm \u4e2d\u5bfc\u5165\u8001\u5e08\u7684\u4ee3\u7801 # \u7528pycharm \u6253\u5f00\u7ec8\u7aef,\u5728\u9879\u76ee\u76ee\u5f55\u4e0b \u8fd0\u884c\u8fd0\u884c python3.9 manage.py runserver #\u914d\u7f6e\u5230pycharm\u4e2d\u76f4\u63a5\u70b9\u8fd0\u884c open ---> new window -- > edit Configurations... -->\u914d\u7f6e host 127.0.0.1 # \u6570\u636e\u5e93\u8fc1\u79fb python manage.py makemigrations # \u521b\u5efa\u6570\u636e\u5e93\u7684\u6620\u5c04\u5173\u7cfb python manage.py migrate # \u6839\u636e\u4e0a\u6761\u547d\u4ee4\u751f\u6210\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u5728\u6570\u636e\u5e93\u4e2d\u751f\u6210\u76f8\u5e94\u7684\u8868 ```","title":"\u6a21\u677f"},{"location":"#5-django-2urlconf","text":"URL\u914d\u7f6e(URLconf)\u5c31\u50cfDjango \u6240\u652f\u6491\u7f51\u7ad9\u7684\u76ee\u5f55\u3002\u5b83\u7684\u672c\u8d28\u662fURL\u4e0e\u8981\u4e3a\u8be5URL\u8c03\u7528\u7684\u89c6\u56fe\u51fd\u6570\u4e4b\u95f4\u7684\u6620\u5c04\u8868\uff1b\u4f60\u5c31\u662f\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u544a\u8bc9Django\uff0c\u5bf9\u4e8e\u5ba2\u6237\u7aef\u53d1\u6765\u7684\u67d0\u4e2aURL\u8c03\u7528\u54ea\u4e00\u6bb5\u903b\u8f91\u4ee3\u7801\u5bf9\u5e94\u6267\u884c\u3002","title":"5 Django-2\u7684\u8def\u7531\u5c42(URLconf)"},{"location":"#_9","text":"from django.urls import path,re_path from app01 import views urlpatterns = [ re_path(r'^articles/2003/$', views.special_case_2003), re_path(r'^articles/([0-9]{4})/$', views.year_archive), re_path(r'^articles/([0-9]{4})/([0-9]{2})/$', views.month_archive), re_path(r'^articles/([0-9]{4})/([0-9]{2})/([0-9]+)/$', views.article_detail), ] \u6ce8\u610f\uff1a \u82e5\u8981\u4eceURL \u4e2d\u6355\u83b7\u4e00\u4e2a\u503c\uff0c\u53ea\u9700\u8981\u5728\u5b83\u5468\u56f4\u653e\u7f6e\u4e00\u5bf9\u5706\u62ec\u53f7\u3002 \u4e0d\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a\u524d\u5bfc\u7684\u53cd\u659c\u6760\uff0c\u56e0\u4e3a\u6bcf\u4e2aURL \u90fd\u6709\u3002\u4f8b\u5982\uff0c\u5e94\u8be5\u662f ^articles \u800c\u4e0d\u662f ^/articles \u3002 \u6bcf\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u524d\u9762\u7684'r' \u662f\u53ef\u9009\u7684\u4f46\u662f\u5efa\u8bae\u52a0\u4e0a\u3002\u5b83\u544a\u8bc9Python \u8fd9\u4e2a\u5b57\u7b26\u4e32\u662f\u201c\u539f\u59cb\u7684\u201d \u2014\u2014 \u5b57\u7b26\u4e32\u4e2d\u4efb\u4f55\u5b57\u7b26\u90fd\u4e0d\u5e94\u8be5\u8f6c\u4e49 \u793a\u4f8b\uff1a ''' \u4e00\u4e9b\u8bf7\u6c42\u7684\u4f8b\u5b50\uff1a /articles/2005/03/ \u8bf7\u6c42\u5c06\u5339\u914d\u5217\u8868\u4e2d\u7684\u7b2c\u4e09\u4e2a\u6a21\u5f0f\u3002Django \u5c06\u8c03\u7528\u51fd\u6570views.month_archive(request, '2005', '03')\u3002 /articles/2005/3/ \u4e0d\u5339\u914d\u4efb\u4f55URL \u6a21\u5f0f\uff0c\u56e0\u4e3a\u5217\u8868\u4e2d\u7684\u7b2c\u4e09\u4e2a\u6a21\u5f0f\u8981\u6c42\u6708\u4efd\u5e94\u8be5\u662f\u4e24\u4e2a\u6570\u5b57\u3002 /articles/2003/ \u5c06\u5339\u914d\u5217\u8868\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6a21\u5f0f\u4e0d\u662f\u7b2c\u4e8c\u4e2a\uff0c\u56e0\u4e3a\u6a21\u5f0f\u6309\u987a\u5e8f\u5339\u914d\uff0c\u7b2c\u4e00\u4e2a\u4f1a\u9996\u5148\u6d4b\u8bd5\u662f\u5426\u5339\u914d\u3002\u8bf7\u50cf\u8fd9\u6837\u81ea\u7531\u63d2\u5165\u4e00\u4e9b\u7279\u6b8a\u7684\u60c5\u51b5\u6765\u63a2\u6d4b\u5339\u914d\u7684\u6b21\u5e8f\u3002 /articles/2003 \u4e0d\u5339\u914d\u4efb\u4f55\u4e00\u4e2a\u6a21\u5f0f\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u6a21\u5f0f\u8981\u6c42URL \u4ee5\u4e00\u4e2a\u53cd\u659c\u7ebf\u7ed3\u5c3e\u3002 /articles/2003/03/03/ \u5c06\u5339\u914d\u6700\u540e\u4e00\u4e2a\u6a21\u5f0f\u3002Django \u5c06\u8c03\u7528\u51fd\u6570views.article_detail(request, '2003', '03', '03')\u3002 '''","title":"\u7b80\u5355\u7684\u8def\u7531\u914d\u7f6e"},{"location":"#_10","text":"\u4e0a\u9762\u7684\u793a\u4f8b\u4f7f\u7528\u7b80\u5355\u7684\u3001\u6ca1\u6709\u547d\u540d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7ec4\uff08\u901a\u8fc7\u5706\u62ec\u53f7\uff09\u6765\u6355\u83b7URL \u4e2d\u7684\u503c\u5e76\u4ee5\u4f4d\u7f6e \u53c2\u6570\u4f20\u9012\u7ed9\u89c6\u56fe\u3002\u5728\u66f4\u9ad8\u7ea7\u7684\u7528\u6cd5\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u547d\u540d\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7ec4\u6765\u6355\u83b7URL \u4e2d\u7684\u503c\u5e76\u4ee5\u5173\u952e\u5b57 \u53c2\u6570\u4f20\u9012\u7ed9\u89c6\u56fe\u3002 \u5728Python \u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\uff0c\u547d\u540d\u6b63\u5219\u8868\u8fbe\u5f0f\u7ec4\u7684\u8bed\u6cd5\u662f (?P<name>pattern) \uff0c\u5176\u4e2d name \u662f\u7ec4\u7684\u540d\u79f0\uff0c pattern \u662f\u8981\u5339\u914d\u7684\u6a21\u5f0f\u3002 \u4e0b\u9762\u662f\u4ee5\u4e0aURLconf \u4f7f\u7528\u547d\u540d\u7ec4\u7684\u91cd\u5199\uff1a from django.urls import path,re_path from app01 import views urlpatterns = [ re_path(r'^articles/2003/$', views.special_case_2003), re_path(r'^articles/(?P<year>[0-9]{4})/$', views.year_archive), re_path(r'^articles/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/$', views.month_archive), re_path(r'^articles/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/(?P<day>[0-9]{2})/$', views.article_detail), ] \u8fd9\u4e2a\u5b9e\u73b0\u4e0e\u524d\u9762\u7684\u793a\u4f8b\u5b8c\u5168\u76f8\u540c\uff0c\u53ea\u6709\u4e00\u4e2a\u7ec6\u5fae\u7684\u5dee\u522b\uff1a\u6355\u83b7\u7684\u503c\u4f5c\u4e3a\u5173\u952e\u5b57\u53c2\u6570\u800c\u4e0d\u662f\u4f4d\u7f6e\u53c2\u6570\u4f20\u9012\u7ed9\u89c6\u56fe\u51fd\u6570\u3002\u4f8b\u5982\uff1a ''' /articles/2005/03/ \u8bf7\u6c42\u5c06\u8c03\u7528views.month_archive(request, year='2005', month='03')\u51fd\u6570\uff0c\u800c\u4e0d\u662fviews.month_archive(request, '2005', '03')\u3002 /articles/2003/03/03/ \u8bf7\u6c42\u5c06\u8c03\u7528\u51fd\u6570views.article_detail(request, year='2003', month='03', day='03')\u3002 ''' \u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u8fd9\u610f\u5473\u4f60\u7684URLconf \u4f1a\u66f4\u52a0\u660e\u6670\u4e14\u4e0d\u5bb9\u6613\u4ea7\u751f\u53c2\u6570\u987a\u5e8f\u95ee\u9898\u7684\u9519\u8bef \u2014\u2014 \u4f60\u53ef\u4ee5\u5728\u4f60\u7684\u89c6\u56fe\u51fd\u6570\u5b9a\u4e49\u4e2d\u91cd\u65b0\u5b89\u6392\u53c2\u6570\u7684\u987a\u5e8f\u3002\u5f53\u7136\uff0c\u8fd9\u4e9b\u597d\u5904\u662f\u4ee5\u7b80\u6d01\u4e3a\u4ee3\u4ef7\uff1b","title":"\u6709\u540d\u5206\u7ec4"},{"location":"#_11","text":"''' At any point, your urlpatterns can \u201cinclude\u201d other URLconf modules. This essentially \u201croots\u201d a set of URLs below other ones. ''' from django.urls import path,re_path,include from app01 import views urlpatterns = [ re_path(r'^admin/', admin.site.urls), re_path(r'^blog/', include('blog.urls')), # \u8fd9\u4e2ablog/\u8def\u5f84\u5206\u53d1\u7ed9 blog.urls \u6587\u4ef6\u91cc\u5904\u7406 re_path(r'^', include('blog.urls')), # \u8fd9\u4e2a\u8ddf\u76ee\u5f55\u8def\u5f84\u5206\u53d1\u7ed9 blog.urls \u6587\u4ef6\u91cc\u5904\u7406 # re_path(r\"^app02/\",include((\"app02.urls\",\"app02\"))), #\u7b2c\u4e8c\u4e2a\u53c2\u6570\u5bf9\u5e94\u7684\u662f\u5e94\u7528\u540d\u79f0-\u540d\u79f0\u7a7a\u95f4 ]","title":"\u5206\u53d1"},{"location":"#_12","text":"\u5728\u4f7f\u7528Django \u9879\u76ee\u65f6\uff0c\u4e00\u4e2a\u5e38\u89c1\u7684\u9700\u6c42\u662f\u83b7\u5f97URL \u7684\u6700\u7ec8\u5f62\u5f0f\uff0c\u4ee5\u7528\u4e8e\u5d4c\u5165\u5230\u751f\u6210\u7684\u5185\u5bb9\u4e2d\uff08\u89c6\u56fe\u4e2d\u548c\u663e\u793a\u7ed9\u7528\u6237\u7684URL\u7b49\uff09\u6216\u8005\u7528\u4e8e\u5904\u7406\u670d\u52a1\u5668\u7aef\u7684\u5bfc\u822a\uff08\u91cd\u5b9a\u5411\u7b49\uff09\u3002\u4eba\u4eec\u5f3a\u70c8\u5e0c\u671b\u4e0d\u8981\u786c\u7f16\u7801\u8fd9\u4e9bURL\uff08\u8d39\u529b\u3001\u4e0d\u53ef\u6269\u5c55\u4e14\u5bb9\u6613\u4ea7\u751f\u9519\u8bef\uff09\u6216\u8005\u8bbe\u8ba1\u4e00\u79cd\u4e0eURLconf \u6beb\u4e0d\u76f8\u5173\u7684\u4e13\u95e8\u7684URL \u751f\u6210\u673a\u5236\uff0c\u56e0\u4e3a\u8fd9\u6837\u5bb9\u6613\u5bfc\u81f4\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u4ea7\u751f\u8fc7\u671f\u7684URL\u3002 \u5728\u9700\u8981URL \u7684\u5730\u65b9\uff0c\u5bf9\u4e8e\u4e0d\u540c\u5c42\u7ea7\uff0cDjango \u63d0\u4f9b\u4e0d\u540c\u7684\u5de5\u5177\u7528\u4e8eURL \u53cd\u67e5\uff1a \u5728\u6a21\u677f\u4e2d\uff1a\u4f7f\u7528url \u6a21\u677f\u6807\u7b7e\u3002 \u5728Python \u4ee3\u7801\u4e2d\uff1a\u4f7f\u7528 from django.urls import reverse()\u51fd\u6570 urls.py: from django.conf.urls import url from . import views urlpatterns = [ #... name \u662f\u8d77\u4e86\u4e00\u4e2a\u522b\u540d, \u5728\u6a21\u677f\u4e2d\u5f15\u7528 {% url 'news-year-archive' %} re_path(r'^articles/([0-9]{4})/$', views.year_archive, name='news-year-archive'), #... ] \u5728\u6a21\u677f\u4e2d\uff1a <a href=\"{% url 'news-year-archive' 2012 %}\">2012 Archive</a> # \u53cd\u5411\u89e3\u6790 <ul> {% for yearvar in year_list %} <li><a href=\"{% url 'news-year-archive' yearvar %}\">{{ yearvar }} Archive</a></li> {% endfor %} </ul> \u5728python\u4e2d\uff1a from django.urls import reverse #\u5bfc\u5165\u53cd\u5411\u89e3\u6790\u51fd\u6570 from django.http import HttpResponseRedirect def redirect_to_year(request): # ... year = 2006 # ... return HttpResponseRedirect(reverse('news-year-archive', args=(year,))) # \u540credirect(\"/path/\") \u5f53\u547d\u540d\u4f60\u7684URL \u6a21\u5f0f\u65f6\uff0c\u8bf7\u786e\u4fdd\u4f7f\u7528\u7684\u540d\u79f0\u4e0d\u4f1a\u4e0e\u5176\u5b83\u5e94\u7528\u4e2d\u540d\u79f0\u51b2\u7a81\u3002\u5982\u679c\u4f60\u7684URL \u6a21\u5f0f\u53eb\u505a comment \uff0c\u800c\u53e6\u5916\u4e00\u4e2a\u5e94\u7528\u4e2d\u4e5f\u6709\u4e00\u4e2a\u540c\u6837\u7684\u540d\u79f0\uff0c\u5f53\u4f60\u5728\u6a21\u677f\u4e2d\u4f7f\u7528\u8fd9\u4e2a\u540d\u79f0\u7684\u65f6\u5019\u4e0d\u80fd\u4fdd\u8bc1\u5c06\u63d2\u5165\u54ea\u4e2aURL\u3002\u5728URL \u540d\u79f0\u4e2d\u52a0\u4e0a\u4e00\u4e2a\u524d\u7f00\uff0c\u6bd4\u5982\u5e94\u7528\u7684\u540d\u79f0\uff0c\u5c06\u51cf\u5c11\u51b2\u7a81\u7684\u53ef\u80fd\u3002\u6211\u4eec\u5efa\u8bae\u4f7f\u7528 myapp-comment \u800c\u4e0d\u662f comment \u3002","title":"\u53cd\u5411\u89e3\u6790"},{"location":"#_13","text":"\u547d\u540d\u7a7a\u95f4\uff08\u82f1\u8bed\uff1aNamespace\uff09\u662f\u8868\u793a\u6807\u8bc6\u7b26\u7684\u53ef\u89c1\u8303\u56f4\u3002\u4e00\u4e2a\u6807\u8bc6\u7b26\u53ef\u5728\u591a\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u5b9a\u4e49\uff0c\u5b83\u5728\u4e0d\u540c\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u542b\u4e49\u662f\u4e92\u4e0d\u76f8\u5e72\u7684\u3002\u8fd9\u6837\uff0c\u5728\u4e00\u4e2a\u65b0\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u53ef\u5b9a\u4e49\u4efb\u4f55\u6807\u8bc6\u7b26\uff0c\u5b83\u4eec\u4e0d\u4f1a\u4e0e\u4efb\u4f55\u5df2\u6709\u7684\u6807\u8bc6\u7b26\u53d1\u751f\u51b2\u7a81\uff0c\u56e0\u4e3a\u5df2\u6709\u7684\u5b9a\u4e49\u90fd\u5904\u4e8e\u5176\u5b83\u547d\u540d\u7a7a\u95f4\u4e2d\u3002 \u7531\u4e8ename\u6ca1\u6709\u4f5c\u7528\u57df\uff0cDjango\u5728\u53cd\u89e3URL\u65f6\uff0c\u4f1a\u5728\u9879\u76ee\u5168\u5c40\u987a\u5e8f\u641c\u7d22\uff0c\u5f53\u67e5\u627e\u5230\u7b2c\u4e00\u4e2aname\u6307\u5b9aURL\u65f6\uff0c\u7acb\u5373\u8fd4\u56de \u6211\u4eec\u5728\u5f00\u53d1\u9879\u76ee\u65f6\uff0c\u4f1a\u7ecf\u5e38\u4f7f\u7528name\u5c5e\u6027\u53cd\u89e3\u51faURL\uff0c\u5f53\u4e0d\u5c0f\u5fc3\u5728\u4e0d\u540c\u7684app\u7684urls\u4e2d\u5b9a\u4e49\u76f8\u540c\u7684name\u65f6\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4URL\u53cd\u89e3\u9519\u8bef\uff0c\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u4e8b\u60c5\u53d1\u751f\uff0c\u5f15\u5165\u4e86\u547d\u540d\u7a7a\u95f4\u3002","title":"\u540d\u79f0\u7a7a\u95f4"},{"location":"#projecturlspy","text":"urlpatterns = [ re_path(r'^admin/', admin.site.urls), #re_path(r'^app01/', include(\"app01.urls\",namespace=\"app01\")), #\u62a5\u9519 #re_path(r'^app02/', include(\"app02.urls\",namespace=\"app02\")), # re_path(r'^app01/', include((\"app01.urls\",\"app01\"))), #\u6307\u5b9a\u540d\u79f0\u7a7a\u95f4 app01 re_path(r'^app02/', include((\"app02.urls\",\"app02\"))), ]","title":"project\u7684urls.py:"},{"location":"#app01urls","text":"urlpatterns = [ re_path(r'^index/', index,name=\"index\"), # name \u522b\u540d ]","title":"app01.urls:"},{"location":"#app02urls","text":"urlpatterns = [ re_path(r'^index/', index,name=\"index\"), # name \u522b\u540d ]","title":"app02.urls:"},{"location":"#app01views","text":"from django.core.urlresolvers import reverse def index(request): return HttpResponse(reverse(\"app01:index\")) #reverse\u53cd\u5411\u89e3\u6790(\"\u540d\u79f0\u7a7a\u95f4app01\u4e0b\u7684index\")","title":"app01.views"},{"location":"#app02views","text":"from django.core.urlresolvers import reverse def index(request): return HttpResponse(reverse(\"app02:index\")) # \u6307\u5b9a\u540d\u79f0\u7a7a\u95f4app02 \u4e0b\u7684index","title":"app02.views"},{"location":"#django20path","text":"\u601d\u8003\u60c5\u51b5\u5982\u4e0b\uff1a urlpatterns = [ re_path('articles/(?P<year>[0-9]{4})/', year_archive), re_path('article/(?P<article_id>[a-zA-Z0-9]+)/detail/', detail_view), re_path('articles/(?P<article_id>[a-zA-Z0-9]+)/edit/', edit_view), re_path('articles/(?P<article_id>[a-zA-Z0-9]+)/delete/', delete_view), ] \u8003\u8651\u4e0b\u8fd9\u6837\u7684\u4e24\u4e2a\u95ee\u9898\uff1a \u7b2c\u4e00\u4e2a\u95ee\u9898\uff0c\u51fd\u6570 year_archive \u4e2dyear\u53c2\u6570\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\uff0c\u56e0\u6b64\u9700\u8981\u5148\u8f6c\u5316\u4e3a\u6574\u6570\u7c7b\u578b\u7684\u53d8\u91cf\u503c\uff0c\u5f53\u7136 year=int(year) \u4e0d\u4f1a\u6709\u8bf8\u5982\u5982TypeError\u6216\u8005ValueError\u7684\u5f02\u5e38\u3002\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u5728url\u4e2d\uff0c\u4f7f\u5f97\u8fd9\u4e00\u8f6c\u5316\u6b65\u9aa4\u53ef\u4ee5\u7531Django\u81ea\u52a8\u5b8c\u6210\uff1f \u7b2c\u4e8c\u4e2a\u95ee\u9898\uff0c\u4e09\u4e2a\u8def\u7531\u4e2darticle_id\u90fd\u662f\u540c\u6837\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u4f46\u662f\u4f60\u9700\u8981\u5199\u4e09\u904d\uff0c\u5f53\u4e4b\u540earticle_id\u89c4\u5219\u6539\u53d8\u540e\uff0c\u9700\u8981\u540c\u65f6\u4fee\u6539\u4e09\u5904\u4ee3\u7801\uff0c\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ea\u9700\u4fee\u6539\u4e00\u5904\u5373\u53ef\uff1f \u5728Django2.0\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528 path \u89e3\u51b3\u4ee5\u4e0a\u7684\u4e24\u4e2a\u95ee\u9898\u3002","title":"django2.0\u7248\u7684path"},{"location":"#_14","text":"\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\uff1a from django.urls import path from . import views urlpatterns = [ path('articles/2003/', views.special_case_2003), # \u5185\u7f6e\u8f6c\u6362\u5668\u8f6c\u6362\u6210int\u7c7b\u578b<int:year> \u540c\u65f6\u4e5f\u662f\u6709\u540d\u5206\u7ec4 path('articles/<int:year>/', views.year_archive), path('articles/<int:year>/<int:month>/', views.month_archive), path('articles/<int:year>/<int:month>/<slug>/', views.article_detail), ] \u57fa\u672c\u89c4\u5219\uff1a \u4f7f\u7528\u5c16\u62ec\u53f7( <> )\u4eceurl\u4e2d\u6355\u83b7\u503c\u3002 \u6355\u83b7\u503c\u4e2d\u53ef\u4ee5\u5305\u542b\u4e00\u4e2a\u8f6c\u5316\u5668\u7c7b\u578b\uff08converter type\uff09\uff0c\u6bd4\u5982\u4f7f\u7528 <int:name> \u6355\u83b7\u4e00\u4e2a\u6574\u6570\u53d8\u91cf\u3002\u82e5\u679c\u6ca1\u6709\u8f6c\u5316\u5668\uff0c\u5c06\u5339\u914d\u4efb\u4f55\u5b57\u7b26\u4e32\uff0c\u5f53\u7136\u4e5f\u5305\u62ec\u4e86 / \u5b57\u7b26\u3002 \u65e0\u9700\u6dfb\u52a0\u524d\u5bfc\u659c\u6760\u3002 \u4ee5\u4e0b\u662f\u6839\u636e 2.0\u5b98\u65b9\u6587\u6863 \u800c\u6574\u7406\u7684\u793a\u4f8b\u5206\u6790\u8868\uff1a","title":"\u57fa\u672c\u793a\u4f8b"},{"location":"#path","text":"\u6587\u6863\u539f\u6587\u662fPath converters\uff0c\u6682\u4e14\u7ffb\u8bd1\u4e3a\u8f6c\u5316\u5668\u3002 Django\u9ed8\u8ba4\u652f\u6301\u4ee5\u4e0b5\u4e2a\u8f6c\u5316\u5668\uff1a str,\u5339\u914d\u9664\u4e86\u8def\u5f84\u5206\u9694\u7b26\uff08 / \uff09\u4e4b\u5916\u7684\u975e\u7a7a\u5b57\u7b26\u4e32\uff0c\u8fd9\u662f\u9ed8\u8ba4\u7684\u5f62\u5f0f int,\u5339\u914d\u6b63\u6574\u6570\uff0c\u5305\u542b0\u3002 slug,\u5339\u914d\u5b57\u6bcd\u3001\u6570\u5b57\u4ee5\u53ca\u6a2a\u6760\u3001\u4e0b\u5212\u7ebf\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002 uuid,\u5339\u914d\u683c\u5f0f\u5316\u7684uuid\uff0c\u5982 075194d3-6885-417e-a8a8-6c931e272f00\u3002 path,\u5339\u914d\u4efb\u4f55\u975e\u7a7a\u5b57\u7b26\u4e32\uff0c\u5305\u542b\u4e86\u8def\u5f84\u5206\u9694\u7b26","title":"path\u8f6c\u5316\u5668"},{"location":"#_15","text":"\u5bf9\u4e8e\u4e00\u4e9b\u590d\u6742\u6216\u8005\u590d\u7528\u7684\u9700\u8981\uff0c\u53ef\u4ee5\u5b9a\u4e49\u81ea\u5df1\u7684\u8f6c\u5316\u5668\u3002\u8f6c\u5316\u5668\u662f\u4e00\u4e2a\u7c7b\u6216\u63a5\u53e3\uff0c\u5b83\u7684\u8981\u6c42\u6709\u4e09\u70b9\uff1a regex \u7c7b\u5c5e\u6027\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b to_python(self, value) \u65b9\u6cd5\uff0cvalue\u662f\u7531\u7c7b\u5c5e\u6027 regex \u6240\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32\uff0c\u8fd4\u56de\u5177\u4f53\u7684Python\u53d8\u91cf\u503c\uff0c\u4ee5\u4f9bDjango\u4f20\u9012\u5230\u5bf9\u5e94\u7684\u89c6\u56fe\u51fd\u6570\u4e2d\u3002 to_url(self, value) \u65b9\u6cd5\uff0c\u548c to_python \u76f8\u53cd\uff0cvalue\u662f\u4e00\u4e2a\u5177\u4f53\u7684Python\u53d8\u91cf\u503c\uff0c\u8fd4\u56de\u5176\u5b57\u7b26\u4e32\uff0c\u901a\u5e38\u7528\u4e8eurl\u53cd\u5411\u5f15\u7528\u3002 \u4f8b\u5b50\uff1a # \u6ce8\u518c\u6587\u4ef6\u5efa\u8bae\u5199\u5728 \u5e94\u7528\u76ee\u5f55\u91cc \u5199urlconvert.py class FourDigitYearConverter: regex = '[0-9]{4}' # regex \u56fa\u5b9a\u5c5e\u6027\u5199\u6cd5 def to_python(self, value): return int(value) def to_url(self, value): # \u53cd\u5411\u89e3\u6790 return '%04d' % value \u4f7f\u7528 register_converter \u5c06\u5176\u6ce8\u518c\u5230URL\u914d\u7f6e\u4e2d\uff1a # \u5728\u4e3b\u9879\u76ee\u7684 urls.py\u6ce8\u518c from django.urls import register_converter, path # \u5bfc\u5165 register_converter from app01.urlconvert import FourDigitYearConverter # \u5bfc\u5165app01\u91cc\u5199\u7684\u8f6c\u5316\u5668\u65b9\u6cd5 from . import converters, views register_converter(converters.FourDigitYearConverter, 'yyyy') register_converter(FourDigitYearConverter, 'yy') # \u6ce8\u518c\u8f6c\u5316\u5668\u65b9\u6cd5 \u522b\u540d yy urlpatterns = [ path('articles/2003/', views.special_case_2003), path('articles/<yy:year>/', views.year_archive), # yy\u662f\u8c03\u7528\u7684\u81ea\u5b9a\u4e49\u7684\u8f6c\u6362\u5668 ... ]","title":"\u6ce8\u518c\u81ea\u5b9a\u4e49\u8f6c\u5316\u5668"},{"location":"#6-django","text":"","title":"6 Django\u7684\u89c6\u56fe\u5c42"},{"location":"#_16","text":"\u4e00\u4e2a\u89c6\u56fe\u51fd\u6570\uff0c\u7b80\u79f0\u89c6\u56fe\uff0c\u662f\u4e00\u4e2a\u7b80\u5355\u7684Python \u51fd\u6570\uff0c\u5b83\u63a5\u53d7Web\u8bf7\u6c42\u5e76\u4e14\u8fd4\u56deWeb\u54cd\u5e94\u3002\u54cd\u5e94\u53ef\u4ee5\u662f\u4e00\u5f20\u7f51\u9875\u7684HTML\u5185\u5bb9\uff0c\u4e00\u4e2a\u91cd\u5b9a\u5411\uff0c\u4e00\u4e2a404\u9519\u8bef\uff0c\u4e00\u4e2aXML\u6587\u6863\uff0c\u6216\u8005\u4e00\u5f20\u56fe\u7247. . . \u662f\u4efb\u4f55\u4e1c\u897f\u90fd\u53ef\u4ee5\u3002\u65e0\u8bba\u89c6\u56fe\u672c\u8eab\u5305\u542b\u4ec0\u4e48\u903b\u8f91\uff0c\u90fd\u8981\u8fd4\u56de\u54cd\u5e94\u3002\u4ee3\u7801\u5199\u5728\u54ea\u91cc\u4e5f\u65e0\u6240\u8c13\uff0c\u53ea\u8981\u5b83\u5728\u4f60\u7684Python\u76ee\u5f55\u4e0b\u9762\u3002\u9664\u6b64\u4e4b\u5916\u6ca1\u6709\u66f4\u591a\u7684\u8981\u6c42\u4e86\u2014\u2014\u53ef\u4ee5\u8bf4\u201c\u6ca1\u6709\u4ec0\u4e48\u795e\u5947\u7684\u5730\u65b9\u201d\u3002\u4e3a\u4e86\u5c06\u4ee3\u7801\u653e\u5728\u67d0\u5904\uff0c\u7ea6\u5b9a\u662f\u5c06\u89c6\u56fe\u653e\u7f6e\u5728\u9879\u76ee\u6216\u5e94\u7528\u7a0b\u5e8f\u76ee\u5f55\u4e2d\u7684\u540d\u4e3a views.py \u7684\u6587\u4ef6\u4e2d\u3002 \u4e0b\u9762\u662f\u4e00\u4e2a\u8fd4\u56de\u5f53\u524d\u65e5\u671f\u548c\u65f6\u95f4\u4f5c\u4e3aHTML\u6587\u6863\u7684\u89c6\u56fe\uff1a from django.shortcuts import render, HttpResponse, HttpResponseRedirect, redirect import datetime def current_datetime(request): now = datetime.datetime.now() html = \"<html><body>It is now %s.</body></html>\" % now return HttpResponse(html) \u8ba9\u6211\u4eec\u9010\u884c\u9605\u8bfb\u4e0a\u9762\u7684\u4ee3\u7801\uff1a \u9996\u5148\uff0c\u6211\u4eec\u4ece django.shortcuts \u6a21\u5757\u5bfc\u5165\u4e86 HttpResponse \u7c7b\uff0c\u4ee5\u53caPython\u7684 datetime \u5e93\u3002 \u63a5\u7740\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86 current_datetime \u51fd\u6570\u3002\u5b83\u5c31\u662f\u89c6\u56fe\u51fd\u6570\u3002\u6bcf\u4e2a\u89c6\u56fe\u51fd\u6570\u90fd\u4f7f\u7528 HttpRequest \u5bf9\u8c61\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u5e76\u4e14\u901a\u5e38\u79f0\u4e4b\u4e3a request \u3002 \u6ce8\u610f,\u89c6\u56fe\u51fd\u6570\u7684\u540d\u79f0\u5e76\u4e0d\u91cd\u8981\uff1b\u4e0d\u9700\u8981\u7528\u4e00\u4e2a\u7edf\u4e00\u7684\u547d\u540d\u65b9\u5f0f\u6765\u547d\u540d\uff0c\u4ee5\u4fbf\u8ba9Django\u8bc6\u522b\u5b83\u3002\u6211\u4eec\u5c06\u5176\u547d\u540d\u4e3a current_datetime \uff0c\u662f\u56e0\u4e3a\u8fd9\u4e2a\u540d\u79f0\u80fd\u591f\u7cbe\u786e\u5730\u53cd\u6620\u51fa\u5b83\u7684\u529f\u80fd\u3002 \u8fd9\u4e2a\u89c6\u56fe\u4f1a\u8fd4\u56de\u4e00\u4e2a HttpResponse \u5bf9\u8c61\uff0c\u5176\u4e2d\u5305\u542b\u751f\u6210\u7684\u54cd\u5e94\u3002\u6bcf\u4e2a\u89c6\u56fe\u51fd\u6570\u90fd\u8d1f\u8d23\u8fd4\u56de\u4e00\u4e2a HttpResponse \u5bf9\u8c61\u3002","title":"\u89c6\u56fe\u51fd\u6570"},{"location":"#_17","text":"\u89c6\u56fe\u5c42\uff0c\u719f\u7ec3\u638c\u63e1\u4e24\u4e2a\u5bf9\u8c61\u5373\u53ef\uff1a\u8bf7\u6c42\u5bf9\u8c61(request)\u548c\u54cd\u5e94\u5bf9\u8c61(HttpResponse)","title":""},{"location":"#httprequest","text":"","title":"HttpRequest\u5bf9\u8c61"},{"location":"#request","text":"django\u5c06\u8bf7\u6c42\u62a5\u6587\u4e2d\u7684\u8bf7\u6c42\u884c\u3001\u9996\u90e8\u4fe1\u606f\u3001\u5185\u5bb9\u4e3b\u4f53\u5c01\u88c5\u6210 HttpRequest \u7c7b\u4e2d\u7684\u5c5e\u6027\u3002 \u9664\u4e86\u7279\u6b8a\u8bf4\u660e\u7684\u4e4b\u5916\uff0c\u5176\u4ed6\u5747\u4e3a\u53ea\u8bfb\u7684\u3002 /* 1.HttpRequest.GET \u3000\u3000\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7684\u5bf9\u8c61\uff0c\u5305\u542b HTTP GET \u7684\u6240\u6709\u53c2\u6570\u3002\u8be6\u60c5\u8bf7\u53c2\u8003 QueryDict \u5bf9\u8c61\u3002 2.HttpRequest.POST \u3000\u3000\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7684\u5bf9\u8c61\uff0c\u5982\u679c\u8bf7\u6c42\u4e2d\u5305\u542b\u8868\u5355\u6570\u636e\uff0c\u5219\u5c06\u8fd9\u4e9b\u6570\u636e\u5c01\u88c5\u6210 QueryDict \u5bf9\u8c61\u3002 \u3000\u3000POST \u8bf7\u6c42\u53ef\u4ee5\u5e26\u6709\u7a7a\u7684 POST \u5b57\u5178 \u2014\u2014 \u5982\u679c\u901a\u8fc7 HTTP POST \u65b9\u6cd5\u53d1\u9001\u4e00\u4e2a\u8868\u5355\uff0c\u4f46\u662f\u8868\u5355\u4e2d\u6ca1\u6709\u4efb\u4f55\u7684\u6570\u636e\uff0cQueryDict \u5bf9\u8c61\u4f9d\u7136\u4f1a\u88ab\u521b\u5efa\u3002 \u56e0\u6b64\uff0c\u4e0d\u5e94\u8be5\u4f7f\u7528 if request.POST \u6765\u68c0\u67e5\u4f7f\u7528\u7684\u662f\u5426\u662fPOST \u65b9\u6cd5\uff1b\u5e94\u8be5\u4f7f\u7528 if request.method == \"POST\" \u3000\u3000\u53e6\u5916\uff1a\u5982\u679c\u4f7f\u7528 POST \u4e0a\u4f20\u6587\u4ef6\u7684\u8bdd\uff0c\u6587\u4ef6\u4fe1\u606f\u5c06\u5305\u542b\u5728 FILES \u5c5e\u6027\u4e2d\u3002 \u6ce8\u610f\uff1a\u952e\u503c\u5bf9\u7684\u503c\u662f\u591a\u4e2a\u7684\u65f6\u5019,\u6bd4\u5982checkbox\u7c7b\u578b\u7684input\u6807\u7b7e\uff0cselect\u6807\u7b7e\uff0c\u9700\u8981\u7528\uff1a request.POST.getlist(\"hobby\") 3.HttpRequest.body \u3000\u3000\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ee3\u8868\u8bf7\u6c42\u62a5\u6587\u7684\u4e3b\u4f53\u3002\u5728\u5904\u7406\u975e HTTP \u5f62\u5f0f\u7684\u62a5\u6587\u65f6\u975e\u5e38\u6709\u7528\uff0c\u4f8b\u5982\uff1a\u4e8c\u8fdb\u5236\u56fe\u7247\u3001XML,Json\u7b49\u3002 \u3000\u3000\u4f46\u662f\uff0c\u5982\u679c\u8981\u5904\u7406\u8868\u5355\u6570\u636e\u7684\u65f6\u5019\uff0c\u63a8\u8350\u8fd8\u662f\u4f7f\u7528 HttpRequest.POST \u3002 4.HttpRequest.path \u3000\u3000\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u8bf7\u6c42\u7684\u8def\u5f84\u7ec4\u4ef6\uff08\u4e0d\u542b\u57df\u540d\uff09\u3002 \u3000\u3000\u4f8b\u5982\uff1a\"/music/bands/the_beatles/\" 5.HttpRequest.method \u3000\u3000\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u8bf7\u6c42\u4f7f\u7528\u7684HTTP \u65b9\u6cd5\u3002\u5fc5\u987b\u4f7f\u7528\u5927\u5199\u3002 \u3000\u3000\u4f8b\u5982\uff1a\"GET\"\u3001\"POST\" 6.HttpRequest.encoding \u3000\u3000\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u63d0\u4ea4\u7684\u6570\u636e\u7684\u7f16\u7801\u65b9\u5f0f\uff08\u5982\u679c\u4e3a None \u5219\u8868\u793a\u4f7f\u7528 DEFAULT_CHARSET \u7684\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u4e3a 'utf-8'\uff09\u3002 \u8fd9\u4e2a\u5c5e\u6027\u662f\u53ef\u5199\u7684\uff0c\u4f60\u53ef\u4ee5\u4fee\u6539\u5b83\u6765\u4fee\u6539\u8bbf\u95ee\u8868\u5355\u6570\u636e\u4f7f\u7528\u7684\u7f16\u7801\u3002 \u63a5\u4e0b\u6765\u5bf9\u5c5e\u6027\u7684\u4efb\u4f55\u8bbf\u95ee\uff08\u4f8b\u5982\u4ece GET \u6216 POST \u4e2d\u8bfb\u53d6\u6570\u636e\uff09\u5c06\u4f7f\u7528\u65b0\u7684 encoding \u503c\u3002 \u5982\u679c\u4f60\u77e5\u9053\u8868\u5355\u6570\u636e\u7684\u7f16\u7801\u4e0d\u662f DEFAULT_CHARSET \uff0c\u5219\u4f7f\u7528\u5b83\u3002 7.HttpRequest.META \u3000\u3000\u4e00\u4e2a\u6807\u51c6\u7684Python \u5b57\u5178\uff0c\u5305\u542b\u6240\u6709\u7684HTTP \u9996\u90e8\u3002\u5177\u4f53\u7684\u5934\u90e8\u4fe1\u606f\u53d6\u51b3\u4e8e\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\uff0c\u4e0b\u9762\u662f\u4e00\u4e9b\u793a\u4f8b\uff1a CONTENT_LENGTH \u2014\u2014 \u8bf7\u6c42\u7684\u6b63\u6587\u7684\u957f\u5ea6\uff08\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff09\u3002 CONTENT_TYPE \u2014\u2014 \u8bf7\u6c42\u7684\u6b63\u6587\u7684MIME \u7c7b\u578b\u3002 HTTP_ACCEPT \u2014\u2014 \u54cd\u5e94\u53ef\u63a5\u6536\u7684Content-Type\u3002 HTTP_ACCEPT_ENCODING \u2014\u2014 \u54cd\u5e94\u53ef\u63a5\u6536\u7684\u7f16\u7801\u3002 HTTP_ACCEPT_LANGUAGE \u2014\u2014 \u54cd\u5e94\u53ef\u63a5\u6536\u7684\u8bed\u8a00\u3002 HTTP_HOST \u2014\u2014 \u5ba2\u670d\u7aef\u53d1\u9001\u7684HTTP Host \u5934\u90e8\u3002 HTTP_REFERER \u2014\u2014 Referring \u9875\u9762\u3002 HTTP_USER_AGENT \u2014\u2014 \u5ba2\u6237\u7aef\u7684user-agent \u5b57\u7b26\u4e32\u3002 QUERY_STRING \u2014\u2014 \u5355\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684\u67e5\u8be2\u5b57\u7b26\u4e32\uff08\u672a\u89e3\u6790\u8fc7\u7684\u5f62\u5f0f\uff09\u3002 REMOTE_ADDR \u2014\u2014 \u5ba2\u6237\u7aef\u7684IP \u5730\u5740\u3002 REMOTE_HOST \u2014\u2014 \u5ba2\u6237\u7aef\u7684\u4e3b\u673a\u540d\u3002 REMOTE_USER \u2014\u2014 \u670d\u52a1\u5668\u8ba4\u8bc1\u540e\u7684\u7528\u6237\u3002 REQUEST_METHOD \u2014\u2014 \u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u4f8b\u5982\"GET\" \u6216\"POST\"\u3002 SERVER_NAME \u2014\u2014 \u670d\u52a1\u5668\u7684\u4e3b\u673a\u540d\u3002 SERVER_PORT \u2014\u2014 \u670d\u52a1\u5668\u7684\u7aef\u53e3\uff08\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32\uff09\u3002 \u3000\u3000\u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u5230\uff0c\u9664 CONTENT_LENGTH \u548c CONTENT_TYPE \u4e4b\u5916\uff0c\u8bf7\u6c42\u4e2d\u7684\u4efb\u4f55 HTTP \u9996\u90e8\u8f6c\u6362\u4e3a META \u7684\u952e\u65f6\uff0c \u90fd\u4f1a\u5c06\u6240\u6709\u5b57\u6bcd\u5927\u5199\u5e76\u5c06\u8fde\u63a5\u7b26\u66ff\u6362\u4e3a\u4e0b\u5212\u7ebf\u6700\u540e\u52a0\u4e0a HTTP_ \u524d\u7f00\u3002 \u6240\u4ee5\uff0c\u4e00\u4e2a\u53eb\u505a X-Bender \u7684\u5934\u90e8\u5c06\u8f6c\u6362\u6210 META \u4e2d\u7684 HTTP_X_BENDER \u952e\u3002 8.HttpRequest.FILES \u3000\u3000\u4e00\u4e2a\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7684\u5bf9\u8c61\uff0c\u5305\u542b\u6240\u6709\u7684\u4e0a\u4f20\u6587\u4ef6\u4fe1\u606f\u3002 FILES \u4e2d\u7684\u6bcf\u4e2a\u952e\u4e3a<input type=\"file\" name=\"\" /> \u4e2d\u7684name\uff0c\u503c\u5219\u4e3a\u5bf9\u5e94\u7684\u6570\u636e\u3002 \u3000\u3000\u6ce8\u610f\uff0cFILES \u53ea\u6709\u5728\u8bf7\u6c42\u7684\u65b9\u6cd5\u4e3aPOST \u4e14\u63d0\u4ea4\u7684<form> \u5e26\u6709enctype=\"multipart/form-data\" \u7684\u60c5\u51b5\u4e0b\u624d\u4f1a \u5305\u542b\u6570\u636e\u3002\u5426\u5219\uff0cFILES \u5c06\u4e3a\u4e00\u4e2a\u7a7a\u7684\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7684\u5bf9\u8c61\u3002 9.HttpRequest.COOKIES \u3000\u3000\u4e00\u4e2a\u6807\u51c6\u7684Python \u5b57\u5178\uff0c\u5305\u542b\u6240\u6709\u7684cookie\u3002\u952e\u548c\u503c\u90fd\u4e3a\u5b57\u7b26\u4e32\u3002 10.HttpRequest.session \u3000\u3000\u4e00\u4e2a\u65e2\u53ef\u8bfb\u53c8\u53ef\u5199\u7684\u7c7b\u4f3c\u4e8e\u5b57\u5178\u7684\u5bf9\u8c61\uff0c\u8868\u793a\u5f53\u524d\u7684\u4f1a\u8bdd\u3002\u53ea\u6709\u5f53Django \u542f\u7528\u4f1a\u8bdd\u7684\u652f\u6301\u65f6\u624d\u53ef\u7528\u3002 \u5b8c\u6574\u7684\u7ec6\u8282\u53c2\u89c1\u4f1a\u8bdd\u7684\u6587\u6863\u3002 11.HttpRequest.user(\u7528\u6237\u8ba4\u8bc1\u7ec4\u4ef6\u4e0b\u4f7f\u7528) \u3000\u3000\u4e00\u4e2a AUTH_USER_MODEL \u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u8868\u793a\u5f53\u524d\u767b\u5f55\u7684\u7528\u6237\u3002 \u3000\u3000\u5982\u679c\u7528\u6237\u5f53\u524d\u6ca1\u6709\u767b\u5f55\uff0cuser \u5c06\u8bbe\u7f6e\u4e3a django.contrib.auth.models.AnonymousUser \u7684\u4e00\u4e2a\u5b9e\u4f8b\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7 is_authenticated() \u533a\u5206\u5b83\u4eec\u3002 \u4f8b\u5982\uff1a if request.user.is_authenticated(): # Do something for logged-in users. else: # Do something for anonymous users. \u3000\u3000user \u53ea\u6709\u5f53Django \u542f\u7528 AuthenticationMiddleware \u4e2d\u95f4\u4ef6\u65f6\u624d\u53ef\u7528\u3002 ------------------------------------------------------------------------------------- \u533f\u540d\u7528\u6237 class models.AnonymousUser django.contrib.auth.models.AnonymousUser \u7c7b\u5b9e\u73b0\u4e86django.contrib.auth.models.User \u63a5\u53e3\uff0c\u4f46\u5177\u6709\u4e0b\u9762\u51e0\u4e2a\u4e0d\u540c\u70b9\uff1a id \u6c38\u8fdc\u4e3aNone\u3002 username \u6c38\u8fdc\u4e3a\u7a7a\u5b57\u7b26\u4e32\u3002 get_username() \u6c38\u8fdc\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\u3002 is_staff \u548c is_superuser \u6c38\u8fdc\u4e3aFalse\u3002 is_active \u6c38\u8fdc\u4e3a False\u3002 groups \u548c user_permissions \u6c38\u8fdc\u4e3a\u7a7a\u3002 is_anonymous() \u8fd4\u56deTrue \u800c\u4e0d\u662fFalse\u3002 is_authenticated() \u8fd4\u56deFalse \u800c\u4e0d\u662fTrue\u3002 set_password()\u3001check_password()\u3001save() \u548cdelete() \u5f15\u53d1 NotImplementedError\u3002 New in Django 1.8: \u65b0\u589e AnonymousUser.get_username() \u4ee5\u66f4\u597d\u5730\u6a21\u62df django.contrib.auth.models.User\u3002 */","title":"request\u5c5e\u6027"},{"location":"#request_1","text":"/* 1.HttpRequest.get_full_path() \u3000\u3000\u8fd4\u56de path\uff0c\u5982\u679c\u53ef\u4ee5\u5c06\u52a0\u4e0a\u67e5\u8be2\u5b57\u7b26\u4e32\u3002 \u3000\u3000\u4f8b\u5982\uff1a\"/music/bands/the_beatles/?print=true\" 2.HttpRequest.is_ajax() \u3000\u3000\u5982\u679c\u8bf7\u6c42\u662f\u901a\u8fc7XMLHttpRequest \u53d1\u8d77\u7684\uff0c\u5219\u8fd4\u56deTrue\uff0c\u65b9\u6cd5\u662f\u68c0\u67e5 HTTP_X_REQUESTED_WITH \u76f8\u5e94\u7684\u9996\u90e8\u662f\u5426\u662f\u5b57\u7b26\u4e32'XMLHttpRequest'\u3002 \u3000\u3000\u5927\u90e8\u5206\u73b0\u4ee3\u7684 JavaScript \u5e93\u90fd\u4f1a\u53d1\u9001\u8fd9\u4e2a\u5934\u90e8\u3002\u5982\u679c\u4f60\u7f16\u5199\u81ea\u5df1\u7684 XMLHttpRequest \u8c03\u7528\uff08\u5728\u6d4f\u89c8\u5668\u7aef\uff09\uff0c\u4f60\u5fc5\u987b\u624b\u5de5\u8bbe\u7f6e\u8fd9\u4e2a\u503c\u6765\u8ba9 is_ajax() \u53ef\u4ee5\u5de5\u4f5c\u3002 \u3000\u3000\u5982\u679c\u4e00\u4e2a\u54cd\u5e94\u9700\u8981\u6839\u636e\u8bf7\u6c42\u662f\u5426\u662f\u901a\u8fc7AJAX \u53d1\u8d77\u7684\uff0c\u5e76\u4e14\u4f60\u6b63\u5728\u4f7f\u7528\u67d0\u79cd\u5f62\u5f0f\u7684\u7f13\u5b58\u4f8b\u5982Django \u7684 cache middleware\uff0c \u4f60\u5e94\u8be5\u4f7f\u7528 vary_on_headers('HTTP_X_REQUESTED_WITH') \u88c5\u9970\u4f60\u7684\u89c6\u56fe\u4ee5\u8ba9\u54cd\u5e94\u80fd\u591f\u6b63\u786e\u5730\u7f13\u5b58\u3002 */","title":"request\u5e38\u7528\u65b9\u6cd5"},{"location":"#httpresponse","text":"\u54cd\u5e94\u5bf9\u8c61\u4e3b\u8981\u6709\u4e09\u79cd\u5f62\u5f0f\uff1a HttpResponse() render() redirect() HttpResponse()\u62ec\u53f7\u5185\u76f4\u63a5\u8ddf\u4e00\u4e2a\u5177\u4f53\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a\u54cd\u5e94\u4f53\uff0c\u6bd4\u8f83\u76f4\u63a5\u5f88\u7b80\u5355\uff0c\u6240\u4ee5\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u540e\u9762\u4e24\u79cd\u5f62\u5f0f\u3002","title":"HttpResponse\u5bf9\u8c61"},{"location":"#render","text":"render(request, template_name[, context]\uff09` `\u7ed3\u5408\u4e00\u4e2a\u7ed9\u5b9a\u7684\u6a21\u677f\u548c\u4e00\u4e2a\u7ed9\u5b9a\u7684\u4e0a\u4e0b\u6587\u5b57\u5178\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6e32\u67d3\u540e\u7684 HttpResponse \u5bf9\u8c61\u3002 \u53c2\u6570\uff1a request\uff1a \u7528\u4e8e\u751f\u6210\u54cd\u5e94\u7684\u8bf7\u6c42\u5bf9\u8c61\u3002 template_name\uff1a\u8981\u4f7f\u7528\u7684\u6a21\u677f\u7684\u5b8c\u6574\u540d\u79f0\uff0c\u53ef\u9009\u7684\u53c2\u6570 context\uff1a\u6dfb\u52a0\u5230\u6a21\u677f\u4e0a\u4e0b\u6587\u7684\u4e00\u4e2a\u5b57\u5178\u3002\u9ed8\u8ba4\u662f\u4e00\u4e2a\u7a7a\u5b57\u5178\u3002\u5982\u679c\u5b57\u5178\u4e2d\u7684\u67d0\u4e2a\u503c\u662f\u53ef\u8c03\u7528\u7684\uff0c\u89c6\u56fe\u5c06\u5728\u6e32\u67d3\u6a21\u677f\u4e4b\u524d\u8c03\u7528\u5b83\u3002 render\u65b9\u6cd5\u5c31\u662f\u5c06\u4e00\u4e2a\u6a21\u677f\u9875\u9762\u4e2d\u7684\u6a21\u677f\u8bed\u6cd5\u8fdb\u884c\u6e32\u67d3\uff0c\u6700\u7ec8\u6e32\u67d3\u6210\u4e00\u4e2ahtml\u9875\u9762\u4f5c\u4e3a\u54cd\u5e94\u4f53\u3002","title":"render()"},{"location":"#redirect","text":"\u4f20\u9012\u8981\u91cd\u5b9a\u5411\u7684\u4e00\u4e2a\u786c\u7f16\u7801\u7684URL def my_view(request): ... return redirect('/some/url/') \u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5b8c\u6574\u7684URL\uff1a def my_view(request): ... return redirect('http://example.com/')\u3000 key\uff1a\u4e24\u6b21\u8bf7\u6c42\u3000 1\uff09301\u548c302\u7684\u533a\u522b\u3002 \u3000\u3000301\u548c302\u72b6\u6001\u7801\u90fd\u8868\u793a\u91cd\u5b9a\u5411\uff0c\u5c31\u662f\u8bf4\u6d4f\u89c8\u5668\u5728\u62ff\u5230\u670d\u52a1\u5668\u8fd4\u56de\u7684\u8fd9\u4e2a\u72b6\u6001\u7801\u540e\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230\u4e00\u4e2a\u65b0\u7684URL\u5730\u5740\uff0c\u8fd9\u4e2a\u5730\u5740\u53ef\u4ee5\u4ece\u54cd\u5e94\u7684Location\u9996\u90e8\u4e2d\u83b7\u53d6 \uff08\u7528\u6237\u770b\u5230\u7684\u6548\u679c\u5c31\u662f\u4ed6\u8f93\u5165\u7684\u5730\u5740A\u77ac\u95f4\u53d8\u6210\u4e86\u53e6\u4e00\u4e2a\u5730\u5740B\uff09\u2014\u2014\u8fd9\u662f\u5b83\u4eec\u7684\u5171\u540c\u70b9\u3002 \u3000\u3000\u4ed6\u4eec\u7684\u4e0d\u540c\u5728\u4e8e\u3002301\u8868\u793a\u65e7\u5730\u5740A\u7684\u8d44\u6e90\u5df2\u7ecf\u88ab\u6c38\u4e45\u5730\u79fb\u9664\u4e86\uff08\u8fd9\u4e2a\u8d44\u6e90\u4e0d\u53ef\u8bbf\u95ee\u4e86\uff09\uff0c\u641c\u7d22\u5f15\u64ce\u5728\u6293\u53d6\u65b0\u5185\u5bb9\u7684\u540c\u65f6\u4e5f\u5c06\u65e7\u7684\u7f51\u5740\u4ea4\u6362\u4e3a\u91cd\u5b9a\u5411\u4e4b\u540e\u7684\u7f51\u5740\uff1b \u3000\u3000302\u8868\u793a\u65e7\u5730\u5740A\u7684\u8d44\u6e90\u8fd8\u5728\uff08\u4ecd\u7136\u53ef\u4ee5\u8bbf\u95ee\uff09\uff0c\u8fd9\u4e2a\u91cd\u5b9a\u5411\u53ea\u662f\u4e34\u65f6\u5730\u4ece\u65e7\u5730\u5740A\u8df3\u8f6c\u5230\u5730\u5740B\uff0c\u641c\u7d22\u5f15\u64ce\u4f1a\u6293\u53d6\u65b0\u7684\u5185\u5bb9\u800c\u4fdd\u5b58\u65e7\u7684\u7f51\u5740\u3002 SEO302\u597d\u4e8e301 2\uff09\u91cd\u5b9a\u5411\u539f\u56e0\uff1a \uff081\uff09\u7f51\u7ad9\u8c03\u6574\uff08\u5982\u6539\u53d8\u7f51\u9875\u76ee\u5f55\u7ed3\u6784\uff09\uff1b \uff082\uff09\u7f51\u9875\u88ab\u79fb\u5230\u4e00\u4e2a\u65b0\u5730\u5740\uff1b \uff083\uff09\u7f51\u9875\u6269\u5c55\u540d\u6539\u53d8(\u5982\u5e94\u7528\u9700\u8981\u628a.php\u6539\u6210.Html\u6216.shtml)\u3002 \u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u4e0d\u505a\u91cd\u5b9a\u5411\uff0c\u5219\u7528\u6237\u6536\u85cf\u5939\u6216\u641c\u7d22\u5f15\u64ce\u6570\u636e\u5e93\u4e2d\u65e7\u5730\u5740\u53ea\u80fd\u8ba9\u8bbf\u95ee\u5ba2\u6237\u5f97\u5230\u4e00\u4e2a404\u9875\u9762\u9519\u8bef\u4fe1\u606f\uff0c\u8bbf\u95ee\u6d41\u91cf\u767d\u767d\u4e27\u5931\uff1b\u518d\u8005\u67d0\u4e9b\u6ce8\u518c\u4e86\u591a\u4e2a\u57df\u540d\u7684 \u7f51\u7ad9\uff0c\u4e5f\u9700\u8981\u901a\u8fc7\u91cd\u5b9a\u5411\u8ba9\u8bbf\u95ee\u8fd9\u4e9b\u57df\u540d\u7684\u7528\u6237\u81ea\u52a8\u8df3\u8f6c\u5230\u4e3b\u7ad9\u70b9\u7b49\u3002 \u7528redirect\u53ef\u4ee5\u89e3\u91caAPPEND_SLASH\u7684\u7528\u6cd5\uff01 \u5c0f\u63d0\u793a: HttpResponse() #\u7528\u4e8e\u56de\u590d\u4e00\u4e2a\u5b57\u7b26\u4e32 HttpResponse(\"aaa\") \u5f00\u53d1\u4e2d\u5f88\u5c11\u7528. # 7 Django\u7684\u6a21\u677f\u5c42 \u4f60\u53ef\u80fd\u5df2\u7ecf\u6ce8\u610f\u5230\u6211\u4eec\u5728\u4f8b\u5b50\u89c6\u56fe\u4e2d\u8fd4\u56de\u6587\u672c\u7684\u65b9\u5f0f\u6709\u70b9\u7279\u522b\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0cHTML\u88ab\u76f4\u63a5\u786c\u7f16\u7801\u5728 Python\u4ee3\u7801\u4e4b\u4e2d\u3002 def current_datetime(request): now = datetime.datetime.now() html = \"<html><body>It is now %s.</body></html>\" % now return HttpResponse(html) \u5c3d\u7ba1\u8fd9\u79cd\u6280\u672f\u4fbf\u4e8e\u89e3\u91ca\u89c6\u56fe\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff0c\u4f46\u76f4\u63a5\u5c06HTML\u786c\u7f16\u7801\u5230\u4f60\u7684\u89c6\u56fe\u91cc\u5374\u5e76\u4e0d\u662f\u4e00\u4e2a\u597d\u4e3b\u610f\u3002 \u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u4e3a\u4ec0\u4e48\uff1a \u5bf9\u9875\u9762\u8bbe\u8ba1\u8fdb\u884c\u7684\u4efb\u4f55\u6539\u53d8\u90fd\u5fc5\u987b\u5bf9 Python \u4ee3\u7801\u8fdb\u884c\u76f8\u5e94\u7684\u4fee\u6539\u3002 \u7ad9\u70b9\u8bbe\u8ba1\u7684\u4fee\u6539\u5f80\u5f80\u6bd4\u5e95\u5c42 Python \u4ee3\u7801\u7684\u4fee\u6539\u8981\u9891\u7e41\u5f97\u591a\uff0c\u56e0\u6b64\u5982\u679c\u53ef\u4ee5\u5728\u4e0d\u8fdb\u884c Python \u4ee3\u7801\u4fee\u6539\u7684\u60c5\u51b5\u4e0b\u53d8\u66f4\u8bbe\u8ba1\uff0c\u90a3\u5c06\u4f1a\u65b9\u4fbf\u5f97\u591a\u3002 Python \u4ee3\u7801\u7f16\u5199\u548c HTML \u8bbe\u8ba1\u662f\u4e24\u9879\u4e0d\u540c\u7684\u5de5\u4f5c\uff0c\u5927\u591a\u6570\u4e13\u4e1a\u7684\u7f51\u7ad9\u5f00\u53d1\u73af\u5883\u90fd\u5c06\u4ed6\u4eec\u5206\u914d\u7ed9\u4e0d\u540c\u7684\u4eba\u5458\uff08\u751a\u81f3\u4e0d\u540c\u90e8\u95e8\uff09\u6765\u5b8c\u6210\u3002 \u8bbe\u8ba1\u8005\u548cHTML/CSS\u7684\u7f16\u7801\u4eba\u5458\u4e0d\u5e94\u8be5\u88ab\u8981\u6c42\u53bb\u7f16\u8f91Python\u7684\u4ee3\u7801\u6765\u5b8c\u6210\u4ed6\u4eec\u7684\u5de5\u4f5c\u3002 \u7a0b\u5e8f\u5458\u7f16\u5199 Python\u4ee3\u7801\u548c\u8bbe\u8ba1\u4eba\u5458\u5236\u4f5c\u6a21\u677f\u4e24\u9879\u5de5\u4f5c\u540c\u65f6\u8fdb\u884c\u7684\u6548\u7387\u662f\u6700\u9ad8\u7684\uff0c\u8fdc\u80dc\u4e8e\u8ba9\u4e00\u4e2a\u4eba\u7b49\u5f85\u53e6\u4e00\u4e2a\u4eba\u5b8c\u6210\u5bf9\u67d0\u4e2a\u65e2\u5305\u542b Python\u53c8\u5305\u542b HTML \u7684\u6587\u4ef6\u7684\u7f16\u8f91\u5de5\u4f5c\u3002 \u57fa\u4e8e\u8fd9\u4e9b\u539f\u56e0\uff0c\u5c06\u9875\u9762\u7684\u8bbe\u8ba1\u548cPython\u7684\u4ee3\u7801\u5206\u79bb\u5f00\u4f1a\u66f4\u5e72\u51c0\u7b80\u6d01\u66f4\u5bb9\u6613\u7ef4\u62a4\u3002 \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Django\u7684 \u6a21\u677f\u7cfb\u7edf (Template System)\u6765\u5b9e\u73b0\u8fd9\u79cd\u6a21\u5f0f\uff0c\u8fd9\u5c31\u662f\u672c\u7ae0\u8981\u5177\u4f53\u8ba8\u8bba\u7684\u95ee\u9898\u3002 python\u7684\u6a21\u677f\uff1aHTML\u4ee3\u7801\uff0b\u6a21\u677f\u8bed\u6cd5 def current_time(req): # ================================\u539f\u59cb\u7684\u89c6\u56fe\u51fd\u6570 # import datetime # now=datetime.datetime.now() # html=\"<html><body>\u73b0\u5728\u65f6\u523b\uff1a<h1>%s.</h1></body></html>\" %now # ================================django\u6a21\u677f\u4fee\u6539\u7684\u89c6\u56fe\u51fd\u6570 # from django.template import Template,Context # now=datetime.datetime.now() # t=Template('<html><body>\u73b0\u5728\u65f6\u523b\u662f:<h1>{{current_date}}</h1></body></html>') # #t=get_template('current_datetime.html') # c=Context({'current_date':str(now)}) # html=t.render(c) # # return HttpResponse(html) #\u53e6\u4e00\u79cd\u5199\u6cd5(\u63a8\u8350) import datetime now=datetime.datetime.now() return render(req, 'current_datetime.html', {'current_date':str(now)[:19]})","title":"redirect()"},{"location":"#1","text":"\u5728 Django \u6a21\u677f\u4e2d\u904d\u5386\u590d\u6742\u6570\u636e\u7ed3\u6784\u7684\u5173\u952e\u662f\u53e5\u70b9\u5b57\u7b26, \u8bed\u6cd5\uff1a {{var_name}} views.py\uff1a def index(request): import datetime s=\"hello\" l=[111,222,333] # \u5217\u8868 dic={\"name\":\"yuan\",\"age\":18} # \u5b57\u5178 date = datetime.date(1993, 5, 2) # \u65e5\u671f\u5bf9\u8c61 class Person(object): def __init__(self,name): self.name=name person_yuan=Person(\"yuan\") # \u81ea\u5b9a\u4e49\u7c7b\u5bf9\u8c61 person_egon=Person(\"egon\") person_alex=Person(\"alex\") person_list=[person_yuan,person_egon,person_alex] return render(request,\"index.html\",{\"l\":l,\"dic\":dic,\"date\":date,\"person_list\":person_list}) *template\uff1a <h4>{{s}}</h4> <h4>\u5217\u8868:{{ l.0 }}</h4> <h4>\u5217\u8868:{{ l.2 }}</h4> <h4>\u5b57\u5178:{{ dic.name }}</h4> <h4>\u65e5\u671f:{{ date.year }}</h4> <h4>\u7c7b\u5bf9\u8c61\u5217\u8868:{{ person_list.0.name }}</h4> \u6ce8\u610f\uff1a\u53e5\u70b9\u7b26\u4e5f\u53ef\u4ee5\u7528\u6765\u5f15\u7528\u5bf9\u8c61\u7684\u65b9\u6cd5(\u65e0\u53c2\u6570\u65b9\u6cd5): <h4>\u5b57\u5178:{{ dic.name.upper }}<``/``h4>","title":"1 \u6a21\u677f\u8bed\u6cd5\u4e4b\u53d8\u91cf"},{"location":"#2","text":"\u8bed\u6cd5\uff1a {{obj|filter__name:param}}","title":"2 \u6a21\u677f\u4e4b\u8fc7\u6ee4\u5668"},{"location":"#default","text":"\u5982\u679c\u4e00\u4e2a\u53d8\u91cf\u662ffalse\u6216\u8005\u4e3a\u7a7a\uff0c\u4f7f\u7528\u7ed9\u5b9a\u7684\u9ed8\u8ba4\u503c\u3002\u5426\u5219\uff0c\u4f7f\u7528\u53d8\u91cf\u7684\u503c\u3002\u4f8b\u5982\uff1a {{ value|default:\"nothing\" }}","title":"default"},{"location":"#length","text":"\u8fd4\u56de\u503c\u7684\u957f\u5ea6\u3002\u5b83\u5bf9\u5b57\u7b26\u4e32\u548c\u5217\u8868\u90fd\u8d77\u4f5c\u7528\u3002\u4f8b\u5982\uff1a {{ value|length }} \u5982\u679c value \u662f ['a', 'b', 'c', 'd']\uff0c\u90a3\u4e48\u8f93\u51fa\u662f 4\u3002","title":"length"},{"location":"#filesizeformat","text":"\u5c06\u503c\u683c\u5f0f\u5316\u4e3a\u4e00\u4e2a \u201c\u4eba\u7c7b\u53ef\u8bfb\u7684\u201d \u6587\u4ef6\u5c3a\u5bf8 \uff08\u4f8b\u5982 '13 KB' , '4.1 MB' , '102 bytes' , \u7b49\u7b49\uff09\u3002\u4f8b\u5982\uff1a {{ value|filesizeformat }} \u5982\u679c value \u662f 123456789\uff0c\u8f93\u51fa\u5c06\u4f1a\u662f 117.7 MB \u3002","title":"filesizeformat"},{"location":"#date","text":"\u5982\u679c value=datetime.datetime.now() {{ value|date:\"Y-m-d\" }}","title":"date"},{"location":"#slice","text":"\u5982\u679c value=\"hello world\" {{ value|slice:\"2:-1\" }}","title":"slice"},{"location":"#truncatechars","text":"\u5982\u679c\u5b57\u7b26\u4e32\u5b57\u7b26\u591a\u4e8e\u6307\u5b9a\u7684\u5b57\u7b26\u6570\u91cf\uff0c\u90a3\u4e48\u4f1a\u88ab\u622a\u65ad\u3002\u622a\u65ad\u7684\u5b57\u7b26\u4e32\u5c06\u4ee5\u53ef\u7ffb\u8bd1\u7684\u7701\u7565\u53f7\u5e8f\u5217\uff08\u201c...\u201d\uff09\u7ed3\u5c3e\u3002 \u53c2\u6570\uff1a \u8981\u622a\u65ad\u7684\u5b57\u7b26\u6570 \u4f8b\u5982\uff1a {{ value|truncatechars:9 }}","title":"truncatechars"},{"location":"#safe","text":"Django\u7684\u6a21\u677f\u4e2d\u4f1a\u5bf9HTML\u6807\u7b7e\u548cJS\u7b49\u8bed\u6cd5\u6807\u7b7e\u8fdb\u884c\u81ea\u52a8\u8f6c\u4e49\uff0c\u539f\u56e0\u663e\u800c\u6613\u89c1\uff0c\u8fd9\u6837\u662f\u4e3a\u4e86\u5b89\u5168\u3002\u4f46\u662f\u6709\u7684\u65f6\u5019\u6211\u4eec\u53ef\u80fd\u4e0d\u5e0c\u671b\u8fd9\u4e9bHTML\u5143\u7d20\u88ab\u8f6c\u4e49\uff0c\u6bd4\u5982\u6211\u4eec\u505a\u4e00\u4e2a\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\uff0c\u540e\u53f0\u6dfb\u52a0\u7684\u6587\u7ae0\u4e2d\u662f\u7ecf\u8fc7\u4fee\u9970\u7684\uff0c\u8fd9\u4e9b\u4fee\u9970\u53ef\u80fd\u662f\u901a\u8fc7\u4e00\u4e2a\u7c7b\u4f3c\u4e8eFCKeditor\u7f16\u8f91\u52a0\u6ce8\u4e86HTML\u4fee\u9970\u7b26\u7684\u6587\u672c\uff0c\u5982\u679c\u81ea\u52a8\u8f6c\u4e49\u7684\u8bdd\u663e\u793a\u7684\u5c31\u662f\u4fdd\u62a4HTML\u6807\u7b7e\u7684\u6e90\u6587\u4ef6\u3002\u4e3a\u4e86\u5728Django\u4e2d\u5173\u95edHTML\u7684\u81ea\u52a8\u8f6c\u4e49\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u5982\u679c\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u53d8\u91cf\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u8fc7\u6ee4\u5668\u201c|safe\u201d\u7684\u65b9\u5f0f\u544a\u8bc9Django\u8fd9\u6bb5\u4ee3\u7801\u662f\u5b89\u5168\u7684\u4e0d\u5fc5\u8f6c\u4e49\u3002\u6bd4\u5982\uff1a value=\"<a href=\"\">\u70b9\u51fb</a>\" {{ value|safe}} \u8fd9\u91cc\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u7528\u7684\u6a21\u677f\u7684\u8fc7\u6ee4\u5668\uff0c https://docs.djangoproject.com/zh-hans/3.2/ref/templates/builtins/","title":"safe"},{"location":"#3_1","text":"\u6807\u7b7e\u770b\u8d77\u6765\u50cf\u662f\u8fd9\u6837\u7684\uff1a {% tag %} \u3002\u6807\u7b7e\u6bd4\u53d8\u91cf\u66f4\u52a0\u590d\u6742\uff1a\u4e00\u4e9b\u5728\u8f93\u51fa\u4e2d\u521b\u5efa\u6587\u672c\uff0c\u4e00\u4e9b\u901a\u8fc7\u5faa\u73af\u6216\u903b\u8f91\u6765\u63a7\u5236\u6d41\u7a0b\uff0c\u4e00\u4e9b\u52a0\u8f7d\u5176\u540e\u7684\u53d8\u91cf\u5c06\u4f7f\u7528\u5230\u7684\u989d\u5916\u4fe1\u606f\u5230\u6a21\u7248\u4e2d\u3002\u4e00\u4e9b\u6807\u7b7e\u9700\u8981\u5f00\u59cb\u548c\u7ed3\u675f\u6807\u7b7e \uff08\u4f8b\u5982 {% tag %} ... \u6807\u7b7e \u5185\u5bb9 ... {% endtag %}\uff09\u3002","title":"3 \u6a21\u677f\u4e4b\u6807\u7b7e"},{"location":"#for","text":"\u904d\u5386\u6bcf\u4e00\u4e2a\u5143\u7d20\uff1a {% for person in person_list %} <p>{{ person.name }}</p> {% endfor %} \u53ef\u4ee5\u5229\u7528 {% for obj in list reversed %} \u53cd\u5411\u5b8c\u6210\u5faa\u73af\u3002 \u904d\u5386\u4e00\u4e2a\u5b57\u5178\uff1a {% for key,val in dic.items %} <p>{{ key }}:{{ val }}</p> {% endfor %} \u6ce8\uff1a\u5faa\u73af\u5e8f\u53f7\u53ef\u4ee5\u901a\u8fc7\uff5b\uff5bforloop\uff5d\uff5d\u663e\u793a\u3000\u3000 forloop.counter The current iteration of the loop (1-indexed) forloop.counter0 The current iteration of the loop (0-indexed) forloop.revcounter The number of iterations from the end of the loop (1-indexed) forloop.revcounter0 The number of iterations from the end of the loop (0-indexed) forloop.first True if this is the first time through the loop forloop.last True if this is the last time through the loop","title":"for\u6807\u7b7e"},{"location":"#for-empty","text":"for \u6807\u7b7e\u5e26\u6709\u4e00\u4e2a\u53ef\u9009\u7684 {% empty %} \u4ece\u53e5\uff0c\u4ee5\u4fbf\u5728\u7ed9\u51fa\u7684\u7ec4\u662f\u7a7a\u7684\u6216\u8005\u6ca1\u6709\u88ab\u627e\u5230\u65f6\uff0c\u53ef\u4ee5\u6709\u6240\u64cd\u4f5c\u3002 {% for person in person_list %} <p>{{ person.name }}</p> {% empty %} <p>sorry,no person here</p> {% endfor %}","title":"for ... empty"},{"location":"#if","text":"{% if %} \u4f1a\u5bf9\u4e00\u4e2a\u53d8\u91cf\u6c42\u503c\uff0c\u5982\u679c\u5b83\u7684\u503c\u662f\u201cTrue\u201d\uff08\u5b58\u5728\u3001\u4e0d\u4e3a\u7a7a\u3001\u4e14\u4e0d\u662fboolean\u7c7b\u578b\u7684false\u503c\uff09\uff0c\u5bf9\u5e94\u7684\u5185\u5bb9\u5757\u4f1a\u8f93\u51fa\u3002 {% if num > 100 or num < 0 %} <p>\u65e0\u6548</p> {% elif num > 80 and num < 100 %} <p>\u4f18\u79c0</p> {% else %} <p>\u51d1\u6d3b\u5427</p> {% endif %}","title":"if \u6807\u7b7e"},{"location":"#with","text":"\u4f7f\u7528\u4e00\u4e2a\u7b80\u5355\u5730\u540d\u5b57\u7f13\u5b58\u4e00\u4e2a\u590d\u6742\u7684\u53d8\u91cf\uff0c\u5f53\u4f60\u9700\u8981\u4f7f\u7528\u4e00\u4e2a\u201c\u6602\u8d35\u7684\u201d\u65b9\u6cd5\uff08\u6bd4\u5982\u8bbf\u95ee\u6570\u636e\u5e93\uff09\u5f88\u591a\u6b21\u7684\u65f6\u5019\u662f\u975e\u5e38\u6709\u7528\u7684 \u4f8b\u5982\uff1a {% with total=business.employees.count %} {{ total }} employee{{ total|pluralize }} {% endwith %}","title":"with"},{"location":"#csrf_token","text":"\u8fd9\u4e2a\u6807\u7b7e\u7528\u4e8e\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u4fdd\u62a4 \u8fd9\u53eb\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\uff0cCross Site Request Forgery\uff08 CSRF \uff09","title":"csrf_token"},{"location":"#4","text":"1\u3001\u5728settings\u4e2d\u7684INSTALLED_APPS\u914d\u7f6e\u5f53\u524dapp\uff0c\u4e0d\u7136django\u65e0\u6cd5\u627e\u5230\u81ea\u5b9a\u4e49\u7684simple_tag. 2\u3001\u5728app\u4e2d\u521b\u5efatemplatetags\u6a21\u5757(\u6a21\u5757\u540d\u53ea\u80fd\u662ftemplatetags) 3\u3001\u521b\u5efa\u4efb\u610f .py \u6587\u4ef6\uff0c\u5982\uff1amy_tags.py from django import template from django.utils.safestring import mark_safe register = template.Library() #register\u7684\u540d\u5b57\u662f\u56fa\u5b9a\u7684,\u4e0d\u53ef\u6539\u53d8 @register.filter def filter_multi(v1,v2): return v1 * v2 <br> @register.simple_tag def simple_tag_multi(v1,v2): return v1 * v2 <br> @register.simple_tag def my_input(id,arg): result = \"<input type='text' id='%s' class='%s' />\" %(id,arg,) return mark_safe(result) 4\u3001\u5728\u4f7f\u7528\u81ea\u5b9a\u4e49simple_tag\u548cfilter\u7684html\u6587\u4ef6\u4e2d\u5bfc\u5165\u4e4b\u524d\u521b\u5efa\u7684 my_tags.py {% load my_tags %}\u3000 5\u3001\u4f7f\u7528simple_tag\u548cfilter\uff08\u5982\u4f55\u8c03\u7528\uff09 -------------------------------.html {% load xxx %} # num=12 {{ num|filter_multi:2 }} #24 {{ num|filter_multi:\"[22,333,4444]\" }} {% simple_tag_multi 2 5 %} \u53c2\u6570\u4e0d\u9650,\u4f46\u4e0d\u80fd\u653e\u5728if for\u8bed\u53e5\u4e2d {% simple_tag_multi num 5 %} \u6ce8\u610f\uff1afilter\u53ef\u4ee5\u7528\u5728if\u7b49\u8bed\u53e5\u540e\uff0csimple_tag\u4e0d\u53ef\u4ee5 {% if num|filter_multi:30 > 100 %} {{ num|filter_multi:30 }} {% endif %} \u5c0f\u7b14\u8bb0: \u81ea\u5b9a\u4e49\u7684\u8fc7\u6ee4\u5668\u6700\u591a\u4e24\u4e2a\u53c2\u6570, \u81ea\u5b9a\u4e49\u6807\u7b7e\u4e0d\u9650\u5236\u53c2\u6570","title":"4 \u81ea\u5b9a\u4e49\u6807\u7b7e\u548c\u8fc7\u6ee4\u5668"},{"location":"#5-extend","text":"Django\u6a21\u7248\u5f15\u64ce\u4e2d\u6700\u5f3a\u5927\u4e5f\u662f\u6700\u590d\u6742\u7684\u90e8\u5206\u5c31\u662f\u6a21\u7248\u7ee7\u627f\u4e86\u3002\u6a21\u7248\u7ee7\u627f\u53ef\u4ee5\u8ba9\u60a8\u521b\u5efa\u4e00\u4e2a\u57fa\u672c\u7684\u201c\u9aa8\u67b6\u201d\u6a21\u7248\uff0c\u5b83\u5305\u542b\u60a8\u7ad9\u70b9\u4e2d\u7684\u5168\u90e8\u5143\u7d20\uff0c\u5e76\u4e14\u53ef\u4ee5\u5b9a\u4e49\u80fd\u591f\u88ab\u5b50\u6a21\u7248\u8986\u76d6\u7684 blocks \u3002 \u901a\u8fc7\u4ece\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5f00\u59cb\uff0c\u53ef\u4ee5\u5bb9\u6613\u7684\u7406\u89e3\u6a21\u7248\u7ee7\u627f\uff1a <!DOCTYPE html> <html lang=\"en\"> <head> <link rel=\"stylesheet\" href=\"style.css\" /> <title>{% block title %}My amazing site{%/span> endblock %}</title> </head> <body> <div id=\"sidebar\"> {% block sidebar %} <ul> <li><a href=\"/\">Home</a></li> <li><a href=\"/blog/\">Blog</a></li> </ul> {% endblock %} </div> <div id=\"content\"> {% block content %}{% endblock %} </div> </body> </html> \u8fd9\u4e2a\u6a21\u7248\uff0c\u6211\u4eec\u628a\u5b83\u53eb\u4f5c base.html \uff0c \u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53ef\u4ee5\u7528\u4e8e\u4e24\u5217\u6392\u7248\u9875\u9762\u7684\u7b80\u5355HTML\u9aa8\u67b6\u3002\u201c\u5b50\u6a21\u7248\u201d\u7684\u5de5\u4f5c\u662f\u7528\u5b83\u4eec\u7684\u5185\u5bb9\u586b\u5145\u7a7a\u7684blocks\u3002 \u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c block \u6807\u7b7e\u5b9a\u4e49\u4e86\u4e09\u4e2a\u53ef\u4ee5\u88ab\u5b50\u6a21\u7248\u5185\u5bb9\u586b\u5145\u7684block\u3002 block \u544a\u8bc9\u6a21\u7248\u5f15\u64ce\uff1a \u5b50\u6a21\u7248\u53ef\u80fd\u4f1a\u8986\u76d6\u6389\u6a21\u7248\u4e2d\u7684\u8fd9\u4e9b\u4f4d\u7f6e\u3002 \u5b50\u6a21\u7248\u53ef\u80fd\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a {% extends \"base.html\" %} {% block title %}My amazing blog{% endblock %} {% block content %} {% for entry in blog_entries %} <h2>{{ entry.title }}</h2> <p>{{ entry.body }}</p> {% endfor %} {% endblock %} extends \u6807\u7b7e\u662f\u8fd9\u91cc\u7684\u5173\u952e\u3002\u5b83\u544a\u8bc9\u6a21\u7248\u5f15\u64ce\uff0c\u8fd9\u4e2a\u6a21\u7248\u201c\u7ee7\u627f\u201d\u4e86\u53e6\u4e00\u4e2a\u6a21\u7248\u3002\u5f53\u6a21\u7248\u7cfb\u7edf\u5904\u7406\u8fd9\u4e2a\u6a21\u7248\u65f6\uff0c\u9996\u5148\uff0c\u5b83\u5c06\u5b9a\u4f4d\u7236\u6a21\u7248\u2014\u2014\u5728\u6b64\u4f8b\u4e2d\uff0c\u5c31\u662f\u201cbase.html\u201d\u3002 \u90a3\u65f6\uff0c\u6a21\u7248\u5f15\u64ce\u5c06\u6ce8\u610f\u5230 base.html \u4e2d\u7684\u4e09\u4e2a block \u6807\u7b7e\uff0c\u5e76\u7528\u5b50\u6a21\u7248\u4e2d\u7684\u5185\u5bb9\u6765\u66ff\u6362\u8fd9\u4e9bblock\u3002\u6839\u636e blog_entries \u7684\u503c\uff0c\u8f93\u51fa\u53ef\u80fd\u770b\u8d77\u6765\u662f\u8fd9\u6837\u7684\uff1a <!DOCTYPE html> <html lang=\"en\"> <head> <link rel=\"stylesheet\" href=\"style.css\" /> <title>My amazing blog</title> </head> <body> <div id=\"sidebar\"> <ul> <li><a href=\"/\">Home</a></li> <li><a href=\"/blog/\">Blog</a></li> </ul> </div> <div id=\"content\"> <h2>Entry one</h2> <p>This is my first entry.</p> <h2>Entry two</h2> <p>This is my second entry.</p> </div> </body> </html> \u8bf7\u6ce8\u610f\uff0c\u5b50\u6a21\u7248\u5e76\u6ca1\u6709\u5b9a\u4e49 sidebar block\uff0c\u6240\u4ee5\u7cfb\u7edf\u4f7f\u7528\u4e86\u7236\u6a21\u7248\u4e2d\u7684\u503c\u3002\u7236\u6a21\u7248\u7684 {% block %} \u6807\u7b7e\u4e2d\u7684\u5185\u5bb9\u603b\u662f\u88ab\u7528\u4f5c\u5907\u9009\u5185\u5bb9\uff08fallback\uff09\u3002 \u8fd9\u79cd\u65b9\u5f0f\u4f7f\u4ee3\u7801\u5f97\u5230\u6700\u5927\u7a0b\u5ea6\u7684\u590d\u7528\uff0c\u5e76\u4e14\u4f7f\u5f97\u6dfb\u52a0\u5185\u5bb9\u5230\u5171\u4eab\u7684\u5185\u5bb9\u533a\u57df\u66f4\u52a0\u7b80\u5355\uff0c\u4f8b\u5982\uff0c\u90e8\u5206\u8303\u56f4\u5185\u7684\u5bfc\u822a\u3002 \u8fd9\u91cc\u662f\u4f7f\u7528\u7ee7\u627f\u7684\u4e00\u4e9b\u63d0\u793a\uff1a \u5982\u679c\u4f60\u5728\u6a21\u7248\u4e2d\u4f7f\u7528 {% extends %} \u6807\u7b7e\uff0c\u5b83\u5fc5\u987b\u662f\u6a21\u7248\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6807\u7b7e\u3002\u5176\u4ed6\u7684\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u6a21\u7248\u7ee7\u627f\u90fd\u5c06\u65e0\u6cd5\u5de5\u4f5c\u3002 \u5728base\u6a21\u7248\u4e2d\u8bbe\u7f6e\u8d8a\u591a\u7684 {% block %} \u6807\u7b7e\u8d8a\u597d\u3002\u8bf7\u8bb0\u4f4f\uff0c\u5b50\u6a21\u7248\u4e0d\u5fc5\u5b9a\u4e49\u5168\u90e8\u7236\u6a21\u7248\u4e2d\u7684blocks\uff0c\u6240\u4ee5\uff0c\u4f60\u53ef\u4ee5\u5728\u5927\u591a\u6570blocks\u4e2d\u586b\u5145\u5408\u7406\u7684\u9ed8\u8ba4\u5185\u5bb9\uff0c\u7136\u540e\uff0c\u53ea\u5b9a\u4e49\u4f60\u9700\u8981\u7684\u90a3\u4e00\u4e2a\u3002\u591a\u4e00\u70b9\u94a9\u5b50\u603b\u6bd4\u5c11\u4e00\u70b9\u597d\u3002 \u5982\u679c\u4f60\u53d1\u73b0\u4f60\u81ea\u5df1\u5728\u5927\u91cf\u7684\u6a21\u7248\u4e2d\u590d\u5236\u5185\u5bb9\uff0c\u90a3\u53ef\u80fd\u610f\u5473\u7740\u4f60\u5e94\u8be5\u628a\u5185\u5bb9\u79fb\u52a8\u5230\u7236\u6a21\u7248\u4e2d\u7684\u4e00\u4e2a {% block %} \u4e2d\u3002 If you need to get the content of the block from the parent template, the {{ block.super }} variable will do the trick. This is useful if you want to add to the contents of a parent block instead of completely overriding it. Data inserted using {{ block.super }} will not be automatically escaped (see the next section), since it was already escaped, if necessary, in the parent template. \u4e3a\u4e86\u66f4\u597d\u7684\u53ef\u8bfb\u6027\uff0c\u4f60\u4e5f\u53ef\u4ee5\u7ed9\u4f60\u7684 {% endblock %} \u6807\u7b7e\u4e00\u4e2a \u540d\u5b57 \u3002\u4f8b\u5982\uff1a python {% block content %} ... {% endblock content %} \u5728\u5927\u578b\u6a21\u7248\u4e2d\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5e2e\u4f60\u6e05\u695a\u7684\u770b\u5230\u54ea\u4e00\u4e2a\u3000 {% block %} \u6807\u7b7e\u88ab\u5173\u95ed\u4e86\u3002 \u4e0d\u80fd\u5728\u4e00\u4e2a\u6a21\u7248\u4e2d\u5b9a\u4e49\u591a\u4e2a\u76f8\u540c\u540d\u5b57\u7684 block \u6807\u7b7e\u3002","title":"5 \u6a21\u677f\u7ee7\u627f (extend)"},{"location":"#8-django-1","text":"","title":"8 Django \u6a21\u578b\u5c42(1)"},{"location":"#orm","text":"MVC\u6216\u8005MVC\u6846\u67b6\u4e2d\u5305\u62ec\u4e00\u4e2a\u91cd\u8981\u7684\u90e8\u5206\uff0c\u5c31\u662fORM\uff0c\u5b83\u5b9e\u73b0\u4e86\u6570\u636e\u6a21\u578b\u4e0e\u6570\u636e\u5e93\u7684\u89e3\u8026\uff0c\u5373\u6570\u636e\u6a21\u578b\u7684\u8bbe\u8ba1\u4e0d\u9700\u8981\u4f9d\u8d56\u4e8e\u7279\u5b9a\u7684\u6570\u636e\u5e93\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u914d\u7f6e\u5c31\u53ef\u4ee5\u8f7b\u677e\u66f4\u6362\u6570\u636e\u5e93\uff0c\u8fd9\u6781\u5927\u7684\u51cf\u8f7b\u4e86\u5f00\u53d1\u4eba\u5458\u7684\u5de5\u4f5c\u91cf\uff0c\u4e0d\u9700\u8981\u9762\u5bf9\u56e0\u6570\u636e\u5e93\u53d8\u66f4\u800c\u5bfc\u81f4\u7684\u65e0\u6548\u52b3\u52a8 ORM\u662f\u201c\u5bf9\u8c61-\u5173\u7cfb-\u6620\u5c04\u201d\u7684\u7b80\u79f0\u3002 #sql\u4e2d\u7684\u8868 #\u521b\u5efa\u8868: CREATE TABLE employee( id INT PRIMARY KEY auto_increment , name VARCHAR (20), gender BIT default 1, birthday DATA , department VARCHAR (20), salary DECIMAL (8,2) unsigned, ); #sql\u4e2d\u7684\u8868\u7eaa\u5f55 #\u6dfb\u52a0\u4e00\u6761\u8868\u7eaa\u5f55: INSERT employee (name,gender,birthday,salary,department) VALUES (\"alex\",1,\"1985-12-12\",8000,\"\u4fdd\u6d01\u90e8\"); #\u67e5\u8be2\u4e00\u6761\u8868\u7eaa\u5f55: SELECT * FROM employee WHERE age=24; #\u66f4\u65b0\u4e00\u6761\u8868\u7eaa\u5f55: UPDATE employee SET birthday=\"1989-10-24\" WHERE id=1; #\u5220\u9664\u4e00\u6761\u8868\u7eaa\u5f55: DELETE FROM employee WHERE name=\"alex\" #python\u7684\u7c7b class Employee(models.Model): id=models.AutoField(primary_key=True) name=models.CharField(max_length=32) gender=models.BooleanField() birthday=models.DateField() department=models.CharField(max_length=32) salary=models.DecimalField(max_digits=8,decimal_places=2) #python\u7684\u7c7b\u5bf9\u8c61 #\u6dfb\u52a0\u4e00\u6761\u8868\u7eaa\u5f55: emp=Employee(name=\"alex\",gender=True,birthday=\"1985-12-12\",epartment=\"\u4fdd\u6d01\u90e8\") emp.save() #\u67e5\u8be2\u4e00\u6761\u8868\u7eaa\u5f55: Employee.objects.filter(age=24) #\u66f4\u65b0\u4e00\u6761\u8868\u7eaa\u5f55: Employee.objects.filter(id=1).update(birthday=\"1989-10-24\") #\u5220\u9664\u4e00\u6761\u8868\u7eaa\u5f55: Employee.objects.filter(name=\"alex\").delete()","title":"ORM\u7b80\u4ecb"},{"location":"#_18","text":"","title":"\u5355\u8868\u64cd\u4f5c"},{"location":"#_19","text":"","title":"\u521b\u5efa\u8868"},{"location":"#1_1","text":"\u521b\u5efa\u540d\u4e3abook\u7684app\uff0c\u5728book\u4e0b\u7684models.py\u4e2d\u521b\u5efa\u6a21\u578b\uff1a from django.db import models # Create your models here. class Book(models.Model): id=models.AutoField(primary_key=True) title=models.CharField(max_length=32) state=models.BooleanField() pub_date=models.DateField() price=models.DecimalField(max_digits=8,decimal_places=2) publish=models.CharField(max_length=32)","title":"1 \u521b\u5efa\u6a21\u578b"},{"location":"#2_1","text":"\u6bcf\u4e2a\u5b57\u6bb5\u6709\u4e00\u4e9b\u7279\u6709\u7684\u53c2\u6570\uff0c\u4f8b\u5982\uff0cCharField\u9700\u8981max_length\u53c2\u6570\u6765\u6307\u5b9a VARCHAR \u6570\u636e\u5e93\u5b57\u6bb5\u7684\u5927\u5c0f\u3002\u8fd8\u6709\u4e00\u4e9b\u9002\u7528\u4e8e\u6240\u6709\u5b57\u6bb5\u7684\u901a\u7528\u53c2\u6570\u3002 \u8fd9\u4e9b\u53c2\u6570\u5728\u6587\u6863\u4e2d\u6709\u8be6\u7ec6\u5b9a\u4e49\uff0c\u8fd9\u91cc\u6211\u4eec\u53ea\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e9b\u6700\u5e38\u7528\u7684\uff1a \u66f4\u591a\u5b57\u6bb5\uff1a ''' <1> CharField \u5b57\u7b26\u4e32\u5b57\u6bb5, \u7528\u4e8e\u8f83\u77ed\u7684\u5b57\u7b26\u4e32. CharField \u8981\u6c42\u5fc5\u987b\u6709\u4e00\u4e2a\u53c2\u6570 maxlength, \u7528\u4e8e\u4ece\u6570\u636e\u5e93\u5c42\u548cDjango\u6821\u9a8c\u5c42\u9650\u5236\u8be5\u5b57\u6bb5\u6240\u5141\u8bb8\u7684\u6700\u5927\u5b57\u7b26\u6570. <2> IntegerField #\u7528\u4e8e\u4fdd\u5b58\u4e00\u4e2a\u6574\u6570. <3> FloatField \u4e00\u4e2a\u6d6e\u70b9\u6570. \u5fc5\u987b \u63d0\u4f9b\u4e24\u4e2a\u53c2\u6570: \u53c2\u6570 \u63cf\u8ff0 max_digits \u603b\u4f4d\u6570(\u4e0d\u5305\u62ec\u5c0f\u6570\u70b9\u548c\u7b26\u53f7) decimal_places \u5c0f\u6570\u4f4d\u6570 \u4e3e\u4f8b\u6765\u8bf4, \u8981\u4fdd\u5b58\u6700\u5927\u503c\u4e3a 999 (\u5c0f\u6570\u70b9\u540e\u4fdd\u5b582\u4f4d),\u4f60\u8981\u8fd9\u6837\u5b9a\u4e49\u5b57\u6bb5: models.FloatField(..., max_digits=5, decimal_places=2) \u8981\u4fdd\u5b58\u6700\u5927\u503c\u4e00\u767e\u4e07(\u5c0f\u6570\u70b9\u540e\u4fdd\u5b5810\u4f4d)\u7684\u8bdd,\u4f60\u8981\u8fd9\u6837\u5b9a\u4e49: models.FloatField(..., max_digits=19, decimal_places=10) admin \u7528\u4e00\u4e2a\u6587\u672c\u6846(<input type=\"text\">)\u8868\u793a\u8be5\u5b57\u6bb5\u4fdd\u5b58\u7684\u6570\u636e. <4> AutoField \u4e00\u4e2a IntegerField, \u6dfb\u52a0\u8bb0\u5f55\u65f6\u5b83\u4f1a\u81ea\u52a8\u589e\u957f. \u4f60\u901a\u5e38\u4e0d\u9700\u8981\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e2a\u5b57\u6bb5; \u81ea\u5b9a\u4e49\u4e00\u4e2a\u4e3b\u952e\uff1amy_id=models.AutoField(primary_key=True) \u5982\u679c\u4f60\u4e0d\u6307\u5b9a\u4e3b\u952e\u7684\u8bdd,\u7cfb\u7edf\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2a\u4e3b\u952e\u5b57\u6bb5\u5230\u4f60\u7684 model. <5> BooleanField A true/false field. admin \u7528 checkbox \u6765\u8868\u793a\u6b64\u7c7b\u5b57\u6bb5. <6> TextField \u4e00\u4e2a\u5bb9\u91cf\u5f88\u5927\u7684\u6587\u672c\u5b57\u6bb5. admin \u7528\u4e00\u4e2a <textarea> (\u6587\u672c\u533a\u57df)\u8868\u793a\u8be5\u5b57\u6bb5\u6570\u636e.(\u4e00\u4e2a\u591a\u884c\u7f16\u8f91\u6846). <7> EmailField \u4e00\u4e2a\u5e26\u6709\u68c0\u67e5Email\u5408\u6cd5\u6027\u7684 CharField,\u4e0d\u63a5\u53d7 maxlength \u53c2\u6570. <8> DateField \u4e00\u4e2a\u65e5\u671f\u5b57\u6bb5. \u5171\u6709\u4e0b\u5217\u989d\u5916\u7684\u53ef\u9009\u53c2\u6570: Argument \u63cf\u8ff0 auto_now \u5f53\u5bf9\u8c61\u88ab\u4fdd\u5b58\u65f6,\u81ea\u52a8\u5c06\u8be5\u5b57\u6bb5\u7684\u503c\u8bbe\u7f6e\u4e3a\u5f53\u524d\u65f6\u95f4.\u901a\u5e38\u7528\u4e8e\u8868\u793a \"last-modified\" \u65f6\u95f4\u6233. auto_now_add \u5f53\u5bf9\u8c61\u9996\u6b21\u88ab\u521b\u5efa\u65f6,\u81ea\u52a8\u5c06\u8be5\u5b57\u6bb5\u7684\u503c\u8bbe\u7f6e\u4e3a\u5f53\u524d\u65f6\u95f4.\u901a\u5e38\u7528\u4e8e\u8868\u793a\u5bf9\u8c61\u521b\u5efa\u65f6\u95f4. \uff08\u4ec5\u4ec5\u5728admin\u4e2d\u6709\u610f\u4e49...) <9> DateTimeField \u4e00\u4e2a\u65e5\u671f\u65f6\u95f4\u5b57\u6bb5. \u7c7b\u4f3c DateField \u652f\u6301\u540c\u6837\u7684\u9644\u52a0\u9009\u9879. <10> ImageField \u7c7b\u4f3c FileField, \u4e0d\u8fc7\u8981\u6821\u9a8c\u4e0a\u4f20\u5bf9\u8c61\u662f\u5426\u662f\u4e00\u4e2a\u5408\u6cd5\u56fe\u7247.#\u5b83\u6709\u4e24\u4e2a\u53ef\u9009\u53c2\u6570:height_field\u548cwidth_field, \u5982\u679c\u63d0\u4f9b\u8fd9\u4e24\u4e2a\u53c2\u6570,\u5219\u56fe\u7247\u5c06\u6309\u63d0\u4f9b\u7684\u9ad8\u5ea6\u548c\u5bbd\u5ea6\u89c4\u683c\u4fdd\u5b58. <11> FileField \u4e00\u4e2a\u6587\u4ef6\u4e0a\u4f20\u5b57\u6bb5. \u8981\u6c42\u4e00\u4e2a\u5fc5\u987b\u6709\u7684\u53c2\u6570: upload_to, \u4e00\u4e2a\u7528\u4e8e\u4fdd\u5b58\u4e0a\u8f7d\u6587\u4ef6\u7684\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84. \u8fd9\u4e2a\u8def\u5f84\u5fc5\u987b\u5305\u542b strftime #formatting, \u8be5\u683c\u5f0f\u5c06\u88ab\u4e0a\u8f7d\u6587\u4ef6\u7684 date/time \u66ff\u6362(so that uploaded files don't fill up the given directory). admin \u7528\u4e00\u4e2a<input type=\"file\">\u90e8\u4ef6\u8868\u793a\u8be5\u5b57\u6bb5\u4fdd\u5b58\u7684\u6570\u636e(\u4e00\u4e2a\u6587\u4ef6\u4e0a\u4f20\u90e8\u4ef6) . \u6ce8\u610f\uff1a\u5728\u4e00\u4e2a model \u4e2d\u4f7f\u7528 FileField \u6216 ImageField \u9700\u8981\u4ee5\u4e0b\u6b65\u9aa4: \uff081\uff09\u5728\u4f60\u7684 settings \u6587\u4ef6\u4e2d, \u5b9a\u4e49\u4e00\u4e2a\u5b8c\u6574\u8def\u5f84\u7ed9 MEDIA_ROOT \u4ee5\u4fbf\u8ba9 Django\u5728\u6b64\u5904\u4fdd\u5b58\u4e0a\u4f20\u6587\u4ef6. (\u51fa\u4e8e\u6027\u80fd\u8003\u8651,\u8fd9\u4e9b\u6587\u4ef6\u5e76\u4e0d\u4fdd\u5b58\u5230\u6570\u636e\u5e93.) \u5b9a\u4e49MEDIA_URL \u4f5c\u4e3a\u8be5\u76ee\u5f55\u7684\u516c\u5171 URL. \u8981\u786e\u4fdd\u8be5\u76ee\u5f55\u5bf9 WEB\u670d\u52a1\u5668\u7528\u6237\u5e10\u53f7\u662f\u53ef\u5199\u7684. \uff082\uff09 \u5728\u4f60\u7684 model \u4e2d\u6dfb\u52a0 FileField \u6216 ImageField, \u5e76\u786e\u4fdd\u5b9a\u4e49\u4e86 upload_to \u9009\u9879,\u4ee5\u544a\u8bc9 Django \u4f7f\u7528 MEDIA_ROOT \u7684\u54ea\u4e2a\u5b50\u76ee\u5f55\u4fdd\u5b58\u4e0a\u4f20\u6587\u4ef6.\u4f60\u7684\u6570\u636e\u5e93\u4e2d\u8981\u4fdd\u5b58\u7684\u53ea\u662f\u6587\u4ef6\u7684\u8def\u5f84(\u76f8\u5bf9\u4e8e MEDIA_ROOT). \u51fa\u4e8e\u4e60\u60ef\u4f60\u4e00\u5b9a\u5f88\u60f3\u4f7f\u7528 Django \u63d0\u4f9b\u7684 get_<#fieldname>_url \u51fd\u6570.\u4e3e\u4f8b\u6765\u8bf4,\u5982\u679c\u4f60\u7684 ImageField \u53eb\u4f5c mug_shot, \u4f60\u5c31\u53ef\u4ee5\u5728\u6a21\u677f\u4e2d\u4ee5 {{ object.#get_mug_shot_url }} \u8fd9\u6837\u7684\u65b9\u5f0f\u5f97\u5230\u56fe\u50cf\u7684\u7edd\u5bf9\u8def\u5f84. <12> URLField \u7528\u4e8e\u4fdd\u5b58 URL. \u82e5 verify_exists \u53c2\u6570\u4e3a True (\u9ed8\u8ba4), \u7ed9\u5b9a\u7684 URL \u4f1a\u9884\u5148\u68c0\u67e5\u662f\u5426\u5b58\u5728( \u5373URL\u662f\u5426\u88ab\u6709\u6548\u88c5\u5165\u4e14\u6ca1\u6709\u8fd4\u56de404\u54cd\u5e94). admin \u7528\u4e00\u4e2a <input type=\"text\"> \u6587\u672c\u6846\u8868\u793a\u8be5\u5b57\u6bb5\u4fdd\u5b58\u7684\u6570\u636e(\u4e00\u4e2a\u5355\u884c\u7f16\u8f91\u6846) <13> NullBooleanField \u7c7b\u4f3c BooleanField, \u4e0d\u8fc7\u5141\u8bb8 NULL \u4f5c\u4e3a\u5176\u4e2d\u4e00\u4e2a\u9009\u9879. \u63a8\u8350\u4f7f\u7528\u8fd9\u4e2a\u5b57\u6bb5\u800c\u4e0d\u8981\u7528 BooleanField \u52a0 null=True \u9009\u9879admin \u7528\u4e00\u4e2a\u9009\u62e9\u6846 <select> (\u4e09\u4e2a\u53ef\u9009\u62e9\u7684\u503c: \"Unknown\", \"Yes\" \u548c \"No\" ) \u6765\u8868\u793a\u8fd9\u79cd\u5b57\u6bb5\u6570\u636e. <14> SlugField \"Slug\" \u662f\u4e00\u4e2a\u62a5\u7eb8\u672f\u8bed. slug \u662f\u67d0\u4e2a\u4e1c\u897f\u7684\u5c0f\u5c0f\u6807\u8bb0(\u77ed\u7b7e), \u53ea\u5305\u542b\u5b57\u6bcd,\u6570\u5b57,\u4e0b\u5212\u7ebf\u548c\u8fde\u5b57\u7b26.#\u5b83\u4eec\u901a\u5e38\u7528\u4e8eURLs \u82e5\u4f60\u4f7f\u7528 Django \u5f00\u53d1\u7248\u672c,\u4f60\u53ef\u4ee5\u6307\u5b9a maxlength. \u82e5 maxlength \u672a\u6307\u5b9a, Django \u4f1a\u4f7f\u7528\u9ed8\u8ba4\u957f\u5ea6: 50. #\u5728\u4ee5\u524d\u7684 Django \u7248\u672c,\u6ca1\u6709\u4efb\u4f55\u529e\u6cd5\u6539\u53d850 \u8fd9\u4e2a\u957f\u5ea6. \u8fd9\u6697\u793a\u4e86 db_index=True. \u5b83\u63a5\u53d7\u4e00\u4e2a\u989d\u5916\u7684\u53c2\u6570: prepopulate_from, which is a list of fields from which to auto-#populate the slug, via JavaScript,in the object's admin form: models.SlugField (prepopulate_from=(\"pre_name\", \"name\"))prepopulate_from \u4e0d\u63a5\u53d7 DateTimeFields. <13> XMLField \u4e00\u4e2a\u6821\u9a8c\u503c\u662f\u5426\u4e3a\u5408\u6cd5XML\u7684 TextField,\u5fc5\u987b\u63d0\u4f9b\u53c2\u6570: schema_path, \u5b83\u662f\u4e00\u4e2a\u7528\u6765\u6821\u9a8c\u6587\u672c\u7684 RelaxNG schema #\u7684\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84. <14> FilePathField \u53ef\u9009\u9879\u76ee\u4e3a\u67d0\u4e2a\u7279\u5b9a\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\u540d. \u652f\u6301\u4e09\u4e2a\u7279\u6b8a\u7684\u53c2\u6570, \u5176\u4e2d\u7b2c\u4e00\u4e2a\u662f\u5fc5\u987b\u63d0\u4f9b\u7684. \u53c2\u6570 \u63cf\u8ff0 path \u5fc5\u9700\u53c2\u6570. \u4e00\u4e2a\u76ee\u5f55\u7684\u7edd\u5bf9\u6587\u4ef6\u7cfb\u7edf\u8def\u5f84. FilePathField \u636e\u6b64\u5f97\u5230\u53ef\u9009\u9879\u76ee. Example: \"/home/images\". match \u53ef\u9009\u53c2\u6570. \u4e00\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f, \u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32, FilePathField \u5c06\u4f7f\u7528\u5b83\u8fc7\u6ee4\u6587\u4ef6\u540d. \u6ce8\u610f\u8fd9\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u53ea\u4f1a\u5e94\u7528\u5230 base filename \u800c\u4e0d\u662f \u8def\u5f84\u5168\u540d. Example: \"foo.*\\.txt^\", \u5c06\u5339\u914d\u6587\u4ef6 foo23.txt \u5374\u4e0d\u5339\u914d bar.txt \u6216 foo23.gif. recursive\u53ef\u9009\u53c2\u6570.\u8981\u4e48 True \u8981\u4e48 False. \u9ed8\u8ba4\u503c\u662f False. \u662f\u5426\u5305\u62ec path \u4e0b\u9762\u7684\u5168\u90e8\u5b50\u76ee\u5f55. \u8fd9\u4e09\u4e2a\u53c2\u6570\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528. match \u4ec5\u5e94\u7528\u4e8e base filename, \u800c\u4e0d\u662f\u8def\u5f84\u5168\u540d. \u90a3\u4e48,\u8fd9\u4e2a\u4f8b\u5b50: FilePathField(path=\"/home/images\", match=\"foo.*\", recursive=True) ...\u4f1a\u5339\u914d /home/images/foo.gif \u800c\u4e0d\u5339\u914d /home/images/foo/bar.gif <15> IPAddressField \u4e00\u4e2a\u5b57\u7b26\u4e32\u5f62\u5f0f\u7684 IP \u5730\u5740, (i.e. \"24.124.1.30\"). <16> CommaSeparatedIntegerField \u7528\u4e8e\u5b58\u653e\u9017\u53f7\u5206\u9694\u7684\u6574\u6570\u503c. \u7c7b\u4f3c CharField, \u5fc5\u987b\u8981\u6709maxlength\u53c2\u6570. '''\u3000\u3000 \u66f4\u591a\u53c2\u6570\uff1a (1)null \u5982\u679c\u4e3aTrue\uff0cDjango \u5c06\u7528NULL \u6765\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u7a7a\u503c\u3002 \u9ed8\u8ba4\u503c\u662f False. (1)blank \u5982\u679c\u4e3aTrue\uff0c\u8be5\u5b57\u6bb5\u5141\u8bb8\u4e0d\u586b\u3002\u9ed8\u8ba4\u4e3aFalse\u3002 \u8981\u6ce8\u610f\uff0c\u8fd9\u4e0e null \u4e0d\u540c\u3002null\u7eaf\u7cb9\u662f\u6570\u636e\u5e93\u8303\u7574\u7684\uff0c\u800c blank \u662f\u6570\u636e\u9a8c\u8bc1\u8303\u7574\u7684\u3002 \u5982\u679c\u4e00\u4e2a\u5b57\u6bb5\u7684blank=True\uff0c\u8868\u5355\u7684\u9a8c\u8bc1\u5c06\u5141\u8bb8\u8be5\u5b57\u6bb5\u662f\u7a7a\u503c\u3002\u5982\u679c\u5b57\u6bb5\u7684blank=False\uff0c\u8be5\u5b57\u6bb5\u5c31\u662f\u5fc5\u586b\u7684\u3002 (2)default \u5b57\u6bb5\u7684\u9ed8\u8ba4\u503c\u3002\u53ef\u4ee5\u662f\u4e00\u4e2a\u503c\u6216\u8005\u53ef\u8c03\u7528\u5bf9\u8c61\u3002\u5982\u679c\u53ef\u8c03\u7528 \uff0c\u6bcf\u6709\u65b0\u5bf9\u8c61\u88ab\u521b\u5efa\u5b83\u90fd\u4f1a\u88ab\u8c03\u7528\u3002 (3)primary_key \u5982\u679c\u4e3aTrue\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b57\u6bb5\u5c31\u662f\u6a21\u578b\u7684\u4e3b\u952e\u3002\u5982\u679c\u4f60\u6ca1\u6709\u6307\u5b9a\u4efb\u4f55\u4e00\u4e2a\u5b57\u6bb5\u7684primary_key=True\uff0c Django \u5c31\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2aIntegerField\u5b57\u6bb5\u505a\u4e3a\u4e3b\u952e\uff0c\u6240\u4ee5\u9664\u975e\u4f60\u60f3\u8986\u76d6\u9ed8\u8ba4\u7684\u4e3b\u952e\u884c\u4e3a\uff0c \u5426\u5219\u6ca1\u5fc5\u8981\u8bbe\u7f6e\u4efb\u4f55\u4e00\u4e2a\u5b57\u6bb5\u7684primary_key=True\u3002 (4)unique \u5982\u679c\u8be5\u503c\u8bbe\u7f6e\u4e3a True, \u8fd9\u4e2a\u6570\u636e\u5b57\u6bb5\u7684\u503c\u5728\u6574\u5f20\u8868\u4e2d\u5fc5\u987b\u662f\u552f\u4e00\u7684 (5)choices \u7531\u4e8c\u5143\u7ec4\u7ec4\u6210\u7684\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u4f8b\u5982\uff0c\u5217\u8868\u6216\u5143\u7ec4\uff09\uff0c\u7528\u6765\u7ed9\u5b57\u6bb5\u63d0\u4f9b\u9009\u62e9\u9879\u3002 \u5982\u679c\u8bbe\u7f6e\u4e86choices \uff0c\u9ed8\u8ba4\u7684\u8868\u5355\u5c06\u662f\u4e00\u4e2a\u9009\u62e9\u6846\u800c\u4e0d\u662f\u6807\u51c6\u7684\u6587\u672c\u6846\uff0c<br>\u800c\u4e14\u8fd9\u4e2a\u9009\u62e9\u6846\u7684\u9009\u9879\u5c31\u662fchoices \u4e2d\u7684\u9009\u9879\u3002","title":"2 \u66f4\u591a\u5b57\u6bb5\u548c\u53c2\u6570"},{"location":"#3-settings","text":"\u82e5\u60f3\u5c06\u6a21\u578b\u8f6c\u4e3amysql\u6570\u636e\u5e93\u4e2d\u7684\u8868\uff0c\u9700\u8981\u5728settings\u4e2d\u914d\u7f6e\uff1a DATABASES = { 'default': { 'ENGINE': 'django.db.backends.mysql', 'NAME':'bms', \u3000\u3000 \u3000 # \u8981\u8fde\u63a5\u7684\u6570\u636e\u5e93\uff0c\u8fde\u63a5\u524d\u9700\u8981\u521b\u5efa\u597d 'USER':'root',\u3000\u3000\u3000\u3000\u3000\u3000 # \u8fde\u63a5\u6570\u636e\u5e93\u7684\u7528\u6237\u540d 'PASSWORD':'',\u3000\u3000\u3000\u3000\u3000\u3000 # \u8fde\u63a5\u6570\u636e\u5e93\u7684\u5bc6\u7801 'HOST':'127.0.0.1', # \u8fde\u63a5\u4e3b\u673a\uff0c\u9ed8\u8ba4\u672c\u7ea7 'PORT'\uff1a3306 \u3000\u3000\u3000 # \u7aef\u53e3 \u9ed8\u8ba43306 } } \u6ce8\u610f1\uff1aNAME\u5373\u6570\u636e\u5e93\u7684\u540d\u5b57\uff0c\u5728mysql\u8fde\u63a5\u524d\u8be5\u6570\u636e\u5e93\u5fc5\u987b\u5df2\u7ecf\u521b\u5efa\uff0c\u800c\u4e0a\u9762\u7684sqlite\u6570\u636e\u5e93\u4e0b\u7684db.sqlite3\u5219\u662f\u9879\u76ee\u81ea\u52a8\u521b\u5efa USER\u548cPASSWORD\u5206\u522b\u662f\u6570\u636e\u5e93\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002\u8bbe\u7f6e\u5b8c\u540e\uff0c\u518d\u542f\u52a8\u6211\u4eec\u7684Django\u9879\u76ee\u524d\uff0c\u6211\u4eec\u9700\u8981\u6fc0\u6d3b\u6211\u4eec\u7684mysql\u3002\u7136\u540e\uff0c\u542f\u52a8\u9879\u76ee\uff0c\u4f1a\u62a5\u9519\uff1ano module named MySQLdb \u3002\u8fd9\u662f\u56e0\u4e3adjango\u9ed8\u8ba4\u4f60\u5bfc\u5165\u7684\u9a71\u52a8\u662fMySQLdb\uff0c\u53ef\u662fMySQLdb \u5bf9\u4e8epy3\u6709\u5f88\u5927\u95ee\u9898\uff0c\u6240\u4ee5\u6211\u4eec\u9700\u8981\u7684\u9a71\u52a8\u662fPyMySQL \u6240\u4ee5\uff0c\u6211\u4eec\u53ea\u9700\u8981\u627e\u5230\u9879\u76ee\u540d\u6587\u4ef6\u4e0b\u7684__init__,\u5728\u91cc\u9762\u5199\u5165\uff1a import pymysql pymysql.install_as_MySQLdb() \u6700\u540e\u901a\u8fc7\u4e24\u6761\u6570\u636e\u5e93\u8fc1\u79fb\u547d\u4ee4\u5373\u53ef\u5728\u6307\u5b9a\u7684\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u8868 \uff1a python manage.py makemigrations python manage.py migrate \u6ce8\u610f2:\u786e\u4fdd\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684INSTALLED_APPS\u4e2d\u5199\u5165\u6211\u4eec\u521b\u5efa\u7684app\u540d\u79f0 INSTALLED_APPS = [ 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', \"book\" #\u65b0\u5efa\u7684app\u540d\u79f0 ] \u6ce8\u610f3:\u5982\u679c\u62a5\u9519\u5982\u4e0b\uff1a django.core.exceptions.ImproperlyConfigured: mysqlclient 1.3.3 or newer is required; you have 0.7.11.None MySQLclient\u76ee\u524d\u53ea\u652f\u6301\u5230python3.4\uff0c\u56e0\u6b64\u5982\u679c\u4f7f\u7528\u7684\u66f4\u9ad8\u7248\u672c\u7684python\uff0c\u9700\u8981\u4fee\u6539\u5982\u4e0b\uff1a \u901a\u8fc7\u67e5\u627e\u8def\u5f84C:\\Programs\\Python\\Python36-32\\Lib\\site-packages\\Django-2.0-py3.6.egg\\django\\db\\backends\\mysql \u8fd9\u4e2a\u8def\u5f84\u91cc\u7684\u6587\u4ef6\u628a if version < (1, 3, 3): raise ImproperlyConfigured(\"mysqlclient 1.3.3 or newer is required; you have %s\" % Database.__version__) \u6ce8\u91ca\u6389 \u5c31OK\u4e86\u3002 \u6ce8\u610f4: \u5982\u679c\u60f3\u6253\u5370orm\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u7684sql\uff0c\u9700\u8981\u5728settings\u4e2d\u8fdb\u884c\u5982\u4e0b\u914d\u7f6e\uff1a LOGGING = { 'version': 1, 'disable_existing_loggers': False, 'handlers': { 'console':{ 'level':'DEBUG', 'class':'logging.StreamHandler', }, }, 'loggers': { 'django.db.backends': { 'handlers': ['console'], 'propagate': True, 'level':'DEBUG', }, } }","title":"3 settings\u914d\u7f6e"},{"location":"#_20","text":"","title":"\u6dfb\u52a0\u8868\u7eaa\u5f55"},{"location":"#1_2","text":"# create\u65b9\u6cd5\u7684\u8fd4\u56de\u503cbook_obj\u5c31\u662f\u63d2\u5165book\u8868\u4e2d\u7684python\u8475\u82b1\u5b9d\u5178\u8fd9\u672c\u4e66\u7c4d\u7eaa\u5f55\u5bf9\u8c61 book_obj=Book.objects.create(title=\"python\u8475\u82b1\u5b9d\u5178\",state=True,price=100,publish=\"\u82f9\u679c\u51fa\u7248\u793e\",pub_date=\"2012-12-12\")","title":"\u65b9\u5f0f1"},{"location":"#2_2","text":"book_obj=Book(title=\"python\u8475\u82b1\u5b9d\u5178\",state=True,price=100,publish=\"\u82f9\u679c\u51fa\u7248\u793e\",pub_date=\"2012-12-12\") book_obj.save()","title":"\u65b9\u5f0f2"},{"location":"#_21","text":"","title":"\u67e5\u8be2\u8868\u7eaa\u5f55"},{"location":"#api","text":"<1> all(): \u67e5\u8be2\u6240\u6709\u7ed3\u679c <2> filter(**kwargs): \u5b83\u5305\u542b\u4e86\u4e0e\u6240\u7ed9\u7b5b\u9009\u6761\u4ef6\u76f8\u5339\u914d\u7684\u5bf9\u8c61 <3> get(**kwargs): \u8fd4\u56de\u4e0e\u6240\u7ed9\u7b5b\u9009\u6761\u4ef6\u76f8\u5339\u914d\u7684\u5bf9\u8c61\uff0c\u8fd4\u56de\u7ed3\u679c\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\uff0c \u5982\u679c\u7b26\u5408\u7b5b\u9009\u6761\u4ef6\u7684\u5bf9\u8c61\u8d85\u8fc7\u4e00\u4e2a\u6216\u8005\u6ca1\u6709\u90fd\u4f1a\u629b\u51fa\u9519\u8bef\u3002 <4> exclude(**kwargs): \u5b83\u5305\u542b\u4e86\u4e0e\u6240\u7ed9\u7b5b\u9009\u6761\u4ef6\u4e0d\u5339\u914d\u7684\u5bf9\u8c61 <5> order_by(*field): \u5bf9\u67e5\u8be2\u7ed3\u679c\u6392\u5e8f <6> reverse(): \u5bf9\u67e5\u8be2\u7ed3\u679c\u53cd\u5411\u6392\u5e8f <8> count(): \u8fd4\u56de\u6570\u636e\u5e93\u4e2d\u5339\u914d\u67e5\u8be2(QuerySet)\u7684\u5bf9\u8c61\u6570\u91cf\u3002 <9> first(): \u8fd4\u56de\u7b2c\u4e00\u6761\u8bb0\u5f55 <10> last(): \u8fd4\u56de\u6700\u540e\u4e00\u6761\u8bb0\u5f55 <11> exists(): \u5982\u679cQuerySet\u5305\u542b\u6570\u636e\uff0c\u5c31\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse <12> values(*field): \u8fd4\u56de\u4e00\u4e2aValueQuerySet\u2014\u2014\u4e00\u4e2a\u7279\u6b8a\u7684QuerySet\uff0c\u8fd0\u884c\u540e\u5f97\u5230\u7684\u5e76\u4e0d\u662f\u4e00\u7cfb\u5217 model\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u800c\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684\u5b57\u5178\u5e8f\u5217 <13> values_list(*field): \u5b83\u4e0evalues()\u975e\u5e38\u76f8\u4f3c\uff0c\u5b83\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7ec4\u5e8f\u5217\uff0cvalues\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u5178\u5e8f\u5217 <14> distinct(): \u4ece\u8fd4\u56de\u7ed3\u679c\u4e2d\u5254\u9664\u91cd\u590d\u7eaa\u5f55","title":"\u67e5\u8be2API"},{"location":"#_22","text":"Book.objects.filter(price__in=[100,200,300]) Book.objects.filter(price__gt=100) Book.objects.filter(price__lt=100) Book.objects.filter(price__range=[100,200]) # range \u8303\u56f4 100 -200 \u4e4b\u95f4 Book.objects.filter(title__contains=\"python\") # \u5305\u542b Book.objects.filter(title__icontains=\"python\") # \u5305\u542b \u4e0d\u533a\u5206\u5927\u5c0f\u5199 Book.objects.filter(title__startswith=\"py\") # py\u5f00\u5934\u7684 Book.objects.filter(pub_date__year=2012) Book.objects.filter(pub_date__year=2018,pub_date__month=1,pub_date__day=1) # \u8fc7\u6ee4\u5e74\u6708\u65e5","title":"\u57fa\u4e8e\u53cc\u4e0b\u5212\u7ebf\u7684\u6a21\u7cca\u67e5\u8be2"},{"location":"#_23","text":"\u5220\u9664\u65b9\u6cd5\u5c31\u662f delete()\u3002\u5b83\u8fd0\u884c\u65f6\u7acb\u5373\u5220\u9664\u5bf9\u8c61\u800c\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\u3002\u4f8b\u5982\uff1a model_obj.delete() \u4f60\u4e5f\u53ef\u4ee5\u4e00\u6b21\u6027\u5220\u9664\u591a\u4e2a\u5bf9\u8c61\u3002\u6bcf\u4e2a QuerySet \u90fd\u6709\u4e00\u4e2a delete() \u65b9\u6cd5\uff0c\u5b83\u4e00\u6b21\u6027\u5220\u9664 QuerySet \u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u5220\u9664 pub_date \u662f2005\u5e74\u7684 Entry \u5bf9\u8c61\uff1a Entry.objects.filter(pub_date__year=2005).delete() \u5728 Django \u5220\u9664\u5bf9\u8c61\u65f6\uff0c\u4f1a\u6a21\u4eff SQL \u7ea6\u675f ON DELETE CASCADE \u7684\u884c\u4e3a\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5220\u9664\u4e00\u4e2a\u5bf9\u8c61\u65f6\u4e5f\u4f1a\u5220\u9664\u4e0e\u5b83\u76f8\u5173\u8054\u7684\u5916\u952e\u5bf9\u8c61\u3002\u4f8b\u5982\uff1a b = Blog.objects.get(pk=1) # This will delete the Blog and all of its Entry objects. b.delete() \u8981\u6ce8\u610f\u7684\u662f\uff1a delete() \u65b9\u6cd5\u662f QuerySet \u4e0a\u7684\u65b9\u6cd5\uff0c\u4f46\u5e76\u4e0d\u9002\u7528\u4e8e Manager \u672c\u8eab\u3002\u8fd9\u662f\u4e00\u79cd\u4fdd\u62a4\u673a\u5236\uff0c\u662f\u4e3a\u4e86\u907f\u514d\u610f\u5916\u5730\u8c03\u7528 Entry.objects.delete() \u65b9\u6cd5\u5bfc\u81f4 \u6240\u6709\u7684 \u8bb0\u5f55\u88ab\u8bef\u5220\u9664\u3002\u5982\u679c\u4f60\u786e\u8ba4\u8981\u5220\u9664\u6240\u6709\u7684\u5bf9\u8c61\uff0c\u90a3\u4e48\u4f60\u5fc5\u987b\u663e\u5f0f\u5730\u8c03\u7528\uff1a Entry.objects.all().delete()\u3000\u3000 \u5982\u679c\u4e0d\u60f3\u7ea7\u8054\u5220\u9664\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a: pubHouse = models.ForeignKey(to='Publisher', on_delete=models.SET_NULL, blank=True, null=True)","title":"\u5220\u9664\u8868\u7eaa\u5f55"},{"location":"#_24","text":"Book.objects.filter(title__startswith=\"py\").update(price=120) \u6b64\u5916\uff0cupdate()\u65b9\u6cd5\u5bf9\u4e8e\u4efb\u4f55\u7ed3\u679c\u96c6\uff08QuerySet\uff09\u5747\u6709\u6548\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u540c\u65f6\u66f4\u65b0\u591a\u6761\u8bb0\u5f55update()\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\u503c\uff0c\u8868\u793a\u53d7\u5f71\u54cd\u7684\u8bb0\u5f55\u6761\u6570\u3002","title":"\u4fee\u6539\u8868\u7eaa\u5f55"},{"location":"#_25","text":"","title":"\u7ae0\u8282\u4f5c\u4e1a"},{"location":"#1_3","text":"\u5b9e\u73b0\u529f\u80fd\uff1abook\u5355\u8868\u7684\u589e\u5220\u6539\u67e5","title":"1 \u56fe\u4e66\u7ba1\u7406\u7cfb\u7edf"},{"location":"#2_3","text":"1 \u67e5\u8be2\u8001\u7537\u5b69\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u4ef7\u683c\u5927\u4e8e200\u7684\u4e66\u7c4d Book.objects.filter(publish__name='\u8001\u7537\u5b69\u51fa\u7248\u793e',price__gt = 200) 2 \u67e5\u8be22017\u5e748\u6708\u51fa\u7248\u7684\u6240\u6709\u4ee5py\u5f00\u5934\u7684\u4e66\u7c4d\u540d\u79f0 Book.objects.filter(pub_date__year=2017,pub_date__month=7).filter(title__startswith = py) 3 \u67e5\u8be2\u4ef7\u683c\u4e3a50,100\u6216\u8005150\u7684\u6240\u6709\u4e66\u7c4d\u540d\u79f0\u53ca\u5176\u51fa\u7248\u793e\u540d\u79f0 Book.objects.filter(price__in=[50,100,150]).values(title,Book.publish.name) 4 \u67e5\u8be2\u4ef7\u683c\u5728100\u5230200\u4e4b\u95f4\u7684\u6240\u6709\u4e66\u7c4d\u540d\u79f0\u53ca\u5176\u4ef7\u683c Book.objects.filter(price__range(100,200)).values(title,price) 5 \u67e5\u8be2\u6240\u6709\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u7684\u4e66\u7c4d\u7684\u4ef7\u683c\uff08\u4ece\u9ad8\u5230\u4f4e\u6392\u5e8f\uff0c\u53bb\u91cd\uff09 Book.objects.values(publish__name = '\u4eba\u6c11\u51fa\u7248\u793e').distinct().order_by('-price')","title":"2 \u67e5\u8be2\u64cd\u4f5c\u7ec3\u4e60"},{"location":"#9-django-2","text":"","title":"9 Django \u6a21\u578b\u5c42(2)"},{"location":"#_26","text":"","title":"\u591a\u8868\u64cd\u4f5c"},{"location":"#_27","text":"\u5b9e\u4f8b\uff1a\u6211\u4eec\u6765\u5047\u5b9a\u4e0b\u9762\u8fd9\u4e9b\u6982\u5ff5\uff0c\u5b57\u6bb5\u548c\u5173\u7cfb \u4f5c\u8005\u6a21\u578b\uff1a\u4e00\u4e2a\u4f5c\u8005\u6709\u59d3\u540d\u548c\u5e74\u9f84\u3002 \u4f5c\u8005\u8be6\u7ec6\u6a21\u578b\uff1a\u628a\u4f5c\u8005\u7684\u8be6\u60c5\u653e\u5230\u8be6\u60c5\u8868\uff0c\u5305\u542b\u751f\u65e5\uff0c\u624b\u673a\u53f7\uff0c\u5bb6\u5ead\u4f4f\u5740\u7b49\u4fe1\u606f\u3002\u4f5c\u8005\u8be6\u60c5\u6a21\u578b\u548c\u4f5c\u8005\u6a21\u578b\u4e4b\u95f4\u662f\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff08one-to-one\uff09 \u51fa\u7248\u5546\u6a21\u578b\uff1a\u51fa\u7248\u5546\u6709\u540d\u79f0\uff0c\u6240\u5728\u57ce\u5e02\u4ee5\u53caemail\u3002 \u4e66\u7c4d\u6a21\u578b\uff1a \u4e66\u7c4d\u6709\u4e66\u540d\u548c\u51fa\u7248\u65e5\u671f\uff0c\u4e00\u672c\u4e66\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u4f5c\u8005\uff0c\u4e00\u4e2a\u4f5c\u8005\u4e5f\u53ef\u4ee5\u5199\u591a\u672c\u4e66\uff0c\u6240\u4ee5\u4f5c\u8005\u548c\u4e66\u7c4d\u7684\u5173\u7cfb\u5c31\u662f\u591a\u5bf9\u591a\u7684\u5173\u8054\u5173\u7cfb(many-to-many);\u4e00\u672c\u4e66\u53ea\u5e94\u8be5\u7531\u4e00\u4e2a\u51fa\u7248\u5546\u51fa\u7248\uff0c\u6240\u4ee5\u51fa\u7248\u5546\u548c\u4e66\u7c4d\u662f\u4e00\u5bf9\u591a\u5173\u8054\u5173\u7cfb(one-to-many)\u3002 \u6a21\u578b\u5efa\u7acb\u5982\u4e0b\uff1a from django.db import models # Create your models here. # \u4f5c\u8005\u8868 class Author(models.Model): nid = models.AutoField(primary_key=True) name=models.CharField( max_length=32) age=models.IntegerField() # \u4e0eAuthorDetail\u5efa\u7acb\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb # authorDetail=models.OneToOneField(to=\"AuthorDetail\",on_delete=models.CASCADE) # \u4e0eAuthorDetail\u5efa\u7acb\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb OneToOneField\u4f1a\u81ea\u52a8\u7ed9\u5b57\u6bb5\u9650\u5236unique # \u5173\u8054\u662f\u4e3b\u952enid\u53ef\u4e0d\u52a0,django\u4f1a\u81ea\u52a8\u52a0. on_delete=models.CASCADE Django2.0\u4e4b\u540e\u8981\u52a0\u4e0a. # on_delete=models.CASCADE, # \u5220\u9664\u5173\u8054\u6570\u636e,\u4e0e\u4e4b\u5173\u8054\u4e5f\u5220\u9664 authorDetail=models.OneToOneField(to=\"AuthorDetail\",to_field=\"nid\", on_delete=models.CASCADE) # \u4f5c\u8005\u8be6\u60c5\u8868 class AuthorDetail(models.Model): nid = models.AutoField(primary_key=True) birthday=models.DateField() telephone=models.BigIntegerField() addr=models.CharField( max_length=64) # \u51fa\u7248\u793e\u8868 class Publish(models.Model): nid = models.AutoField(primary_key=True) name=models.CharField( max_length=32) city=models.CharField( max_length=32) email=models.EmailField() # \u56fe\u4e66\u8868 class Book(models.Model): nid = models.AutoField(primary_key=True) title = models.CharField( max_length=32) publishDate=models.DateField() price=models.DecimalField(max_digits=5,decimal_places=2) # \u4e0ePublish\u5efa\u7acb\u4e00\u5bf9\u591a\u7684\u5173\u7cfb,\u5916\u952e\u5b57\u6bb5\u5efa\u7acb\u5728\u591a\u7684\u4e00\u65b9 #\u5173\u8054\u51fa\u7248\u793e\u8868 nid\u5b57\u6bb5 publish\u751f\u6210\u5b57\u6bb5\u65f6\u5019\u4f1a\u81ea\u52a8\u751f\u6210publish_id publish=models.ForeignKey(to=\"Publish\",to_field=\"nid\",on_delete=models.CASCADE) # \u4e0eAuthor\u8868\u5efa\u7acb\u591a\u5bf9\u591a\u7684\u5173\u7cfb,ManyToManyField\u53ef\u4ee5\u5efa\u5728\u4e24\u4e2a\u6a21\u578b\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u81ea\u52a8\u521b\u5efa\u7b2c\u4e09\u5f20\u8868 authors=models.ManyToManyField(to='Author',) \u6269\u5c55: https://www.django.cn/article/show-6.html Django2.0\u5916\u952e\u53c2\u6570on_delete\u7684\u4f7f\u7528\u65b9\u6cd5 \u751f\u6210\u8868\u5982\u4e0b\uff1a \u6ce8\u610f\u4e8b\u9879\uff1a \u8868\u7684\u540d\u79f0 myapp_modelName \uff0c\u662f\u6839\u636e \u6a21\u578b\u4e2d\u7684\u5143\u6570\u636e\u81ea\u52a8\u751f\u6210\u7684\uff0c\u4e5f\u53ef\u4ee5\u8986\u5199\u4e3a\u522b\u7684\u540d\u79f0\u3000\u3000 id \u5b57\u6bb5\u662f\u81ea\u52a8\u6dfb\u52a0\u7684 \u5bf9\u4e8e\u5916\u952e\u5b57\u6bb5\uff0cDjango \u4f1a\u5728\u5b57\u6bb5\u540d\u4e0a\u6dfb\u52a0 \"_id\" \u6765\u521b\u5efa\u6570\u636e\u5e93\u4e2d\u7684\u5217\u540d \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684 CREATE TABLE SQL \u8bed\u53e5\u4f7f\u7528PostgreSQL \u8bed\u6cd5\u683c\u5f0f\uff0c\u8981\u6ce8\u610f\u7684\u662fDjango \u4f1a\u6839\u636esettings \u4e2d\u6307\u5b9a\u7684\u6570\u636e\u5e93\u7c7b\u578b\u6765\u4f7f\u7528\u76f8\u5e94\u7684SQL \u8bed\u53e5\u3002 \u5b9a\u4e49\u597d\u6a21\u578b\u4e4b\u540e\uff0c\u4f60\u9700\u8981\u544a\u8bc9Django _\u4f7f\u7528_\u8fd9\u4e9b\u6a21\u578b\u3002\u4f60\u8981\u505a\u7684\u5c31\u662f\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684INSTALL_APPSZ\u4e2d\u8bbe\u7f6e\uff0c\u5728\u5176\u4e2d\u6dfb\u52a0 models.py \u6240\u5728\u5e94\u7528\u7684\u540d\u79f0\u3002 \u5916\u952e\u5b57\u6bb5 ForeignKey \u6709\u4e00\u4e2a null=True \u7684\u8bbe\u7f6e(\u5b83\u5141\u8bb8\u5916\u952e\u63a5\u53d7\u7a7a\u503c NULL)\uff0c\u4f60\u53ef\u4ee5\u8d4b\u7ed9\u5b83\u7a7a\u503c None \u3002 \u5c0f\u7b14\u8bb0: \u4e00\u65e6\u786e\u5b9a\u4e00\u5bf9\u591a\u5173\u7cfb: \u5efa\u7acb\u4e00\u5bf9\u591a\u7684\u5173\u7cfb----> \u5728\u591a\u7684\u8868\u4e2d\u5efa\u7acb\u5173\u8054\u5b57\u6bb5 \u4e00\u65e6\u786e\u5b9a\u591a\u5bf9\u591a\u5173\u7cfb: \u5efa\u7acb\u591a\u5bf9\u591a\u7684\u5173\u7cfb----> \u521b\u5efa\u7b2c\u4e09\u5f20\u8868(\u5173\u8054\u8868) id \u548c \u4e24\u4e2a\u5173\u8054\u5b57\u6bb5 \u4e00\u65e6\u786e\u5b9a\u4e00\u5bf9\u4e00\u5173\u7cfb: \u5efa\u7acb\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb----> \u5728\u4e24\u5f20\u8868\u4e2d\u4efb\u610f\u4e00\u5f20\u8868\u4e2d\u5efa\u7acb\u5173\u8054\u5b57\u6bb5+Unique \u5efa\u5173\u8054\u5b57\u6bb5\u662f\u4e3a\u4e86\u67e5\u8be2, \u5916\u952e\u7ea6\u675f\u662f\u4e3a\u4e86\u907f\u514d\u4ea7\u751f\u810f\u6570\u636e","title":"\u521b\u5efa\u6a21\u578b"},{"location":"#_28","text":"\u64cd\u4f5c\u524d\u5148\u7b80\u5355\u7684\u5f55\u5165\u4e00\u4e9b\u6570\u636e\uff1a publish\u8868\uff1a author\u8868\uff1a authordetail\u8868:","title":"\u6dfb\u52a0\u8868\u7eaa\u5f55"},{"location":"#_29","text":"\u65b9\u5f0f1: publish_obj=Publish.objects.get(nid=1) book_obj=Book.objects.create(title=\"\u91d1\u74f6\u7709\",publishDate=\"2012-12-12\",price=100,publish=publish_obj) \u65b9\u5f0f2: book_obj=Book.objects.create(title=\"\u91d1\u74f6\u7709\",publishDate=\"2012-12-12\",price=100,publish_id=1)\u3000\u3000 \u6838\u5fc3\uff1abook_obj.publish\u4e0ebook_obj.publish_id\u662f\u4ec0\u4e48\uff1f","title":"\u4e00\u5bf9\u591a"},{"location":"#_30","text":"# \u5f53\u524d\u751f\u6210\u7684\u4e66\u7c4d\u5bf9\u8c61 book_obj=Book.objects.create(title=\"\u8ffd\u98ce\u7b5d\u7684\u4eba\",price=200,publishDate=\"2012-11-12\",publish_id=1) # \u4e3a\u4e66\u7c4d\u7ed1\u5b9a\u7684\u505a\u4f5c\u8005\u5bf9\u8c61 yuan=Author.objects.filter(name=\"yuan\").first() # \u5728Author\u8868\u4e2d\u4e3b\u952e\u4e3a2\u7684\u7eaa\u5f55 egon=Author.objects.filter(name=\"alex\").first() # \u5728Author\u8868\u4e2d\u4e3b\u952e\u4e3a1\u7684\u7eaa\u5f55 # \u7ed1\u5b9a\u591a\u5bf9\u591a\u5173\u7cfb,\u5373\u5411\u5173\u7cfb\u8868book_authors\u4e2d\u6dfb\u52a0\u7eaa\u5f55 book_obj.authors.add(yuan,egon) # \u5c06\u67d0\u4e9b\u7279\u5b9a\u7684 model \u5bf9\u8c61\u6dfb\u52a0\u5230\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408\u4e2d\u3002 ======= book_obj.authors.add(*[]) \u6570\u636e\u5e93\u8868\u7eaa\u5f55\u751f\u6210\u5982\u4e0b\uff1a book\u8868 book_authors\u8868 \u6838\u5fc3:book_obj.authors.all()\u662f\u4ec0\u4e48\uff1f \u591a\u5bf9\u591a\u5173\u7cfb\u5176\u5b83\u5e38\u7528API\uff1a book_obj.authors.remove() # \u5c06\u67d0\u4e2a\u7279\u5b9a\u7684\u5bf9\u8c61\u4ece\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408\u4e2d\u53bb\u9664\u3002 ====== book_obj.authors.remove(*[]) book_obj.authors.clear() #\u6e05\u7a7a\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408 book_obj.authors.set() #\u5148\u6e05\u7a7a\u518d\u8bbe\u7f6e\u3000\u3000 more","title":"\u591a\u5bf9\u591a"},{"location":"#_31","text":"","title":"\u57fa\u4e8e\u5bf9\u8c61\u7684\u8de8\u8868\u67e5\u8be2"},{"location":"#publish-book","text":"\u6b63\u5411\u67e5\u8be2(\u6309\u5b57\u6bb5\uff1apublish)\uff1a # \u67e5\u8be2\u4e3b\u952e\u4e3a1\u7684\u4e66\u7c4d\u7684\u51fa\u7248\u793e\u6240\u5728\u7684\u57ce\u5e02 book_obj=Book.objects.filter(pk=1).first() # book_obj.publish \u662f\u4e3b\u952e\u4e3a1\u7684\u4e66\u7c4d\u5bf9\u8c61\u5173\u8054\u7684\u51fa\u7248\u793e\u5bf9\u8c61 print(book_obj.publish.city) \u3000 \u53cd\u5411\u67e5\u8be2(\u6309\u8868\u540d\uff1abook_set)\uff1a publish=Publish.objects.get(name=\"\u82f9\u679c\u51fa\u7248\u793e\") #publish.book_set.all() : \u4e0e\u82f9\u679c\u51fa\u7248\u793e\u5173\u8054\u7684\u6240\u6709\u4e66\u7c4d\u5bf9\u8c61\u96c6\u5408 \u6309\u8868\u540d\u5c0f\u5199 book_set.all() book_list=publish.book_set.all() for book_obj in book_list: print(book_obj.title)","title":"\u4e00\u5bf9\u591a\u67e5\u8be2\uff08Publish \u4e0e Book\uff09"},{"location":"#author-authordetail","text":"\u6b63\u5411\u67e5\u8be2(\u6309\u5b57\u6bb5\uff1aauthorDetail)\uff1a egon=Author.objects.filter(name=\"egon\").first() print(egon.authorDetail.telephone) \u53cd\u5411\u67e5\u8be2(\u6309\u8868\u540d\uff1aauthor)\uff1a # \u67e5\u8be2\u6240\u6709\u4f4f\u5740\u5728\u5317\u4eac\u7684\u4f5c\u8005\u7684\u59d3\u540d authorDetail_list=AuthorDetail.objects.filter(addr=\"beijing\") for obj in authorDetail_list: print(obj.author.name)","title":"\u4e00\u5bf9\u4e00\u67e5\u8be2(Author \u4e0e AuthorDetail)"},{"location":"#author-book","text":"\u6b63\u5411\u67e5\u8be2(\u6309\u5b57\u6bb5\uff1aauthors)\uff1a # \u91d1\u74f6\u7709\u6240\u6709\u4f5c\u8005\u7684\u540d\u5b57\u4ee5\u53ca\u624b\u673a\u53f7 book_obj=Book.objects.filter(title=\"\u91d1\u74f6\u7709\").first() authors=book_obj.authors.all() for author_obj in authors: print(author_obj.name,author_obj.authorDetail.telephone) \u53cd\u5411\u67e5\u8be2(\u6309\u8868\u540d\uff1abook_set)\uff1a # \u67e5\u8be2egon\u51fa\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57 author_obj=Author.objects.get(name=\"egon\") book_list=author_obj.book_set.all() #\u4e0eegon\u4f5c\u8005\u76f8\u5173\u7684\u6240\u6709\u4e66\u7c4d for book_obj in book_list: print(book_obj.title) \u6ce8\u610f\uff1a \u4f60\u53ef\u4ee5\u901a\u8fc7\u5728 ForeignKey() \u548cManyToManyField\u7684\u5b9a\u4e49\u4e2d\u8bbe\u7f6e related_name \u7684\u503c\u6765\u8986\u5199 FOO_set \u7684\u540d\u79f0\u3002\u4f8b\u5982\uff0c\u5982\u679c Article model \u4e2d\u505a\u4e00\u4e0b\u66f4\u6539\uff1a publish = ForeignKey(Book, related_name='bookList') \u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u4f1a\u5982\u6211\u4eec\u770b\u5230\u8fd9\u822c\uff1a # \u67e5\u8be2 \u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d publish=Publish.objects.get(name=\"\u4eba\u6c11\u51fa\u7248\u793e\") book_list=publish.bookList.all() # \u4e0e\u4eba\u6c11\u51fa\u7248\u793e\u5173\u8054\u7684\u6240\u6709\u4e66\u7c4d\u5bf9\u8c61\u96c6\u5408","title":"\u591a\u5bf9\u591a\u67e5\u8be2 (Author \u4e0e Book)"},{"location":"#_32","text":"Django \u8fd8\u63d0\u4f9b\u4e86\u4e00\u79cd\u76f4\u89c2\u800c\u9ad8\u6548\u7684\u65b9\u5f0f\u5728\u67e5\u8be2(lookups)\u4e2d\u8868\u793a\u5173\u8054\u5173\u7cfb\uff0c\u5b83\u80fd\u81ea\u52a8\u786e\u8ba4 SQL JOIN \u8054\u7cfb\u3002\u8981\u505a\u8de8\u5173\u7cfb\u67e5\u8be2\uff0c\u5c31\u4f7f\u7528\u4e24\u4e2a\u4e0b\u5212\u7ebf\u6765\u94fe\u63a5\u6a21\u578b(model)\u95f4\u5173\u8054\u5b57\u6bb5\u7684\u540d\u79f0\uff0c\u76f4\u5230\u6700\u7ec8\u94fe\u63a5\u5230\u4f60\u60f3\u8981\u7684model \u4e3a\u6b62\u3002 ''' \u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5,\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199\u7528\u6765\u544a\u8bc9ORM\u5f15\u64cejoin\u54ea\u5f20\u8868 '''","title":"\u57fa\u4e8e\u53cc\u4e0b\u5212\u7ebf\u7684\u8de8\u8868\u67e5\u8be2"},{"location":"#_33","text":"# \u7ec3\u4e60: \u67e5\u8be2\u82f9\u679c\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4e0e\u4ef7\u683c(\u4e00\u5bf9\u591a) # \u6b63\u5411\u67e5\u8be2 \u6309\u5b57\u6bb5:publish queryResult=Book.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(publish__name=\"\u82f9\u679c\u51fa\u7248\u793e\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\",\"price\") # \u53cd\u5411\u67e5\u8be2 \u6309\u8868\u540d:book queryResult=Publish.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"\u82f9\u679c\u51fa\u7248\u793e\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"book__title\",\"book__price\")","title":"\u4e00\u5bf9\u591a\u67e5\u8be2"},{"location":"#_34","text":"# \u7ec3\u4e60: \u67e5\u8be2alex\u51fa\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57(\u591a\u5bf9\u591a) # \u6b63\u5411\u67e5\u8be2 \u6309\u5b57\u6bb5:authors: queryResult=Book.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(authors__name=\"yuan\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\") # \u53cd\u5411\u67e5\u8be2 \u6309\u8868\u540d:book queryResult=Author.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"yuan\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"book__title\",\"book__price\")","title":"\u591a\u5bf9\u591a\u67e5\u8be2"},{"location":"#_35","text":"# \u67e5\u8be2alex\u7684\u624b\u673a\u53f7 # \u6b63\u5411\u67e5\u8be2 ret=Author.objects.filter(name=\"alex\").values(\"authordetail__telephone\") # \u53cd\u5411\u67e5\u8be2 ret=AuthorDetail.objects.filter(author__name=\"alex\").values(\"telephone\")","title":"\u4e00\u5bf9\u4e00\u67e5\u8be2"},{"location":"#_36","text":"# \u7ec3\u4e60: \u67e5\u8be2\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4ee5\u53ca\u4f5c\u8005\u7684\u59d3\u540d # \u6b63\u5411\u67e5\u8be2 queryResult=Book.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(publish__name=\"\u4eba\u6c11\u51fa\u7248\u793e\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\",\"authors__name\") # \u53cd\u5411\u67e5\u8be2 queryResult=Publish.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"\u4eba\u6c11\u51fa\u7248\u793e\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"book__title\",\"book__authors__age\",\"book__authors__name\") # \u7ec3\u4e60: \u624b\u673a\u53f7\u4ee5151\u5f00\u5934\u7684\u4f5c\u8005\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u540d\u79f0\u4ee5\u53ca\u51fa\u7248\u793e\u540d\u79f0 # \u65b9\u5f0f1: queryResult=Book.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(authors__authorDetail__telephone__regex=\"151\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\",\"publish__name\") # \u65b9\u5f0f2: ret=Author.objects .filter(authordetail__telephone__startswith=\"151\") .values(\"book__title\",\"book__publish__name\")","title":"\u8fdb\u9636\u7ec3\u4e60(\u8fde\u7eed\u8de8\u8868)"},{"location":"#related_name","text":"\u53cd\u5411\u67e5\u8be2\u65f6\uff0c\u5982\u679c\u5b9a\u4e49\u4e86related_name \uff0c\u5219\u7528related_name\u66ff\u6362\u8868\u540d\uff0c\u4f8b\u5982\uff1a publish = ForeignKey(Blog, related_name='bookList') # \u7ec3\u4e60: \u67e5\u8be2\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4e0e\u4ef7\u683c(\u4e00\u5bf9\u591a) # \u53cd\u5411\u67e5\u8be2 \u4e0d\u518d\u6309\u8868\u540d:book,\u800c\u662frelated_name:bookList queryResult=Publish.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"\u4eba\u6c11\u51fa\u7248\u793e\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"bookList__title\",\"bookList__price\")","title":"related_name"},{"location":"#_37","text":"","title":"\u805a\u5408\u67e5\u8be2\u4e0e\u5206\u7ec4\u67e5\u8be2"},{"location":"#_38","text":"aggregate ( args, *kwargs) # \u8ba1\u7b97\u6240\u6709\u56fe\u4e66\u7684\u5e73\u5747\u4ef7\u683c >>> from django.db.models import Avg >>> Book.objects.all().aggregate(Avg('price')) {'price__avg': 34.35} aggregate() \u662f QuerySet \u7684\u4e00\u4e2a\u7ec8\u6b62\u5b50\u53e5\uff0c\u610f\u601d\u662f\u8bf4\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u4e00\u4e9b\u952e\u503c\u5bf9\u7684\u5b57\u5178\u3002\u952e\u7684\u540d\u79f0\u662f\u805a\u5408\u503c\u7684\u6807\u8bc6\u7b26\uff0c\u503c\u662f\u8ba1\u7b97\u51fa\u6765\u7684\u805a\u5408\u503c\u3002\u952e\u7684\u540d\u79f0\u662f\u6309\u7167\u5b57\u6bb5\u548c\u805a\u5408\u51fd\u6570\u7684\u540d\u79f0\u81ea\u52a8\u751f\u6210\u51fa\u6765\u7684\u3002\u5982\u679c\u4f60\u60f3\u8981\u4e3a\u805a\u5408\u503c\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0\uff0c\u53ef\u4ee5\u5411\u805a\u5408\u5b50\u53e5\u63d0\u4f9b\u5b83\u3002 >>> Book.objects.aggregate(average_price=Avg('price')) {'average_price': 34.35} \u5982\u679c\u4f60\u5e0c\u671b\u751f\u6210\u4e0d\u6b62\u4e00\u4e2a\u805a\u5408\uff0c\u4f60\u53ef\u4ee5\u5411 aggregate() \u5b50\u53e5\u4e2d\u6dfb\u52a0\u53e6\u4e00\u4e2a\u53c2\u6570\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u4e5f\u60f3\u77e5\u9053\u6240\u6709\u56fe\u4e66\u4ef7\u683c\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u53ef\u4ee5\u8fd9\u6837\u67e5\u8be2\uff1a >>> from django.db.models import Avg, Max, Min >>> Book.objects.aggregate(Avg('price'), Max('price'), Min('price')) {'price__avg': 34.35, 'price__max': Decimal('81.20'), 'price__min': Decimal('12.99')}","title":"\u805a\u5408"},{"location":"#_39","text":"###################################\uff0d\uff0d\u5355\u8868\u5206\u7ec4\u67e5\u8be2\uff0d\uff0d####################################################### \u67e5\u8be2\u6bcf\u4e00\u4e2a\u90e8\u95e8\u540d\u79f0\u4ee5\u53ca\u5bf9\u5e94\u7684\u5458\u5de5\u6570 emp: id name age salary dep 1 alex 12 2000 \u9500\u552e\u90e8 2 egon 22 3000 \u4eba\u4e8b\u90e8 3 wen 22 5000 \u4eba\u4e8b\u90e8 sql\u8bed\u53e5: select dep,Count(*) from emp group by dep; ORM: emp.objects.values(\"dep\").annotate(c=Count(\"id\") ###################################\uff0d\uff0d\u591a\u8868\u5206\u7ec4\u67e5\u8be2\uff0d\uff0d########################### \u591a\u8868\u5206\u7ec4\u67e5\u8be2\uff1a \u67e5\u8be2\u6bcf\u4e00\u4e2a\u90e8\u95e8\u540d\u79f0\u4ee5\u53ca\u5bf9\u5e94\u7684\u5458\u5de5\u6570 emp: id name age salary dep_id 1 alex 12 2000 1 2 egon 22 3000 2 3 wen 22 5000 2 dep id name 1 \u9500\u552e\u90e8 2 \u4eba\u4e8b\u90e8 emp\uff0ddep: id name age salary dep_id id name 1 alex 12 2000 1 1 \u9500\u552e\u90e8 2 egon 22 3000 2 2 \u4eba\u4e8b\u90e8 3 wen 22 5000 2 2 \u4eba\u4e8b\u90e8 sql\u8bed\u53e5: select dep.name,Count(*) from emp left join dep on emp.dep_id=dep.id group by dep.id ORM: dep.objetcs.values(\"id\").annotate(c=Count(\"emp\")).values(\"name\",\"c\") class Emp(models.Model): name=models.CharField(max_length=32) age=models.IntegerField() salary=models.DecimalField(max_digits=8,decimal_places=2) dep=models.CharField(max_length=32) province=models.CharField(max_length=32) annotate()\u4e3a\u8c03\u7528\u7684 QuerySet \u4e2d\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u751f\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u7edf\u8ba1\u503c\uff08\u7edf\u8ba1\u65b9\u6cd5\u7528\u805a\u5408\u51fd\u6570\uff09\u3002 \u603b\u7ed3 \uff1a\u8de8\u8868\u5206\u7ec4\u67e5\u8be2\u672c\u8d28\u5c31\u662f\u5c06\u5173\u8054\u8868join\u6210\u4e00\u5f20\u8868\uff0c\u518d\u6309\u5355\u8868\u7684\u601d\u8def\u8fdb\u884c\u5206\u7ec4\u67e5\u8be2\u3002","title":"\u5206\u7ec4"},{"location":"#_40","text":"(1) \u7ec3\u4e60\uff1a\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u51fa\u7248\u793e\u7684\u6700\u4fbf\u5b9c\u7684\u4e66 publishList=Publish.objects.annotate(MinPrice=Min(\"book__price\")) for publish_obj in publishList: print(publish_obj.name,publish_obj.MinPrice) annotate\u7684\u8fd4\u56de\u503c\u662fquerySet\uff0c\u5982\u679c\u4e0d\u60f3\u904d\u5386\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7528\u4e0avaluelist\uff1a queryResult= Publish.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.annotate(MinPrice=Min(\"book__price\")) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"name\",\"MinPrice\") print(queryResult) ''' SELECT \"app01_publish\".\"name\", MIN(\"app01_book\".\"price\") AS \"MinPrice\" FROM \"app01_publish\" LEFT JOIN \"app01_book\" ON (\"app01_publish\".\"nid\" = \"app01_book\".\"publish_id\") GROUP BY \"app01_publish\".\"nid\", \"app01_publish\".\"name\", \"app01_publish\".\"city\", \"app01_publish\".\"email\" ''' (2) \u7ec3\u4e60\uff1a\u7edf\u8ba1\u6bcf\u4e00\u672c\u4e66\u7684\u4f5c\u8005\u4e2a\u6570 ret = Book.objects.annotate(authorsNum=Count(\"authors__name\")).values(\"title\",\"authorsNum\") (3) \u7edf\u8ba1\u6bcf\u4e00\u672c\u4ee5py\u5f00\u5934\u7684\u4e66\u7c4d\u7684\u4f5c\u8005\u4e2a\u6570\uff1a queryResult=Book.objects.filter(title__startswith=\"Py\").annotate(num_authors=Count('authors')) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 \u3000 ret = Book.objects.filter(title__startswith=\"py\").annotate(authorSnum=Count(\"authors__name\")).values_list(\"title\",\"authorSnum\") (4) \u7edf\u8ba1\u4e0d\u6b62\u4e00\u4e2a\u4f5c\u8005\u7684\u56fe\u4e66\uff1a queryResult=Book.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.annotate(num_authors=Count('authors')) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(num_authors__gt=1) (5) \u6839\u636e\u4e00\u672c\u56fe\u4e66\u4f5c\u8005\u6570\u91cf\u7684\u591a\u5c11\u5bf9\u67e5\u8be2\u96c6 QuerySet \u8fdb\u884c\u6392\u5e8f: Book.objects.annotate(num_authors=Count('authors')).order_by('num_authors') (6) \u67e5\u8be2\u5404\u4e2a\u4f5c\u8005\u51fa\u7684\u4e66\u7684\u603b\u4ef7\u683c: # \u6309author\u8868\u7684\u6240\u6709\u5b57\u6bb5 group by queryResult=Author.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.annotate(SumPrice=Sum(\"book__price\")) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"name\",\"SumPrice\") print(queryResult)","title":"\u67e5\u8be2\u7ec3\u4e60"},{"location":"#fq","text":"","title":"F\u67e5\u8be2\u4e0eQ\u67e5\u8be2"},{"location":"#f","text":"\u5728\u4e0a\u9762\u6240\u6709\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6784\u9020\u7684\u8fc7\u6ee4\u5668\u90fd\u53ea\u662f\u5c06\u5b57\u6bb5\u503c\u4e0e\u67d0\u4e2a\u5e38\u91cf\u505a\u6bd4\u8f83\u3002\u5982\u679c\u6211\u4eec\u8981\u5bf9\u4e24\u4e2a\u5b57\u6bb5\u7684\u503c\u505a\u6bd4\u8f83\uff0c\u90a3\u8be5\u600e\u4e48\u505a\u5462\uff1f Django \u63d0\u4f9b F() \u6765\u505a\u8fd9\u6837\u7684\u6bd4\u8f83\u3002F() \u7684\u5b9e\u4f8b\u53ef\u4ee5\u5728\u67e5\u8be2\u4e2d\u5f15\u7528\u5b57\u6bb5\uff0c\u6765\u6bd4\u8f83\u540c\u4e00\u4e2a model \u5b9e\u4f8b\u4e2d\u4e24\u4e2a\u4e0d\u540c\u5b57\u6bb5\u7684\u503c\u3002 # \u67e5\u8be2\u8bc4\u8bba\u6570\u5927\u4e8e\u6536\u85cf\u6570\u7684\u4e66\u7c4d from django.db.models import F Book.objects.filter(commnetNum__lt=F('keepNum')) Django \u652f\u6301 F() \u5bf9\u8c61\u4e4b\u95f4\u4ee5\u53ca F() \u5bf9\u8c61\u548c\u5e38\u6570\u4e4b\u95f4\u7684\u52a0\u51cf\u4e58\u9664\u548c\u53d6\u6a21\u7684\u64cd\u4f5c\u3002 # \u67e5\u8be2\u8bc4\u8bba\u6570\u5927\u4e8e\u6536\u85cf\u65702\u500d\u7684\u4e66\u7c4d Book.objects.filter(commnetNum__lt=F('keepNum')*2) \u4fee\u6539\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u4f7f\u7528F\u51fd\u6570,\u6bd4\u5982\u5c06\u6bcf\u4e00\u672c\u4e66\u7684\u4ef7\u683c\u63d0\u9ad830\u5143\uff1a Book.objects.all().update(price=F(\"price\")+30)\u3000 \u6570\u636e\u51c6\u5907: \u76f4\u63a5\u5728models.py book \u7c7b\u4e2d\u6dfb\u52a0\u4e24\u4e2a\u5b57\u6bb5 comment_sum = models.IntegerField(default=0) read_sum = models.IntegerField(default=0) kanghuadeMacBook-Pro:08-ORM2 kanghua$ python3.9 manage.py makemigrations kanghuadeMacBook-Pro:08-ORM2 kanghua$ python3.9 manage.py migrate","title":"F\u67e5\u8be2"},{"location":"#q","text":"filter() \u7b49\u65b9\u6cd5\u4e2d\u7684\u5173\u952e\u5b57\u53c2\u6570\u67e5\u8be2\u90fd\u662f\u4e00\u8d77\u8fdb\u884c\u201cAND\u201d \u7684\u3002 \u5982\u679c\u4f60\u9700\u8981\u6267\u884c\u66f4\u590d\u6742\u7684\u67e5\u8be2\uff08\u4f8b\u5982 OR \u8bed\u53e5\uff09\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Q \u5bf9\u8c61 \u3002 from django.db.models import Q Q(title__startswith='Py') Q \u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 & \u548c | \u64cd\u4f5c\u7b26\u7ec4\u5408\u8d77\u6765\u3002\u5f53\u4e00\u4e2a\u64cd\u4f5c\u7b26\u5728\u4e24\u4e2a Q \u5bf9\u8c61\u4e0a\u4f7f\u7528\u65f6\uff0c\u5b83\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684 Q \u5bf9\u8c61\u3002 bookList=Book.objects.filter(Q(authors__name=\"yuan\")|Q(authors__name=\"egon\")) \u7b49\u540c\u4e8e\u4e0b\u9762\u7684SQL WHERE \u5b50\u53e5\uff1a WHERE name =\"yuan\" OR name =\"egon\" \u4f60\u53ef\u4ee5\u7ec4\u5408 & \u548c | \u64cd\u4f5c\u7b26\u4ee5\u53ca\u4f7f\u7528\u62ec\u53f7\u8fdb\u884c\u5206\u7ec4\u6765\u7f16\u5199\u4efb\u610f\u590d\u6742\u7684 Q \u5bf9\u8c61\u3002\u540c\u65f6\uff0c Q \u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 ~ \u64cd\u4f5c\u7b26\u53d6\u53cd\uff0c\u8fd9\u5141\u8bb8\u7ec4\u5408\u6b63\u5e38\u7684\u67e5\u8be2\u548c\u53d6\u53cd( NOT ) \u67e5\u8be2\uff1a bookList=Book.objects.filter(Q(authors__name=\"yuan\") & ~Q(publishDate__year=2017)).values_list(\"title\") \u67e5\u8be2\u51fd\u6570\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528 Q \u5bf9\u8c61 \u548c\u5173\u952e\u5b57\u53c2\u6570\u3002\u6240\u6709\u63d0\u4f9b\u7ed9\u67e5\u8be2\u51fd\u6570\u7684\u53c2\u6570\uff08\u5173\u952e\u5b57\u53c2\u6570\u6216 Q \u5bf9\u8c61\uff09\u90fd\u5c06\"AND\u201d\u5728\u4e00\u8d77\u3002\u4f46\u662f\uff0c\u5982\u679c\u51fa\u73b0 Q \u5bf9\u8c61\uff0c\u5b83\u5fc5\u987b\u4f4d\u4e8e\u6240\u6709\u5173\u952e\u5b57\u53c2\u6570\u7684\u524d\u9762\u3002\u4f8b\u5982\uff1a bookList=Book.objects.filter(Q(publishDate__year=2016) | Q(publishDate__year=2017), title__icontains=\"python\" )","title":"Q\u67e5\u8be2"},{"location":"#9-1-relatedmanager","text":"","title":"9-1 \u5173\u8054\u7ba1\u7406\u5668(RelatedManager)"},{"location":"#class-relatedmanager","text":"\"\u5173\u8054\u7ba1\u7406\u5668\"\u662f\u5728\u4e00\u5bf9\u591a\u6216\u8005\u591a\u5bf9\u591a\u7684\u5173\u8054\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u7684\u7ba1\u7406\u5668\u3002\u5b83\u5b58\u5728\u4e8e\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5\uff1a ForeignKey\u5173\u7cfb\u7684\u201c\u53e6\u4e00\u8fb9\u201d\u3002\u50cf\u8fd9\u6837\uff1a from django.db import models class Reporter(models.Model): # ... pass class Article(models.Model): reporter = models.ForeignKey(Reporter) \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u7ba1\u7406\u5668reporter.article_set\u62e5\u6709\u4e0b\u9762\u7684\u65b9\u6cd5\u3002 ManyToManyField\u5173\u7cfb\u7684\u4e24\u8fb9\uff1a class Topping(models.Model): # ... pass class Pizza(models.Model): toppings = models.ManyToManyField(Topping) \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0ctopping.pizza_set \u548cpizza.toppings\u90fd\u62e5\u6709\u4e0b\u9762\u7684\u65b9\u6cd5\u3002 add(obj1[, obj2, ...]) \u628a\u6307\u5b9a\u7684\u6a21\u578b\u5bf9\u8c61\u6dfb\u52a0\u5230\u5173\u8054\u5bf9\u8c61\u96c6\u4e2d\u3002 \u4f8b\u5982\uff1a >>> b = Blog.objects.get(id=1) >>> e = Entry.objects.get(id=234) >>> b.entry_set.add(e) # Associates Entry e with Blog b. \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5bf9\u4e8eForeignKey\u5173\u7cfb\uff0ce.save()\u7531\u5173\u8054\u7ba1\u7406\u5668\u8c03\u7528\uff0c\u6267\u884c\u66f4\u65b0\u64cd\u4f5c\u3002\u7136\u800c\uff0c\u5728\u591a\u5bf9\u591a\u5173\u7cfb\u4e2d\u4f7f\u7528add()\u5e76\u4e0d\u4f1a\u8c03\u7528\u4efb\u4f55 save()\u65b9\u6cd5\uff0c\u800c\u662f\u7531QuerySet.bulk_create()\u521b\u5efa\u5173\u7cfb\u3002 \u5ef6\u4f38\uff1a # 1 *[]\u7684\u4f7f\u7528 >>> book_obj = Book.objects.get(id=1) >>> author_list = Author.objects.filter(id__gt=2) >>> book_obj.authors.add(*author_list) # 2 \u76f4\u63a5\u7ed1\u5b9a\u4e3b\u952e book_obj.authors.add(*[1,3]) # \u5c06id=1\u548cid=3\u7684\u4f5c\u8005\u5bf9\u8c61\u6dfb\u52a0\u5230\u8fd9\u672c\u4e66\u7684\u4f5c\u8005\u96c6\u5408\u4e2d # \u5e94\u7528: \u6dfb\u52a0\u6216\u8005\u7f16\u8f91\u65f6,\u63d0\u4ea4\u4f5c\u8005\u4fe1\u606f\u65f6\u53ef\u4ee5\u7528\u5230. create(**kwargs) \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff0c\u4fdd\u5b58\u5bf9\u8c61\uff0c\u5e76\u5c06\u5b83\u6dfb\u52a0\u5230\u5173\u8054\u5bf9\u8c61\u96c6\u4e4b\u4e2d\u3002\u8fd4\u56de\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\uff1a >>> b = Blog.objects.get(id=1) >>> e = b.entry_set.create( ... headline='Hello', ... body_text='Hi', ... pub_date=datetime.date(2005, 1, 1) ... ) # No need to call e.save() at this point -- it's already been saved. \u8fd9\u5b8c\u5168\u7b49\u4ef7\u4e8e\uff08\u4e0d\u8fc7\u66f4\u52a0\u7b80\u6d01\u4e8e\uff09\uff1a >>> b = Blog.objects.get(id=1) >>> e = Entry( ... blog=b, ... headline='Hello', ... body_text='Hi', ... pub_date=datetime.date(2005, 1, 1) ... ) >>> e.save(force_insert=True) \u8981\u6ce8\u610f\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6307\u5b9a\u6a21\u578b\u4e2d\u7528\u4e8e\u5b9a\u4e49\u5173\u7cfb\u7684\u5173\u952e\u8bcd\u53c2\u6570\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u4f20\u5165blog\u53c2\u6570\u7ed9create()\u3002Django\u4f1a\u660e\u767d\u65b0\u7684 Entry\u5bf9\u8c61blog \u5e94\u8be5\u6dfb\u52a0\u5230b\u4e2d\u3002 remove(obj1[, obj2, ...]) \u4ece\u5173\u8054\u5bf9\u8c61\u96c6\u4e2d\u79fb\u9664\u6267\u884c\u7684\u6a21\u578b\u5bf9\u8c61\uff1a >>> b = Blog.objects.get(id=1) >>> e = Entry.objects.get(id=234) >>> b.entry_set.remove(e) # Disassociates Entry e from Blog b. \u5bf9\u4e8eForeignKey\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4ec5\u5728null=True\u65f6\u5b58\u5728\u3002 clear() \u4ece\u5173\u8054\u5bf9\u8c61\u96c6\u4e2d\u79fb\u9664\u4e00\u5207\u5bf9\u8c61\u3002 >>> b = Blog.objects.get(id=1) >>> b.entry_set.clear() \u6ce8\u610f\u8fd9\u6837\u4e0d\u4f1a\u5220\u9664\u5bf9\u8c61 \u2014\u2014 \u53ea\u4f1a\u5220\u9664\u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u8054\u3002 \u5c31\u50cf remove() \u65b9\u6cd5\u4e00\u6837\uff0cclear()\u53ea\u80fd\u5728 null=True\u7684ForeignKey\u4e0a\u88ab\u8c03\u7528\u3002 set()\u65b9\u6cd5 \u5148\u6e05\u7a7a\uff0c\u5728\u8bbe\u7f6e\uff0c\u7f16\u8f91\u4e66\u7c4d\u65f6\u5373\u53ef\u7528\u5230 \u6ce8\u610f \u5bf9\u4e8e\u6240\u6709\u7c7b\u578b\u7684\u5173\u8054\u5b57\u6bb5\uff0cadd()\u3001create()\u3001remove()\u548cclear(),set()\u90fd\u4f1a\u9a6c\u4e0a\u66f4\u65b0\u6570\u636e\u5e93\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u5173\u8054\u7684\u4efb\u4f55\u4e00\u7aef\uff0c\u90fd\u4e0d\u9700\u8981\u518d\u8c03\u7528save()\u65b9\u6cd5\u3002 \u76f4\u63a5\u8d4b\u503c\uff1a \u901a\u8fc7\u8d4b\u503c\u4e00\u4e2a\u65b0\u7684\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\uff0c\u5173\u8054\u5bf9\u8c61\u96c6\u53ef\u4ee5\u88ab\u6574\u4f53\u66ff\u6362\u6389\u3002 >>> new_list = [obj1, obj2, obj3] >>> e.related_set = new_list \u5982\u679c\u5916\u952e\u5173\u7cfb\u6ee1\u8db3null=True\uff0c\u5173\u8054\u7ba1\u7406\u5668\u4f1a\u5728\u6dfb\u52a0new_list\u4e2d\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u9996\u5148\u8c03\u7528clear()\u65b9\u6cd5\u6765\u89e3\u9664\u5173\u8054\u96c6\u4e2d\u4e00\u5207\u5df2\u5b58\u5728\u5bf9\u8c61\u7684\u5173\u8054\u3002\u5426\u5219\uff0c new_list\u4e2d\u7684\u5bf9\u8c61\u4f1a\u5728\u5df2\u5b58\u5728\u7684\u5173\u8054\u7684\u57fa\u7840\u4e0a\u88ab\u6dfb\u52a0\u3002\u3000\u3000 \u62a5\u9519\u8bb0\u5f55: #\u62a5\u9519\u73af\u5883 python3.9.4 django2.2 PyMySQL1.0.2 mysql 5.7.31 #\u6570\u636e\u8fc1\u79fb\u65f6\u5019 python3.9 manage.py makemigrations AttributeError: 'str' object has no attribute 'decode' # \u4fee\u6539django \u6e90\u7801 /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/django/db/backends/mysql/operations.py #140\u884c def last_executed_query(self, cursor, sql, params): # With MySQLdb, cursor objects have an (undocumented) \"_executed\" # attribute where the exact query sent to the database is saved. # See MySQLdb/cursors.py in the source distribution. query = getattr(cursor, '_executed', None) # \u4fee\u6539\u524d\u7684\u6e90\u7801 # if query is not None: # # query = query.decode(errors='replace') # query = query.encode(errors='replace') # \u6216\u8005\u628a\u4e0a\u4e00\u884c\u6ce8\u91ca\u6389 \u7528\u8fd9\u4e00\u884c\u4e5f\u53ef\u4ee5\u89e3\u51b3 # return query # \u4fee\u6539\u540e\u7684\u6e90\u7801 from django.utils.encoding import force_str # \u53ea\u9700\u8981\u5c06\u8fd9\u4e2a\u5bfc\u5165\uff0c\u653e\u5230\u8be5\u6a21\u5757\u7684\u6700\u4e0a\u9762\u5373\u53ef return force_str(query, errors='replace') \u66f4\u591a\u62a5\u9519 \u53c2\u8003 https://www.cnblogs.com/Neeo/articles/14036364.html","title":"class RelatedManager"},{"location":"#10-djangoajax","text":"","title":"10 Django\u4e0eAjax"},{"location":"#ajax","text":"","title":"Ajax"},{"location":"#ajax_1","text":"AJAX\uff08Asynchronous Javascript And XML\uff09\u7ffb\u8bd1\u6210\u4e2d\u6587\u5c31\u662f\u201c\u5f02\u6b65Javascript\u548cXML\u201d\u3002\u5373\u4f7f\u7528Javascript\u8bed\u8a00\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u5f02\u6b65\u4ea4\u4e92\uff0c\u4f20\u8f93\u7684\u6570\u636e\u4e3aXML\uff08\u5f53\u7136\uff0c\u4f20\u8f93\u7684\u6570\u636e\u4e0d\u53ea\u662fXML,\u73b0\u5728\u66f4\u591a\u4f7f\u7528json\u6570\u636e\uff09\u3002 \u540c\u6b65\u4ea4\u4e92\uff1a\u5ba2\u6237\u7aef\u53d1\u51fa\u4e00\u4e2a\u8bf7\u6c42\u540e\uff0c\u9700\u8981\u7b49\u5f85\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\u540e\uff0c\u624d\u80fd\u53d1\u51fa\u7b2c\u4e8c\u4e2a\u8bf7\u6c42\uff1b \u5f02\u6b65\u4ea4\u4e92\uff1a\u5ba2\u6237\u7aef\u53d1\u51fa\u4e00\u4e2a\u8bf7\u6c42\u540e\uff0c\u65e0\u9700\u7b49\u5f85\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u5c31\u53ef\u4ee5\u53d1\u51fa\u7b2c\u4e8c\u4e2a\u8bf7\u6c42\u3002 AJAX\u9664\u4e86 \u5f02\u6b65 \u7684\u7279\u70b9\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u5c31\u662f\uff1a\u6d4f\u89c8\u5668\u9875\u9762 \u5c40\u90e8\u5237\u65b0 \uff1b\uff08\u8fd9\u4e00\u7279\u70b9\u7ed9\u7528\u6237\u7684\u611f\u53d7\u662f\u5728\u4e0d\u77e5\u4e0d\u89c9\u4e2d\u5b8c\u6210\u8bf7\u6c42\u548c\u54cd\u5e94\u8fc7\u7a0b\uff09 \u573a\u666f\uff1a","title":"Ajax\u7b80\u4ecb"},{"location":"#_41","text":"AJAX\u4f7f\u7528Javascript\u6280\u672f\u5411\u670d\u52a1\u5668\u53d1\u9001\u5f02\u6b65\u8bf7\u6c42 AJAX\u65e0\u987b\u5237\u65b0\u6574\u4e2a\u9875\u9762","title":"\u4f18\u70b9\uff1a"},{"location":"#jqueryajax","text":"<button class=\"send_Ajax\">send_Ajax</button> <script> $(\".send_Ajax\").click(function(){ // \u53d1\u9001ajax\u8bf7\u6c42 $.ajax({ url:\"/handle_Ajax/\", // \u8bf7\u6c42url type:\"POST\", // \u8bf7\u6c42\u65b9\u5f0fpost data:{username:\"Yuan\",password:123}, //\u53d1\u9001\u6570\u636e success:function(data){ // \u56de\u8c03\u51fd\u6570 console.log(data) }, \u3000\u3000\u3000\u3000\u3000\u3000 error: function (jqXHR, textStatus, err) { console.log(arguments); }, complete: function (jqXHR, textStatus) { console.log(textStatus); }, statusCode: { '403': function (jqXHR, textStatus, err) { console.log(arguments); }, '400': function (jqXHR, textStatus, err) { console.log(arguments); } } }) }) // \u66f4\u591a\u53c2\u8003 https://blog.csdn.net/zhbitxhd/article/details/9946799 </script>","title":"\u57fa\u4e8ejquery\u7684Ajax\u5b9e\u73b0"},{"location":"#ajax-ajax","text":"","title":"Ajax\uff0d\u670d\u52a1\u5668\uff0dAjax\u6d41\u7a0b\u56fe"},{"location":"#_42","text":"","title":"\u6848\u4f8b"},{"location":"#1_4","text":"\u5728\u6ce8\u518c\u8868\u5355\u4e2d\uff0c\u5f53\u7528\u6237\u586b\u5199\u4e86\u7528\u6237\u540d\u540e\uff0c\u628a\u5149\u6807\u79fb\u5f00\u540e\uff0c\u4f1a\u81ea\u52a8\u5411\u670d\u52a1\u5668\u53d1\u9001\u5f02\u6b65\u8bf7\u6c42\u3002\u670d\u52a1\u5668\u8fd4\u56detrue\u6216false\uff0c\u8fd4\u56detrue\u8868\u793a\u8fd9\u4e2a\u7528\u6237\u540d\u5df2\u7ecf\u88ab\u6ce8\u518c\u8fc7\uff0c\u8fd4\u56defalse\u8868\u793a\u6ca1\u6709\u6ce8\u518c\u8fc7\u3002\u5ba2\u6237\u7aef\u5f97\u5230\u670d\u52a1\u5668\u8fd4\u56de\u7684\u7ed3\u679c\u540e\uff0c\u786e\u5b9a\u662f\u5426\u5728\u7528\u6237\u540d\u6587\u672c\u6846\u540e\u663e\u793a\u201c\u7528\u6237\u540d\u5df2\u88ab\u6ce8\u518c\u201d\u7684\u9519\u8bef\u4fe1\u606f\uff01","title":"1 \u7528\u6237\u540d\u662f\u5426\u5df2\u88ab\u6ce8\u518c"},{"location":"#2-ajax","text":"\u7528\u6237\u5728\u8868\u5355\u8f93\u5165\u7528\u6237\u540d\u4e0e\u5bc6\u7801\uff0c\u901a\u8fc7Ajax\u63d0\u4ea4\u7ed9\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u9a8c\u8bc1\u540e\u8fd4\u56de\u54cd\u5e94\u4fe1\u606f\uff0c\u5ba2\u6237\u7aef\u901a\u8fc7\u54cd\u5e94\u4fe1\u606f\u786e\u5b9a\u662f\u5426\u767b\u5f55\u6210\u529f\uff0c\u6210\u529f\uff0c\u5219\u8df3\u8f6c\u5230\u9996\u9875\uff0c\u5426\u5219\uff0c\u5728\u9875\u9762\u4e0a\u663e\u793a\u76f8\u5e94\u7684\u9519\u8bef\u4fe1\u606f\u3002","title":"2 \u57fa\u4e8eAjax\u8fdb\u884c\u767b\u5f55\u9a8c\u8bc1"},{"location":"#_43","text":"","title":"\u6587\u4ef6\u4e0a\u4f20"},{"location":"#contenttype","text":"ContentType\u6307\u7684\u662f\u8bf7\u6c42\u4f53\u7684\u7f16\u7801\u7c7b\u578b\uff0c\u5e38\u89c1\u7684\u7c7b\u578b\u5171\u67093\u79cd\uff1a","title":"\u8bf7\u6c42\u5934ContentType"},{"location":"#1-applicationx-www-form-urlencoded","text":"\u8fd9\u5e94\u8be5\u662f\u6700\u5e38\u89c1\u7684 POST \u63d0\u4ea4\u6570\u636e\u7684\u65b9\u5f0f\u4e86\u3002\u6d4f\u89c8\u5668\u7684\u539f\u751f \u8868\u5355\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e enctype \u5c5e\u6027\uff0c\u90a3\u4e48\u6700\u7ec8\u5c31\u4f1a\u4ee5 application/x-www-form-urlencoded \u65b9\u5f0f\u63d0\u4ea4\u6570\u636e\u3002\u8bf7\u6c42\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u8fd9\u6837\uff08\u65e0\u5173\u7684\u8bf7\u6c42\u5934\u5728\u672c\u6587\u4e2d\u90fd\u7701\u7565\u6389\u4e86\uff09\uff1a POST http://www.example.com HTTP/1.1 Content-Type: application/x-www-form-urlencoded;charset=utf-8 user=yuan&age=22","title":"1 application/x-www-form-urlencoded"},{"location":"#2-multipartform-data","text":"\u8fd9\u53c8\u662f\u4e00\u4e2a\u5e38\u89c1\u7684 POST \u6570\u636e\u63d0\u4ea4\u7684\u65b9\u5f0f\u3002\u6211\u4eec\u4f7f\u7528\u8868\u5355\u4e0a\u4f20\u6587\u4ef6\u65f6\uff0c\u5fc5\u987b\u8ba9 \u8868\u5355\u7684 enctype \u7b49\u4e8e multipart/form-data\u3002\u76f4\u63a5\u6765\u770b\u4e00\u4e2a\u8bf7\u6c42\u793a\u4f8b\uff1a POST http://www.example.com HTTP/1.1 Content-Type:multipart/form-data; boundary=----WebKitFormBoundaryrGKCBY7qhFd3TrwA ------WebKitFormBoundaryrGKCBY7qhFd3TrwA Content-Disposition: form-data; name=\"user\" yuan ------WebKitFormBoundaryrGKCBY7qhFd3TrwA Content-Disposition: form-data; name=\"file\"; filename=\"chrome.png\" Content-Type: image/png PNG ... content of chrome.png ... ------WebKitFormBoundaryrGKCBY7qhFd3TrwA-- \u8fd9\u4e2a\u4f8b\u5b50\u7a0d\u5fae\u590d\u6742\u70b9\u3002\u9996\u5148\u751f\u6210\u4e86\u4e00\u4e2a boundary \u7528\u4e8e\u5206\u5272\u4e0d\u540c\u7684\u5b57\u6bb5\uff0c\u4e3a\u4e86\u907f\u514d\u4e0e\u6b63\u6587\u5185\u5bb9\u91cd\u590d\uff0cboundary \u5f88\u957f\u5f88\u590d\u6742\u3002\u7136\u540e Content-Type \u91cc\u6307\u660e\u4e86\u6570\u636e\u662f\u4ee5 multipart/form-data \u6765\u7f16\u7801\uff0c\u672c\u6b21\u8bf7\u6c42\u7684 boundary \u662f\u4ec0\u4e48\u5185\u5bb9\u3002\u6d88\u606f\u4e3b\u4f53\u91cc\u6309\u7167\u5b57\u6bb5\u4e2a\u6570\u53c8\u5206\u4e3a\u591a\u4e2a\u7ed3\u6784\u7c7b\u4f3c\u7684\u90e8\u5206\uff0c\u6bcf\u90e8\u5206\u90fd\u662f\u4ee5 --boundary \u5f00\u59cb\uff0c\u7d27\u63a5\u7740\u662f\u5185\u5bb9\u63cf\u8ff0\u4fe1\u606f\uff0c\u7136\u540e\u662f\u56de\u8f66\uff0c\u6700\u540e\u662f\u5b57\u6bb5\u5177\u4f53\u5185\u5bb9\uff08\u6587\u672c\u6216\u4e8c\u8fdb\u5236\uff09\u3002\u5982\u679c\u4f20\u8f93\u7684\u662f\u6587\u4ef6\uff0c\u8fd8\u8981\u5305\u542b\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u7c7b\u578b\u4fe1\u606f\u3002\u6d88\u606f\u4e3b\u4f53\u6700\u540e\u4ee5 --boundary-- \u6807\u793a\u7ed3\u675f\u3002\u5173\u4e8e multipart/form-data \u7684\u8be6\u7ec6\u5b9a\u4e49\uff0c\u8bf7\u524d\u5f80 rfc1867 \u67e5\u770b\u3002 \u8fd9\u79cd\u65b9\u5f0f\u4e00\u822c\u7528\u6765\u4e0a\u4f20\u6587\u4ef6\uff0c\u5404\u5927\u670d\u52a1\u7aef\u8bed\u8a00\u5bf9\u5b83\u4e5f\u6709\u7740\u826f\u597d\u7684\u652f\u6301\u3002 \u4e0a\u9762\u63d0\u5230\u7684\u8fd9\u4e24\u79cd POST \u6570\u636e\u7684\u65b9\u5f0f\uff0c\u90fd\u662f\u6d4f\u89c8\u5668\u539f\u751f\u652f\u6301\u7684\uff0c\u800c\u4e14\u73b0\u9636\u6bb5\u6807\u51c6\u4e2d\u539f\u751f \u8868\u5355\u4e5f \u53ea\u652f\u6301\u8fd9\u4e24\u79cd\u65b9\u5f0f \uff08\u901a\u8fc7 \u5143\u7d20\u7684 enctype \u5c5e\u6027\u6307\u5b9a\uff0c\u9ed8\u8ba4\u4e3a application/x-www-form-urlencoded \u3002\u5176\u5b9e enctype \u8fd8\u652f\u6301 text/plain \uff0c\u4e0d\u8fc7\u7528\u5f97\u975e\u5e38\u5c11\uff09\u3002 \u968f\u7740\u8d8a\u6765\u8d8a\u591a\u7684 Web \u7ad9\u70b9\uff0c\u5c24\u5176\u662f WebApp\uff0c\u5168\u90e8\u4f7f\u7528 Ajax \u8fdb\u884c\u6570\u636e\u4ea4\u4e92\u4e4b\u540e\uff0c\u6211\u4eec\u5b8c\u5168\u53ef\u4ee5\u5b9a\u4e49\u65b0\u7684\u6570\u636e\u63d0\u4ea4\u65b9\u5f0f\uff0c\u7ed9\u5f00\u53d1\u5e26\u6765\u66f4\u591a\u4fbf\u5229\u3002","title":"2 multipart/form-data"},{"location":"#3-applicationjson","text":"application/json \u8fd9\u4e2a Content-Type \u4f5c\u4e3a\u54cd\u5e94\u5934\u5927\u5bb6\u80af\u5b9a\u4e0d\u964c\u751f\u3002\u5b9e\u9645\u4e0a\uff0c\u73b0\u5728\u8d8a\u6765\u8d8a\u591a\u7684\u4eba\u628a\u5b83\u4f5c\u4e3a\u8bf7\u6c42\u5934\uff0c\u7528\u6765\u544a\u8bc9\u670d\u52a1\u7aef\u6d88\u606f\u4e3b\u4f53\u662f\u5e8f\u5217\u5316\u540e\u7684 JSON \u5b57\u7b26\u4e32\u3002\u7531\u4e8e JSON \u89c4\u8303\u7684\u6d41\u884c\uff0c\u9664\u4e86\u4f4e\u7248\u672c IE \u4e4b\u5916\u7684\u5404\u5927\u6d4f\u89c8\u5668\u90fd\u539f\u751f\u652f\u6301 JSON.stringify\uff0c\u670d\u52a1\u7aef\u8bed\u8a00\u4e5f\u90fd\u6709\u5904\u7406 JSON \u7684\u51fd\u6570\uff0c\u4f7f\u7528 JSON \u4e0d\u4f1a\u9047\u4e0a\u4ec0\u4e48\u9ebb\u70e6\u3002 JSON \u683c\u5f0f\u652f\u6301\u6bd4\u952e\u503c\u5bf9\u590d\u6742\u5f97\u591a\u7684\u7ed3\u6784\u5316\u6570\u636e\uff0c\u8fd9\u4e00\u70b9\u4e5f\u5f88\u6709\u7528\u3002\u8bb0\u5f97\u6211\u51e0\u5e74\u524d\u505a\u4e00\u4e2a\u9879\u76ee\u65f6\uff0c\u9700\u8981\u63d0\u4ea4\u7684\u6570\u636e\u5c42\u6b21\u975e\u5e38\u6df1\uff0c\u6211\u5c31\u662f\u628a\u6570\u636e JSON \u5e8f\u5217\u5316\u4e4b\u540e\u6765\u63d0\u4ea4\u7684\u3002\u4e0d\u8fc7\u5f53\u65f6\u6211\u662f\u628a JSON \u5b57\u7b26\u4e32\u4f5c\u4e3a val\uff0c\u4ecd\u7136\u653e\u5728\u952e\u503c\u5bf9\u91cc\uff0c\u4ee5 x-www-form-urlencoded \u65b9\u5f0f\u63d0\u4ea4\u3002","title":"3 application/json"},{"location":"#form","text":"","title":"\u57fa\u4e8eform\u8868\u5355\u7684\u6587\u4ef6\u4e0a\u4f20"},{"location":"#_44","text":"<form action=\"\" method=\"post\" enctype=\"multipart/form-data\"> \u7528\u6237\u540d <input type=\"text\" name=\"user\"> \u5934\u50cf <input type=\"file\" name=\"avatar\"> <input type=\"submit\"> </form>","title":"\u6a21\u677f\u90e8\u5206"},{"location":"#_45","text":"def index(request): print(request.body) # \u539f\u59cb\u7684\u8bf7\u6c42\u4f53\u6570\u636e print(request.GET) # GET\u8bf7\u6c42\u6570\u636e print(request.POST) # POST\u8bf7\u6c42\u6570\u636e print(request.FILES) # \u4e0a\u4f20\u7684\u6587\u4ef6\u6570\u636e return render(request,\"index.html\")","title":"\u89c6\u56fe\u90e8\u5206"},{"location":"#ajax_2","text":"","title":"\u57fa\u4e8eAjax\u7684\u6587\u4ef6\u4e0a\u4f20"},{"location":"#_46","text":"<form> \u7528\u6237\u540d <input type=\"text\" id=\"user\"> \u5934\u50cf <input type=\"file\" id=\"avatar\"> <input type=\"button\" id=\"ajax-submit\" value=\"ajax-submit\"> </form> <script> $(\"#ajax-submit\").click(function(){ var formdata=new FormData(); formdata.append(\"user\",$(\"#user\").val()); formdata.append(\"avatar_img\",$(\"#avatar\")[0].files[0]); $.ajax({ url:\"\", type:\"post\", data:formdata, processData: false , // \u4e0d\u5904\u7406\u6570\u636e contentType: false, // \u4e0d\u8bbe\u7f6e\u5185\u5bb9\u7c7b\u578b success:function(data){ console.log(data) } }) }) </script>","title":"\u6a21\u677f"},{"location":"#_47","text":"def index(request): if request.is_ajax(): print(request.body) # \u539f\u59cb\u7684\u8bf7\u6c42\u4f53\u6570\u636e print(request.GET) # GET\u8bf7\u6c42\u6570\u636e print(request.POST) # POST\u8bf7\u6c42\u6570\u636e print(request.FILES) # \u4e0a\u4f20\u7684\u6587\u4ef6\u6570\u636e return HttpResponse(\"ok\") return render(request,\"index.html\") \u68c0\u67e5\u6d4f\u89c8\u5668\u7684\u8bf7\u6c42\u5934\uff1a Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryaWl9k5ZMiTAzx3FT \u5c0f\u7b14\u8bb0: \u8fd9\u91cc\u5148\u628a django \u7684 csrf_token\u529f\u80fd\u5173\u95ed settings.py \u6587\u4ef6 \u6ce8\u91ca MIDDLEWARE=[] \u91cc # 'django.middleware.csrf.CsrfViewMiddleware',","title":"\u89c6\u56fe"},{"location":"#11-django-","text":"","title":"11 Django\u7ec4\u4ef6-\u5206\u9875\u5668"},{"location":"#djangopaginator","text":"","title":"Django\u7684\u5206\u9875\u5668\uff08paginator\uff09"},{"location":"#view","text":"from django.shortcuts import render,HttpResponse # Create your views here. from app01.models import * from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger def index(request): ''' \u6279\u91cf\u5bfc\u5165\u6570\u636e: Booklist=[] for i in range(100): Booklist.append(Book(title=\"book\"+str(i),price=30+i*i)) Book.objects.bulk_create(Booklist) ''' ''' \u5206\u9875\u5668\u7684\u4f7f\u7528: book_list=Book.objects.all() paginator = Paginator(book_list, 10) # 10\u8868\u793a\u6bcf\u9875\u663e\u793a\u6570 print(\"count:\",paginator.count) #\u6570\u636e\u603b\u6570 print(\"num_pages\",paginator.num_pages) #\u603b\u9875\u6570 print(\"page_range\",paginator.page_range) #\u9875\u7801\u7684\u5217\u8868 page1=paginator.page(1) #\u7b2c1\u9875\u7684page\u5bf9\u8c61 for i in page1: #\u904d\u5386\u7b2c1\u9875\u7684\u6240\u6709\u6570\u636e\u5bf9\u8c61 print(i) print(page1.object_list) #\u7b2c1\u9875\u7684\u6240\u6709\u6570\u636e page2=paginator.page(2) print(page2.has_next()) #\u662f\u5426\u6709\u4e0b\u4e00\u9875 print(page2.next_page_number()) #\u4e0b\u4e00\u9875\u7684\u9875\u7801 print(page2.has_previous()) #\u662f\u5426\u6709\u4e0a\u4e00\u9875 print(page2.previous_page_number()) #\u4e0a\u4e00\u9875\u7684\u9875\u7801 # \u629b\u9519 #page=paginator.page(12) # error:EmptyPage #page=paginator.page(\"z\") # error:PageNotAnInteger ''' book_list=Book.objects.all() paginator = Paginator(book_list, 10) page = request.GET.get('page',1) # \u83b7\u53d6\u6d4f\u89c8\u4f20\u8fc7\u6765\u7684\u53c2\u6570page\u7684\u503c,\u5982\u679c\u6ca1\u6709\u9ed8\u8ba41 currentPage=int(page) try: print(page) book_list = paginator.page(page) except PageNotAnInteger: book_list = paginator.page(1) except EmptyPage: book_list = paginator.page(paginator.num_pages) return render(request,\"index.html\",{\"book_list\":book_list,\"paginator\":paginator,\"currentPage\":currentPage})","title":"view"},{"location":"#indexhtml","text":"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"> </head> <body> <div class=\"container\"> <h4>\u5206\u9875\u5668</h4> <ul> {% for book in book_list %} <li>{{ book.title }} -----{{ book.price }}</li> {% endfor %} </ul> <ul class=\"pagination\" id=\"pager\"> {% if book_list.has_previous %} <!-- \u5224\u65ad\u662f\u5426\u6709\u4e0b\u4e00\u9875 --> <li class=\"previous\"><a href=\"/index/?page={{ book_list.previous_page_number }}\">\u4e0a\u4e00\u9875</a></li> {% else %} <li class=\"previous disabled\"><a href=\"#\">\u4e0a\u4e00\u9875</a></li> {% endif %} {% for num in paginator.page_range %} {% if num == currentPage %} <li class=\"item active\"><a href=\"/index/?page={{ num }}\">{{ num }}</a></li> {% else %} <li class=\"item\"><a href=\"/index/?page={{ num }}\">{{ num }}</a></li> {% endif %} {% endfor %} {% if book_list.has_next %} <li class=\"next\"><a href=\"/index/?page={{ book_list.next_page_number }}\">\u4e0b\u4e00\u9875</a></li> {% else %} <li class=\"next disabled\"><a href=\"#\">\u4e0b\u4e00\u9875</a></li> {% endif %} </ul> </div> </body> </html>","title":"index.html:"},{"location":"#_48","text":"def index(request): book_list=Book.objects.all() paginator = Paginator(book_list, 15) page = request.GET.get('page',1) currentPage=int(page) # \u9875\u6570\u8fc7\u591a\u65f6\u5019, \u9875\u6570\u59cb\u7ec8\u4fdd\u630110\u9875\u663e\u793a if paginator.num_pages>11: if currentPage-5<1: pageRange=range(1,11) elif currentPage+5>paginator.num_pages: pageRange=range(currentPage-5,paginator.num_pages+1) else: pageRange=range(currentPage-5,currentPage+5) else: pageRange=paginator.page_range # \u4f4e\u4e8e10\u9875\u7684\u663e\u793a try: print(page) book_list = paginator.page(page) except PageNotAnInteger: book_list = paginator.page(1) except EmptyPage: book_list = paginator.page(paginator.num_pages) return render(request,\"index.html\",locals())","title":"\u6269\u5c55"},{"location":"#12-django-forms","text":"","title":"12 Django\u7ec4\u4ef6-forms\u7ec4\u4ef6"},{"location":"#forms","text":"","title":"forms\u7ec4\u4ef6"},{"location":"#_49","text":"\u9488\u5bf9\u4e00\u4e2a\u5b9e\u4f8b\uff1a\u6ce8\u518c\u7528\u6237\u8bb2\u89e3\u3002 \u6a21\u578b\uff1amodels.py class UserInfo(models.Model): name=models.CharField(max_length=32) pwd=models.CharField(max_length=32) email=models.EmailField() tel=models.CharField(max_length=32) \u6a21\u677f: register.html: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <form action=\"\" method=\"post\"> {% csrf_token %} <div> <label for=\"user\">\u7528\u6237\u540d</label> <p><input type=\"text\" name=\"name\" id=\"name\"></p> </div> <div> <label for=\"pwd\">\u5bc6\u7801</label> <p><input type=\"password\" name=\"pwd\" id=\"pwd\"></p> </div> <div> <label for=\"r_pwd\">\u786e\u8ba4\u5bc6\u7801</label> <p><input type=\"password\" name=\"r_pwd\" id=\"r_pwd\"></p> </div> <div> <label for=\"email\">\u90ae\u7bb1</label> <p><input type=\"text\" name=\"email\" id=\"email\"></p> </div> <input type=\"submit\"> </form> </body> </html> \u89c6\u56fe\u51fd\u6570\uff1aregister # forms\u7ec4\u4ef6 from django.forms import widgets wid_01=widgets.TextInput(attrs={\"class\":\"form-control\"}) wid_02=widgets.PasswordInput(attrs={\"class\":\"form-control\"}) class UserForm(forms.Form): #\u7ee7\u627fforms\u7c7b name=forms.CharField(max_length=32,widget=wid_01) # name\u662f\u5b57\u7b26\u4e32\u6700\u957f32 pwd=forms.CharField(max_length=32,widget=wid_02) r_pwd=forms.CharField(max_length=32,widget=wid_02) email=forms.EmailField(widget=wid_01) tel=forms.CharField(max_length=32,widget=wid_01) def register(request): if request.method==\"POST\": form=UserForm(request.POST) # \u63a5\u6536\u7684\u6240\u6709\u503c\u4ea4\u7ed9UserForm if form.is_valid(): # \u6240\u6709\u6821\u9a8c\u7684\u89c4\u5219\u90fd\u5bf9\u624d\u8fd4\u56deTrue print(form.cleaned_data) # \u6240\u6709\u5e72\u51c0\u7684\u5b57\u6bb5\u4ee5\u53ca\u5bf9\u5e94\u7684\u503c else: print(form.cleaned_data) # print(form.errors) # ErrorDict : {\"\u6821\u9a8c\u9519\u8bef\u7684\u5b57\u6bb5\":[\"\u9519\u8bef\u4fe1\u606f\",]} print(form.errors.get(\"name\")) # ErrorList [\"\u9519\u8bef\u4fe1\u606f\",] return HttpResponse(\"OK\") form=UserForm() return render(request,\"register.html\",locals())","title":"\u6821\u9a8c\u5b57\u6bb5\u529f\u80fd"},{"location":"#_50","text":"","title":"\u6e32\u67d3\u6807\u7b7e\u529f\u80fd"},{"location":"#1_5","text":"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <!-- \u6700\u65b0\u7248\u672c\u7684 Bootstrap \u6838\u5fc3 CSS \u6587\u4ef6 --> <link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"> </head> <body> <h3>\u6ce8\u518c\u9875\u9762</h3> <div class=\"container\"> <div class=\"row\"> <div class=\"col-md-6 col-lg-offset-3\"> <form action=\"\" method=\"post\"> {% csrf_token %} <div> <label for=\"\">\u7528\u6237\u540d</label> {{ form.name }} </div> <div> <label for=\"\">\u5bc6\u7801</label> {{ form.pwd }} </div> <div> <label for=\"\">\u786e\u8ba4\u5bc6\u7801</label> {{ form.r_pwd }} </div> <div> <label for=\"\"> \u90ae\u7bb1</label> {{ form.email }} </div> <input type=\"submit\" class=\"btn btn-default pull-right\"> </form> </div> </div> </div> </body> </html>","title":"\u6e32\u67d3\u65b9\u5f0f1"},{"location":"#2_4","text":"<form action=\"\" method=\"post\"> {% csrf_token %} {% for field in form %} <div> <label for=\"\">{{ field.label }}</label> {{ field }} </div> {% endfor %} <input type=\"submit\" class=\"btn btn-default pull-right\"> </form>","title":"\u6e32\u67d3\u65b9\u5f0f2"},{"location":"#3_2","text":"<form action=\"\" method=\"post\"> {% csrf_token %} {{ form.as_p }} <input type=\"submit\" class=\"btn btn-default pull-right\"> </form>","title":"\u6e32\u67d3\u65b9\u5f0f3"},{"location":"#_51","text":"","title":"\u663e\u793a\u9519\u8bef\u4e0e\u91cd\u7f6e\u8f93\u5165\u4fe1\u606f\u529f\u80fd"},{"location":"#_52","text":"def register(request): if request.method==\"POST\": form=UserForm(request.POST) if form.is_valid(): print(form.cleaned_data) # \u6240\u6709\u5e72\u51c0\u7684\u5b57\u6bb5\u4ee5\u53ca\u5bf9\u5e94\u7684\u503c else: print(form.cleaned_data) # print(form.errors) # ErrorDict : {\"\u6821\u9a8c\u9519\u8bef\u7684\u5b57\u6bb5\":[\"\u9519\u8bef\u4fe1\u606f\",]} print(form.errors.get(\"name\")) # ErrorList [\"\u9519\u8bef\u4fe1\u606f\",] return render(request,\"register.html\",locals()) form=UserForm() return render(request,\"register.html\",locals())","title":"\u89c6\u56fe"},{"location":"#_53","text":"<form action=\"\" method=\"post\" novalidate> {% csrf_token %} {% for field in form %} <div> <label for=\"\">{{ field.label }}</label> {{ field }} <span class=\"pull-right\" style=\"color: red\">{{ field.errors.0 }}</span> </div> {% endfor %} <input type=\"submit\" class=\"btn btn-default\"> </form>","title":"\u6a21\u677f"},{"location":"#_54","text":"","title":"\u5c40\u90e8\u94a9\u5b50\u4e0e\u5168\u5c40\u94a9\u5b50"},{"location":"#_55","text":"# forms\u7ec4\u4ef6 from django.forms import widgets wid_01=widgets.TextInput(attrs={\"class\":\"form-control\"}) wid_02=widgets.PasswordInput(attrs={\"class\":\"form-control\"}) from django.core.exceptions import ValidationError class UserForm(forms.Form): name=forms.CharField(max_length=32, widget=wid_01 ) pwd=forms.CharField(max_length=32,widget=wid_02) r_pwd=forms.CharField(max_length=32,widget=wid_02) email=forms.EmailField(widget=wid_01) tel=forms.CharField(max_length=32,widget=wid_01) # \u5c40\u90e8\u94a9\u5b50 def clean_name(self): val=self.cleaned_data.get(\"name\") if not val.isdigit(): return val else: raise ValidationError(\"\u7528\u6237\u540d\u4e0d\u80fd\u662f\u7eaf\u6570\u5b57!\") # \u5168\u5c40\u94a9\u5b50 def clean(self): pwd=self.cleaned_data.get(\"pwd\") r_pwd=self.cleaned_data.get(\"r_pwd\") if pwd==r_pwd: return self.cleaned_data else: raise ValidationError('\u4e24\u6b21\u5bc6\u7801\u4e0d\u4e00\u81f4!') def register(request): if request.method==\"POST\": form=UserForm(request.POST) if form.is_valid(): print(form.cleaned_data) # \u6240\u6709\u5e72\u51c0\u7684\u5b57\u6bb5\u4ee5\u53ca\u5bf9\u5e94\u7684\u503c else: clean_error=form.errors.get(\"__all__\") return render(request,\"register.html\",locals()) form=UserForm() return render(request,\"register.html\",locals())","title":"\u6a21\u677f"},{"location":"#_56","text":"<form action=\"\" method=\"post\" novalidate> {% csrf_token %} {% for field in form %} <div> <label for=\"\">{{ field.label }}</label> {{ field }} <span class=\"pull-right\" style=\"color: red\"> {% if field.label == 'R pwd' %} <span>{{ clean_error.0 }}</span> {% endif %} {{ field.errors.0 }} </span> </div> {% endfor %} <input type=\"submit\" class=\"btn btn-default\"> </form>","title":"\u89c6\u56fe"},{"location":"#13-django-cookiesession","text":"","title":"13 Django\u7ec4\u4ef6-cookie\u4e0esession"},{"location":"#_57","text":"","title":"\u4f1a\u8bdd\u8ddf\u8e2a\u6280\u672f"},{"location":"#1_6","text":"\u6211\u4eec\u9700\u8981\u5148\u4e86\u89e3\u4e00\u4e0b\u4ec0\u4e48\u662f\u4f1a\u8bdd\uff01\u53ef\u4ee5\u628a\u4f1a\u8bdd\u7406\u89e3\u4e3a\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u4e00\u6b21\u4f1a\u6664\uff0c\u5728\u4e00\u6b21\u4f1a\u6664\u4e2d\u53ef\u80fd\u4f1a\u5305\u542b\u591a\u6b21\u8bf7\u6c42\u548c\u54cd\u5e94\u3002\u4f8b\u5982\u4f60\u7ed910086\u6253\u4e2a\u7535\u8bdd\uff0c\u4f60\u5c31\u662f\u5ba2\u6237\u7aef\uff0c\u800c10086\u670d\u52a1\u4eba\u5458\u5c31\u662f\u670d\u52a1\u5668\u4e86\u3002\u4ece\u53cc\u65b9\u63a5\u901a\u7535\u8bdd\u90a3\u4e00\u523b\u8d77\uff0c\u4f1a\u8bdd\u5c31\u5f00\u59cb\u4e86\uff0c\u5230\u67d0\u4e00\u65b9\u6302\u65ad\u7535\u8bdd\u8868\u793a\u4f1a\u8bdd\u7ed3\u675f\u3002\u5728\u901a\u8bdd\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u4f1a\u541110086\u53d1\u51fa\u591a\u4e2a\u8bf7\u6c42\uff0c\u90a3\u4e48\u8fd9\u591a\u4e2a\u8bf7\u6c42\u90fd\u5728\u4e00\u4e2a\u4f1a\u8bdd\u4e2d\u3002 \u5728JavaWeb\u4e2d\uff0c\u5ba2\u6237\u5411\u67d0\u4e00\u670d\u52a1\u5668\u53d1\u51fa\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u5f00\u59cb\uff0c\u4f1a\u8bdd\u5c31\u5f00\u59cb\u4e86\uff0c\u76f4\u5230\u5ba2\u6237\u5173\u95ed\u4e86\u6d4f\u89c8\u5668\u4f1a\u8bdd\u7ed3\u675f\u3002 \u5728\u4e00\u4e2a\u4f1a\u8bdd\u7684\u591a\u4e2a\u8bf7\u6c42\u4e2d\u5171\u4eab\u6570\u636e\uff0c\u8fd9\u5c31\u662f\u4f1a\u8bdd\u8ddf\u8e2a\u6280\u672f\u3002\u4f8b\u5982\u5728\u4e00\u4e2a\u4f1a\u8bdd\u4e2d\u7684\u8bf7\u6c42\u5982\u4e0b\uff1a \uf06c \u8bf7\u6c42\u94f6\u884c\u4e3b\u9875\uff1b \u8bf7\u6c42\u767b\u5f55\uff08\u8bf7\u6c42\u53c2\u6570\u662f\u7528\u6237\u540d\u548c\u5bc6\u7801\uff09\uff1b \u8bf7\u6c42\u8f6c\u8d26\uff08\u8bf7\u6c42\u53c2\u6570\u4e0e\u8f6c\u8d26\u76f8\u5173\u7684\u6570\u636e\uff09\uff1b \u8bf7\u6c42\u4fe1\u8a89\u5361\u8fd8\u6b3e\uff08\u8bf7\u6c42\u53c2\u6570\u4e0e\u8fd8\u6b3e\u76f8\u5173\u7684\u6570\u636e\uff09\u3002 \u5728\u8fd9\u4e0a\u4f1a\u8bdd\u4e2d\u5f53\u524d\u7528\u6237\u4fe1\u606f\u5fc5\u987b\u5728\u8fd9\u4e2a\u4f1a\u8bdd\u4e2d\u5171\u4eab\u7684\uff0c\u56e0\u4e3a\u767b\u5f55\u7684\u662f\u5f20\u4e09\uff0c\u90a3\u4e48\u5728\u8f6c\u8d26\u548c\u8fd8\u6b3e\u65f6\u4e00\u5b9a\u662f\u76f8\u5bf9\u5f20\u4e09\u7684\u8f6c\u8d26\u548c\u8fd8\u6b3e\uff01\u8fd9\u5c31\u8bf4\u660e\u6211\u4eec\u5fc5\u987b\u5728\u4e00\u4e2a\u4f1a\u8bdd\u8fc7\u7a0b\u4e2d\u6709\u5171\u4eab\u6570\u636e\u7684\u80fd\u529b\u3002","title":"1 \u4ec0\u4e48\u662f\u4f1a\u8bdd\u8ddf\u8e2a\u6280\u672f"},{"location":"#2-cookiesession","text":"\u6211\u4eec\u77e5\u9053HTTP\u534f\u8bae\u662f\u65e0\u72b6\u6001\u534f\u8bae\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u662f\u72ec\u7acb\u7684\uff01\u65e0\u6cd5\u8bb0\u5f55\u524d\u4e00\u6b21\u8bf7\u6c42\u7684\u72b6\u6001\u3002\u4f46HTTP\u534f\u8bae\u4e2d\u53ef\u4ee5\u4f7f\u7528Cookie\u6765\u5b8c\u6210\u4f1a\u8bdd\u8ddf\u8e2a\uff01\u5728Web\u5f00\u53d1\u4e2d\uff0c\u4f7f\u7528session\u6765\u5b8c\u6210\u4f1a\u8bdd\u8ddf\u8e2a\uff0csession\u5e95\u5c42\u4f9d\u8d56Cookie\u6280\u672f\u3002","title":"2 \u4f1a\u8bdd\u8def\u5f84\u6280\u672f\u4f7f\u7528Cookie\u6216session\u5b8c\u6210"},{"location":"#cookie","text":"","title":"Cookie\u6982\u8ff0"},{"location":"#cookie_1","text":"Cookie\u7ffb\u8bd1\u6210\u4e2d\u6587\u662f\u5c0f\u751c\u70b9\uff0c\u5c0f\u997c\u5e72\u7684\u610f\u601d\u3002\u5728HTTP\u4e2d\u5b83\u8868\u793a\u670d\u52a1\u5668\u9001\u7ed9\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u7684\u5c0f\u751c\u70b9\u3002\u5176\u5b9eCookie\u662fkey-value\u7ed3\u6784\uff0c\u7c7b\u4f3c\u4e8e\u4e00\u4e2apython\u4e2d\u7684\u5b57\u5178\u3002\u968f\u7740\u670d\u52a1\u5668\u7aef\u7684\u54cd\u5e94\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u3002\u7136\u540e\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u4f1a\u628aCookie\u4fdd\u5b58\u8d77\u6765\uff0c\u5f53\u4e0b\u4e00\u6b21\u518d\u8bbf\u95ee\u670d\u52a1\u5668\u65f6\u628aCookie\u518d\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u3002 Cookie\u662f\u7531\u670d\u52a1\u5668\u521b\u5efa\uff0c\u7136\u540e\u901a\u8fc7\u54cd\u5e94\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u7684\u4e00\u4e2a\u952e\u503c\u5bf9\u3002\u5ba2\u6237\u7aef\u4f1a\u4fdd\u5b58Cookie\uff0c\u5e76\u4f1a\u6807\u6ce8\u51faCookie\u7684\u6765\u6e90\uff08\u54ea\u4e2a\u670d\u52a1\u5668\u7684Cookie\uff09\u3002\u5f53\u5ba2\u6237\u7aef\u5411\u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\u65f6\u4f1a\u628a\u6240\u6709\u8fd9\u4e2a\u670d\u52a1\u5668Cookie\u5305\u542b\u5728\u8bf7\u6c42\u4e2d\u53d1\u9001\u7ed9\u670d\u52a1\u5668\uff0c\u8fd9\u6837\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u8bc6\u522b\u5ba2\u6237\u7aef\u4e86\uff01","title":"\u4ec0\u4e48\u53ebCookie"},{"location":"#cookie_2","text":"Cookie\u5927\u5c0f\u4e0a\u9650\u4e3a4KB\uff1b \u4e00\u4e2a\u670d\u52a1\u5668\u6700\u591a\u5728\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u4e0a\u4fdd\u5b5820\u4e2aCookie\uff1b \u4e00\u4e2a\u6d4f\u89c8\u5668\u6700\u591a\u4fdd\u5b58300\u4e2aCookie\uff1b \u4e0a\u9762\u7684\u6570\u636e\u53ea\u662fHTTP\u7684Cookie\u89c4\u8303\uff0c\u4f46\u5728\u6d4f\u89c8\u5668\u5927\u6218\u7684\u4eca\u5929\uff0c\u4e00\u4e9b\u6d4f\u89c8\u5668\u4e3a\u4e86\u6253\u8d25\u5bf9\u624b\uff0c\u4e3a\u4e86\u5c55\u73b0\u81ea\u5df1\u7684\u80fd\u529b\u8d77\u89c1\uff0c\u53ef\u80fd\u5bf9Cookie\u89c4\u8303\u201c\u6269\u5c55\u201d\u4e86\u4e00\u4e9b\uff0c\u4f8b\u5982\u6bcf\u4e2aCookie\u7684\u5927\u5c0f\u4e3a8KB\uff0c\u6700\u591a\u53ef\u4fdd\u5b58500\u4e2aCookie\u7b49\uff01\u4f46\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u628a\u4f60\u786c\u76d8\u5360\u6ee1\u7684\u53ef\u80fd\uff01 \u6ce8\u610f\uff0c\u4e0d\u540c\u6d4f\u89c8\u5668\u4e4b\u95f4\u662f\u4e0d\u5171\u4eabCookie\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\u5728\u4f60\u4f7f\u7528IE\u8bbf\u95ee\u670d\u52a1\u5668\u65f6\uff0c\u670d\u52a1\u5668\u4f1a\u628aCookie\u53d1\u7ed9IE\uff0c\u7136\u540e\u7531IE\u4fdd\u5b58\u8d77\u6765\uff0c\u5f53\u4f60\u5728\u4f7f\u7528FireFox\u8bbf\u95ee\u670d\u52a1\u5668\u65f6\uff0c\u4e0d\u53ef\u80fd\u628aIE\u4fdd\u5b58\u7684Cookie\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u3002","title":"Cookie\u89c4\u8303"},{"location":"#cookiehttp","text":"Cookie\u662f\u901a\u8fc7HTTP\u8bf7\u6c42\u548c\u54cd\u5e94\u5934\u5728\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u7aef\u4f20\u9012\u7684\uff1a Cookie\uff1a\u8bf7\u6c42\u5934\uff0c\u5ba2\u6237\u7aef\u53d1\u9001\u7ed9\u670d\u52a1\u5668\u7aef\uff1b \u683c\u5f0f\uff1aCookie: a=A; b=B; c=C\u3002\u5373\u591a\u4e2aCookie\u7528\u5206\u53f7\u79bb\u5f00\uff1b \uf06c Set-Cookie\uff1a\u54cd\u5e94\u5934\uff0c\u670d\u52a1\u5668\u7aef\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\uff1b \u4e00\u4e2aCookie\u5bf9\u8c61\u4e00\u4e2aSet-Cookie\uff1a Set-Cookie: a=A Set-Cookie: b=B Set-Cookie: c=C","title":"Cookie\u4e0eHTTP\u5934"},{"location":"#cookie_3","text":"\u5982\u679c\u670d\u52a1\u5668\u7aef\u53d1\u9001\u91cd\u590d\u7684Cookie\u90a3\u4e48\u4f1a\u8986\u76d6\u539f\u6709\u7684Cookie\uff0c\u4f8b\u5982\u5ba2\u6237\u7aef\u7684\u7b2c\u4e00\u4e2a\u8bf7\u6c42\u670d\u52a1\u5668\u7aef\u53d1\u9001\u7684Cookie\u662f\uff1aSet-Cookie: a=A\uff1b\u7b2c\u4e8c\u8bf7\u6c42\u670d\u52a1\u5668\u7aef\u53d1\u9001\u7684\u662f\uff1aSet-Cookie: a=AA\uff0c\u90a3\u4e48\u5ba2\u6237\u7aef\u53ea\u7559\u4e0b\u4e00\u4e2aCookie\uff0c\u5373\uff1aa=AA\u3002","title":"Cookie\u7684\u8986\u76d6"},{"location":"#djangocookie","text":"\u8bbe\u7f6ecookie\uff1a rep = HttpResponse(...) \u6216 rep \uff1d render(request, ...) \u6216 rep \uff1d redirect() rep.set_cookie(key,value,...) rep.set_signed_cookie(key,value,salt='\u52a0\u5bc6\u76d0',...)\u3000 \u6e90\u7801\uff1a\u3000\u3000 ''' class HttpResponseBase: def set_cookie(self, key, \u952e \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 value='', \u503c \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 max_age=None, \u8d85\u957f\u65f6\u95f4 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000cookie\u9700\u8981\u5ef6\u7eed\u7684\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u5982\u679c\u53c2\u6570\u662f\\ None`` \uff0c\u8fd9\u4e2acookie\u4f1a\u5ef6\u7eed\u5230\u6d4f\u89c8\u5668\u5173\u95ed\u4e3a\u6b62\u3002 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 expires=None, \u8d85\u957f\u65f6\u95f4 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000expires\u9ed8\u8ba4None ,cookie\u5931\u6548\u7684\u5b9e\u9645\u65e5\u671f/\u65f6\u95f4\u3002 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 path='/', Cookie\u751f\u6548\u7684\u8def\u5f84\uff0c \u6d4f\u89c8\u5668\u53ea\u4f1a\u628acookie\u56de\u4f20\u7ed9\u5e26\u6709\u8be5\u8def\u5f84\u7684\u9875\u9762\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5c06 cookie\u4f20\u7ed9\u7ad9\u70b9\u4e2d\u7684\u5176\u4ed6\u7684\u5e94\u7528\u3002 / \u8868\u793a\u6839\u8def\u5f84\uff0c\u7279\u6b8a\u7684\uff1a\u6839\u8def\u5f84\u7684cookie\u53ef\u4ee5\u88ab\u4efb\u4f55url\u7684\u9875\u9762\u8bbf\u95ee\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 domain=None, Cookie\u751f\u6548\u7684\u57df\u540d \u4f60\u53ef\u7528\u8fd9\u4e2a\u53c2\u6570\u6765\u6784\u9020\u4e00\u4e2a\u8de8\u7ad9cookie\u3002 \u5982\uff0c domain=\".example.com\" \u6240\u6784\u9020\u7684cookie\u5bf9\u4e0b\u9762\u8fd9\u4e9b\u7ad9\u70b9\u90fd\u662f\u53ef\u8bfb\u7684\uff1a www.example.com \u3001 www2.example.com \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u548can.other.sub.domain.example.com \u3002 \u5982\u679c\u8be5\u53c2\u6570\u8bbe\u7f6e\u4e3a None \uff0ccookie\u53ea\u80fd\u7531\u8bbe\u7f6e\u5b83\u7684\u7ad9\u70b9\u8bfb\u53d6\u3002 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 secure=False, \u5982\u679c\u8bbe\u7f6e\u4e3a True \uff0c\u6d4f\u89c8\u5668\u5c06\u901a\u8fc7HTTPS\u6765\u56de\u4f20cookie\u3002 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 httponly=False \u53ea\u80fdhttp\u534f\u8bae\u4f20\u8f93\uff0c\u65e0\u6cd5\u88abJavaScript\u83b7\u53d6 \uff08\u4e0d\u662f\u7edd\u5bf9\uff0c\u5e95\u5c42\u6293\u5305\u53ef\u4ee5\u83b7\u53d6\u5230\u4e5f\u53ef\u4ee5\u88ab\u8986\u76d6\uff09 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000): pass ''' \u83b7\u53d6cookie\uff1a request.COOKIES\u3000\u3000 \u5220\u9664cookie\uff1a response.delete_cookie(\"cookie_key\",path=\"/\",domain=name) jquery\u64cd\u4f5ccookie","title":"django\u4e2d\u7684cookie\u8bed\u6cd5"},{"location":"#_58","text":"\u6848\u4f8b1:\u663e\u793a\u4e0a\u6b21\u8bbf\u95ee\u65f6\u95f4\u3002\u3000 \u6848\u4f8b2:\u663e\u793a\u4e0a\u6b21\u6d4f\u89c8\u8fc7\u7684\u5546\u54c1\u3002","title":"\u7ec3\u4e60"},{"location":"#session","text":"Session\u662f\u670d\u52a1\u5668\u7aef\u6280\u672f\uff0c\u5229\u7528\u8fd9\u4e2a\u6280\u672f\uff0c\u670d\u52a1\u5668\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5 \u4e3a\u6bcf\u4e00\u4e2a\u7528\u6237\u7684\u6d4f\u89c8\u5668\u521b\u5efa\u4e00\u4e2a\u5176\u72ec\u4eab\u7684session\u5bf9\u8c61\uff0c\u7531\u4e8e session\u4e3a\u7528\u6237\u6d4f\u89c8\u5668\u72ec\u4eab\uff0c\u6240\u4ee5\u7528\u6237\u5728\u8bbf\u95ee\u670d\u52a1\u5668\u7684web\u8d44\u6e90\u65f6 \uff0c\u53ef\u4ee5\u628a\u5404\u81ea\u7684\u6570\u636e\u653e\u5728\u5404\u81ea\u7684session\u4e2d\uff0c\u5f53\u7528\u6237\u518d\u53bb\u8bbf\u95ee\u8be5\u670d\u52a1\u5668\u4e2d\u7684\u5176\u5b83web\u8d44\u6e90\u65f6\uff0c\u5176\u5b83web\u8d44\u6e90\u518d\u4ece\u7528\u6237\u5404\u81ea\u7684session\u4e2d \u53d6\u51fa\u6570\u636e\u4e3a\u7528\u6237\u670d\u52a1\u3002","title":"session"},{"location":"#djangosession","text":"1\u3001\u8bbe\u7f6eSessions\u503c request.session['session_name'] =\"admin\" 2\u3001\u83b7\u53d6Sessions\u503c session_name = request.session[\"session_name\"] 3\u3001\u5220\u9664Sessions\u503c del request.session[\"session_name\"] 4\u3001flush() \u5220\u9664\u5f53\u524d\u7684\u4f1a\u8bdd\u6570\u636e(seesion)\u5e76\u5220\u9664\u4f1a\u8bdd\u7684Cookie\u3002 \u8fd9\u7528\u4e8e\u786e\u4fdd\u524d\u9762\u7684\u4f1a\u8bdd\u6570\u636e\u4e0d\u53ef\u4ee5\u518d\u6b21\u88ab\u7528\u6237\u7684\u6d4f\u89c8\u5668\u8bbf\u95ee ------------------ 5\u3001get(key, default=None) # \u53c2\u65701 \u83b7\u53d6\u503c, \u53c2\u65702\u83b7\u53d6\u4e0d\u5230\u9ed8\u8ba4\u503c fav_color = request.session.get('fav_color', 'red') 6\u3001pop(key) fav_color = request.session.pop('fav_color') 7\u3001keys() 8\u3001items() 9\u3001setdefault() 10 \u7528\u6237session\u7684\u968f\u673a\u5b57\u7b26\u4e32 request.session.session_key # \u5c06\u6240\u6709Session\u5931\u6548\u65e5\u671f\u5c0f\u4e8e\u5f53\u524d\u65e5\u671f\u7684\u6570\u636e\u5220\u9664 request.session.clear_expired() # \u68c0\u67e5 \u7528\u6237session\u7684\u968f\u673a\u5b57\u7b26\u4e32 \u5728\u6570\u636e\u5e93\u4e2d\u662f\u5426 request.session.exists(\"session_key\") # \u5220\u9664\u5f53\u524d\u7528\u6237\u7684\u6240\u6709Session\u6570\u636e request.session.delete(\"session_key\") request.session.set_expiry(value) * \u5982\u679cvalue\u662f\u4e2a\u6574\u6570\uff0csession\u4f1a\u5728\u4e9b\u79d2\u6570\u540e\u5931\u6548\u3002 * \u5982\u679cvalue\u662f\u4e2adatatime\u6216timedelta\uff0csession\u5c31\u4f1a\u5728\u8fd9\u4e2a\u65f6\u95f4\u540e\u5931\u6548\u3002 * \u5982\u679cvalue\u662f0,\u7528\u6237\u5173\u95ed\u6d4f\u89c8\u5668session\u5c31\u4f1a\u5931\u6548\u3002 * \u5982\u679cvalue\u662fNone,session\u4f1a\u4f9d\u8d56\u5168\u5c40session\u5931\u6548\u7b56\u7565\u3002 session\u914d\u7f6e Django\u9ed8\u8ba4\u652f\u6301Session\uff0c\u5e76\u4e14\u9ed8\u8ba4\u662f\u5c06Session\u6570\u636e\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u5373\uff1adjango_session \u8868\u4e2d\u3002 a. \u914d\u7f6e settings.py SESSION_ENGINE = 'django.contrib.sessions.backends.db' # \u5f15\u64ce\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_NAME = \"sessionid\" # Session\u7684cookie\u4fdd\u5b58\u5728\u6d4f\u89c8\u5668\u4e0a\u65f6\u7684key\uff0c\u5373\uff1asessionid\uff1d\u968f\u673a\u5b57\u7b26\u4e32\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_PATH = \"/\" # Session\u7684cookie\u4fdd\u5b58\u7684\u8def\u5f84\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_DOMAIN = None # Session\u7684cookie\u4fdd\u5b58\u7684\u57df\u540d\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_SECURE = False # \u662f\u5426Https\u4f20\u8f93cookie\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_HTTPONLY = True # \u662f\u5426Session\u7684cookie\u53ea\u652f\u6301http\u4f20\u8f93\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_AGE = 1209600 # Session\u7684cookie\u5931\u6548\u65e5\u671f\uff082\u5468\uff09\uff08\u9ed8\u8ba4\uff09 SESSION_EXPIRE_AT_BROWSER_CLOSE = False # \u662f\u5426\u5173\u95ed\u6d4f\u89c8\u5668\u4f7f\u5f97Session\u8fc7\u671f\uff08\u9ed8\u8ba4\uff09 SESSION_SAVE_EVERY_REQUEST = False # \u662f\u5426\u6bcf\u6b21\u8bf7\u6c42\u90fd\u4fdd\u5b58Session\uff0c\u9ed8\u8ba4\u4fee\u6539\u4e4b\u540e\u624d\u4fdd\u5b58\uff08\u9ed8\u8ba4\uff09","title":"django\u4e2dsession\u8bed\u6cd5"},{"location":"#_59","text":"1 \u767b\u5f55\u6848\u4f8b \u9700\u8981\u7684\u9875\u9762\uff1a #login.html\uff1a\u767b\u5f55\u9875\u9762\uff0c\u63d0\u4f9b\u767b\u5f55\u8868\u5355\uff1b #index1.html\uff1a\u4e3b\u9875\uff0c\u663e\u793a\u5f53\u524d\u7528\u6237\u540d\u79f0\uff0c\u5982\u679c\u6ca1\u6709\u767b\u5f55\uff0c\u663e\u793a\u60a8\u8fd8\u6ca1\u767b\u5f55\uff1b #index2.html\uff1a\u4e3b\u9875\uff0c\u663e\u793a\u5f53\u524d\u7528\u6237\u540d\u79f0\uff0c\u5982\u679c\u6ca1\u6709\u767b\u5f55\uff0c\u663e\u793a\u60a8\u8fd8\u6ca1\u767b\u5f55\uff1b \u601d\u8003\uff0c\u5982\u679c\u7b2c\u4e8c\u4e2a\u4eba\u518d\u6b21\u518d\u540c\u4e00\u4e2a\u6d4f\u89c8\u5668\u4e0a\u767b\u5f55\uff0cdjango-session\u8868\u4f1a\u600e\u6837\uff1f 2 \u9a8c\u8bc1\u7801\u6848\u4f8b \u9a8c\u8bc1\u7801\u53ef\u4ee5\u53bb\u8bc6\u522b\u53d1\u51fa\u8bf7\u6c42\u7684\u662f\u4eba\u8fd8\u662f\u7a0b\u5e8f\uff01\u5f53\u7136\uff0c\u5982\u679c\u806a\u660e\u7684\u7a0b\u5e8f\u53ef\u4ee5\u53bb\u5206\u6790\u9a8c\u8bc1\u7801\u56fe\u7247\uff01\u4f46\u5206\u6790\u56fe\u7247\u4e5f\u4e0d\u662f\u4e00\u4ef6\u5bb9\u6613\u7684\u4e8b\uff0c\u56e0\u4e3a\u4e00\u822c\u9a8c\u8bc1\u7801\u56fe\u7247\u90fd\u4f1a\u5e26\u6709\u5e72\u6270\u7ebf\uff0c\u4eba\u90fd\u770b\u4e0d\u6e05\uff0c\u90a3\u4e48\u7a0b\u5e8f\u4e00\u5b9a\u5206\u6790\u4e0d\u51fa\u6765\u3002","title":"\u7ec3\u4e60"},{"location":"#13-1-jquerycookie","text":"cookie \u5b9a\u4e49\uff1a\u8ba9\u7f51\u7ad9\u670d\u52a1\u5668\u628a\u5c11\u91cf\u6570\u636e\u50a8\u5b58\u5230\u5ba2\u6237\u7aef\u7684\u786c\u76d8\u6216\u5185\u5b58\uff0c\u4ece\u5ba2\u6237\u7aef\u7684\u786c\u76d8\u8bfb\u53d6\u6570\u636e\u7684\u4e00\u79cd\u6280\u672f\uff1b \u4e0b\u8f7d\u4e0e\u5f15\u5165:jquery.cookie.js\u57fa\u4e8ejquery\uff1b\u5148\u5f15\u5165jquery\uff0c\u518d\u5f15\u5165\uff1ajquery.cookie.js\uff1b\u4e0b\u8f7d\uff1ahttp://plugins.jquery.com/cookie/ <script type=\"text/javascript\" src=\"js/jquery.min.js\"></script> <script type=\"text/javascript\" src=\"js/jquery.cookie.js\"></script> 1.\u6dfb\u52a0\u4e00\u4e2a\"\u4f1a\u8bddcookie\" $.cookie('the_cookie', 'the_value'); \u8fd9\u91cc\u6ca1\u6709\u6307\u660e cookie\u6709\u6548\u65f6\u95f4\uff0c\u6240\u521b\u5efa\u7684cookie\u6709\u6548\u671f\u9ed8\u8ba4\u5230\u7528\u6237\u5173\u95ed\u6d4f\u89c8\u5668\u4e3a\u6b62\uff0c\u6240\u4ee5\u88ab\u79f0\u4e3a \u201c\u4f1a\u8bddcookie\uff08session cookie\uff09\u201d\u3002 2.\u521b\u5efa\u4e00\u4e2acookie\u5e76\u8bbe\u7f6e\u6709\u6548\u65f6\u95f4\u4e3a 7\u5929 $.cookie('the_cookie', 'the_value', { expires: 7 }); \u8fd9\u91cc\u6307\u660e\u4e86cookie\u6709\u6548\u65f6\u95f4\uff0c\u6240\u521b\u5efa\u7684cookie\u88ab\u79f0\u4e3a\u201c\u6301\u4e45 cookie \uff08persistent cookie\uff09\u201d\u3002\u6ce8\u610f\u5355\u4f4d\u662f\uff1a\u5929\uff1b 3.\u521b\u5efa\u4e00\u4e2acookie\u5e76\u8bbe\u7f6e cookie\u7684\u6709\u6548\u8def\u5f84 $.cookie('the_cookie', 'the_value', { expires: 7, path: '/' }); \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u8bbe\u7f6e cookie\u7684\u7f51\u9875\u624d\u80fd\u8bfb\u53d6\u8be5 cookie\u3002\u5982\u679c\u60f3\u8ba9\u4e00\u4e2a\u9875\u9762\u8bfb\u53d6\u53e6\u4e00\u4e2a\u9875\u9762\u8bbe\u7f6e\u7684cookie\uff0c\u5fc5\u987b\u8bbe\u7f6ecookie\u7684\u8def\u5f84\u3002cookie\u7684\u8def\u5f84\u7528\u4e8e\u8bbe\u7f6e\u80fd\u591f\u8bfb\u53d6 cookie\u7684\u9876\u7ea7\u76ee\u5f55\u3002\u5c06\u8fd9\u4e2a\u8def\u5f84\u8bbe\u7f6e\u4e3a\u7f51\u7ad9\u7684\u6839\u76ee\u5f55\uff0c\u53ef\u4ee5\u8ba9\u6240\u6709\u7f51\u9875\u90fd\u80fd\u4e92\u76f8\u8bfb\u53d6 cookie \uff08\u4e00\u822c\u4e0d\u8981\u8fd9\u6837\u8bbe\u7f6e\uff0c\u9632\u6b62\u51fa\u73b0\u51b2\u7a81\uff09\u3002 4.\u8bfb\u53d6cookie $.cookie('the_cookie'); 5.\u5220\u9664cookie $.cookie('the_cookie', null); //\u901a\u8fc7\u4f20\u9012null\u4f5c\u4e3acookie\u7684\u503c\u5373\u53ef 6.\u53ef\u9009\u53c2\u6570 $.cookie('the_cookie','the_value',{ expires:7, path:'/', domain:'jquery.com', secure:true })\u3000 \u53c2\u6570 expires\uff1a\uff08Number|Date\uff09\u6709\u6548\u671f\uff1b\u8bbe\u7f6e\u4e00\u4e2a\u6574\u6570\u65f6\uff0c\u5355\u4f4d\u662f\u5929\uff1b\u4e5f\u53ef\u4ee5\u8bbe\u7f6e\u4e00\u4e2a\u65e5\u671f\u5bf9\u8c61\u4f5c\u4e3aCookie\u7684\u8fc7\u671f\u65e5\u671f\uff1b path\uff1a\uff08String\uff09\u521b\u5efa\u8be5Cookie\u7684\u9875\u9762\u8def\u5f84\uff1b domain\uff1a\uff08String\uff09\u521b\u5efa\u8be5Cookie\u7684\u9875\u9762\u57df\u540d\uff1b secure\uff1a\uff08Booblean\uff09\u5982\u679c\u8bbe\u4e3atrue\uff0c\u90a3\u4e48\u6b64Cookie\u7684\u4f20\u8f93\u4f1a\u8981\u6c42\u4e00\u4e2a\u5b89\u5168\u534f\u8bae\uff0c\u4f8b\u5982\uff1aHTTPS\uff1b","title":"13-1 jquery\u64cd\u4f5ccookie"},{"location":"#14-django","text":"","title":"14 Django\u7684\u7528\u6237\u8ba4\u8bc1\u7ec4\u4ef6"},{"location":"#_60","text":"","title":"\u7528\u6237\u8ba4\u8bc1"},{"location":"#auth","text":"from django.contrib import auth django.contrib.auth\u4e2d\u63d0\u4f9b\u4e86\u8bb8\u591a\u65b9\u6cd5\uff0c\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u5176\u4e2d\u7684\u4e09\u4e2a\uff1a","title":"auth\u6a21\u5757"},{"location":"#11-authenticate","text":"\u63d0\u4f9b\u4e86\u7528\u6237\u8ba4\u8bc1\uff0c\u5373\u9a8c\u8bc1\u7528\u6237\u540d\u4ee5\u53ca\u5bc6\u7801\u662f\u5426\u6b63\u786e,\u4e00\u822c\u9700\u8981username password\u4e24\u4e2a\u5173\u952e\u5b57\u53c2\u6570 \u5982\u679c\u8ba4\u8bc1\u4fe1\u606f\u6709\u6548\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a User \u5bf9\u8c61\u3002authenticate()\u4f1a\u5728User \u5bf9\u8c61\u4e0a\u8bbe\u7f6e\u4e00\u4e2a\u5c5e\u6027\u6807\u8bc6\u90a3\u79cd\u8ba4\u8bc1\u540e\u7aef\u8ba4\u8bc1\u4e86\u8be5\u7528\u6237\uff0c\u4e14\u8be5\u4fe1\u606f\u5728\u540e\u9762\u7684\u767b\u5f55\u8fc7\u7a0b\u4e2d\u662f\u9700\u8981\u7684\u3002\u5f53\u6211\u4eec\u8bd5\u56fe\u767b\u9646\u4e00\u4e2a\u4ece\u6570\u636e\u5e93\u4e2d\u76f4\u63a5\u53d6\u51fa\u6765\u4e0d\u7ecf\u8fc7authenticate()\u7684User\u5bf9\u8c61\u4f1a\u62a5\u9519\u7684\uff01\uff01 user = authenticate(username='someone',password='somepassword')","title":"1.1 \u3001authenticate()"},{"location":"#12-loginhttprequest-user","text":"\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2aHttpRequest\u5bf9\u8c61\uff0c\u4ee5\u53ca\u4e00\u4e2a\u8ba4\u8bc1\u4e86\u7684User\u5bf9\u8c61 \u6b64\u51fd\u6570\u4f7f\u7528django\u7684session\u6846\u67b6\u7ed9\u67d0\u4e2a\u5df2\u8ba4\u8bc1\u7684\u7528\u6237\u9644\u52a0\u4e0asession id\u7b49\u4fe1\u606f\u3002 from django.contrib.auth import authenticate, login def my_view(request): username = request.POST['username'] password = request.POST['password'] user = authenticate(username=username, password=password) if user is not None: login(request, user) # Redirect to a success page. ... else: # Return an 'invalid login' error message. ...","title":"1.2 \u3001login(HttpRequest, user)"},{"location":"#13-logoutrequest","text":"from django.contrib.auth import logout def logout_view(request): logout(request) # Redirect to a success page. \u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2aHttpRequest\u5bf9\u8c61\uff0c\u65e0\u8fd4\u56de\u503c\u3002\u5f53\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u5f53\u524d\u8bf7\u6c42\u7684session\u4fe1\u606f\u4f1a\u5168\u90e8\u6e05\u9664\u3002\u8be5\u7528\u6237\u5373\u4f7f\u6ca1\u6709\u767b\u5f55\uff0c\u4f7f\u7528\u8be5\u51fd\u6570\u4e5f\u4e0d\u4f1a\u62a5\u9519\u3002","title":"1.3 \u3001logout(request) \u6ce8\u9500\u7528\u6237"},{"location":"#user","text":"User \u5bf9\u8c61\u5c5e\u6027\uff1ausername\uff0c password\uff08\u5fc5\u586b\u9879\uff09password\u7528\u54c8\u5e0c\u7b97\u6cd5\u4fdd\u5b58\u5230\u6570\u636e\u5e93","title":"User\u5bf9\u8c61"},{"location":"#21-user-is_authenticated","text":"\u5982\u679c\u662f\u771f\u6b63\u7684 User \u5bf9\u8c61\uff0c\u8fd4\u56de\u503c\u6052\u4e3a True \u3002 \u7528\u4e8e\u68c0\u67e5\u7528\u6237\u662f\u5426\u5df2\u7ecf\u901a\u8fc7\u4e86\u8ba4\u8bc1\u3002 \u901a\u8fc7\u8ba4\u8bc1\u5e76\u4e0d\u610f\u5473\u7740\u7528\u6237\u62e5\u6709\u4efb\u4f55\u6743\u9650\uff0c\u751a\u81f3\u4e5f\u4e0d\u68c0\u67e5\u8be5\u7528\u6237\u662f\u5426\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\uff0c\u8fd9\u53ea\u662f\u8868\u660e\u7528\u6237\u6210\u529f\u7684\u901a\u8fc7\u4e86\u8ba4\u8bc1\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u5f88\u91cd\u8981, \u5728\u540e\u53f0\u7528request.user.is_authenticated()\u5224\u65ad\u7528\u6237\u662f\u5426\u5df2\u7ecf\u767b\u5f55\uff0c\u5982\u679ctrue\u5219\u53ef\u4ee5\u5411\u524d\u53f0\u5c55\u793arequest.user.name \u8981\u6c42\uff1a 1 \u7528\u6237\u767b\u9646\u540e\u624d\u80fd\u8bbf\u95ee\u67d0\u4e9b\u9875\u9762\uff0c 2 \u5982\u679c\u7528\u6237\u6ca1\u6709\u767b\u5f55\u5c31\u8bbf\u95ee\u8be5\u9875\u9762\u7684\u8bdd\u76f4\u63a5\u8df3\u5230\u767b\u5f55\u9875\u9762 3 \u7528\u6237\u5728\u8df3\u8f6c\u7684\u767b\u9646\u754c\u9762\u4e2d\u5b8c\u6210\u767b\u9646\u540e\uff0c\u81ea\u52a8\u8bbf\u95ee\u8df3\u8f6c\u5230\u4e4b\u524d\u8bbf\u95ee\u7684\u5730\u5740 \u65b9\u6cd51: def my_view(request): if not request.user.is_authenticated(): return redirect('%s?next=%s' % (settings.LOGIN_URL, request.path)) \u65b9\u6cd52: django\u5df2\u7ecf\u4e3a\u6211\u4eec\u8bbe\u8ba1\u597d\u4e86\u4e00\u4e2a\u7528\u4e8e\u6b64\u79cd\u60c5\u51b5\u7684\u88c5\u9970\u5668\uff1alogin_requierd() from django.contrib.auth.decorators import login_required @login_required def my_view(request): ... \u82e5\u7528\u6237\u6ca1\u6709\u767b\u5f55\uff0c\u5219\u4f1a\u8df3\u8f6c\u5230django\u9ed8\u8ba4\u7684 \u767b\u5f55URL '/accounts/login/ ' (\u8fd9\u4e2a\u503c\u53ef\u4ee5\u5728settings\u6587\u4ef6\u4e2d\u901a\u8fc7LOGIN_URL\u8fdb\u884c\u4fee\u6539)\u3002\u5e76\u4f20\u9012 \u5f53\u524d\u8bbf\u95eeurl\u7684\u7edd\u5bf9\u8def\u5f84 (\u767b\u9646\u6210\u529f\u540e\uff0c\u4f1a\u91cd\u5b9a\u5411\u5230\u8be5\u8def\u5f84)\u3002","title":"2.1 \u3001user\u5bf9\u8c61\u7684 is_authenticated()"},{"location":"#22","text":"\u4f7f\u7528 create_user \u8f85\u52a9\u51fd\u6570\u521b\u5efa\u7528\u6237: from django.contrib.auth.models import User user = User.objects.create_user\uff08username='',password='',email=''\uff09 \u5c0f\u7b14\u8bb0: \u547d\u4ee4\u884c\u521b\u5efa\u8d85\u7ea7\u7528\u6237 kanghuadeMacBook-Pro:authDemo kanghua$ python3.6 manage.py createsuperuser Username (leave blank to use 'kanghua'): alex Email address: aa@qq.com Password: Password (again): This password is too short. It must contain at least 8 characters. This password is too common. This password is entirely numeric. Bypass password validation and create user anyway? [y/N]: y Superuser created successfully.","title":"2.2 \u3001\u521b\u5efa\u7528\u6237"},{"location":"#23-check_passwordpasswd","text":"\u7528\u6237\u9700\u8981\u4fee\u6539\u5bc6\u7801\u7684\u65f6\u5019 \u9996\u5148\u8981\u8ba9\u4ed6\u8f93\u5165\u539f\u6765\u7684\u5bc6\u7801 \uff0c\u5982\u679c\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u901a\u8fc7\u4e86\u5bc6\u7801\u68c0\u67e5\uff0c\u8fd4\u56de True","title":"2.3 \u3001check_password(passwd)"},{"location":"#24","text":"\u4f7f\u7528 set_password() \u6765\u4fee\u6539\u5bc6\u7801 user = User.objects.get(username='') user.set_password(password='') user.save","title":"2.4 \u3001\u4fee\u6539\u5bc6\u7801"},{"location":"#25","text":"\u6ce8\u518c\uff1a def sign_up(request): state = None if request.method == 'POST': password = request.POST.get('password', '') repeat_password = request.POST.get('repeat_password', '') email=request.POST.get('email', '') username = request.POST.get('username', '') if User.objects.filter(username=username): state = 'user_exist' else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect('/book/') content = { 'state': state, 'user': None, } return render(request, 'sign_up.html', content)\u3000\u3000 \u4fee\u6539\u5bc6\u7801\uff1a @login_required def set_password(request): user = request.user state = None if request.method == 'POST': old_password = request.POST.get('old_password', '') new_password = request.POST.get('new_password', '') repeat_password = request.POST.get('repeat_password', '') if user.check_password(old_password): if not new_password: state = 'empty' elif new_password != repeat_password: state = 'repeat_error' else: user.set_password(new_password) user.save() return redirect(\"/log_in/\") else: state = 'password_error' content = { 'user': user, 'state': state, } return render(request, 'set_password.html', content)","title":"2.5 \u3001\u7b80\u5355\u793a\u4f8b"},{"location":"#15-django-","text":"","title":"15 Django\u7ec4\u4ef6-\u4e2d\u95f4\u4ef6"},{"location":"#_61","text":"","title":"\u4e2d\u95f4\u4ef6"},{"location":"#_62","text":"\u4e2d\u95f4\u4ef6\u987e\u540d\u601d\u4e49\uff0c\u662f\u4ecb\u4e8erequest\u4e0eresponse\u5904\u7406\u4e4b\u95f4\u7684\u4e00\u9053\u5904\u7406\u8fc7\u7a0b\uff0c\u76f8\u5bf9\u6bd4\u8f83\u8f7b\u91cf\u7ea7\uff0c\u5e76\u4e14\u5728\u5168\u5c40\u4e0a\u6539\u53d8django\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u3002\u56e0\u4e3a\u6539\u53d8\u7684\u662f\u5168\u5c40\uff0c\u6240\u4ee5\u9700\u8981\u8c28\u614e\u5b9e\u7528\uff0c\u7528\u4e0d\u597d\u4f1a\u5f71\u54cd\u5230\u6027\u80fd\u3002 Django\u7684\u4e2d\u95f4\u4ef6\u7684\u5b9a\u4e49\uff1a Middleware is a framework of hooks into Django\u2019s request/response processing. <br>It\u2019s a light, low-level \u201cplugin\u201d system for globally altering Django\u2019s input or output. \u5982\u679c\u4f60\u60f3\u4fee\u6539\u8bf7\u6c42\uff0c\u4f8b\u5982\u88ab\u4f20\u9001\u5230view\u4e2d\u7684 HttpRequest \u5bf9\u8c61\u3002 \u6216\u8005\u4f60\u60f3\u4fee\u6539view\u8fd4\u56de\u7684 HttpResponse \u5bf9\u8c61\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u901a\u8fc7\u4e2d\u95f4\u4ef6\u6765\u5b9e\u73b0\u3002 \u53ef\u80fd\u4f60\u8fd8\u60f3\u5728view\u6267\u884c\u4e4b\u524d\u505a\u4e00\u4e9b\u64cd\u4f5c\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u53ef\u4ee5\u7528 middleware\u6765\u5b9e\u73b0\u3002 Django\u9ed8\u8ba4\u7684 Middleware \uff1a MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', ] \u6bcf\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u90fd\u6709\u5177\u4f53\u7684\u529f\u80fd\u3002","title":"\u4e2d\u95f4\u4ef6\u7684\u6982\u5ff5"},{"location":"#_63","text":"","title":"\u4e2d\u95f4\u4ef6\u5b9e\u73b0\u6d41\u7a0b"},{"location":"#_64","text":"\u4e2d\u95f4\u4ef6\u4e2d\u4e00\u5171\u6709\u56db\u4e2a\u65b9\u6cd5\uff1a process_request process_view process_exception process_response","title":"\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6"},{"location":"#process_requestprocess_response","text":"\u5f53\u7528\u6237\u53d1\u8d77\u8bf7\u6c42\u7684\u65f6\u5019\u4f1a\u4f9d\u6b21\u7ecf\u8fc7\u6240\u6709\u7684\u7684\u4e2d\u95f4\u4ef6\uff0c\u8fd9\u4e2a\u65f6\u5019\u7684\u8bf7\u6c42\u65f6process_request,\u6700\u540e\u5230\u8fbeviews\u7684\u51fd\u6570\u4e2d\uff0cviews\u51fd\u6570\u5904\u7406\u540e\uff0c\u5728\u4f9d\u6b21\u7a7f\u8fc7\u4e2d\u95f4\u4ef6\uff0c\u8fd9\u4e2a\u65f6\u5019\u662fprocess_response,\u6700\u540e\u8fd4\u56de\u7ed9\u8bf7\u6c42\u8005\u3002 \u4e0a\u8ff0\u622a\u56fe\u4e2d\u7684\u4e2d\u95f4\u4ef6\u90fd\u662fdjango\u4e2d\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2a\u4e2d\u95f4\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u5199\u4e00\u4e2a\u7c7b\uff0c\u4f46\u662f\u5fc5\u987b\u7ee7\u627fMiddlewareMixin \u9700\u8981\u5bfc\u5165 from django.utils.deprecation import MiddlewareMixin in views: def index(request): print(\"view\u51fd\u6570...\") return HttpResponse(\"OK\") in Mymiddlewares.py\uff1a from django.utils.deprecation import MiddlewareMixin from django.shortcuts import HttpResponse class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response class Md2(MiddlewareMixin): def process_request(self,request): print(\"Md2\u8bf7\u6c42\") #return HttpResponse(\"Md2\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md2\u8fd4\u56de\") return response \u7ed3\u679c\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u6ce8\u610f\uff1a \u5982\u679c\u5f53\u8bf7\u6c42\u5230\u8fbe\u8bf7\u6c422\u7684\u65f6\u5019\u76f4\u63a5\u4e0d\u7b26\u5408\u6761\u4ef6\u8fd4\u56de\uff0c\u5373return HttpResponse(\"Md2\u4e2d\u65ad\")\uff0c\u7a0b\u5e8f\u5c06\u628a\u8bf7\u6c42\u76f4\u63a5\u53d1\u7ed9\u4e2d\u95f4\u4ef62\u8fd4\u56de\uff0c\u7136\u540e\u4f9d\u6b21\u8fd4\u56de\u5230\u8bf7\u6c42\u8005\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a \u8fd4\u56deMd2\u4e2d\u65ad\u7684\u9875\u9762\uff0c\u540e\u53f0\u6253\u5370\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 Md2\u8fd4\u56de Md1\u8fd4\u56de \u6d41\u7a0b\u56fe\u5982\u4e0b\uff1a","title":"process_request\uff0cprocess_response"},{"location":"#process_view","text":"process_view(self, request, callback, callback_args, callback_kwargs) Mymiddlewares.py \u4fee\u6539\u5982\u4e0b from django.utils.deprecation import MiddlewareMixin from django.shortcuts import HttpResponse class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") #return HttpResponse(\"Md1\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): print(\"Md1view\") class Md2(MiddlewareMixin): def process_request(self,request): print(\"Md2\u8bf7\u6c42\") return HttpResponse(\"Md2\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md2\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): print(\"Md2view\") \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 Md1view Md2view view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u4e0b\u56fe\u8fdb\u884c\u5206\u6790\u4e0a\u9762\u7684\u8fc7\u7a0b\uff1a \u5f53\u6700\u540e\u4e00\u4e2a\u4e2d\u95f4\u7684process_request\u5230\u8fbe\u8def\u7531\u5173\u7cfb\u6620\u5c04\u4e4b\u540e\uff0c\u8fd4\u56de\u5230\u4e2d\u95f4\u4ef61\u7684process_view\uff0c\u7136\u540e\u4f9d\u6b21\u5f80\u4e0b\uff0c\u5230\u8fbeviews\u51fd\u6570\uff0c\u6700\u540e\u901a\u8fc7process_response\u4f9d\u6b21\u8fd4\u56de\u5230\u8fbe\u7528\u6237\u3002 process_view\u53ef\u4ee5\u7528\u6765\u8c03\u7528\u89c6\u56fe\u51fd\u6570\uff1a class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") #return HttpResponse(\"Md1\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): # return HttpResponse(\"hello\") response=callback(request,*callback_args,**callback_kwargs) return response \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u6ce8\u610f\uff1aprocess_view\u5982\u679c\u6709\u8fd4\u56de\u503c\uff0c\u4f1a\u8d8a\u8fc7\u5176\u4ed6\u7684process_view\u4ee5\u53ca\u89c6\u56fe\u51fd\u6570\uff0c\u4f46\u662f\u6240\u6709\u7684process_response\u90fd\u8fd8\u4f1a\u6267\u884c\u3002","title":"process_view"},{"location":"#process_exception","text":"process_exception(self, request, exception) \u793a\u4f8b\u4fee\u6539\u5982\u4e0b\uff1a class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") #return HttpResponse(\"Md1\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): # return HttpResponse(\"hello\") # response=callback(request,*callback_args,**callback_kwargs) # return response print(\"md1 process_view...\") def process_exception(self): print(\"md1 process_exception...\") class Md2(MiddlewareMixin): def process_request(self,request): print(\"Md2\u8bf7\u6c42\") # return HttpResponse(\"Md2\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md2\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): print(\"md2 process_view...\") def process_exception(self): print(\"md1 process_exception...\") \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 md1 process_view... md2 process_view... view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u6d41\u7a0b\u56fe\u5982\u4e0b\uff1a \u5f53views\u51fa\u73b0\u9519\u8bef\u65f6\uff1a \u5c06md2\u7684process_exception\u4fee\u6539\u5982\u4e0b\uff1a def process_exception(self,request,exception): print(\"md2 process_exception...\") return HttpResponse(\"error\") \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 md1 process_view... md2 process_view... view\u51fd\u6570... md2 process_exception... Md2\u8fd4\u56de Md1\u8fd4\u56de","title":"process_exception"},{"location":"#_65","text":"","title":"\u5e94\u7528\u6848\u4f8b"},{"location":"#1ip","text":"\u67d0\u4e9bIP\u8bbf\u95ee\u670d\u52a1\u5668\u7684\u9891\u7387\u8fc7\u9ad8\uff0c\u8fdb\u884c\u62e6\u622a\uff0c\u6bd4\u5982\u9650\u5236\u6bcf\u5206\u949f\u4e0d\u80fd\u8d85\u8fc720\u6b21\u3002","title":"1\u3001\u505aIP\u8bbf\u95ee\u9891\u7387\u9650\u5236"},{"location":"#2url","text":"\u5982\u679c\u7528\u6237\u8bbf\u95ee\u7684\u662flogin\u89c6\u56fe\uff08\u653e\u8fc7\uff09 \u5982\u679c\u8bbf\u95ee\u5176\u4ed6\u89c6\u56fe\uff0c\u9700\u8981\u68c0\u6d4b\u662f\u4e0d\u662f\u6709session\u8ba4\u8bc1\uff0c\u5df2\u7ecf\u6709\u4e86\u653e\u884c\uff0c\u6ca1\u6709\u8fd4\u56delogin\uff0c\u8fd9\u6837\u5c31\u7701\u5f97\u5728\u591a\u4e2a\u89c6\u56fe\u51fd\u6570\u4e0a\u5199\u88c5\u9970\u5668\u4e86\uff01","title":"2\u3001URL\u8bbf\u95ee\u8fc7\u6ee4"},{"location":"#_66","text":"\u4f5c\u4e3a\u5ef6\u4f38\u6269\u5c55\u5185\u5bb9\uff0c\u6709\u4f59\u529b\u7684\u540c\u5b66\u53ef\u4ee5\u5c1d\u8bd5\u7740\u8bfb\u4e00\u4e0b\u4ee5\u4e0b\u4e24\u4e2a\u81ea\u5e26\u7684\u4e2d\u95f4\u4ef6\uff1a 'django.contrib.sessions.middleware.SessionMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware',","title":"\u6e90\u7801\u8bd5\u8bfb"},{"location":"#django-form","text":"\u77e5\u8bc6\u9884\u89c8 \u6784\u5efa\u4e00\u4e2a\u8868\u5355 \u5728Django \u4e2d\u6784\u5efa\u4e00\u4e2a\u8868\u5355 Django Form \u7c7b\u8be6\u89e3 \u4f7f\u7528\u8868\u5355\u6a21\u677f","title":"Django-form\u8868\u5355"},{"location":"#_67","text":"\u5047\u8bbe\u4f60\u60f3\u5728\u4f60\u7684\u7f51\u7ad9\u4e0a\u521b\u5efa\u4e00\u4e2a\u7b80\u5355\u7684\u8868\u5355\uff0c\u4ee5\u83b7\u5f97\u7528\u6237\u7684\u540d\u5b57\u3002\u4f60\u9700\u8981\u7c7b\u4f3c\u8fd9\u6837\u7684\u6a21\u677f\uff1a <form action=\"/your-name/\" method=\"post\"> <label for=\"your_name\">Your name: </label> <input id=\"your_name\" type=\"text\" name=\"your_name\"> <input type=\"submit\" value=\"OK\"> </form> \u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u8868\u5355\u3002\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u4e00\u4e2a\u8868\u5355\u53ef\u80fd\u5305\u542b\u51e0\u5341\u4e0a\u767e\u4e2a\u5b57\u6bb5\uff0c\u5176\u4e2d\u5927\u90e8\u5206\u9700\u8981\u9884\u586b\u5145\uff0c\u800c\u4e14\u6211\u4eec\u9884\u6599\u5230\u7528\u6237\u5c06\u6765\u56de\u7f16\u8f91-\u63d0\u4ea4\u51e0\u6b21\u624d\u80fd\u5b8c\u6210\u64cd\u4f5c\u3002 \u6211\u4eec\u53ef\u80fd\u9700\u8981\u5728\u8868\u5355\u63d0\u4ea4\u4e4b\u524d\uff0c\u5728\u6d4f\u89c8\u5668\u7aef\u4f5c\u4e00\u4e9b\u9a8c\u8bc1\u3002\u6211\u4eec\u53ef\u80fd\u60f3\u4f7f\u7528\u975e\u5e38\u590d\u6742\u7684\u5b57\u6bb5\uff0c\u4ee5\u5141\u8bb8\u7528\u6237\u505a\u7c7b\u4f3c\u4ece\u65e5\u5386\u4e2d\u6311\u9009\u65e5\u671f\u8fd9\u6837\u7684\u4e8b\u60c5\uff0c\u7b49\u7b49\u3002 \u8fd9\u4e2a\u65f6\u5019\uff0c\u8ba9Django \u6765\u4e3a\u6211\u4eec\u5b8c\u6210\u5927\u90e8\u5206\u5de5\u4f5c\u662f\u5f88\u5bb9\u6613\u7684\u3002 so,\u4e24\u4e2a\u7a81\u51fa\u4f18\u70b9\uff1a 1 form\u8868\u5355\u63d0\u4ea4\u65f6\uff0c\u6570\u636e\u51fa\u73b0\u9519\u8bef\uff0c\u8fd4\u56de\u7684\u9875\u9762\u4e2d\u4ecd\u53ef\u4ee5\u4fdd\u7559\u4e4b\u524d\u8f93\u5165\u7684\u6570\u636e\u3002 2 \u65b9\u4fbf\u5730\u9650\u5236\u5b57\u6bb5\u6761\u4ef6","title":"\u6784\u5efa\u4e00\u4e2a\u8868\u5355"},{"location":"#django_2","text":"","title":"\u5728Django \u4e2d\u6784\u5efa\u4e00\u4e2a\u8868\u5355"},{"location":"#form_1","text":"\u6211\u4eec\u5df2\u7ecf\u8ba1\u5212\u597d\u4e86\u6211\u4eec\u7684 HTML \u8868\u5355\u5e94\u8be5\u5448\u73b0\u7684\u6837\u5b50\u3002\u5728Django \u4e2d\uff0c\u6211\u4eec\u7684\u8d77\u59cb\u70b9\u662f\u8fd9\u91cc\uff1a #forms.py from django import forms class NameForm(forms.Form): your_name = forms.CharField(label='Your name', max_length=100) \u5b83\u5b9a\u4e49\u4e00\u4e2a Form \u7c7b\uff0c\u53ea\u5e26\u6709\u4e00\u4e2a\u5b57\u6bb5\uff08 your_name \uff09\u3002 \u5b57\u6bb5\u5141\u8bb8\u7684\u6700\u5927\u957f\u5ea6\u901a\u8fc7 max_length \u5b9a\u4e49\u3002\u5b83\u5b8c\u6210\u4e24\u4ef6\u4e8b\u60c5\u3002\u9996\u5148\uff0c\u5b83\u5728HTML \u7684 <input> \u4e0a\u653e\u7f6e\u4e00\u4e2a maxlength=\"100\" \uff08\u8fd9\u6837\u6d4f\u89c8\u5668\u5c06\u5728\u7b2c\u4e00\u65f6\u95f4\u963b\u6b62\u7528\u6237\u8f93\u5165\u591a\u4e8e\u8fd9\u4e2a\u6570\u76ee\u7684\u5b57\u7b26\uff09\u3002\u5b83\u8fd8\u610f\u5473\u7740\u5f53Django \u6536\u5230\u6d4f\u89c8\u5668\u53d1\u9001\u8fc7\u6765\u7684\u8868\u5355\u65f6\uff0c\u5b83\u5c06\u9a8c\u8bc1\u6570\u636e\u7684\u957f\u5ea6\u3002 Form \u7684\u5b9e\u4f8b\u5177\u6709\u4e00\u4e2a is_valid() \u65b9\u6cd5\uff0c\u5b83\u4e3a\u6240\u6709\u7684\u5b57\u6bb5\u8fd0\u884c\u9a8c\u8bc1\u7684\u7a0b\u5e8f\u3002\u5f53\u8c03\u7528\u8fd9\u4e2a\u65b9\u6cd5\u65f6\uff0c\u5982\u679c\u6240\u6709\u7684\u5b57\u6bb5\u90fd\u5305\u542b\u5408\u6cd5\u7684\u6570\u636e\uff0c\u5b83\u5c06\uff1a \u8fd4\u56de True \u5c06\u8868\u5355\u7684\u6570\u636e\u653e\u5230 cleaned_data \u5c5e\u6027\u4e2d\u3002 \u5b8c\u6574\u7684\u8868\u5355\uff0c\u7b2c\u4e00\u6b21\u6e32\u67d3\u65f6\uff0c\u770b\u4e0a\u53bb\u5c06\u50cf\uff1a <label for=\"your_name\">Your name: </label> <input id=\"your_name\" type=\"text\" name=\"your_name\" maxlength=\"100\"> \u6ce8\u610f\u5b83\u4e0d\u5305\u542b <form> \u6807\u7b7e\u548c\u63d0\u4ea4\u6309\u94ae\u3002\u6211\u4eec\u5fc5\u987b\u81ea\u5df1\u5728\u6a21\u677f\u4e2d\u63d0\u4f9b\u5b83\u4eec\u3002","title":"Form \u7c7b"},{"location":"#_68","text":"\u53d1\u9001\u7ed9Django \u7f51\u7ad9\u7684\u8868\u5355\u6570\u636e\u901a\u8fc7\u4e00\u4e2a\u89c6\u56fe\u5904\u7406\uff0c\u4e00\u822c\u548c\u53d1\u5e03\u8fd9\u4e2a\u8868\u5355\u7684\u662f\u540c\u4e00\u4e2a\u89c6\u56fe\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u91cd\u7528\u4e00\u4e9b\u76f8\u540c\u7684\u903b\u8f91\u3002 \u5f53\u5904\u7406\u8868\u5355\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5728\u89c6\u56fe\u4e2d\u5b9e\u4f8b\u5316\u5b83\uff1a #views.py from django.shortcuts import render from django.http import HttpResponseRedirect from .forms import NameForm def get_name(request): # if this is a POST request we need to process the form data if request.method == 'POST': # create a form instance and populate it with data from the request: form = NameForm(request.POST) # check whether it's valid: if form.is_valid(): # process the data in form.cleaned_data as required # ... # redirect to a new URL: return HttpResponseRedirect('/thanks/') # if a GET (or any other method) we'll create a blank form else: form = NameForm() return render(request, 'name.html', {'form': form}) \u5982\u679c\u8bbf\u95ee\u89c6\u56fe\u7684\u662f\u4e00\u4e2a GET \u8bf7\u6c42\uff0c\u5b83\u5c06\u521b\u5efa\u4e00\u4e2a\u7a7a\u7684\u8868\u5355\u5b9e\u4f8b\u5e76\u5c06\u5b83\u653e\u7f6e\u5230\u8981\u6e32\u67d3\u7684\u6a21\u677f\u7684\u4e0a\u4e0b\u6587\u4e2d\u3002\u8fd9\u662f\u6211\u4eec\u5728\u7b2c\u4e00\u4e2a\u8bbf\u95ee\u8be5URL \u65f6\u9884\u671f\u53d1\u751f\u7684\u60c5\u51b5\u3002 \u5982\u679c\u8868\u5355\u7684\u63d0\u4ea4\u4f7f\u7528 POST \u8bf7\u6c42\uff0c\u90a3\u4e48\u89c6\u56fe\u5c06\u518d\u6b21\u521b\u5efa\u4e00\u4e2a\u8868\u5355\u5b9e\u4f8b\u5e76\u4f7f\u7528\u8bf7\u6c42\u4e2d\u7684\u6570\u636e\u586b\u5145\u5b83\uff1a form = NameForm(request.POST) \u3002\u8fd9\u53eb\u505a\u201d\u7ed1\u5b9a\u6570\u636e\u81f3\u8868\u5355\u201c\uff08\u5b83\u73b0\u5728\u662f\u4e00\u4e2a\u7ed1\u5b9a\u7684\u8868\u5355\uff09\u3002 \u6211\u4eec\u8c03\u7528\u8868\u5355\u7684 is_valid() \u65b9\u6cd5\uff1b\u5982\u679c\u5b83\u4e0d\u4e3a True \uff0c\u6211\u4eec\u5c06\u5e26\u7740\u8fd9\u4e2a\u8868\u5355\u8fd4\u56de\u5230\u6a21\u677f\u3002\u8fd9\u65f6\u8868\u5355\u4e0d\u518d\u4e3a\u7a7a\uff08\u672a\u7ed1\u5b9a\uff09\uff0c\u6240\u4ee5HTML \u8868\u5355\u5c06\u7528\u4e4b\u524d\u63d0\u4ea4\u7684\u6570\u636e\u586b\u5145\uff0c\u7136\u540e\u53ef\u4ee5\u6839\u636e\u8981\u6c42\u7f16\u8f91\u5e76\u6539\u6b63\u5b83\u3002 \u5982\u679c is_valid() \u4e3a True \uff0c\u6211\u4eec\u5c06\u80fd\u591f\u5728 cleaned_data \u5c5e\u6027\u4e2d\u627e\u5230\u6240\u6709\u5408\u6cd5\u7684\u8868\u5355\u6570\u636e\u3002\u5728\u53d1\u9001HTTP \u91cd\u5b9a\u5411\u7ed9\u6d4f\u89c8\u5668\u544a\u8bc9\u5b83\u4e0b\u4e00\u6b65\u7684\u53bb\u5411\u4e4b\u524d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u4e2a\u6570\u636e\u6765\u66f4\u65b0\u6570\u636e\u5e93\u6216\u8005\u505a\u5176\u5b83\u5904\u7406\u3002","title":"\u89c6\u56fe"},{"location":"#_69","text":"\u6211\u4eec\u4e0d\u9700\u8981\u5728name.html \u6a21\u677f\u4e2d\u505a\u5f88\u591a\u5de5\u4f5c\u3002\u6700\u7b80\u5355\u7684\u4f8b\u5b50\u662f\uff1a <form action=\"/your-name/\" method=\"post\"> {% csrf_token %} {{ form }} <input type=\"submit\" value=\"Submit\" /> </form> \u6839\u636e {{ form }} \uff0c\u6240\u6709\u7684\u8868\u5355\u5b57\u6bb5\u548c\u5b83\u4eec\u7684\u5c5e\u6027\u5c06\u901a\u8fc7Django \u7684\u6a21\u677f\u8bed\u8a00\u62c6\u5206\u6210HTML \u6807\u8bb0 \u3002 \u6ce8\uff1aDjango \u539f\u751f\u652f\u6301\u4e00\u4e2a\u7b80\u5355\u6613\u7528\u7684 \u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u7684\u9632\u62a4 \u3002\u5f53\u63d0\u4ea4\u4e00\u4e2a\u542f\u7528CSRF \u9632\u62a4\u7684 POST \u8868\u5355\u65f6\uff0c\u4f60\u5fc5\u987b\u4f7f\u7528\u4e0a\u9762\u4f8b\u5b50\u4e2d\u7684 csrf_token \u6a21\u677f\u6807\u7b7e\u3002 \u73b0\u5728\u6211\u4eec\u6709\u4e86\u4e00\u4e2a\u53ef\u4ee5\u5de5\u4f5c\u7684\u7f51\u9875\u8868\u5355\uff0c\u5b83\u901a\u8fc7Django Form \u63cf\u8ff0\u3001\u901a\u8fc7\u89c6\u56fe\u5904\u7406\u5e76\u6e32\u67d3\u6210\u4e00\u4e2aHTML <form> \u3002","title":"\u6a21\u677f"},{"location":"#django-form_1","text":"","title":"Django Form \u7c7b\u8be6\u89e3"},{"location":"#_70","text":"\u7ed1\u5b9a\u7684\u548c\u672a\u7ed1\u5b9a\u7684\u8868\u5355 \u4e4b\u95f4\u7684\u533a\u522b\u975e\u5e38\u91cd\u8981\uff1a \u672a\u7ed1\u5b9a\u7684\u8868\u5355\u6ca1\u6709\u5173\u8054\u7684\u6570\u636e\u3002\u5f53\u6e32\u67d3\u7ed9\u7528\u6237\u65f6\uff0c\u5b83\u5c06\u4e3a\u7a7a\u6216\u5305\u542b\u9ed8\u8ba4\u7684\u503c\u3002 \u7ed1\u5b9a\u7684\u8868\u5355\u5177\u6709\u63d0\u4ea4\u7684\u6570\u636e\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u6765\u68c0\u9a8c\u6570\u636e\u662f\u5426\u5408\u6cd5\u3002\u5982\u679c\u6e32\u67d3\u4e00\u4e2a\u4e0d\u5408\u6cd5\u7684\u7ed1\u5b9a\u7684\u8868\u5355\uff0c\u5b83\u5c06\u5305\u542b\u5185\u8054\u7684\u9519\u8bef\u4fe1\u606f\uff0c\u544a\u8bc9\u7528\u6237\u5982\u4f55\u7ea0\u6b63\u6570\u636e\u3002","title":"\u7ed1\u5b9a\u7684\u548c\u672a\u7ed1\u5b9a\u7684\u8868\u5355\u5b9e\u4f8b"},{"location":"#_71","text":"\u8003\u8651\u4e00\u4e2a\u6bd4\u4e0a\u9762\u7684\u8ff7\u4f60\u793a\u4f8b\u66f4\u6709\u7528\u7684\u4e00\u4e2a\u8868\u5355\uff0c\u6211\u4eec\u5b8c\u6210\u4e00\u4e2a\u66f4\u52a0\u6709\u7528\u7684\u6ce8\u518c\u8868\u5355\uff1a #forms.py from django import forms class RegisterForm(forms.Form): username = forms.CharField(max_length=100, error_messages={\"min_length\":\"\u6700\u77ed\u4e3a5\u4e2a\u5b57\u7b26\",\"required\":\"\u8be5\u5b57\u6bb5\u4e0d\u80fd\u4e3a\u7a7a\"}, ) password = forms.CharField(max_length=100, widget=widgets.PasswordInput(attrs={\"placeholder\":\"password\"}) ) telephone=forms.IntegerField( error_messages={ \"invalid\":\"\u683c\u5f0f\u9519\u8bef\" } ) gender=forms.CharField( initial=2, widget=widgets.Select(choices=((1,'\u4e0a\u6d77'),(2,'\u5317\u4eac'),)) ) email = forms.EmailField() is_married = forms.BooleanField(required=False)","title":"\u5b57\u6bb5\u8be6\u89e3"},{"location":"#widgets","text":"\u6bcf\u4e2a\u8868\u5355\u5b57\u6bb5\u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684 Widget \u7c7b\uff0c\u5b83\u5bf9\u5e94\u4e00\u4e2aHTML \u8868\u5355 Widget \uff0c\u4f8b\u5982 <input type=\"text\"> \u3002 \u5728\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\uff0c\u5b57\u6bb5\u90fd\u5177\u6709\u4e00\u4e2a\u5408\u7406\u7684\u9ed8\u8ba4Widget\u3002\u4f8b\u5982\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c CharField \u5177\u6709\u4e00\u4e2a TextInput Widget \uff0c\u5b83\u5728HTML \u4e2d\u751f\u6210\u4e00\u4e2a <input type=\"text\"> \u3002","title":"Widgets"},{"location":"#_72","text":"\u4e0d\u7ba1\u8868\u5355\u63d0\u4ea4\u7684\u662f\u4ec0\u4e48\u6570\u636e\uff0c\u4e00\u65e6\u901a\u8fc7\u8c03\u7528 is_valid() \u6210\u529f\u9a8c\u8bc1\uff08 is_valid() \u8fd4\u56de True \uff09\uff0c\u9a8c\u8bc1\u540e\u7684\u8868\u5355\u6570\u636e\u5c06\u4f4d\u4e8e form.cleaned_data \u5b57\u5178\u4e2d\u3002\u8fd9\u4e9b\u6570\u636e\u5df2\u7ecf\u4e3a\u4f60\u8f6c\u6362\u597d\u4e3aPython \u7684\u7c7b\u578b\u3002 \u6ce8\uff1a\u6b64\u65f6\uff0c\u4f60\u4f9d\u7136\u53ef\u4ee5\u4ece request.POST \u4e2d\u76f4\u63a5\u8bbf\u95ee\u5230\u672a\u9a8c\u8bc1\u7684\u6570\u636e\uff0c\u4f46\u662f\u8bbf\u95ee\u9a8c\u8bc1\u540e\u7684\u6570\u636e\u66f4\u597d\u4e00\u4e9b\u3002 \u5728\u4e0a\u9762\u7684\u8054\u7cfb\u8868\u5355\u793a\u4f8b\u4e2d\uff0cis_married\u5c06\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\u3002\u7c7b\u4f3c\u5730\uff0c IntegerField \u548c FloatField \u5b57\u6bb5\u5206\u522b\u5c06\u503c\u8f6c\u6362\u4e3aPython \u7684 int \u548c float \u3002 \u56de\u5230\u9876\u90e8","title":"\u5b57\u6bb5\u7684\u6570\u636e"},{"location":"#_73","text":"\u4f60\u9700\u8981\u505a\u7684\u5c31\u662f\u5c06\u8868\u5355\u5b9e\u4f8b\u653e\u8fdb\u6a21\u677f\u7684\u4e0a\u4e0b\u6587\u3002\u5982\u679c\u4f60\u7684\u8868\u5355\u5728 Contex t \u4e2d\u53eb\u505a form \uff0c\u90a3\u4e48 {{ form }} \u5c06\u6b63\u786e\u5730\u6e32\u67d3\u5b83\u7684 <label> \u548c <input> \u5143\u7d20\u3002","title":"\u4f7f\u7528\u8868\u5355\u6a21\u677f"},{"location":"#_74","text":"\u5bf9\u4e8e <label>/<input> \u5bf9\uff0c\u8fd8\u6709\u51e0\u4e2a\u8f93\u51fa\u9009\u9879\uff1a {{ form.as_table }} \u4ee5\u8868\u683c\u7684\u5f62\u5f0f\u5c06\u5b83\u4eec\u6e32\u67d3\u5728 <tr> \u6807\u7b7e\u4e2d {{ form.as_p }} \u5c06\u5b83\u4eec\u6e32\u67d3\u5728 <p> \u6807\u7b7e\u4e2d {{ form.as_ul }} \u5c06\u5b83\u4eec\u6e32\u67d3\u5728 <li> \u6807\u7b7e\u4e2d \u6ce8\u610f\uff0c\u4f60\u5fc5\u987b\u81ea\u5df1\u63d0\u4f9b <table> \u6216 <ul> \u5143\u7d20\u3002 {{ form.as_p }} \u4f1a\u6e32\u67d3\u5982\u4e0b\uff1a <form action=\"\"> <p> <label for=\"id_username\">Username:</label> <input id=\"id_username\" maxlength=\"100\" name=\"username\" type=\"text\" required=\"\"> </p> <p> <label for=\"id_password\">Password:</label> <input id=\"id_password\" maxlength=\"100\" name=\"password\" placeholder=\"password\" type=\"password\" required=\"\"> </p> <p> <label for=\"id_telephone\">Telephone:</label> <input id=\"id_telephone\" name=\"telephone\" type=\"number\" required=\"\"> </p> <p> <label for=\"id_email\">Email:</label> <input id=\"id_email\" name=\"email\" type=\"email\" required=\"\"> </p> <p> <label for=\"id_is_married\">Is married:</label> <input id=\"id_is_married\" name=\"is_married\" type=\"checkbox\"> </p> <input type=\"submit\" value=\"\u6ce8\u518c\"> </form>","title":"\u8868\u5355\u6e32\u67d3\u7684\u9009\u9879"},{"location":"#_75","text":"\u6211\u4eec\u6ca1\u6709\u5fc5\u8981\u975e\u8981\u8ba9Django \u6765\u5206\u62c6\u8868\u5355\u7684\u5b57\u6bb5\uff1b\u5982\u679c\u6211\u4eec\u559c\u6b22\uff0c\u6211\u4eec\u53ef\u4ee5\u624b\u5de5\u6765\u505a\uff08\u4f8b\u5982\uff0c\u8fd9\u6837\u5141\u8bb8\u91cd\u65b0\u5bf9\u5b57\u6bb5\u6392\u5e8f\uff09\u3002\u6bcf\u4e2a\u5b57\u6bb5\u90fd\u662f\u8868\u5355\u7684\u4e00\u4e2a\u5c5e\u6027\uff0c\u53ef\u4ee5\u4f7f\u7528 {{ form.name_of_field }} \u8bbf\u95ee\uff0c\u5e76\u5c06\u5728Django \u6a21\u677f\u4e2d\u6b63\u786e\u5730\u6e32\u67d3\u3002\u4f8b\u5982\uff1a <div class=\"fieldWrapper\"> {{ form.Username.errors }} {{ form.Username.label_tag }} {{ form.Username }} </div>","title":"\u624b\u5de5\u6e32\u67d3\u5b57\u6bb5"},{"location":"#_76","text":"1\u3001 registerForm=RegisterForm(request.POST) print(type(registerForm.errors)) #<class 'django.forms.utils.ErrorDict'> print(type(registerForm.errors[\"username\"])) #<class 'django.forms.utils.ErrorList'> 2\u3001 \u4f7f\u7528 {{ form.name_of_field.errors }} \u663e\u793a\u8868\u5355\u9519\u8bef\u7684\u4e00\u4e2a\u6e05\u5355\uff0c\u5e76\u6e32\u67d3\u6210\u4e00\u4e2a ul \u3002\u770b\u4e0a\u53bb\u53ef\u80fd\u50cf\uff1a <ul class=\"errorlist\"> <li>Sender is required.</li> </ul>","title":"\u6e32\u67d3\u8868\u5355\u7684\u9519\u8bef\u4fe1\u606f"},{"location":"#form_2","text":"def foo(request): if request.method==\"POST\": regForm=RegForm(request.POST) if regForm.is_valid(): pass # \u53ef\u7528\u6570\u636e: regForm.cleaned_data, # \u5c06\u6570\u636e\u63d2\u5165\u6570\u636e\u5e93\u8868\u4e2d else: pass # \u53ef\u7528\u6570\u636e: regForm.errors # \u53ef\u4ee5\u5229\u7528\u6a21\u677f\u6e32\u67d3\u8bb2errors\u5d4c\u5957\u5230\u9875\u9762\u4e2d\u8fd4\u56de # \u4e5f\u53ef\u4ee5\u6253\u5305\u5230\u4e00\u4e2a\u5b57\u5178\u4e2d,\u7528\u4e8eajax\u8fd4\u56de else: regForm=RegForm() return render(request,\"register.html\",{\"regForm\":regForm}) ''' \u5b9e\u4f8b\u5316\u65f6: self.fields={ \"username\":\"\u5b57\u6bb5\u89c4\u5219\u5bf9\u8c61\", \"password\":\"\u5b57\u6bb5\u89c4\u5219\u5bf9\u8c61\", } is_valid\u65f6: self._errors = {} self.cleaned_data = {} #\u5c40\u90e8\u94a9\u5b50: for name, field in self.fields.items(): try: value = field.clean(value) self.cleaned_data[name] = value if hasattr(self, 'clean_%s' % name): value = getattr(self, 'clean_%s' % name)() self.cleaned_data[name] = value except ValidationError as e: self.add_error(name, e) # \u5168\u5c40\u94a9\u5b50: self.clean() # def self.clean():return self.cleaned_data return not self.errors # True\u6216\u8005False '''","title":"form\u7ec4\u4ef6\u7684\u94a9\u5b50"},{"location":"#form_3","text":"1\u3001Django\u5185\u7f6e\u5b57\u6bb5\u5982\u4e0b\uff1a Field required=True, \u662f\u5426\u5141\u8bb8\u4e3a\u7a7a widget=None, HTML\u63d2\u4ef6 label=None, \u7528\u4e8e\u751f\u6210Label\u6807\u7b7e\u6216\u663e\u793a\u5185\u5bb9 initial=None, \u521d\u59cb\u503c help_text='', \u5e2e\u52a9\u4fe1\u606f(\u5728\u6807\u7b7e\u65c1\u8fb9\u663e\u793a) error_messages=None, \u9519\u8bef\u4fe1\u606f {'required': '\u4e0d\u80fd\u4e3a\u7a7a', 'invalid': '\u683c\u5f0f\u9519\u8bef'} show_hidden_initial=False, \u662f\u5426\u5728\u5f53\u524d\u63d2\u4ef6\u540e\u9762\u518d\u52a0\u4e00\u4e2a\u9690\u85cf\u7684\u4e14\u5177\u6709\u9ed8\u8ba4\u503c\u7684\u63d2\u4ef6\uff08\u53ef\u7528\u4e8e\u68c0\u9a8c\u4e24\u6b21\u8f93\u5165\u662f\u5426\u4e00\u76f4\uff09 validators=[], \u81ea\u5b9a\u4e49\u9a8c\u8bc1\u89c4\u5219 localize=False, \u662f\u5426\u652f\u6301\u672c\u5730\u5316 disabled=False, \u662f\u5426\u53ef\u4ee5\u7f16\u8f91 label_suffix=None Label\u5185\u5bb9\u540e\u7f00 CharField(Field) max_length=None, \u6700\u5927\u957f\u5ea6 min_length=None, \u6700\u5c0f\u957f\u5ea6 strip=True \u662f\u5426\u79fb\u9664\u7528\u6237\u8f93\u5165\u7a7a\u767d IntegerField(Field) max_value=None, \u6700\u5927\u503c min_value=None, \u6700\u5c0f\u503c FloatField(IntegerField) ... DecimalField(IntegerField) max_value=None, \u6700\u5927\u503c min_value=None, \u6700\u5c0f\u503c max_digits=None, \u603b\u957f\u5ea6 decimal_places=None, \u5c0f\u6570\u4f4d\u957f\u5ea6 BaseTemporalField(Field) input_formats=None \u65f6\u95f4\u683c\u5f0f\u5316 DateField(BaseTemporalField) \u683c\u5f0f\uff1a2015-09-01 TimeField(BaseTemporalField) \u683c\u5f0f\uff1a11:12 DateTimeField(BaseTemporalField)\u683c\u5f0f\uff1a2015-09-01 11:12 DurationField(Field) \u65f6\u95f4\u95f4\u9694\uff1a%d %H:%M:%S.%f ... RegexField(CharField) regex, \u81ea\u5b9a\u5236\u6b63\u5219\u8868\u8fbe\u5f0f max_length=None, \u6700\u5927\u957f\u5ea6 min_length=None, \u6700\u5c0f\u957f\u5ea6 error_message=None, \u5ffd\u7565\uff0c\u9519\u8bef\u4fe1\u606f\u4f7f\u7528 error_messages={'invalid': '...'} EmailField(CharField) ... FileField(Field) allow_empty_file=False \u662f\u5426\u5141\u8bb8\u7a7a\u6587\u4ef6 ImageField(FileField) ... \u6ce8\uff1a\u9700\u8981PIL\u6a21\u5757\uff0cpip3 install Pillow \u4ee5\u4e0a\u4e24\u4e2a\u5b57\u5178\u4f7f\u7528\u65f6\uff0c\u9700\u8981\u6ce8\u610f\u4e24\u70b9\uff1a - form\u8868\u5355\u4e2d enctype=\"multipart/form-data\" - view\u51fd\u6570\u4e2d obj = MyForm(request.POST, request.FILES) URLField(Field) ... BooleanField(Field) ... NullBooleanField(BooleanField) ... ChoiceField(Field) ... choices=(), \u9009\u9879\uff0c\u5982\uff1achoices = ((0,'\u4e0a\u6d77'),(1,'\u5317\u4eac'),) required=True, \u662f\u5426\u5fc5\u586b widget=None, \u63d2\u4ef6\uff0c\u9ed8\u8ba4select\u63d2\u4ef6 label=None, Label\u5185\u5bb9 initial=None, \u521d\u59cb\u503c help_text='', \u5e2e\u52a9\u63d0\u793a ModelChoiceField(ChoiceField) ... django.forms.models.ModelChoiceField queryset, # \u67e5\u8be2\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e empty_label=\"---------\", # \u9ed8\u8ba4\u7a7a\u663e\u793a\u5185\u5bb9 to_field_name=None, # HTML\u4e2dvalue\u7684\u503c\u5bf9\u5e94\u7684\u5b57\u6bb5 limit_choices_to=None # ModelForm\u4e2d\u5bf9queryset\u4e8c\u6b21\u7b5b\u9009 ModelMultipleChoiceField(ModelChoiceField) ... django.forms.models.ModelMultipleChoiceField TypedChoiceField(ChoiceField) coerce = lambda val: val \u5bf9\u9009\u4e2d\u7684\u503c\u8fdb\u884c\u4e00\u6b21\u8f6c\u6362 empty_value= '' \u7a7a\u503c\u7684\u9ed8\u8ba4\u503c MultipleChoiceField(ChoiceField) ... TypedMultipleChoiceField(MultipleChoiceField) coerce = lambda val: val \u5bf9\u9009\u4e2d\u7684\u6bcf\u4e00\u4e2a\u503c\u8fdb\u884c\u4e00\u6b21\u8f6c\u6362 empty_value= '' \u7a7a\u503c\u7684\u9ed8\u8ba4\u503c ComboField(Field) fields=() \u4f7f\u7528\u591a\u4e2a\u9a8c\u8bc1\uff0c\u5982\u4e0b\uff1a\u5373\u9a8c\u8bc1\u6700\u5927\u957f\u5ea620\uff0c\u53c8\u9a8c\u8bc1\u90ae\u7bb1\u683c\u5f0f fields.ComboField(fields=[fields.CharField(max_length=20), fields.EmailField(),]) MultiValueField(Field) PS: \u62bd\u8c61\u7c7b\uff0c\u5b50\u7c7b\u4e2d\u53ef\u4ee5\u5b9e\u73b0\u805a\u5408\u591a\u4e2a\u5b57\u5178\u53bb\u5339\u914d\u4e00\u4e2a\u503c\uff0c\u8981\u914d\u5408MultiWidget\u4f7f\u7528 SplitDateTimeField(MultiValueField) input_date_formats=None, \u683c\u5f0f\u5217\u8868\uff1a['%Y--%m--%d', '%m%d/%Y', '%m/%d/%y'] input_time_formats=None \u683c\u5f0f\u5217\u8868\uff1a['%H:%M:%S', '%H:%M:%S.%f', '%H:%M'] FilePathField(ChoiceField) \u6587\u4ef6\u9009\u9879\uff0c\u76ee\u5f55\u4e0b\u6587\u4ef6\u663e\u793a\u5728\u9875\u9762\u4e2d path, \u6587\u4ef6\u5939\u8def\u5f84 match=None, \u6b63\u5219\u5339\u914d recursive=False, \u9012\u5f52\u4e0b\u9762\u7684\u6587\u4ef6\u5939 allow_files=True, \u5141\u8bb8\u6587\u4ef6 allow_folders=False, \u5141\u8bb8\u6587\u4ef6\u5939 required=True, widget=None, label=None, initial=None, help_text='' GenericIPAddressField protocol='both', both,ipv4,ipv6\u652f\u6301\u7684IP\u683c\u5f0f unpack_ipv4=False \u89e3\u6790ipv4\u5730\u5740\uff0c\u5982\u679c\u662f::ffff:192.0.2.1\u65f6\u5019\uff0c\u53ef\u89e3\u6790\u4e3a192.0.2.1\uff0c PS\uff1aprotocol\u5fc5\u987b\u4e3aboth\u624d\u80fd\u542f\u7528 SlugField(CharField) \u6570\u5b57\uff0c\u5b57\u6bcd\uff0c\u4e0b\u5212\u7ebf\uff0c\u51cf\u53f7\uff08\u8fde\u5b57\u7b26\uff09 ... UUIDField(CharField) uuid\u7c7b\u578b ... 2\u3001Django\u5185\u7f6e\u63d2\u4ef6\uff1a TextInput(Input) NumberInput(TextInput) EmailInput(TextInput) URLInput(TextInput) PasswordInput(TextInput) HiddenInput(TextInput) Textarea(Widget) DateInput(DateTimeBaseInput) DateTimeInput(DateTimeBaseInput) TimeInput(DateTimeBaseInput) CheckboxInput Select NullBooleanSelect SelectMultiple RadioSelect CheckboxSelectMultiple FileInput ClearableFileInput MultipleHiddenInput SplitDateTimeWidget SplitHiddenDateTimeWidget SelectDateWidget 3\u3001\u5e38\u7528\u9009\u62e9\u63d2\u4ef6\uff1a # \u5355radio\uff0c\u503c\u4e3a\u5b57\u7b26\u4e32 # user = fields.CharField( # initial=2, # widget=widgets.RadioSelect(choices=((1,'\u4e0a\u6d77'),(2,'\u5317\u4eac'),)) # ) # \u5355radio\uff0c\u503c\u4e3a\u5b57\u7b26\u4e32 # user = fields.ChoiceField( # choices=((1, '\u4e0a\u6d77'), (2, '\u5317\u4eac'),), # initial=2, # widget=widgets.RadioSelect # ) # \u5355select\uff0c\u503c\u4e3a\u5b57\u7b26\u4e32 # user = fields.CharField( # initial=2, # widget=widgets.Select(choices=((1,'\u4e0a\u6d77'),(2,'\u5317\u4eac'),)) # ) # \u5355select\uff0c\u503c\u4e3a\u5b57\u7b26\u4e32 # user = fields.ChoiceField( # choices=((1, '\u4e0a\u6d77'), (2, '\u5317\u4eac'),), # initial=2, # widget=widgets.Select # ) # \u591a\u9009select\uff0c\u503c\u4e3a\u5217\u8868 # user = fields.MultipleChoiceField( # choices=((1,'\u4e0a\u6d77'),(2,'\u5317\u4eac'),), # initial=[1,], # widget=widgets.SelectMultiple # ) # \u5355checkbox # user = fields.CharField( # widget=widgets.CheckboxInput() # ) # \u591a\u9009checkbox,\u503c\u4e3a\u5217\u8868 # user = fields.MultipleChoiceField( # initial=[2, ], # choices=((1, '\u4e0a\u6d77'), (2, '\u5317\u4eac'),), # widget=widgets.CheckboxSelectMultiple # ) \u5f15\u5165","title":"form\u7ec4\u4ef6\u8865\u5145"},{"location":"#django_form","text":"\u95ee\u98981: \u6ce8\u518c\u9875\u9762\u8f93\u5165\u4e3a\u7a7a\uff0c\u62a5\u9519\uff1akeyError\uff1a\u627e\u4e0d\u5230password def clean(self): print(\"---\",self.cleaned_data) # if self.cleaned_data[\"password\"]==self.cleaned_data[\"repeat_password\"]: # \u62a5\u9519\u539f\u56e0\uff1aself.cleaned_data\u662f\u5e72\u51c0\u6570\u636e\uff0c\u5982\u679c\u9875\u9762\u6ca1\u6709\u8f93\u5165\u5185\u5bb9\uff0c\u5219self.cleaned_data\u6ca1\u6709password\u3002 # \u6539\u5982\u4e0b\uff1a if self.cleaned_data.get(\"password\")==self.cleaned_data.get(\"repeat_password\"): return self.cleaned_data else: raise ValidationError(\"\u4e24\u6b21\u5bc6\u7801\u4e0d\u4e00\u81f4\") 2 \u4e3a\u4ec0\u4e48\u8981\u7528\u5168\u5c40clean(): \u6309\u5b50\u6bb5\u987a\u5e8f\u4e00\u4e00\u6821\u9a8c\uff0c\u5373\u6821\u9a8c\u5230username\u65f6\uff0c\u4f60\u65e0\u6cd5\u4f7f\u7528self.cleaned_data.get(\"password\")\u3002 \u800c\u5c40\u90e8\u94a9\u5b50\u4f7f\u7528\u5b8c\uff0c\u5230\u5168\u5c40\u65f6\uff0c\u5df2\u7ecf\u53ef\u4ee5\u4f7f\u7528\u6240\u6709\u7684self.cleaned_data 3","title":"Django_form\u8865\u5145"},{"location":"#django-","text":"\u77e5\u8bc6\u9884\u89c8 \u4e00 Django\u7684form\u7ec4\u4ef6 \u4e8c Django\u7684model form\u7ec4\u4ef6 \u4e09 Django\u7684\u7f13\u5b58\u673a\u5236 \u56db Django\u7684\u4fe1\u53f7 \u4e94 Django\u7684\u5e8f\u5217\u5316","title":"Django-\u7ec4\u4ef6\u62fe\u9057"},{"location":"#djangoform","text":"forms\u7ec4\u4ef6","title":"\u4e00 Django\u7684form\u7ec4\u4ef6"},{"location":"#djangomodel-form","text":"\u8fd9\u662f\u4e00\u4e2a\u795e\u5947\u7684\u7ec4\u4ef6\uff0c\u901a\u8fc7\u540d\u5b57\u6211\u4eec\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u8fd9\u4e2a\u7ec4\u4ef6\u7684\u529f\u80fd\u5c31\u662f\u628amodel\u548cform\u7ec4\u5408\u8d77\u6765\uff0c\u5148\u6765\u4e00\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6765\u770b\u4e00\u4e0b\u8fd9\u4e2a\u4e1c\u897f\u600e\u4e48\u7528\uff1a\u6bd4\u5982\u6211\u4eec\u7684\u6570\u636e\u5e93\u4e2d\u6709\u8fd9\u6837\u4e00\u5f20\u5b66\u751f\u8868\uff0c\u5b57\u6bb5\u6709\u59d3\u540d\uff0c\u5e74\u9f84\uff0c\u7231\u597d\uff0c\u90ae\u7bb1\uff0c\u7535\u8bdd\uff0c\u4f4f\u5740\uff0c\u6ce8\u518c\u65f6\u95f4\u7b49\u7b49\u4e00\u5927\u5806\u4fe1\u606f\uff0c\u73b0\u5728\u8ba9\u4f60\u5199\u4e00\u4e2a\u521b\u5efa\u5b66\u751f\u7684\u9875\u9762\uff0c\u4f60\u7684\u540e\u53f0\u5e94\u8be5\u600e\u4e48\u5199\u5462\uff1f\u9996\u5148\u6211\u4eec\u4f1a\u5728\u524d\u7aef\u4e00\u4e2a\u4e00\u4e2a\u7f57\u5217\u51fa\u8fd9\u4e9b\u5b57\u6bb5\uff0c\u8ba9\u7528\u6237\u53bb\u586b\u5199\uff0c\u7136\u540e\u6211\u4eec\u4ece\u540e\u5929\u4e00\u4e2a\u4e00\u4e2a\u63a5\u6536\u7528\u6237\u7684\u8f93\u5165\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5b66\u751f\u5bf9\u8c61\uff0c\u4fdd\u5b58\u5176\u5b9e\uff0c\u91cd\u70b9\u4e0d\u662f\u8fd9\u4e9b\uff0c\u800c\u662f\u5408\u6cd5\u6027\u9a8c\u8bc1\uff0c\u6211\u4eec\u9700\u8981\u5728\u524d\u7aef\u5224\u65ad\u7528\u6237\u8f93\u5165\u662f\u5426\u5408\u6cd5\uff0c\u6bd4\u5982\u59d3\u540d\u5fc5\u987b\u5728\u591a\u5c11\u5b57\u7b26\u4ee5\u5185\uff0c\u7535\u8bdd\u53f7\u7801\u5fc5\u987b\u662f\u591a\u5c11\u4f4d\u7684\u6570\u5b57\uff0c\u90ae\u7bb1\u5fc5\u987b\u662f\u90ae\u7bb1\u7684\u683c\u5f0f\u8fd9\u4e9b\u5f53\u7136\u53ef\u4ee5\u4e00\u70b9\u4e00\u70b9\u624b\u52a8\u5199\u9650\u5236\uff0c\u5404\u79cd\u5224\u65ad\uff0c\u8fd9\u6beb\u65e0\u95ee\u9898\uff0c\u9664\u4e86\u9ebb\u70e6\u6211\u4eec\u73b0\u5728\u6709\u4e2a\u66f4\u4f18\u96c5\uff08\u4ee5\u540e\u5728Python\u76f8\u5173\u7684\u5185\u5bb9\u91cc\uff0c\u8981\u591a\u7528\u201c\u4f18\u96c5\u201d\u8fd9\u4e2a\u8bcd\uff0c\u5e76\u4e14\u517b\u6210\u4e60\u60ef\uff09\u7684\u65b9\u6cd5\uff1aModelForm\u5148\u6765\u7b80\u5355\u7684\uff0c\u751f\u786c\u7684\u628a\u5b83\u7528\u4e0a\uff0c\u518d\u6765\u52a0\u9a8c\u8bc1\u6761\u4ef6\u3002","title":"\u4e8c Django\u7684model form\u7ec4\u4ef6"},{"location":"#modelform","text":"#\u9996\u5148\u5bfc\u5165ModelForm from django.forms import ModelForm #\u5728\u89c6\u56fe\u51fd\u6570\u4e2d\uff0c\u5b9a\u4e49\u4e00\u4e2a\u7c7b\uff0c\u6bd4\u5982\u5c31\u53ebStudentList\uff0c\u8fd9\u4e2a\u7c7b\u8981\u7ee7\u627fModelForm\uff0c\u5728\u8fd9\u4e2a\u7c7b\u4e2d\u518d\u5199\u4e00\u4e2a\u539f\u7c7bMeta\uff08\u89c4\u5b9a\u5199\u6cd5\uff0c\u5e76\u6ce8\u610f\u9996\u5b57\u6bcd\u662f\u5927\u5199\u7684\uff09 #\u5728\u8fd9\u4e2a\u539f\u7c7b\u4e2d\uff0c\u6709\u4ee5\u4e0b\u5c5e\u6027\uff08\u90e8\u5206\uff09\uff1a class StudentList(ModelForm): class Meta: model =Student #\u5bf9\u5e94\u7684Model\u4e2d\u7684\u7c7b fields = \"__all__\" #\u5b57\u6bb5\uff0c\u5982\u679c\u662f__all__,\u5c31\u662f\u8868\u793a\u5217\u51fa\u6240\u6709\u7684\u5b57\u6bb5 exclude = None #\u6392\u9664\u7684\u5b57\u6bb5 #error_messages\u7528\u6cd5\uff1a error_messages = { 'name':{'required':\"\u7528\u6237\u540d\u4e0d\u80fd\u4e3a\u7a7a\",}, 'age':{'required':\"\u5e74\u9f84\u4e0d\u80fd\u4e3a\u7a7a\",}, } #widgets\u7528\u6cd5,\u6bd4\u5982\u628a\u8f93\u5165\u7528\u6237\u540d\u7684input\u6846\u7ed9\u4e3aTextarea #\u9996\u5148\u5f97\u5bfc\u5165\u6a21\u5757 from django.forms import widgets as wid #\u56e0\u4e3a\u91cd\u540d\uff0c\u6240\u4ee5\u8d77\u4e2a\u522b\u540d widgets = { \"name\":wid.Textarea(attrs={\"class\":\"c1\"}) #\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5c5e\u6027 } #labels\uff0c\u81ea\u5b9a\u4e49\u5728\u524d\u7aef\u663e\u793a\u7684\u540d\u5b57 labels= { \"name\":\"\u7528\u6237\u540d\" } \u7136\u540e\u5728url\u5bf9\u5e94\u7684\u89c6\u56fe\u51fd\u6570\u4e2d\u5b9e\u4f8b\u5316\u8fd9\u4e2a\u7c7b\uff0c\u628a\u8fd9\u4e2a\u5bf9\u8c61\u4f20\u7ed9\u524d\u7aef def student(request): if request.method == 'GET': student_list = StudentList() return render(request,'student.html',{'student_list':student_list}) \u7136\u540e\u524d\u7aef\u53ea\u9700\u8981 {{ student_list.as_p }} \u4e00\u4e0b\uff0c\u6240\u6709\u7684\u5b57\u6bb5\u5c31\u90fd\u51fa\u6765\u4e86\uff0c\u53ef\u4ee5\u7528as_p\u663e\u793a\u5168\u90e8\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7for\u5faa\u73af\u8fd9 student_list\uff0c\u62ff\u5230\u7684\u662f\u4e00\u4e2a\u4e2ainput\u6846\uff0c\u73b0\u5728\u6211\u4eec\u5c31\u4e0d\u7528as_p\uff0c\u624b\u52a8\u628a\u8fd9\u4e9binput\u6846\u641e\u51fa\u6765\uff0cas_p\u62ff\u5230\u7684\u9875\u9762\u592a\u4e11\u3002 \u9996\u5148 for\u5faa\u73af\u8fd9\u4e2astudent_list\uff0c\u62ff\u5230student\u5bf9\u8c61\uff0c\u76f4\u63a5\u5728\u524d\u7aef\u6253\u5370\u8fd9\u4e2astudent\uff0c\u662f\u4e2ainput\u6846student.label \uff0c\u62ff\u5230\u6570\u636e\u5e93\u4e2d\u6bcf\u4e2a\u5b57\u6bb5\u7684verbose_name ,\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u8fd9\u4e2a\u5c5e\u6027\uff0c\u62ff\u5230\u7684\u9ed8\u8ba4\u5c31\u662f\u5b57\u6bb5\u540d\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7student.errors.0 \u62ff\u5230\u9519\u8bef\u4fe1\u606f\u6709\u4e86\u8fd9\u4e9b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7bootstrap\uff0c\u81ea\u5df1\u62fc\u51fa\u6765\u60f3\u8981\u7684\u6837\u5f0f\u4e86\uff0c\u6bd4\u5982\uff1a <body> <div class=\"container\"> <h1>student</h1> <form method=\"POST\" novalidate> {% csrf_token %} {# {{ student_list.as_p }}#} {% for student in student_list %} <div class=\"form-group col-md-6\"> {# \u62ff\u5230\u6570\u636e\u5b57\u6bb5\u7684verbose_name,\u6ca1\u6709\u5c31\u9ed8\u8ba4\u663e\u793a\u5b57\u6bb5\u540d #} <label class=\"col-md-3 control-label\">{{ student.label }}</label> <div class=\"col-md-9\" style=\"position: relative;\">{{ student }}</div> </div> {% endfor %} <div class=\"col-md-2 col-md-offset-10\"> <input type=\"submit\" value=\"\u63d0\u4ea4\" class=\"btn-primary\"> </div> </form> </div> </body> \u73b0\u5728\u8fd8\u7f3a\u4e00\u4e2ainput\u6846\u7684form-contral\u6837\u5f0f\uff0c\u53ef\u4ee5\u8003\u8651\u5728\u540e\u53f0\u7684widget\u91cc\u9762\u6dfb\u52a0 \u6bd4\u5982\u8fd9\u6837\uff1a from django.forms import widgets as wid #\u56e0\u4e3a\u91cd\u540d\uff0c\u6240\u4ee5\u8d77\u4e2a\u522b\u540d widgets = { \"name\":wid.TextInput(attrs={'class':'form-control'}), \"age\":wid.NumberInput(attrs={'class':'form-control'}), \"email\":wid.EmailInput(attrs={'class':'form-control'}) } \u5f53\u7136\u4e5f\u53ef\u4ee5\u5728js\u4e2d\uff0c\u627e\u5230\u6240\u6709\u7684input\u6846\uff0c\u52a0\u4e0a\u8fd9\u4e2a\u6837\u5f0f\uff0c\u4e5f\u884c\u3002","title":"\u521b\u5efamodelform"},{"location":"#_77","text":"\u4fdd\u5b58\u6570\u636e\u7684\u65f6\u5019\uff0c\u4e0d\u7528\u6328\u4e2a\u53d6\u6570\u636e\u4e86\uff0c\u53ea\u9700\u8981save\u4e00\u4e0b def student(request): if request.method == 'GET': student_list = StudentList() return render(request,'student.html',{'student_list':student_list}) else: student_list = StudentList(request.POST) if student_list.is_valid(): student_list.save() return redirect(request,'student_list.html',{'student_list':student_list})","title":"\u6dfb\u52a0\u7eaa\u5f55"},{"location":"#_78","text":"\u5982\u679c\u4e0d\u7528ModelForm\uff0c\u7f16\u8f91\u7684\u65f6\u5019\u5f97\u663e\u793a\u4e4b\u524d\u7684\u6570\u636e\u5427\uff0c\u8fd8\u5f97\u6328\u4e2a\u53d6\u4e00\u904d\u503c\uff0c\u5982\u679cModelForm\uff0c\u53ea\u9700\u8981\u52a0\u4e00\u4e2ainstance=obj\uff08obj\u662f\u8981\u4fee\u6539\u7684\u6570\u636e\u5e93\u7684\u4e00\u6761\u6570\u636e\u7684\u5bf9\u8c61\uff09\u5c31\u53ef\u4ee5\u5f97\u5230\u540c\u6837\u7684\u6548\u679c \u4fdd\u5b58\u7684\u65f6\u5019\u8981\u6ce8\u610f\uff0c\u4e00\u5b9a\u8981\u6ce8\u610f\u6709\u8fd9\u4e2a\u5bf9\u8c61\uff08instance=obj\uff09\uff0c\u5426\u5219\u4e0d\u77e5\u9053\u66f4\u65b0\u54ea\u4e00\u4e2a\u6570\u636e \u4ee3\u7801\u793a\u4f8b\uff1a from django.shortcuts import render,HttpResponse,redirect from django.forms import ModelForm # Create your views here. from app01 import models def test(request): # model_form = models.Student model_form = models.Student.objects.all() return render(request,'test.html',{'model_form':model_form}) class StudentList(ModelForm): class Meta: model = models.Student #\u5bf9\u5e94\u7684Model\u4e2d\u7684\u7c7b fields = \"__all__\" #\u5b57\u6bb5\uff0c\u5982\u679c\u662f__all__,\u5c31\u662f\u8868\u793a\u5217\u51fa\u6240\u6709\u7684\u5b57\u6bb5 exclude = None #\u6392\u9664\u7684\u5b57\u6bb5 labels = None #\u63d0\u793a\u4fe1\u606f help_texts = None #\u5e2e\u52a9\u63d0\u793a\u4fe1\u606f widgets = None #\u81ea\u5b9a\u4e49\u63d2\u4ef6 error_messages = None #\u81ea\u5b9a\u4e49\u9519\u8bef\u4fe1\u606f #error_messages\u7528\u6cd5\uff1a error_messages = { 'name':{'required':\"\u7528\u6237\u540d\u4e0d\u80fd\u4e3a\u7a7a\",}, 'age':{'required':\"\u5e74\u9f84\u4e0d\u80fd\u4e3a\u7a7a\",}, } #widgets\u7528\u6cd5,\u6bd4\u5982\u628a\u8f93\u5165\u7528\u6237\u540d\u7684input\u6846\u7ed9\u4e3aTextarea #\u9996\u5148\u5f97\u5bfc\u5165\u6a21\u5757 from django.forms import widgets as wid #\u56e0\u4e3a\u91cd\u540d\uff0c\u6240\u4ee5\u8d77\u4e2a\u522b\u540d widgets = { \"name\":wid.Textarea } #labels\uff0c\u81ea\u5b9a\u4e49\u5728\u524d\u7aef\u663e\u793a\u7684\u540d\u5b57 labels= { \"name\":\"\u7528\u6237\u540d\" } def student(request): if request.method == 'GET': student_list = StudentList() return render(request,'student.html',{'student_list':student_list}) else: student_list = StudentList(request.POST) if student_list.is_valid(): student_list.save() return render(request,'student.html',{'student_list':student_list}) def student_edit(request,pk): obj = models.Student.objects.filter(pk=pk).first() if not obj: return redirect('test') if request.method == \"GET\": student_list = StudentList(instance=obj) return render(request,'student_edit.html',{'student_list':student_list}) else: student_list = StudentList(request.POST,instance=obj) if student_list.is_valid(): student_list.save() return render(request,'student_edit.html',{'student_list':student_list}) \u603b\u7ed3\uff1a \u4ece\u4e0a\u8fb9\u53ef\u4ee5\u770b\u5230ModelForm\u7528\u8d77\u6765\u662f\u975e\u5e38\u65b9\u4fbf\u7684\uff0c\u6bd4\u5982\u589e\u52a0\u4fee\u6539\u4e4b\u7c7b\u7684\u64cd\u4f5c\u3002\u4f46\u662f\u4e5f\u5e26\u6765\u989d\u5916\u4e0d\u597d\u7684\u5730\u65b9\uff0cmodel\u548cform\u4e4b\u95f4\u8026\u5408\u4e86\u3002\u5982\u679c\u4e0d\u8026\u5408\u7684\u8bdd\uff0cmf.save()\u65b9\u6cd5\u4e5f\u65e0\u6cd5\u76f4\u63a5\u63d0\u4ea4\u4fdd\u5b58\u3002 \u4f46\u662f\u8026\u5408\u7684\u8bdd\u4f7f\u7528\u573a\u666f\u901a\u5e38\u5c40\u9650\u7528\u4e8e\u5c0f\u7a0b\u5e8f\uff0c\u5199\u5927\u7a0b\u5e8f\u5c31\u6700\u597d\u4e0d\u7528\u4e86\u3002","title":"\u7f16\u8f91\u6570\u636e"},{"location":"#django_3","text":"","title":"\u4e09 Django\u7684\u7f13\u5b58\u673a\u5236"},{"location":"#11","text":"","title":"1.1 \u7f13\u5b58\u4ecb\u7ecd"},{"location":"#1_7","text":"\u5728\u52a8\u6001\u7f51\u7ad9\u4e2d,\u7528\u6237\u6240\u6709\u7684\u8bf7\u6c42,\u670d\u52a1\u5668\u90fd\u4f1a\u53bb\u6570\u636e\u5e93\u4e2d\u8fdb\u884c\u76f8\u5e94\u7684\u589e,\u5220,\u67e5,\u6539,\u6e32\u67d3\u6a21\u677f,\u6267\u884c\u4e1a\u52a1\u903b\u8f91,\u6700\u540e\u751f\u6210\u7528\u6237\u770b\u5230\u7684\u9875\u9762. \u5f53\u4e00\u4e2a\u7f51\u7ad9\u7684\u7528\u6237\u8bbf\u95ee\u91cf\u5f88\u5927\u7684\u65f6\u5019,\u6bcf\u4e00\u6b21\u7684\u7684\u540e\u53f0\u64cd\u4f5c,\u90fd\u4f1a\u6d88\u8017\u5f88\u591a\u7684\u670d\u52a1\u7aef\u8d44\u6e90,\u6240\u4ee5\u5fc5\u987b\u4f7f\u7528\u7f13\u5b58\u6765\u51cf\u8f7b\u540e\u7aef\u670d\u52a1\u5668\u7684\u538b\u529b. \u7f13\u5b58\u662f\u5c06\u4e00\u4e9b\u5e38\u7528\u7684\u6570\u636e\u4fdd\u5b58\u5185\u5b58\u6216\u8005memcache\u4e2d,\u5728\u4e00\u5b9a\u7684\u65f6\u95f4\u5185\u6709\u4eba\u6765\u8bbf\u95ee\u8fd9\u4e9b\u6570\u636e\u65f6,\u5219\u4e0d\u518d\u53bb\u6267\u884c\u6570\u636e\u5e93\u53ca\u6e32\u67d3\u7b49\u64cd\u4f5c,\u800c\u662f\u76f4\u63a5\u4ece\u5185\u5b58\u6216memcache\u7684\u7f13\u5b58\u4e2d\u53bb\u53d6\u5f97\u6570\u636e,\u7136\u540e\u8fd4\u56de\u7ed9\u7528\u6237.","title":"1.\u7f13\u5b58\u7684\u7b80\u4ecb"},{"location":"#2django6","text":"\u5f00\u53d1\u8c03\u8bd5\u7f13\u5b58 \u5185\u5b58\u7f13\u5b58 \u6587\u4ef6\u7f13\u5b58 \u6570\u636e\u5e93\u7f13\u5b58 Memcache\u7f13\u5b58(\u4f7f\u7528python-memcached\u6a21\u5757) Memcache\u7f13\u5b58(\u4f7f\u7528pylibmc\u6a21\u5757) \u7ecf\u5e38\u4f7f\u7528\u7684\u6709\u6587\u4ef6\u7f13\u5b58\u548cMencache\u7f13\u5b58","title":"2.Django\u63d0\u4f9b\u4e866\u79cd\u7f13\u5b58\u65b9\u5f0f"},{"location":"#12","text":"1.2.1 \u5f00\u53d1\u8c03\u8bd5(\u6b64\u6a21\u5f0f\u4e3a\u5f00\u53d1\u8c03\u8bd5\u4f7f\u7528,\u5b9e\u9645\u4e0a\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c) settings.py\u6587\u4ef6\u914d\u7f6e CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.dummy.DummyCache', # \u7f13\u5b58\u540e\u53f0\u4f7f\u7528\u7684\u5f15\u64ce 'TIMEOUT': 300, # \u7f13\u5b58\u8d85\u65f6\u65f6\u95f4\uff08\u9ed8\u8ba4300\u79d2\uff0cNone\u8868\u793a\u6c38\u4e0d\u8fc7\u671f\uff0c0\u8868\u793a\u7acb\u5373\u8fc7\u671f\uff09 'OPTIONS':{ 'MAX_ENTRIES': 300, # \u6700\u5927\u7f13\u5b58\u8bb0\u5f55\u7684\u6570\u91cf\uff08\u9ed8\u8ba4300\uff09 'CULL_FREQUENCY': 3, # \u7f13\u5b58\u5230\u8fbe\u6700\u5927\u4e2a\u6570\u4e4b\u540e\uff0c\u5254\u9664\u7f13\u5b58\u4e2a\u6570\u7684\u6bd4\u4f8b\uff0c\u5373\uff1a1/CULL_FREQUENCY\uff08\u9ed8\u8ba43\uff09 }, } } 1.2.2 \u5185\u5b58\u7f13\u5b58(\u5c06\u7f13\u5b58\u5185\u5bb9\u4fdd\u5b58\u81f3\u5185\u5b58\u533a\u57df\u4e2d) settings.py\u6587\u4ef6\u914d\u7f6e CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.locmem.LocMemCache', # \u6307\u5b9a\u7f13\u5b58\u4f7f\u7528\u7684\u5f15\u64ce 'LOCATION': 'unique-snowflake', # \u5199\u5728\u5185\u5b58\u4e2d\u7684\u53d8\u91cf\u7684\u552f\u4e00\u503c 'TIMEOUT':300, # \u7f13\u5b58\u8d85\u65f6\u65f6\u95f4(\u9ed8\u8ba4\u4e3a300\u79d2,None\u8868\u793a\u6c38\u4e0d\u8fc7\u671f) 'OPTIONS':{ 'MAX_ENTRIES': 300, # \u6700\u5927\u7f13\u5b58\u8bb0\u5f55\u7684\u6570\u91cf\uff08\u9ed8\u8ba4300\uff09 'CULL_FREQUENCY': 3, # \u7f13\u5b58\u5230\u8fbe\u6700\u5927\u4e2a\u6570\u4e4b\u540e\uff0c\u5254\u9664\u7f13\u5b58\u4e2a\u6570\u7684\u6bd4\u4f8b\uff0c\u5373\uff1a1/CULL_FREQUENCY\uff08\u9ed8\u8ba43\uff09 } } } 1.2.3 \u6587\u4ef6\u7f13\u5b58(\u628a\u7f13\u5b58\u6570\u636e\u5b58\u50a8\u5728\u6587\u4ef6\u4e2d) settings.py\u6587\u4ef6\u914d\u7f6e CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache', #\u6307\u5b9a\u7f13\u5b58\u4f7f\u7528\u7684\u5f15\u64ce 'LOCATION': '/var/tmp/django_cache', #\u6307\u5b9a\u7f13\u5b58\u7684\u8def\u5f84 'TIMEOUT':300, #\u7f13\u5b58\u8d85\u65f6\u65f6\u95f4(\u9ed8\u8ba4\u4e3a300\u79d2,None\u8868\u793a\u6c38\u4e0d\u8fc7\u671f) 'OPTIONS':{ 'MAX_ENTRIES': 300, # \u6700\u5927\u7f13\u5b58\u8bb0\u5f55\u7684\u6570\u91cf\uff08\u9ed8\u8ba4300\uff09 'CULL_FREQUENCY': 3, # \u7f13\u5b58\u5230\u8fbe\u6700\u5927\u4e2a\u6570\u4e4b\u540e\uff0c\u5254\u9664\u7f13\u5b58\u4e2a\u6570\u7684\u6bd4\u4f8b\uff0c\u5373\uff1a1/CULL_FREQUENCY\uff08\u9ed8\u8ba43\uff09 } } } 1.2.4 \u6570\u636e\u5e93\u7f13\u5b58(\u628a\u7f13\u5b58\u6570\u636e\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d) settings.py\u6587\u4ef6\u914d\u7f6e CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.db.DatabaseCache', # \u6307\u5b9a\u7f13\u5b58\u4f7f\u7528\u7684\u5f15\u64ce 'LOCATION': 'cache_table', # \u6570\u636e\u5e93\u8868 'OPTIONS':{ 'MAX_ENTRIES': 300, # \u6700\u5927\u7f13\u5b58\u8bb0\u5f55\u7684\u6570\u91cf\uff08\u9ed8\u8ba4300\uff09 'CULL_FREQUENCY': 3, # \u7f13\u5b58\u5230\u8fbe\u6700\u5927\u4e2a\u6570\u4e4b\u540e\uff0c\u5254\u9664\u7f13\u5b58\u4e2a\u6570\u7684\u6bd4\u4f8b\uff0c\u5373\uff1a1/CULL_FREQUENCY\uff08\u9ed8\u8ba43\uff09 } } } \u6ce8\u610f,\u521b\u5efa\u7f13\u5b58\u7684\u6570\u636e\u5e93\u8868\u4f7f\u7528\u7684\u8bed\u53e5: python manage.py createcachetable 1.2.5 Memcache\u7f13\u5b58(\u4f7f\u7528python-memcached\u6a21\u5757\u8fde\u63a5memcache) Memcached\u662fDjango\u539f\u751f\u652f\u6301\u7684\u7f13\u5b58\u7cfb\u7edf.\u8981\u4f7f\u7528Memcached,\u9700\u8981\u4e0b\u8f7dMemcached\u7684\u652f\u6301\u5e93python-memcached\u6216pylibmc. settings.py\u6587\u4ef6\u914d\u7f6e CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache', # \u6307\u5b9a\u7f13\u5b58\u4f7f\u7528\u7684\u5f15\u64ce 'LOCATION': '192.168.10.100:11211', # \u6307\u5b9aMemcache\u7f13\u5b58\u670d\u52a1\u5668\u7684IP\u5730\u5740\u548c\u7aef\u53e3 'OPTIONS':{ 'MAX_ENTRIES': 300, # \u6700\u5927\u7f13\u5b58\u8bb0\u5f55\u7684\u6570\u91cf\uff08\u9ed8\u8ba4300\uff09 'CULL_FREQUENCY': 3, # \u7f13\u5b58\u5230\u8fbe\u6700\u5927\u4e2a\u6570\u4e4b\u540e\uff0c\u5254\u9664\u7f13\u5b58\u4e2a\u6570\u7684\u6bd4\u4f8b\uff0c\u5373\uff1a1/CULL_FREQUENCY\uff08\u9ed8\u8ba43\uff09 } } } LOCATION\u4e5f\u53ef\u4ee5\u914d\u7f6e\u6210\u5982\u4e0b: 'LOCATION': 'unix:/tmp/memcached.sock', # \u6307\u5b9a\u5c40\u57df\u7f51\u5185\u7684\u4e3b\u673a\u540d\u52a0socket\u5957\u63a5\u5b57\u4e3aMemcache\u7f13\u5b58\u670d\u52a1\u5668 'LOCATION': [ # \u6307\u5b9a\u4e00\u53f0\u6216\u591a\u53f0\u5176\u4ed6\u4e3b\u673aip\u5730\u5740\u52a0\u7aef\u53e3\u4e3aMemcache\u7f13\u5b58\u670d\u52a1\u5668 '192.168.10.100:11211', '192.168.10.101:11211', '192.168.10.102:11211', ] 1.2.6 Memcache\u7f13\u5b58(\u4f7f\u7528pylibmc\u6a21\u5757\u8fde\u63a5memcache) settings.py\u6587\u4ef6\u914d\u7f6e CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.memcached.PyLibMCCache', # \u6307\u5b9a\u7f13\u5b58\u4f7f\u7528\u7684\u5f15\u64ce 'LOCATION':'192.168.10.100:11211', # \u6307\u5b9a\u672c\u673a\u768411211\u7aef\u53e3\u4e3aMemcache\u7f13\u5b58\u670d\u52a1\u5668 'OPTIONS':{ 'MAX_ENTRIES': 300, # \u6700\u5927\u7f13\u5b58\u8bb0\u5f55\u7684\u6570\u91cf\uff08\u9ed8\u8ba4300\uff09 'CULL_FREQUENCY': 3, # \u7f13\u5b58\u5230\u8fbe\u6700\u5927\u4e2a\u6570\u4e4b\u540e\uff0c\u5254\u9664\u7f13\u5b58\u4e2a\u6570\u7684\u6bd4\u4f8b\uff0c\u5373\uff1a1/CULL_FREQUENCY\uff08\u9ed8\u8ba43\uff09 }, } } LOCATION\u4e5f\u53ef\u4ee5\u914d\u7f6e\u6210\u5982\u4e0b: 'LOCATION': '/tmp/memcached.sock', # \u6307\u5b9a\u67d0\u4e2a\u8def\u5f84\u4e3a\u7f13\u5b58\u76ee\u5f55 'LOCATION': [ # \u5206\u5e03\u5f0f\u7f13\u5b58,\u5728\u591a\u53f0\u670d\u52a1\u5668\u4e0a\u8fd0\u884cMemcached\u8fdb\u7a0b,\u7a0b\u5e8f\u4f1a\u628a\u591a\u53f0\u670d\u52a1\u5668\u5f53\u4f5c\u4e00\u4e2a\u5355\u72ec\u7684\u7f13\u5b58,\u800c\u4e0d\u4f1a\u5728\u6bcf\u53f0\u670d\u52a1\u5668\u4e0a\u590d\u5236\u7f13\u5b58\u503c '192.168.10.100:11211', '192.168.10.101:11211', '192.168.10.102:11211', ] Memcached\u662f\u57fa\u4e8e\u5185\u5b58\u7684\u7f13\u5b58,\u6570\u636e\u5b58\u50a8\u5728\u5185\u5b58\u4e2d.\u6240\u4ee5\u5982\u679c\u670d\u52a1\u5668\u6b7b\u673a\u7684\u8bdd,\u6570\u636e\u5c31\u4f1a\u4e22\u5931,\u6240\u4ee5Memcached\u4e00\u822c\u4e0e\u5176\u4ed6\u7f13\u5b58\u914d\u5408\u4f7f\u7528","title":"1.2 \u5404\u79cd\u7f13\u5b58\u914d\u7f6e"},{"location":"#13-django","text":"Django\u63d0\u4f9b\u4e86\u4e0d\u540c\u7c92\u5ea6\u7684\u7f13\u5b58,\u53ef\u4ee5\u7f13\u5b58\u67d0\u4e2a\u9875\u9762,\u53ef\u4ee5\u53ea\u7f13\u5b58\u4e00\u4e2a\u9875\u9762\u7684\u67d0\u4e2a\u90e8\u5206,\u751a\u81f3\u53ef\u4ee5\u7f13\u5b58\u6574\u4e2a\u7f51\u7ad9. \u6570\u636e\u5e93\uff1a class Book(models.Model): name=models.CharField(max_length=32) price=models.DecimalField(max_digits=6,decimal_places=1) \u89c6\u56fe\uff1a from django.views.decorators.cache import cache_page import time from .models import * @cache_page(15) #\u8d85\u65f6\u65f6\u95f4\u4e3a15\u79d2 def index(request): t=time.time() #\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 bookList=Book.objects.all() return render(request,\"index.html\",locals()) \u6a21\u677f(index.html): <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h3>\u5f53\u524d\u65f6\u95f4:-----{{ t }}</h3> <ul> {% for book in bookList %} <li>{{ book.name }}--------->{{ book.price }}$</li> {% endfor %} </ul> </body> </html> \u4e0a\u9762\u7684\u4f8b\u5b50\u662f\u57fa\u4e8e\u5185\u5b58\u7684\u7f13\u5b58\u914d\u7f6e,\u57fa\u4e8e\u6587\u4ef6\u7684\u7f13\u5b58\u8be5\u600e\u4e48\u914d\u7f6e\u5462?? \u66f4\u6539settings.py\u7684\u914d\u7f6e CACHES = { 'default': { 'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache', # \u6307\u5b9a\u7f13\u5b58\u4f7f\u7528\u7684\u5f15\u64ce 'LOCATION': 'E:\\django_cache', # \u6307\u5b9a\u7f13\u5b58\u7684\u8def\u5f84 'TIMEOUT': 300, # \u7f13\u5b58\u8d85\u65f6\u65f6\u95f4(\u9ed8\u8ba4\u4e3a300\u79d2,None\u8868\u793a\u6c38\u4e0d\u8fc7\u671f) 'OPTIONS': { 'MAX_ENTRIES': 300, # \u6700\u5927\u7f13\u5b58\u8bb0\u5f55\u7684\u6570\u91cf\uff08\u9ed8\u8ba4300\uff09 'CULL_FREQUENCY': 3, # \u7f13\u5b58\u5230\u8fbe\u6700\u5927\u4e2a\u6570\u4e4b\u540e\uff0c\u5254\u9664\u7f13\u5b58\u4e2a\u6570\u7684\u6bd4\u4f8b\uff0c\u5373\uff1a1/CULL_FREQUENCY\uff08\u9ed8\u8ba43\uff09 } } } \u7136\u540e\u518d\u6b21\u5237\u65b0\u6d4f\u89c8\u5668,\u53ef\u4ee5\u770b\u5230\u5728\u521a\u624d\u914d\u7f6e\u7684\u76ee\u5f55\u4e0b\u751f\u6210\u7684\u7f13\u5b58\u6587\u4ef6 \u901a\u8fc7\u5b9e\u9a8c\u53ef\u4ee5\u77e5\u9053,Django\u4f1a\u4ee5\u81ea\u5df1\u7684\u5f62\u5f0f\u628a\u7f13\u5b58\u6587\u4ef6\u4fdd\u5b58\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u7684\u76ee\u5f55\u4e2d. 1.3.2 \u5168\u7ad9\u4f7f\u7528\u7f13\u5b58 \u65e2\u7136\u662f\u5168\u7ad9\u7f13\u5b58,\u5f53\u7136\u8981\u4f7f\u7528Django\u4e2d\u7684\u4e2d\u95f4\u4ef6. \u7528\u6237\u7684\u8bf7\u6c42\u901a\u8fc7\u4e2d\u95f4\u4ef6,\u7ecf\u8fc7\u4e00\u7cfb\u5217\u7684\u8ba4\u8bc1\u7b49\u64cd\u4f5c,\u5982\u679c\u8bf7\u6c42\u7684\u5185\u5bb9\u5728\u7f13\u5b58\u4e2d\u5b58\u5728,\u5219\u4f7f\u7528FetchFromCacheMiddleware\u83b7\u53d6\u5185\u5bb9\u5e76\u8fd4\u56de\u7ed9\u7528\u6237 \u5f53\u8fd4\u56de\u7ed9\u7528\u6237\u4e4b\u524d,\u5224\u65ad\u7f13\u5b58\u4e2d\u662f\u5426\u5df2\u7ecf\u5b58\u5728,\u5982\u679c\u4e0d\u5b58\u5728,\u5219UpdateCacheMiddleware\u4f1a\u5c06\u7f13\u5b58\u4fdd\u5b58\u81f3Django\u7684\u7f13\u5b58\u4e4b\u4e2d,\u4ee5\u5b9e\u73b0\u5168\u7ad9\u7f13\u5b58 \u7f13\u5b58\u6574\u4e2a\u7ad9\u70b9\uff0c\u662f\u6700\u7b80\u5355\u7684\u7f13\u5b58\u65b9\u6cd5 \u5728 MIDDLEWARE_CLASSES \u4e2d\u52a0\u5165 \u201cupdate\u201d \u548c \u201cfetch\u201d \u4e2d\u95f4\u4ef6 MIDDLEWARE_CLASSES = ( \u2018django.middleware.cache.UpdateCacheMiddleware\u2019, #\u7b2c\u4e00 'django.middleware.common.CommonMiddleware', \u2018django.middleware.cache.FetchFromCacheMiddleware\u2019, #\u6700\u540e ) \u201cupdate\u201d \u5fc5\u987b\u914d\u7f6e\u5728\u7b2c\u4e00\u4e2a \u201cfetch\u201d \u5fc5\u987b\u914d\u7f6e\u5728\u6700\u540e\u4e00\u4e2a \u4fee\u6539settings.py\u914d\u7f6e\u6587\u4ef6 MIDDLEWARE_CLASSES = ( 'django.middleware.cache.UpdateCacheMiddleware', #\u54cd\u5e94HttpResponse\u4e2d\u8bbe\u7f6e\u51e0\u4e2aheaders 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.auth.middleware.SessionAuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', 'django.middleware.security.SecurityMiddleware', 'django.middleware.cache.FetchFromCacheMiddleware', #\u7528\u6765\u7f13\u5b58\u901a\u8fc7GET\u548cHEAD\u65b9\u6cd5\u83b7\u53d6\u7684\u72b6\u6001\u7801\u4e3a200\u7684\u54cd\u5e94 ) CACHE_MIDDLEWARE_SECONDS=10 \u89c6\u56fe\u51fd\u6570\uff1a from django.views.decorators.cache import cache_page import time from .models import * def index(request): t=time.time() #\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 bookList=Book.objects.all() return render(request,\"index.html\",locals()) def foo(request): t=time.time() #\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 return HttpResponse(\"HELLO:\"+str(t)) \u6a21\u677f(index.html)\uff1a <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h3 style=\"color: green\">\u5f53\u524d\u65f6\u95f4:-----{{ t }}</h3> <ul> {% for book in bookList %} <li>{{ book.name }}--------->{{ book.price }}$</li> {% endfor %} </ul> </body> </html> \u5176\u4f59\u4ee3\u7801\u4e0d\u53d8,\u5237\u65b0\u6d4f\u89c8\u5668\u662f10\u79d2,\u9875\u9762\u4e0a\u7684\u65f6\u95f4\u53d8\u5316\u4e00\u6b21,\u8fd9\u6837\u5c31\u5b9e\u73b0\u4e86\u5168\u7ad9\u7f13\u5b58. 1.3.3 \u5c40\u90e8\u89c6\u56fe\u7f13\u5b58 \u4f8b\u5b50,\u5237\u65b0\u9875\u9762\u65f6,\u6574\u4e2a\u7f51\u9875\u6709\u4e00\u90e8\u5206\u5b9e\u73b0\u7f13\u5b58 views\u89c6\u56fe\u51fd\u6570 from django.views.decorators.cache import cache_page import time from .models import * def index(request): t=time.time() #\u83b7\u53d6\u5f53\u524d\u65f6\u95f4 bookList=Book.objects.all() return render(request,\"index.html\",locals()) \u6a21\u677f(index.html): {% load cache %} <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h3 style=\"color: green\">\u4e0d\u7f13\u5b58:-----{{ t }}</h3> {% cache 2 'name' %} <h3>\u7f13\u5b58:-----:{{ t }}</h3> {% endcache %} </body> </html>","title":"1.3 Django\u4e2d\u7684\u7f13\u5b58\u5e94\u7528"},{"location":"#django_4","text":"Django\u63d0\u4f9b\u4e00\u79cd\u4fe1\u53f7\u673a\u5236\u3002\u5176\u5b9e\u5c31\u662f\u89c2\u5bdf\u8005\u6a21\u5f0f\uff0c\u53c8\u53eb\u53d1\u5e03-\u8ba2\u9605(Publish/Subscribe) \u3002\u5f53\u53d1\u751f\u4e00\u4e9b\u52a8\u4f5c\u7684\u65f6\u5019\uff0c\u53d1\u51fa\u4fe1\u53f7\uff0c\u7136\u540e\u76d1\u542c\u4e86\u8fd9\u4e2a\u4fe1\u53f7\u7684\u51fd\u6570\u5c31\u4f1a\u6267\u884c\u3002 \u901a\u4fd7\u6765\u8bb2\uff0c\u5c31\u662f\u4e00\u4e9b\u52a8\u4f5c\u53d1\u751f\u7684\u65f6\u5019\uff0c\u4fe1\u53f7\u5141\u8bb8\u7279\u5b9a\u7684\u53d1\u9001\u8005\u53bb\u63d0\u9192\u4e00\u4e9b\u63a5\u53d7\u8005\u3002\u7528\u4e8e\u5728\u6846\u67b6\u6267\u884c\u64cd\u4f5c\u65f6\u89e3\u8026\u3002","title":"\u56db Django\u7684\u4fe1\u53f7"},{"location":"#21django","text":"Model signals pre_init # django\u7684modal\u6267\u884c\u5176\u6784\u9020\u65b9\u6cd5\u524d\uff0c\u81ea\u52a8\u89e6\u53d1 post_init # django\u7684modal\u6267\u884c\u5176\u6784\u9020\u65b9\u6cd5\u540e\uff0c\u81ea\u52a8\u89e6\u53d1 pre_save # django\u7684modal\u5bf9\u8c61\u4fdd\u5b58\u524d\uff0c\u81ea\u52a8\u89e6\u53d1 post_save # django\u7684modal\u5bf9\u8c61\u4fdd\u5b58\u540e\uff0c\u81ea\u52a8\u89e6\u53d1 pre_delete # django\u7684modal\u5bf9\u8c61\u5220\u9664\u524d\uff0c\u81ea\u52a8\u89e6\u53d1 post_delete # django\u7684modal\u5bf9\u8c61\u5220\u9664\u540e\uff0c\u81ea\u52a8\u89e6\u53d1 m2m_changed # django\u7684modal\u4e2d\u4f7f\u7528m2m\u5b57\u6bb5\u64cd\u4f5c\u7b2c\u4e09\u5f20\u8868\uff08add,remove,clear\uff09\u524d\u540e\uff0c\u81ea\u52a8\u89e6\u53d1 class_prepared # \u7a0b\u5e8f\u542f\u52a8\u65f6\uff0c\u68c0\u6d4b\u5df2\u6ce8\u518c\u7684app\u4e2dmodal\u7c7b\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u7c7b\uff0c\u81ea\u52a8\u89e6\u53d1 Management signals pre_migrate # \u6267\u884cmigrate\u547d\u4ee4\u524d\uff0c\u81ea\u52a8\u89e6\u53d1 post_migrate # \u6267\u884cmigrate\u547d\u4ee4\u540e\uff0c\u81ea\u52a8\u89e6\u53d1 Request/response signals request_started # \u8bf7\u6c42\u5230\u6765\u524d\uff0c\u81ea\u52a8\u89e6\u53d1 request_finished # \u8bf7\u6c42\u7ed3\u675f\u540e\uff0c\u81ea\u52a8\u89e6\u53d1 got_request_exception # \u8bf7\u6c42\u5f02\u5e38\u540e\uff0c\u81ea\u52a8\u89e6\u53d1 Test signals setting_changed # \u4f7f\u7528test\u6d4b\u8bd5\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u65f6\uff0c\u81ea\u52a8\u89e6\u53d1 template_rendered # \u4f7f\u7528test\u6d4b\u8bd5\u6e32\u67d3\u6a21\u677f\u65f6\uff0c\u81ea\u52a8\u89e6\u53d1 Database Wrappers connection_created # \u521b\u5efa\u6570\u636e\u5e93\u8fde\u63a5\u65f6\uff0c\u81ea\u52a8\u89e6\u53d1 Django \u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u5185\u5efa\u4fe1\u53f7\uff0c\u5141\u8bb8\u7528\u6237\u7684\u4ee3\u7801\u83b7\u5f97DJango\u7684\u7279\u5b9a\u64cd\u4f5c\u7684\u901a\u77e5\u3002\u8fd9\u5305\u542b\u4e00\u4e9b\u6709\u7528\u7684\u901a\u77e5\uff1a django.db.models.signals.pre_save & django.db.models.signals.post_save \u5728\u6a21\u578b save()\u65b9\u6cd5\u8c03\u7528\u4e4b\u524d\u6216\u4e4b\u540e\u53d1\u9001\u3002 django.db.models.signals.pre_delete & django.db.models.signals.post_delete \u5728\u6a21\u578bdelete()\u65b9\u6cd5\u6216\u67e5\u8be2\u96c6\u7684delete() \u65b9\u6cd5\u8c03\u7528\u4e4b\u524d\u6216\u4e4b\u540e\u53d1\u9001\u3002 django.db.models.signals.m2m_changed \u6a21\u578b\u4e0a\u7684 ManyToManyField \u4fee\u6539\u65f6\u53d1\u9001\u3002 django.core.signals.request_started & django.core.signals.request_finished Django\u5efa\u7acb\u6216\u5173\u95edHTTP \u8bf7\u6c42\u65f6\u53d1\u9001\u3002 \u5bf9\u4e8eDjango\u5185\u7f6e\u7684\u4fe1\u53f7\uff0c\u4ec5\u9700\u6ce8\u518c\u6307\u5b9a\u4fe1\u53f7\uff0c\u5f53\u7a0b\u5e8f\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\u65f6\uff0c\u81ea\u52a8\u89e6\u53d1\u6ce8\u518c\u51fd\u6570\uff1a \u65b9\u5f0f1: from django.core.signals import request_finished from django.core.signals import request_started from django.core.signals import got_request_exception from django.db.models.signals import class_prepared from django.db.models.signals import pre_init, post_init from django.db.models.signals import pre_save, post_save from django.db.models.signals import pre_delete, post_delete from django.db.models.signals import m2m_changed from django.db.models.signals import pre_migrate, post_migrate from django.test.signals import setting_changed from django.test.signals import template_rendered from django.db.backends.signals import connection_created def callback(sender, **kwargs): print(\"pre_save_callback\") print(sender,kwargs) pre_save.connect(callback) \uff03 \u8be5\u811a\u672c\u4ee3\u7801\u9700\u8981\u5199\u5230app\u6216\u8005\u9879\u76ee\u7684\u521d\u59cb\u5316\u6587\u4ef6\u4e2d\uff0c\u5f53\u9879\u76ee\u542f\u52a8\u65f6\u6267\u884c\u6ce8\u518c\u4ee3\u7801 \u65b9\u5f0f2: from django.core.signals import request_finished from django.dispatch import receiver @receiver(request_finished) def my_callback(sender, **kwargs): print(\"Request finished!\")","title":"2.1\u3001Django\u5185\u7f6e\u4fe1\u53f7"},{"location":"#22_1","text":"a. \u5b9a\u4e49\u4fe1\u53f7 import django.dispatch pizza_done = django.dispatch.Signal(providing_args=[\"toppings\", \"size\"]) b. \u6ce8\u518c\u4fe1\u53f7 def callback(sender, **kwargs): print(\"callback\") print(sender,kwargs) pizza_done.connect(callback) c. \u89e6\u53d1\u4fe1\u53f7 from \u8def\u5f84 import pizza_done pizza_done.send(sender='seven',toppings=123, size=456) \u7531\u4e8e\u5185\u7f6e\u4fe1\u53f7\u7684\u89e6\u53d1\u8005\u5df2\u7ecf\u96c6\u6210\u5230Django\u4e2d\uff0c\u6240\u4ee5\u5176\u4f1a\u81ea\u52a8\u8c03\u7528\uff0c\u800c\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u4fe1\u53f7\u5219\u9700\u8981\u5f00\u53d1\u8005\u5728\u4efb\u610f\u4f4d\u7f6e\u89e6\u53d1\u3002 \u7ec3\u4e60\uff1a\u6570\u636e\u5e93\u6dfb\u52a0\u4e00\u6761\u8bb0\u5f55\u65f6\u751f\u6210\u4e00\u4e2a\u65e5\u5fd7\u8bb0\u5f55\u3002","title":"2.2\u3001\u81ea\u5b9a\u4e49\u4fe1\u53f7"},{"location":"#django_5","text":"\u5173\u4e8eDjango\u4e2d\u7684\u5e8f\u5217\u5316\u4e3b\u8981\u5e94\u7528\u5728\u5c06\u6570\u636e\u5e93\u4e2d\u68c0\u7d22\u7684\u6570\u636e\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u7528\u6237\uff0c\u7279\u522b\u7684Ajax\u8bf7\u6c42\u4e00\u822c\u8fd4\u56de\u7684\u4e3aJson\u683c\u5f0f\u3002 1\u3001serializers from django.core import serializers ret = models.BookType.objects.all() data = serializers.serialize(\"json\", ret) 2\u3001json.dumps import json #ret = models.BookType.objects.all().values('caption') ret = models.BookType.objects.all().values_list('caption') ret=list(ret) result = json.dumps(ret) \u7531\u4e8ejson.dumps\u65f6\u65e0\u6cd5\u5904\u7406datetime\u65e5\u671f\uff0c\u6240\u4ee5\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u5904\u7406\u5668\u6765\u505a\u6269\u5c55\uff0c\u5982\uff1a import json from datetime import date from datetime import datetime d=datetime.now() class JsonCustomEncoder(json.JSONEncoder): def default(self, field): if isinstance(field, datetime): return field.strftime('%Y-%m-%d %H:%M---%S') elif isinstance(field, date): return field.strftime('%Y-%m-%d') else: return json.JSONEncoder.default(self, field) ds = json.dumps(d, cls=JsonCustomEncoder) print(ds) print(type(ds)) ''' Supports the following objects and types by default: +-------------------+---------------+ | Python | JSON | +===================+===============+ | dict | object | +-------------------+---------------+ | list, tuple | array | +-------------------+---------------+ | str | string | +-------------------+---------------+ | int, float | number | +-------------------+---------------+ | True | true | +-------------------+---------------+ | False | false | +-------------------+---------------+ | None | null | +-------------------+---------------+ '''","title":"\u4e94 Django\u7684\u5e8f\u5217\u5316"},{"location":"#django-_1","text":"\u77e5\u8bc6\u9884\u89c8 COOKIE \u4e0e SESSION \u7528\u6237\u8ba4\u8bc1","title":"Django-\u8ba4\u8bc1\u7cfb\u7edf"},{"location":"#cookie-session","text":"","title":"COOKIE \u4e0e SESSION"},{"location":"#_79","text":"cookie\u4e0d\u5c5e\u4e8ehttp\u534f\u8bae\u8303\u56f4\uff0c\u7531\u4e8ehttp\u534f\u8bae\u65e0\u6cd5\u4fdd\u6301\u72b6\u6001\uff0c\u4f46\u5b9e\u9645\u60c5\u51b5\uff0c\u6211\u4eec\u5374\u53c8\u9700\u8981\u201c\u4fdd\u6301\u72b6\u6001\u201d\uff0c\u56e0\u6b64cookie\u5c31\u662f\u5728\u8fd9\u6837\u4e00\u4e2a\u573a\u666f\u4e0b\u8bde\u751f\u3002 cookie\u7684\u5de5\u4f5c\u539f\u7406\u662f\uff1a\u7531\u670d\u52a1\u5668\u4ea7\u751f\u5185\u5bb9\uff0c\u6d4f\u89c8\u5668\u6536\u5230\u8bf7\u6c42\u540e\u4fdd\u5b58\u5728\u672c\u5730\uff1b\u5f53\u6d4f\u89c8\u5668\u518d\u6b21\u8bbf\u95ee\u65f6\uff0c\u6d4f\u89c8\u5668\u4f1a\u81ea\u52a8\u5e26\u4e0acookie\uff0c\u8fd9\u6837\u670d\u52a1\u5668\u5c31\u80fd\u901a\u8fc7cookie\u7684\u5185\u5bb9\u6765\u5224\u65ad\u8fd9\u4e2a\u662f\u201c\u8c01\u201d\u4e86\u3002 cookie\u867d\u7136\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u89e3\u51b3\u4e86\u201c\u4fdd\u6301\u72b6\u6001\u201d\u7684\u9700\u6c42\uff0c\u4f46\u662f\u7531\u4e8ecookie\u672c\u8eab\u6700\u5927\u652f\u63014096\u5b57\u8282\uff0c\u4ee5\u53cacookie\u672c\u8eab\u4fdd\u5b58\u5728\u5ba2\u6237\u7aef\uff0c\u53ef\u80fd\u88ab\u62e6\u622a\u6216\u7a83\u53d6\uff0c\u56e0\u6b64\u5c31\u9700\u8981\u6709\u4e00\u79cd\u65b0\u7684\u4e1c\u897f\uff0c\u5b83\u80fd\u652f\u6301\u66f4\u591a\u7684\u5b57\u8282\uff0c\u5e76\u4e14\u4ed6\u4fdd\u5b58\u5728\u670d\u52a1\u5668\uff0c\u6709\u8f83\u9ad8\u7684\u5b89\u5168\u6027\u3002\u8fd9\u5c31\u662fsession\u3002 \u95ee\u9898\u6765\u4e86\uff0c\u57fa\u4e8ehttp\u534f\u8bae\u7684\u65e0\u72b6\u6001\u7279\u5f81\uff0c\u670d\u52a1\u5668\u6839\u672c\u5c31\u4e0d\u77e5\u9053\u8bbf\u95ee\u8005\u662f\u201c\u8c01\u201d\u3002\u90a3\u4e48\u4e0a\u8ff0\u7684cookie\u5c31\u8d77\u5230\u6865\u63a5\u7684\u4f5c\u7528\u3002 \u6211\u4eec\u53ef\u4ee5\u7ed9\u6bcf\u4e2a\u5ba2\u6237\u7aef\u7684cookie\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684id\uff0c\u8fd9\u6837\u7528\u6237\u5728\u8bbf\u95ee\u65f6\uff0c\u901a\u8fc7cookie\uff0c\u670d\u52a1\u5668\u5c31\u77e5\u9053\u6765\u7684\u4eba\u662f\u201c\u8c01\u201d\u3002\u7136\u540e\u6211\u4eec\u518d\u6839\u636e\u4e0d\u540c\u7684cookie\u7684id\uff0c\u5728\u670d\u52a1\u5668\u4e0a\u4fdd\u5b58\u4e00\u6bb5\u65f6\u95f4\u7684\u79c1\u5bc6\u8d44\u6599\uff0c\u5982\u201c\u8d26\u53f7\u5bc6\u7801\u201d\u7b49\u7b49\u3002 \u603b\u7ed3\u800c\u8a00\uff1acookie\u5f25\u8865\u4e86http\u65e0\u72b6\u6001\u7684\u4e0d\u8db3\uff0c\u8ba9\u670d\u52a1\u5668\u77e5\u9053\u6765\u7684\u4eba\u662f\u201c\u8c01\u201d\uff1b\u4f46\u662fcookie\u4ee5\u6587\u672c\u7684\u5f62\u5f0f\u4fdd\u5b58\u5728\u672c\u5730\uff0c\u81ea\u8eab\u5b89\u5168\u6027\u8f83\u5dee\uff1b\u6240\u4ee5\u6211\u4eec\u5c31\u901a\u8fc7cookie\u8bc6\u522b\u4e0d\u540c\u7684\u7528\u6237\uff0c\u5bf9\u5e94\u7684\u5728session\u91cc\u4fdd\u5b58\u79c1\u5bc6\u7684\u4fe1\u606f\u4ee5\u53ca\u8d85\u8fc74096\u5b57\u8282\u7684\u6587\u672c\u3002 \u53e6\u5916\uff0c\u4e0a\u8ff0\u6240\u8bf4\u7684cookie\u548csession\u5176\u5b9e\u662f\u5171\u901a\u6027\u7684\u4e1c\u897f\uff0c\u4e0d\u9650\u4e8e\u8bed\u8a00\u548c\u6846\u67b6","title":"\u6982\u5ff5"},{"location":"#_80","text":"\u524d\u51e0\u8282\u7684\u4ecb\u7ecd\u4e2d\u6211\u4eec\u5df2\u7ecf\u6709\u80fd\u529b\u5236\u4f5c\u4e00\u4e2a\u767b\u9646\u9875\u9762\uff0c\u5728\u9a8c\u8bc1\u4e86\u7528\u6237\u540d\u548c\u5bc6\u7801\u7684\u6b63\u786e\u6027\u540e\u8df3\u8f6c\u5230\u540e\u53f0\u7684\u9875\u9762\u3002\u4f46\u662f\u6d4b\u8bd5\u540e\u4e5f\u53d1\u73b0\uff0c\u5982\u679c\u7ed5\u8fc7\u767b\u9646\u9875\u9762\u3002\u76f4\u63a5\u8f93\u5165\u540e\u53f0\u7684url\u5730\u5740\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7684\u3002\u8fd9\u4e2a\u663e\u7136\u662f\u4e0d\u5408\u7406\u7684\u3002\u5176\u5b9e\u6211\u4eec\u7f3a\u5931\u7684\u5c31\u662fcookie\u548csession\u914d\u5408\u7684\u9a8c\u8bc1\u3002\u6709\u4e86\u8fd9\u4e2a\u9a8c\u8bc1\u8fc7\u7a0b\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5b9e\u73b0\u548c\u5176\u4ed6\u7f51\u7ad9\u4e00\u6837\u5fc5\u987b\u767b\u5f55\u624d\u80fd\u8fdb\u5165\u540e\u53f0\u9875\u9762\u4e86\u3002 \u5148\u8bf4\u4e00\u4e0b\u8fd9\u79cd\u8ba4\u8bc1\u7684\u673a\u5236\u3002\u6bcf\u5f53\u6211\u4eec\u4f7f\u7528\u4e00\u6b3e\u6d4f\u89c8\u5668\u8bbf\u95ee\u4e00\u4e2a\u767b\u9646\u9875\u9762\u7684\u65f6\u5019\uff0c\u4e00\u65e6\u6211\u4eec\u901a\u8fc7\u4e86\u8ba4\u8bc1\u3002\u670d\u52a1\u5668\u7aef\u5c31\u4f1a\u53d1\u9001\u4e00\u7ec4\u968f\u673a\u552f\u4e00\u7684\u5b57\u7b26\u4e32\uff08\u5047\u8bbe\u662f123abc\uff09\u5230\u6d4f\u89c8\u5668\u7aef\uff0c\u8fd9\u4e2a\u88ab\u5b58\u50a8\u5728\u6d4f\u89c8\u7aef\u7684\u4e1c\u897f\u5c31\u53ebcookie\u3002\u800c\u670d\u52a1\u5668\u7aef\u4e5f\u4f1a\u81ea\u5df1\u5b58\u50a8\u4e00\u4e0b\u7528\u6237\u5f53\u524d\u7684\u72b6\u6001\uff0c\u6bd4\u5982login=true\uff0cusername=hahaha\u4e4b\u7c7b\u7684\u7528\u6237\u4fe1\u606f\u3002\u4f46\u662f\u8fd9\u79cd\u5b58\u50a8\u662f\u4ee5\u5b57\u5178\u5f62\u5f0f\u5b58\u50a8\u7684\uff0c\u5b57\u5178\u7684\u552f\u4e00key\u5c31\u662f\u521a\u624d\u53d1\u7ed9\u7528\u6237\u7684\u552f\u4e00\u7684cookie\u503c\u3002\u90a3\u4e48\u5982\u679c\u5728\u670d\u52a1\u5668\u7aef\u67e5\u770bsession\u4fe1\u606f\u7684\u8bdd\uff0c\u7406\u8bba\u4e0a\u5c31\u4f1a\u770b\u5230\u5982\u4e0b\u6837\u5b50\u7684\u5b57\u5178 {'123abc':{'login':true,'username:hahaha'}} \u56e0\u4e3a\u6bcf\u4e2acookie\u90fd\u662f\u552f\u4e00\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u5728\u7535\u8111\u4e0a\u6362\u4e2a\u6d4f\u89c8\u5668\u518d\u767b\u9646\u540c\u4e00\u4e2a\u7f51\u7ad9\u4e5f\u9700\u8981\u518d\u6b21\u9a8c\u8bc1\u3002\u90a3\u4e48\u4e3a\u4ec0\u4e48\u8bf4\u6211\u4eec\u53ea\u662f\u7406\u8bba\u4e0a\u770b\u5230\u8fd9\u6837\u5b50\u7684\u5b57\u5178\u5462\uff1f\u56e0\u4e3a\u5904\u4e8e\u5b89\u5168\u6027\u7684\u8003\u8651\uff0c\u5176\u5b9e\u5bf9\u4e8e\u4e0a\u9762\u90a3\u4e2a\u5927\u5b57\u5178\u4e0d\u5149key\u503c123abc\u662f\u88ab\u52a0\u5bc6\u7684\uff0cvalue\u503c{'login':true,'username:hahaha'}\u5728\u670d\u52a1\u5668\u7aef\u4e5f\u662f\u4e00\u6837\u88ab\u52a0\u5bc6\u7684\u3002\u6240\u4ee5\u6211\u4eec\u670d\u52a1\u5668\u4e0a\u5c31\u7b97\u6253\u5f00session\u4fe1\u606f\u770b\u5230\u7684\u4e5f\u662f\u7c7b\u4f3c\u4e0e\u4ee5\u4e0b\u6837\u5b50\u7684\u4e1c\u897f {'123abc':dasdasdasd1231231da1231231} \u77e5\u9053\u4e86\u539f\u7406\uff0c\u4e0b\u9762\u5c31\u6765\u7528\u4ee3\u7801\u5b9e\u73b0\u3002","title":"\u767b\u9646\u5e94\u7528"},{"location":"#djangocookie_1","text":"","title":"Django\u5b9e\u73b0\u7684COOKIE"},{"location":"#1cookie","text":"request.COOKIES['key'] request.get_signed_cookie(key, default=RAISE_ERROR, salt='', max_age=None) #\u53c2\u6570\uff1a default: \u9ed8\u8ba4\u503c salt: \u52a0\u5bc6\u76d0 max_age: \u540e\u53f0\u63a7\u5236\u8fc7\u671f\u65f6\u95f4","title":"1\u3001\u83b7\u53d6Cookie"},{"location":"#2cookie","text":"rep = HttpResponse(...) \u6216 rep \uff1d render(request, ...) \u6216 rep \uff1d redirect() rep.set_cookie(key,value,...) rep.set_signed_cookie(key,value,salt='\u52a0\u5bc6\u76d0',...)\u3000 \u53c2\u6570\uff1a ''' def set_cookie(self, key, \u952e \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 value='', \u503c \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 max_age=None, \u8d85\u957f\u65f6\u95f4 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 expires=None, \u8d85\u957f\u65f6\u95f4 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 path='/', Cookie\u751f\u6548\u7684\u8def\u5f84\uff0c \u6d4f\u89c8\u5668\u53ea\u4f1a\u628acookie\u56de\u4f20\u7ed9\u5e26\u6709\u8be5\u8def\u5f84\u7684\u9875\u9762\uff0c\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u5c06 cookie\u4f20\u7ed9\u7ad9\u70b9\u4e2d\u7684\u5176\u4ed6\u7684\u5e94\u7528\u3002 / \u8868\u793a\u6839\u8def\u5f84\uff0c\u7279\u6b8a\u7684\uff1a\u6839\u8def\u5f84\u7684cookie\u53ef\u4ee5\u88ab\u4efb\u4f55url\u7684\u9875\u9762\u8bbf\u95ee \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 domain=None, Cookie\u751f\u6548\u7684\u57df\u540d \u4f60\u53ef\u7528\u8fd9\u4e2a\u53c2\u6570\u6765\u6784\u9020\u4e00\u4e2a\u8de8\u7ad9cookie\u3002 \u5982\uff0c domain=\".example.com\" \u6240\u6784\u9020\u7684cookie\u5bf9\u4e0b\u9762\u8fd9\u4e9b\u7ad9\u70b9\u90fd\u662f\u53ef\u8bfb\u7684\uff1a www.example.com \u3001 www2.example.com \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u548can.other.sub.domain.example.com \u3002 \u5982\u679c\u8be5\u53c2\u6570\u8bbe\u7f6e\u4e3a None \uff0ccookie\u53ea\u80fd\u7531\u8bbe\u7f6e\u5b83\u7684\u7ad9\u70b9\u8bfb\u53d6\u3002 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 secure=False, \u5982\u679c\u8bbe\u7f6e\u4e3a True \uff0c\u6d4f\u89c8\u5668\u5c06\u901a\u8fc7HTTPS\u6765\u56de\u4f20cookie\u3002 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 httponly=False \u53ea\u80fdhttp\u534f\u8bae\u4f20\u8f93\uff0c\u65e0\u6cd5\u88abJavaScript\u83b7\u53d6 \uff08\u4e0d\u662f\u7edd\u5bf9\uff0c\u5e95\u5c42\u6293\u5305\u53ef\u4ee5\u83b7\u53d6\u5230\u4e5f\u53ef\u4ee5\u88ab\u8986\u76d6\uff09 \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000): pass ''' \u7531\u4e8ecookie\u4fdd\u5b58\u5728\u5ba2\u6237\u7aef\u7684\u7535\u8111\u4e0a\uff0c\u6240\u4ee5\uff0cJavaScript\u548cjquery\u4e5f\u53ef\u4ee5\u64cd\u4f5ccookie\u3002 <script src='/static/js/jquery.cookie.js'> </script> $.cookie(\"key\", value,{ path: '/' });","title":"2\u3001\u8bbe\u7f6eCookie"},{"location":"#3-cookie","text":"response.delete_cookie(\"cookie_key\",path=\"/\",domain=name) cookie\u5b58\u50a8\u5230\u5ba2\u6237\u7aef \u4f18\u70b9\uff1a \u6570\u636e\u5b58\u5728\u5728\u5ba2\u6237\u7aef\uff0c\u51cf\u8f7b\u670d\u52a1\u5668\u7aef\u7684\u538b\u529b\uff0c\u63d0\u9ad8\u7f51\u7ad9\u7684\u6027\u80fd\u3002 \u7f3a\u70b9\uff1a \u5b89\u5168\u6027\u4e0d\u9ad8\uff1a\u5728\u5ba2\u6237\u7aef\u673a\u5f88\u5bb9\u6613\u88ab\u67e5\u770b\u6216\u7834\u89e3\u7528\u6237\u4f1a\u8bdd\u4fe1\u606f","title":"3 \u5220\u9664cookie"},{"location":"#djangosession_1","text":"","title":"Django\u5b9e\u73b0\u7684SESSION"},{"location":"#1_8","text":"1\u3001\u8bbe\u7f6eSessions\u503c request.session['session_name'] =\"admin\" 2\u3001\u83b7\u53d6Sessions\u503c session_name = request.session[\"session_name\"] 3\u3001\u5220\u9664Sessions\u503c del request.session[\"session_name\"] 4\u3001\u68c0\u6d4b\u662f\u5426\u64cd\u4f5csession\u503c if \"session_name\" is request.session : 5\u3001get(key, default=None) fav_color = request.session.get('fav_color', 'red') 6\u3001pop(key) fav_color = request.session.pop('fav_color') 7\u3001keys() 8\u3001items() 9\u3001setdefault() 10\u3001flush() \u5220\u9664\u5f53\u524d\u7684\u4f1a\u8bdd\u6570\u636e\u5e76\u5220\u9664\u4f1a\u8bdd\u7684Cookie\u3002 \u8fd9\u7528\u4e8e\u786e\u4fdd\u524d\u9762\u7684\u4f1a\u8bdd\u6570\u636e\u4e0d\u53ef\u4ee5\u518d\u6b21\u88ab\u7528\u6237\u7684\u6d4f\u89c8\u5668\u8bbf\u95ee \u4f8b\u5982\uff0cdjango.contrib.auth.logout() \u51fd\u6570\u4e2d\u5c31\u4f1a\u8c03\u7528\u5b83\u3002 11 \u7528\u6237session\u7684\u968f\u673a\u5b57\u7b26\u4e32 request.session.session_key # \u5c06\u6240\u6709Session\u5931\u6548\u65e5\u671f\u5c0f\u4e8e\u5f53\u524d\u65e5\u671f\u7684\u6570\u636e\u5220\u9664 request.session.clear_expired() # \u68c0\u67e5 \u7528\u6237session\u7684\u968f\u673a\u5b57\u7b26\u4e32 \u5728\u6570\u636e\u5e93\u4e2d\u662f\u5426 request.session.exists(\"session_key\") # \u5220\u9664\u5f53\u524d\u7528\u6237\u7684\u6240\u6709Session\u6570\u636e request.session.delete(\"session_key\") request.session.set_expiry(value) * \u5982\u679cvalue\u662f\u4e2a\u6574\u6570\uff0csession\u4f1a\u5728\u4e9b\u79d2\u6570\u540e\u5931\u6548\u3002 * \u5982\u679cvalue\u662f\u4e2adatatime\u6216timedelta\uff0csession\u5c31\u4f1a\u5728\u8fd9\u4e2a\u65f6\u95f4\u540e\u5931\u6548\u3002 * \u5982\u679cvalue\u662f0,\u7528\u6237\u5173\u95ed\u6d4f\u89c8\u5668session\u5c31\u4f1a\u5931\u6548\u3002 * \u5982\u679cvalue\u662fNone,session\u4f1a\u4f9d\u8d56\u5168\u5c40session\u5931\u6548\u7b56\u7565\u3002","title":"1\u3001 \u57fa\u672c\u64cd\u4f5c"},{"location":"#2_5","text":"","title":"2\u3001 \u6d41\u7a0b\u89e3\u6790\u56fe"},{"location":"#3_3","text":"views: def log_in(request): if request.method==\"POST\": username=request.POST['user'] password=request.POST['pwd'] user=UserInfo.objects.filter(username=username,password=password) if user: #\u8bbe\u7f6esession\u5185\u90e8\u7684\u5b57\u5178\u5185\u5bb9 request.session['is_login']='true' request.session['username']=username #\u767b\u5f55\u6210\u529f\u5c31\u5c06url\u91cd\u5b9a\u5411\u5230\u540e\u53f0\u7684url return redirect('/backend/') #\u767b\u5f55\u4e0d\u6210\u529f\u6216\u7b2c\u4e00\u8bbf\u95ee\u5c31\u505c\u7559\u5728\u767b\u5f55\u9875\u9762 return render(request,'login.html') def backend(request): print(request.session,\"------cookie\") print(request.COOKIES,'-------session') \"\"\" \u8fd9\u91cc\u5fc5\u987b\u7528\u8bfb\u53d6\u5b57\u5178\u7684get()\u65b9\u6cd5\u628ais_login\u7684value\u7f3a\u7701\u8bbe\u7f6e\u4e3aFalse\uff0c \u5f53\u7528\u6237\u8bbf\u95eebackend\u8fd9\u4e2aurl\u5148\u5c1d\u8bd5\u83b7\u53d6\u8fd9\u4e2a\u6d4f\u89c8\u5668\u5bf9\u5e94\u7684session\u4e2d\u7684 is_login\u7684\u503c\u3002\u5982\u679c\u5bf9\u65b9\u767b\u5f55\u6210\u529f\u7684\u8bdd\uff0c\u5728login\u91cc\u5c31\u5df2\u7ecf\u628ais_login \u7684\u503c\u4fee\u6539\u4e3a\u4e86True,\u53cd\u4e4b\u8fd9\u4e2a\u503c\u5c31\u662fFalse\u7684 \"\"\" is_login=request.session.get('is_login',False) #\u5982\u679c\u4e3a\u771f\uff0c\u5c31\u8bf4\u660e\u7528\u6237\u662f\u6b63\u5e38\u767b\u9646\u7684 if is_login: #\u83b7\u53d6\u5b57\u5178\u7684\u5185\u5bb9\u5e76\u4f20\u5165\u9875\u9762\u6587\u4ef6 cookie_content=request.COOKIES session_content=request.session username=request.session['username'] return render(request,'backend.html',locals()) else: \"\"\" \u5982\u679c\u8bbf\u95ee\u7684\u65f6\u5019\u6ca1\u6709\u643a\u5e26\u6b63\u786e\u7684session\uff0c \u5c31\u76f4\u63a5\u88ab\u91cd\u5b9a\u5411url\u56delogin\u9875\u9762 \"\"\" return redirect('/login/') def log_out(request): \"\"\" \u76f4\u63a5\u901a\u8fc7request.session['is_login']\u56de\u53bb\u8fd4\u56de\u7684\u65f6\u5019\uff0c \u5982\u679cis_login\u5bf9\u5e94\u7684value\u503c\u4e0d\u5b58\u5728\u4f1a\u5bfc\u81f4\u7a0b\u5e8f\u5f02\u5e38\u3002\u6240\u4ee5 \u9700\u8981\u505a\u5f02\u5e38\u5904\u7406 \"\"\" try: #\u5220\u9664is_login\u5bf9\u5e94\u7684value\u503c del request.session['is_login'] # OR---->request.session.flush() # \u5220\u9664django-session\u8868\u4e2d\u7684\u5bf9\u5e94\u4e00\u884c\u8bb0\u5f55 except KeyError: pass #\u70b9\u51fb\u6ce8\u9500\u4e4b\u540e\uff0c\u76f4\u63a5\u91cd\u5b9a\u5411\u56de\u767b\u5f55\u9875\u9762 return redirect('/login/') template: ===================================login.html================== <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <form action=\"/login/\" method=\"post\"> <p>\u7528\u6237\u540d: <input type=\"text\" name=\"user\"></p> <p>\u5bc6\u7801: <input type=\"password\" name=\"pwd\"></p> <p><input type=\"submit\"></p> </form> </body> </html> ===================================backend.html================== <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <h3>hello {{ username }}</h3> <a href=\"/logout/\">\u6ce8\u9500</a> </body> </html>","title":"3\u3001 \u793a\u4f8b"},{"location":"#4session","text":"\uff081\uff09\u6570\u636e\u5e93\u914d\u7f6e\uff08\u9ed8\u8ba4\uff09\uff1a Django\u9ed8\u8ba4\u652f\u6301Session\uff0c\u5e76\u4e14\u9ed8\u8ba4\u662f\u5c06Session\u6570\u636e\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u5373\uff1adjango_session \u8868\u4e2d\u3002 a. \u914d\u7f6e settings.py SESSION_ENGINE = 'django.contrib.sessions.backends.db' # \u5f15\u64ce\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_NAME \uff1d \"sessionid\" # Session\u7684cookie\u4fdd\u5b58\u5728\u6d4f\u89c8\u5668\u4e0a\u65f6\u7684key\uff0c\u5373\uff1asessionid\uff1d\u968f\u673a\u5b57\u7b26\u4e32\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_PATH \uff1d \"/\" # Session\u7684cookie\u4fdd\u5b58\u7684\u8def\u5f84\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_DOMAIN = None # Session\u7684cookie\u4fdd\u5b58\u7684\u57df\u540d\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_SECURE = False # \u662f\u5426Https\u4f20\u8f93cookie\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_HTTPONLY = True # \u662f\u5426Session\u7684cookie\u53ea\u652f\u6301http\u4f20\u8f93\uff08\u9ed8\u8ba4\uff09 SESSION_COOKIE_AGE = 1209600 # Session\u7684cookie\u5931\u6548\u65e5\u671f\uff082\u5468\uff09\uff08\u9ed8\u8ba4\uff09 SESSION_EXPIRE_AT_BROWSER_CLOSE = False # \u662f\u5426\u5173\u95ed\u6d4f\u89c8\u5668\u4f7f\u5f97Session\u8fc7\u671f\uff08\u9ed8\u8ba4\uff09 SESSION_SAVE_EVERY_REQUEST = False # \u662f\u5426\u6bcf\u6b21\u8bf7\u6c42\u90fd\u4fdd\u5b58Session\uff0c\u9ed8\u8ba4\u4fee\u6539\u4e4b\u540e\u624d\u4fdd\u5b58\uff08\u9ed8\u8ba4\uff09 \uff082\uff09\u7f13\u5b58\u914d\u7f6e \u3000 a. \u914d\u7f6e settings.py SESSION_ENGINE = 'django.contrib.sessions.backends.cache' # \u5f15\u64ce SESSION_CACHE_ALIAS = 'default' # \u4f7f\u7528\u7684\u7f13\u5b58\u522b\u540d\uff08\u9ed8\u8ba4\u5185\u5b58\u7f13\u5b58\uff0c\u4e5f\u53ef\u4ee5\u662fmemcache\uff09\uff0c\u6b64\u5904\u522b\u540d\u4f9d\u8d56\u7f13\u5b58\u7684\u8bbe\u7f6e SESSION_COOKIE_NAME \uff1d \"sessionid\" # Session\u7684cookie\u4fdd\u5b58\u5728\u6d4f\u89c8\u5668\u4e0a\u65f6\u7684key\uff0c\u5373\uff1asessionid\uff1d\u968f\u673a\u5b57\u7b26\u4e32 SESSION_COOKIE_PATH \uff1d \"/\" # Session\u7684cookie\u4fdd\u5b58\u7684\u8def\u5f84 SESSION_COOKIE_DOMAIN = None # Session\u7684cookie\u4fdd\u5b58\u7684\u57df\u540d SESSION_COOKIE_SECURE = False # \u662f\u5426Https\u4f20\u8f93cookie SESSION_COOKIE_HTTPONLY = True # \u662f\u5426Session\u7684cookie\u53ea\u652f\u6301http\u4f20\u8f93 SESSION_COOKIE_AGE = 1209600 # Session\u7684cookie\u5931\u6548\u65e5\u671f\uff082\u5468\uff09 SESSION_EXPIRE_AT_BROWSER_CLOSE = False # \u662f\u5426\u5173\u95ed\u6d4f\u89c8\u5668\u4f7f\u5f97Session\u8fc7\u671f SESSION_SAVE_EVERY_REQUEST = False # \u662f\u5426\u6bcf\u6b21\u8bf7\u6c42\u90fd\u4fdd\u5b58Session\uff0c\u9ed8\u8ba4\u4fee\u6539\u4e4b\u540e\u624d\u4fdd\u5b58 \uff083\uff09\u6587\u4ef6\u914d\u7f6e a. \u914d\u7f6e settings.py SESSION_ENGINE = 'django.contrib.sessions.backends.file' # \u5f15\u64ce SESSION_FILE_PATH = None # \u7f13\u5b58\u6587\u4ef6\u8def\u5f84\uff0c\u5982\u679c\u4e3aNone\uff0c\u5219\u4f7f\u7528tempfile\u6a21\u5757\u83b7\u53d6\u4e00\u4e2a\u4e34\u65f6\u5730\u5740tempfile.gettempdir() SESSION_COOKIE_NAME \uff1d \"sessionid\" # Session\u7684cookie\u4fdd\u5b58\u5728\u6d4f\u89c8\u5668\u4e0a\u65f6\u7684key\uff0c\u5373\uff1asessionid\uff1d\u968f\u673a\u5b57\u7b26\u4e32 SESSION_COOKIE_PATH \uff1d \"/\" # Session\u7684cookie\u4fdd\u5b58\u7684\u8def\u5f84 SESSION_COOKIE_DOMAIN = None # Session\u7684cookie\u4fdd\u5b58\u7684\u57df\u540d SESSION_COOKIE_SECURE = False # \u662f\u5426Https\u4f20\u8f93cookie SESSION_COOKIE_HTTPONLY = True # \u662f\u5426Session\u7684cookie\u53ea\u652f\u6301http\u4f20\u8f93 SESSION_COOKIE_AGE = 1209600 # Session\u7684cookie\u5931\u6548\u65e5\u671f\uff082\u5468\uff09 SESSION_EXPIRE_AT_BROWSER_CLOSE = False # \u662f\u5426\u5173\u95ed\u6d4f\u89c8\u5668\u4f7f\u5f97Session\u8fc7\u671f SESSION_SAVE_EVERY_REQUEST = False # \u662f\u5426\u6bcf\u6b21\u8bf7\u6c42\u90fd\u4fdd\u5b58Session\uff0c\u9ed8\u8ba4\u4fee\u6539\u4e4b\u540e\u624d\u4fdd\u5b58","title":"4\u3001session\u5b58\u50a8\u7684\u76f8\u5173\u914d\u7f6e"},{"location":"#_81","text":"","title":"\u7528\u6237\u8ba4\u8bc1"},{"location":"#auth_1","text":"from django.contrib import auth django.contrib.auth\u4e2d\u63d0\u4f9b\u4e86\u8bb8\u591a\u65b9\u6cd5\uff0c\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u5176\u4e2d\u7684\u4e09\u4e2a\uff1a","title":"auth\u6a21\u5757"},{"location":"#1-authenticate","text":"\u63d0\u4f9b\u4e86\u7528\u6237\u8ba4\u8bc1\uff0c\u5373\u9a8c\u8bc1\u7528\u6237\u540d\u4ee5\u53ca\u5bc6\u7801\u662f\u5426\u6b63\u786e,\u4e00\u822c\u9700\u8981username password\u4e24\u4e2a\u5173\u952e\u5b57\u53c2\u6570 \u5982\u679c\u8ba4\u8bc1\u4fe1\u606f\u6709\u6548\uff0c\u4f1a\u8fd4\u56de\u4e00\u4e2a User \u5bf9\u8c61\u3002authenticate()\u4f1a\u5728User \u5bf9\u8c61\u4e0a\u8bbe\u7f6e\u4e00\u4e2a\u5c5e\u6027\u6807\u8bc6\u90a3\u79cd\u8ba4\u8bc1\u540e\u7aef\u8ba4\u8bc1\u4e86\u8be5\u7528\u6237\uff0c\u4e14\u8be5\u4fe1\u606f\u5728\u540e\u9762\u7684\u767b\u5f55\u8fc7\u7a0b\u4e2d\u662f\u9700\u8981\u7684\u3002\u5f53\u6211\u4eec\u8bd5\u56fe\u767b\u9646\u4e00\u4e2a\u4ece\u6570\u636e\u5e93\u4e2d\u76f4\u63a5\u53d6\u51fa\u6765\u4e0d\u7ecf\u8fc7authenticate()\u7684User\u5bf9\u8c61\u4f1a\u62a5\u9519\u7684\uff01\uff01 user = authenticate(username='someone',password='somepassword')","title":"1 \u3001authenticate()"},{"location":"#2-loginhttprequest-user","text":"\u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2aHttpRequest\u5bf9\u8c61\uff0c\u4ee5\u53ca\u4e00\u4e2a\u8ba4\u8bc1\u4e86\u7684User\u5bf9\u8c61 \u6b64\u51fd\u6570\u4f7f\u7528django\u7684session\u6846\u67b6\u7ed9\u67d0\u4e2a\u5df2\u8ba4\u8bc1\u7684\u7528\u6237\u9644\u52a0\u4e0asession id\u7b49\u4fe1\u606f\u3002 from django.contrib.auth import authenticate, login def my_view(request): username = request.POST['username'] password = request.POST['password'] user = authenticate(username=username, password=password) if user is not None: login(request, user) # Redirect to a success page. ... else: # Return an 'invalid login' error message. ...","title":"2 \u3001login(HttpRequest, user)"},{"location":"#3-logoutrequest","text":"from django.contrib.auth import logout def logout_view(request): logout(request) # Redirect to a success page. \u8be5\u51fd\u6570\u63a5\u53d7\u4e00\u4e2aHttpRequest\u5bf9\u8c61\uff0c\u65e0\u8fd4\u56de\u503c\u3002\u5f53\u8c03\u7528\u8be5\u51fd\u6570\u65f6\uff0c\u5f53\u524d\u8bf7\u6c42\u7684session\u4fe1\u606f\u4f1a\u5168\u90e8\u6e05\u9664\u3002\u8be5\u7528\u6237\u5373\u4f7f\u6ca1\u6709\u767b\u5f55\uff0c\u4f7f\u7528\u8be5\u51fd\u6570\u4e5f\u4e0d\u4f1a\u62a5\u9519\u3002","title":"3 \u3001logout(request) \u6ce8\u9500\u7528\u6237"},{"location":"#4-user-is_authenticated","text":"\u8981\u6c42\uff1a 1 \u7528\u6237\u767b\u9646\u540e\u624d\u80fd\u8bbf\u95ee\u67d0\u4e9b\u9875\u9762\uff0c 2 \u5982\u679c\u7528\u6237\u6ca1\u6709\u767b\u5f55\u5c31\u8bbf\u95ee\u8be5\u9875\u9762\u7684\u8bdd\u76f4\u63a5\u8df3\u5230\u767b\u5f55\u9875\u9762 3 \u7528\u6237\u5728\u8df3\u8f6c\u7684\u767b\u9646\u754c\u9762\u4e2d\u5b8c\u6210\u767b\u9646\u540e\uff0c\u81ea\u52a8\u8bbf\u95ee\u8df3\u8f6c\u5230\u4e4b\u524d\u8bbf\u95ee\u7684\u5730\u5740 \u65b9\u6cd51: def my_view(request): if not request.user.is_authenticated(): return redirect('%s?next=%s' % (settings.LOGIN_URL, request.path)) \u65b9\u6cd52: django\u5df2\u7ecf\u4e3a\u6211\u4eec\u8bbe\u8ba1\u597d\u4e86\u4e00\u4e2a\u7528\u4e8e\u6b64\u79cd\u60c5\u51b5\u7684\u88c5\u9970\u5668\uff1alogin_requierd() from django.contrib.auth.decorators import login_required @login_required def my_view(request): ... \u82e5\u7528\u6237\u6ca1\u6709\u767b\u5f55\uff0c\u5219\u4f1a\u8df3\u8f6c\u5230django\u9ed8\u8ba4\u7684 \u767b\u5f55URL '/accounts/login/ ' (\u8fd9\u4e2a\u503c\u53ef\u4ee5\u5728settings\u6587\u4ef6\u4e2d\u901a\u8fc7LOGIN_URL\u8fdb\u884c\u4fee\u6539)\u3002\u5e76\u4f20\u9012 \u5f53\u524d\u8bbf\u95eeurl\u7684\u7edd\u5bf9\u8def\u5f84 (\u767b\u9646\u6210\u529f\u540e\uff0c\u4f1a\u91cd\u5b9a\u5411\u5230\u8be5\u8def\u5f84)\u3002","title":"4 \u3001user\u5bf9\u8c61\u7684 is_authenticated()"},{"location":"#user_1","text":"User \u5bf9\u8c61\u5c5e\u6027\uff1ausername\uff0c password\uff08\u5fc5\u586b\u9879\uff09password\u7528\u54c8\u5e0c\u7b97\u6cd5\u4fdd\u5b58\u5230\u6570\u636e\u5e93 is_staff \uff1a \u7528\u6237\u662f\u5426\u62e5\u6709\u7f51\u7ad9\u7684\u7ba1\u7406\u6743\u9650. is_active \uff1a \u662f\u5426\u5141\u8bb8\u7528\u6237\u767b\u5f55, \u8bbe\u7f6e\u4e3a False \uff0c\u53ef\u4ee5\u4e0d\u7528\u5220\u9664\u7528\u6237\u6765\u7981\u6b62 \u7528\u6237\u767b\u5f55","title":"User\u5bf9\u8c61"},{"location":"#21-is_authenticated","text":"\u5982\u679c\u662f\u771f\u6b63\u7684 User \u5bf9\u8c61\uff0c\u8fd4\u56de\u503c\u6052\u4e3a True \u3002 \u7528\u4e8e\u68c0\u67e5\u7528\u6237\u662f\u5426\u5df2\u7ecf\u901a\u8fc7\u4e86\u8ba4\u8bc1\u3002 \u901a\u8fc7\u8ba4\u8bc1\u5e76\u4e0d\u610f\u5473\u7740\u7528\u6237\u62e5\u6709\u4efb\u4f55\u6743\u9650\uff0c\u751a\u81f3\u4e5f\u4e0d\u68c0\u67e5\u8be5\u7528\u6237\u662f\u5426\u5904\u4e8e\u6fc0\u6d3b\u72b6\u6001\uff0c\u8fd9\u53ea\u662f\u8868\u660e\u7528\u6237\u6210\u529f\u7684\u901a\u8fc7\u4e86\u8ba4\u8bc1\u3002 \u8fd9\u4e2a\u65b9\u6cd5\u5f88\u91cd\u8981, \u5728\u540e\u53f0\u7528request.user.is_authenticated()\u5224\u65ad\u7528\u6237\u662f\u5426\u5df2\u7ecf\u767b\u5f55\uff0c\u5982\u679ctrue\u5219\u53ef\u4ee5\u5411\u524d\u53f0\u5c55\u793arequest.user.name","title":"2.1 \u3001is_authenticated()"},{"location":"#22_2","text":"\u4f7f\u7528 create_user \u8f85\u52a9\u51fd\u6570\u521b\u5efa\u7528\u6237: from django.contrib.auth.models import User user = User.objects.create_user\uff08username='',password='',email=''\uff09","title":"2.2 \u3001\u521b\u5efa\u7528\u6237"},{"location":"#23-check_passwordpasswd_1","text":"\u7528\u6237\u9700\u8981\u4fee\u6539\u5bc6\u7801\u7684\u65f6\u5019 \u9996\u5148\u8981\u8ba9\u4ed6\u8f93\u5165\u539f\u6765\u7684\u5bc6\u7801 \uff0c\u5982\u679c\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u901a\u8fc7\u4e86\u5bc6\u7801\u68c0\u67e5\uff0c\u8fd4\u56de ``True","title":"2.3 \u3001check_password(passwd)"},{"location":"#24_1","text":"\u4f7f\u7528 set_password() \u6765\u4fee\u6539\u5bc6\u7801 user = User.objects.get(username='') user.set_password(password='') user.save","title":"2.4 \u3001\u4fee\u6539\u5bc6\u7801"},{"location":"#25_1","text":"\u6ce8\u518c\uff1a def sign_up(request): state = None if request.method == 'POST': password = request.POST.get('password', '') repeat_password = request.POST.get('repeat_password', '') email=request.POST.get('email', '') username = request.POST.get('username', '') if User.objects.filter(username=username): state = 'user_exist' else: new_user = User.objects.create_user(username=username, password=password,email=email) new_user.save() return redirect('/book/') content = { 'state': state, 'user': None, } return render(request, 'sign_up.html', content)\u3000\u3000 \u4fee\u6539\u5bc6\u7801\uff1a @login_required def set_password(request): user = request.user state = None if request.method == 'POST': old_password = request.POST.get('old_password', '') new_password = request.POST.get('new_password', '') repeat_password = request.POST.get('repeat_password', '') if user.check_password(old_password): if not new_password: state = 'empty' elif new_password != repeat_password: state = 'repeat_error' else: user.set_password(new_password) user.save() return redirect(\"/log_in/\") else: state = 'password_error' content = { 'user': user, 'state': state, } return render(request, 'set_password.html', content)","title":"2.5 \u3001\u7b80\u5355\u793a\u4f8b"},{"location":"#django-ajax","text":"\u77e5\u8bc6\u9884\u89c8 Ajax\u51c6\u5907\u77e5\u8bc6\uff1ajson Ajax\u7b80\u4ecb jquery\u5b9e\u73b0\u7684ajax JS\u5b9e\u73b0\u7684ajax jQuery.serialize() \u4e0a\u4f20\u6587\u4ef6 \u540c\u6e90\u7b56\u7565\u4e0eJsonp CORS","title":"Django-Ajax"},{"location":"#ajaxjson","text":"","title":"Ajax\u51c6\u5907\u77e5\u8bc6\uff1ajson"},{"location":"#json","text":"\u5b9a\u4e49\uff1a JSON(JavaScript Object Notation, JS \u5bf9\u8c61\u6807\u8bb0) \u662f\u4e00\u79cd\u8f7b\u91cf\u7ea7\u7684\u6570\u636e\u4ea4\u6362\u683c\u5f0f\u3002 \u5b83\u57fa\u4e8e ECMAScript (w3c\u5236\u5b9a\u7684js\u89c4\u8303)\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u91c7\u7528\u5b8c\u5168\u72ec\u7acb\u4e8e\u7f16\u7a0b\u8bed\u8a00\u7684\u6587\u672c\u683c\u5f0f\u6765\u5b58\u50a8\u548c\u8868\u793a\u6570\u636e\u3002 \u7b80\u6d01\u548c\u6e05\u6670\u7684\u5c42\u6b21\u7ed3\u6784\u4f7f\u5f97 JSON \u6210\u4e3a\u7406\u60f3\u7684\u6570\u636e\u4ea4\u6362\u8bed\u8a00\u3002 \u6613\u4e8e\u4eba\u9605\u8bfb\u548c\u7f16\u5199\uff0c\u540c\u65f6\u4e5f\u6613\u4e8e\u673a\u5668\u89e3\u6790\u548c\u751f\u6210\uff0c\u5e76\u6709\u6548\u5730\u63d0\u5347\u7f51\u7edc\u4f20\u8f93\u6548\u7387\u3002 \u8bb2json\u5bf9\u8c61\uff0c\u4e0d\u5f97\u4e0d\u63d0\u5230JS\u5bf9\u8c61\uff1a \u5408\u683c\u7684json\u5bf9\u8c61\uff1a [\"one\", \"two\", \"three\"] { \"one\": 1, \"two\": 2, \"three\": 3 } {\"names\": [\"\u5f20\u4e09\", \"\u674e\u56db\"] } [ { \"name\": \"\u5f20\u4e09\"}, {\"name\": \"\u674e\u56db\"} ] \u4e0d\u5408\u683c\u7684json\u5bf9\u8c61\uff1a { name: \"\u5f20\u4e09\", 'age': 32 } // \u5c5e\u6027\u540d\u5fc5\u987b\u4f7f\u7528\u53cc\u5f15\u53f7 [32, 64, 128, 0xFFF] // \u4e0d\u80fd\u4f7f\u7528\u5341\u516d\u8fdb\u5236\u503c { \"name\": \"\u5f20\u4e09\", \"age\": undefined } // \u4e0d\u80fd\u4f7f\u7528undefined { \"name\": \"\u5f20\u4e09\", \"birthday\": new Date('Fri, 26 Aug 2011 07:13:10 GMT'), \"getName\": function() {return this.name;} // \u4e0d\u80fd\u4f7f\u7528\u51fd\u6570\u548c\u65e5\u671f\u5bf9\u8c61 }","title":"\u4ec0\u4e48\u662fjson\uff1f"},{"location":"#stringifyparse","text":"JSON.parse(): \u7528\u4e8e\u5c06\u4e00\u4e2a JSON \u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a JavaScript \u5bf9\u8c61\u3000 eg: console.log(JSON.parse('{\"name\":\"Yuan\"}')); console.log(JSON.parse('{name:\"Yuan\"}')) ; // \u9519\u8bef console.log(JSON.parse('[12,undefined]')) ; // \u9519\u8bef JSON.stringify(): \u7528\u4e8e\u5c06 JavaScript \u503c\u8f6c\u6362\u4e3a JSON \u5b57\u7b26\u4e32\u3002\u3000 eg: console.log(JSON.stringify({'name':\"egon\"})) ;","title":"stringify\u4e0eparse\u65b9\u6cd5"},{"location":"#xml","text":"JSON \u683c\u5f0f\u4e8e2001\u5e74\u7531 Douglas Crockford \u63d0\u51fa\uff0c\u76ee\u7684\u5c31\u662f\u53d6\u4ee3\u7e41\u7410\u7b28\u91cd\u7684 XML \u683c\u5f0f\u3002 JSON \u683c\u5f0f\u6709\u4e24\u4e2a\u663e\u8457\u7684\u4f18\u70b9\uff1a\u4e66\u5199\u7b80\u5355\uff0c\u4e00\u76ee\u4e86\u7136\uff1b\u7b26\u5408 JavaScript \u539f\u751f\u8bed\u6cd5\uff0c\u53ef\u4ee5\u7531\u89e3\u91ca\u5f15\u64ce\u76f4\u63a5\u5904\u7406\uff0c\u4e0d\u7528\u53e6\u5916\u6dfb\u52a0\u89e3\u6790\u4ee3\u7801\u3002\u6240\u4ee5\uff0cJSON\u8fc5\u901f\u88ab\u63a5\u53d7\uff0c\u5df2\u7ecf\u6210\u4e3a\u5404\u5927\u7f51\u7ad9\u4ea4\u6362\u6570\u636e\u7684\u6807\u51c6\u683c\u5f0f\uff0c\u5e76\u88ab\u5199\u5165ECMAScript 5\uff0c\u6210\u4e3a\u6807\u51c6\u7684\u4e00\u90e8\u5206\u3002 XML\u548cJSON\u90fd\u4f7f\u7528\u7ed3\u6784\u5316\u65b9\u6cd5\u6765\u6807\u8bb0\u6570\u636e\uff0c\u4e0b\u9762\u6765\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u6bd4\u8f83\u3002 \u7528XML\u8868\u793a\u4e2d\u56fd\u90e8\u5206\u7701\u5e02\u6570\u636e\u5982\u4e0b\uff1a <?xml version=\"1.0\" encoding=\"utf-8\"?> <country> <name>\u4e2d\u56fd</name> <province> <name>\u9ed1\u9f99\u6c5f</name> <cities> <city>\u54c8\u5c14\u6ee8</city> <city>\u5927\u5e86</city> </cities> </province> <province> <name>\u5e7f\u4e1c</name> <cities> <city>\u5e7f\u5dde</city> <city>\u6df1\u5733</city> <city>\u73e0\u6d77</city> </cities> </province> <province> <name>\u53f0\u6e7e</name> <cities> <city>\u53f0\u5317</city> <city>\u9ad8\u96c4</city> </cities> </province> <province> <name>\u65b0\u7586</name> <cities> <city>\u4e4c\u9c81\u6728\u9f50</city> </cities> </province> </country> \u7528JSON\u8868\u793a\u5982\u4e0b\uff1a { \"name\": \"\u4e2d\u56fd\", \"province\": [{ \"name\": \"\u9ed1\u9f99\u6c5f\", \"cities\": { \"city\": [\"\u54c8\u5c14\u6ee8\", \"\u5927\u5e86\"] } }, { \"name\": \"\u5e7f\u4e1c\", \"cities\": { \"city\": [\"\u5e7f\u5dde\", \"\u6df1\u5733\", \"\u73e0\u6d77\"] } }, { \"name\": \"\u53f0\u6e7e\", \"cities\": { \"city\": [\"\u53f0\u5317\", \"\u9ad8\u96c4\"] } }, { \"name\": \"\u65b0\u7586\", \"cities\": { \"city\": [\"\u4e4c\u9c81\u6728\u9f50\"] } }] } \u53ef\u4ee5\u770b\u5230\uff0cJSON \u7b80\u5355\u7684\u8bed\u6cd5\u683c\u5f0f\u548c\u6e05\u6670\u7684\u5c42\u6b21\u7ed3\u6784\u660e\u663e\u8981\u6bd4 XML \u5bb9\u6613\u9605\u8bfb\uff0c\u5e76\u4e14\u5728\u6570\u636e\u4ea4\u6362\u65b9\u9762\uff0c\u7531\u4e8e JSON \u6240\u4f7f\u7528\u7684\u5b57\u7b26\u8981\u6bd4 XML \u5c11\u5f97\u591a\uff0c\u53ef\u4ee5\u5927\u5927\u5f97\u8282\u7ea6\u4f20\u8f93\u6570\u636e\u6240\u5360\u7528\u5f97\u5e26\u5bbd\u3002 \u6ce8\u610f\uff1a JSON\u683c\u5f0f\u53d6\u4ee3\u4e86xml\u7ed9\u7f51\u7edc\u4f20\u8f93\u5e26\u6765\u4e86\u5f88\u5927\u7684\u4fbf\u5229,\u4f46\u662f\u5374\u6ca1\u6709\u4e86xml\u7684\u4e00\u76ee\u4e86\u7136,\u5c24\u5176\u662fjson\u6570\u636e\u5f88\u957f\u7684\u65f6\u5019,\u6211\u4eec\u4f1a\u9677\u5165\u7e41\u7410\u590d\u6742\u7684\u6570\u636e\u8282\u70b9\u67e5\u627e\u4e2d\u3002 \u4f46\u662f\u56fd\u4eba\u7684\u4e00\u6b3e\u5728\u7ebf\u5de5\u5177 BeJson \u3001SoJson\u5728\u7ebf\u5de5\u5177\u8ba9\u4f17\u591a\u7a0b\u5e8f\u5458\u3001\u65b0\u63a5\u89e6JSON\u683c\u5f0f\u7684\u7a0b\u5e8f\u5458\u66f4\u5feb\u7684\u4e86\u89e3JSON\u7684\u7ed3\u6784\uff0c\u66f4\u5feb\u7684\u7cbe\u786e\u5b9a\u4f4dJSON\u683c\u5f0f\u9519\u8bef\u3002","title":"\u548cXML\u7684\u6bd4\u8f83"},{"location":"#ajax_3","text":"AJAX\uff08Asynchronous Javascript And XML\uff09\u7ffb\u8bd1\u6210\u4e2d\u6587\u5c31\u662f\u201c\u5f02\u6b65Javascript\u548cXML\u201d\u3002\u5373\u4f7f\u7528Javascript\u8bed\u8a00\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u5f02\u6b65\u4ea4\u4e92\uff0c\u4f20\u8f93\u7684\u6570\u636e\u4e3aXML\uff08\u5f53\u7136\uff0c\u4f20\u8f93\u7684\u6570\u636e\u4e0d\u53ea\u662fXML\uff09\u3002 \u540c\u6b65\u4ea4\u4e92\uff1a\u5ba2\u6237\u7aef\u53d1\u51fa\u4e00\u4e2a\u8bf7\u6c42\u540e\uff0c\u9700\u8981\u7b49\u5f85\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\u540e\uff0c\u624d\u80fd\u53d1\u51fa\u7b2c\u4e8c\u4e2a\u8bf7\u6c42\uff1b \u5f02\u6b65\u4ea4\u4e92\uff1a\u5ba2\u6237\u7aef\u53d1\u51fa\u4e00\u4e2a\u8bf7\u6c42\u540e\uff0c\u65e0\u9700\u7b49\u5f85\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\uff0c\u5c31\u53ef\u4ee5\u53d1\u51fa\u7b2c\u4e8c\u4e2a\u8bf7\u6c42\u3002 AJAX\u9664\u4e86 \u5f02\u6b65 \u7684\u7279\u70b9\u5916\uff0c\u8fd8\u6709\u4e00\u4e2a\u5c31\u662f\uff1a\u6d4f\u89c8\u5668\u9875\u9762 \u5c40\u90e8\u5237\u65b0 \uff1b\uff08\u8fd9\u4e00\u7279\u70b9\u7ed9\u7528\u6237\u7684\u611f\u53d7\u662f\u5728\u4e0d\u77e5\u4e0d\u89c9\u4e2d\u5b8c\u6210\u8bf7\u6c42\u548c\u54cd\u5e94\u8fc7\u7a0b\uff09 js\u5b9e\u73b0\u7684\u5c40\u90e8\u5237\u65b0: <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <style> .error{ color:red } </style> </head> <body> <form class=\"Form\"> <p>\u59d3\u540d <input class=\"v1\" type=\"text\" name=\"username\" mark=\"\u7528\u6237\u540d\"></p> <p>\u5bc6\u7801 <input class=\"v1\" type=\"text\" name=\"email\" mark=\"\u90ae\u7bb1\"></p> <p><input type=\"submit\" value=\"submit\"></p> </form> <script src=\"jquery-3.1.1.js\"></script> <script> $(\".Form :submit\").click(function(){ flag=true; $(\"Form .v1\").each(function(){ var value=$(this).val(); if (value.trim().length==0){ var mark=$(this).attr(\"mark\"); var $span=$(\"<span>\"); $span.html(mark+\"\u4e0d\u80fd\u4e3a\u7a7a!\"); $span.prop(\"class\",\"error\"); $(this).after($span); setTimeout(function(){ $span.remove(); },800); flag=false; return flag; } }); return flag }); </script> </body> </html>","title":"Ajax\u7b80\u4ecb"},{"location":"#ajax_4","text":"\u5f53\u6211\u4eec\u5728\u767e\u5ea6\u4e2d\u8f93\u5165\u4e00\u4e2a\u201c\u8001\u201d\u5b57\u540e\uff0c\u4f1a\u9a6c\u4e0a\u51fa\u73b0\u4e00\u4e2a\u4e0b\u62c9\u5217\u8868\uff01\u5217\u8868\u4e2d\u663e\u793a\u7684\u662f\u5305\u542b\u201c\u4f20\u201d\u5b57\u76844\u4e2a\u5173\u952e\u5b57\u3002 \u5176\u5b9e\u8fd9\u91cc\u5c31\u4f7f\u7528\u4e86AJAX\u6280\u672f\uff01\u5f53\u6587\u4ef6\u6846\u53d1\u751f\u4e86\u8f93\u5165\u53d8\u5316\u65f6\uff0c\u6d4f\u89c8\u5668\u4f1a\u4f7f\u7528AJAX\u6280\u672f\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2a\u8bf7\u6c42\uff0c\u67e5\u8be2\u5305\u542b\u201c\u4f20\u201d\u5b57\u7684\u524d10\u4e2a\u5173\u952e\u5b57\uff0c\u7136\u540e\u670d\u52a1\u5668\u4f1a\u628a\u67e5\u8be2\u5230\u7684\u7ed3\u679c\u54cd\u5e94\u7ed9\u6d4f\u89c8\u5668\uff0c\u6700\u540e\u6d4f\u89c8\u5668\u628a\u8fd94\u4e2a\u5173\u952e\u5b57\u663e\u793a\u5728\u4e0b\u62c9\u5217\u8868\u4e2d\u3002 \u6574\u4e2a\u8fc7\u7a0b\u4e2d\u9875\u9762\u6ca1\u6709\u5237\u65b0\uff0c\u53ea\u662f\u5237\u65b0\u9875\u9762\u4e2d\u7684\u5c40\u90e8\u4f4d\u7f6e\u800c\u5df2\uff01 \u5f53\u8bf7\u6c42\u53d1\u51fa\u540e\uff0c\u6d4f\u89c8\u5668\u8fd8\u53ef\u4ee5\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\uff0c\u65e0\u9700\u7b49\u5f85\u670d\u52a1\u5668\u7684\u54cd\u5e94\uff01 \u200b \u5f53\u8f93\u5165\u7528\u6237\u540d\u540e\uff0c\u628a\u5149\u6807\u79fb\u52a8\u5230\u5176\u4ed6\u8868\u5355\u9879\u4e0a\u65f6\uff0c\u6d4f\u89c8\u5668\u4f1a\u4f7f\u7528AJAX\u6280\u672f\u5411\u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\uff0c\u670d\u52a1\u5668\u4f1a\u67e5\u8be2\u540d\u4e3azhangSan\u7684\u7528\u6237\u662f\u5426\u5b58\u5728\uff0c\u6700\u7ec8\u670d\u52a1\u5668\u8fd4\u56detrue\u8868\u793a\u540d\u4e3alemontree7777777\u7684\u7528\u6237\u5df2\u7ecf\u5b58\u5728\u4e86\uff0c\u6d4f\u89c8\u5668\u5728\u5f97\u5230\u7ed3\u679c\u540e\u663e\u793a\u201c\u7528\u6237\u540d\u5df2\u88ab\u6ce8\u518c\uff01\u201d\u3002 \u6574\u4e2a\u8fc7\u7a0b\u4e2d\u9875\u9762\u6ca1\u6709\u5237\u65b0\uff0c\u53ea\u662f\u5c40\u90e8\u5237\u65b0\u4e86\uff1b \u5728\u8bf7\u6c42\u53d1\u51fa\u540e\uff0c\u6d4f\u89c8\u5668\u4e0d\u7528\u7b49\u5f85\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u679c\u5c31\u53ef\u4ee5\u8fdb\u884c\u5176\u4ed6\u64cd\u4f5c\uff1b","title":"AJAX\u5e38\u89c1\u5e94\u7528\u60c5\u666f"},{"location":"#ajax_5","text":"","title":"AJAX\u7684\u4f18\u7f3a\u70b9"},{"location":"#_82","text":"AJAX\u4f7f\u7528Javascript\u6280\u672f\u5411\u670d\u52a1\u5668\u53d1\u9001\u5f02\u6b65\u8bf7\u6c42\uff1b AJAX\u65e0\u987b\u5237\u65b0\u6574\u4e2a\u9875\u9762\uff1b \u56e0\u4e3a\u670d\u52a1\u5668\u54cd\u5e94\u5185\u5bb9\u4e0d\u518d\u662f\u6574\u4e2a\u9875\u9762\uff0c\u800c\u662f\u9875\u9762\u4e2d\u7684\u5c40\u90e8\uff0c\u6240\u4ee5AJAX\u6027\u80fd\u9ad8\uff1b","title":"\u4f18\u70b9\uff1a"},{"location":"#jqueryajax_1","text":"{% load staticfiles %} <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"{% static 'JS/jquery-3.1.1.js' %}\"></script> </head> <body> <button class=\"send_Ajax\">send_Ajax</button> <script> //$.ajax\u7684\u4e24\u79cd\u4f7f\u7528\u65b9\u5f0f: //$.ajax(settings); //$.ajax(url,[settings]); $(\".send_Ajax\").click(function(){ $.ajax({ url:\"/handle_Ajax/\", type:\"POST\", data:{username:\"Yuan\",password:123}, success:function(data){ alert(data) }, //=================== error============ error: function (jqXHR, textStatus, err) { // jqXHR: jQuery\u589e\u5f3a\u7684xhr // textStatus: \u8bf7\u6c42\u5b8c\u6210\u72b6\u6001 // err: \u5e95\u5c42\u901a\u8fc7throw\u629b\u51fa\u7684\u5f02\u5e38\u5bf9\u8c61\uff0c\u503c\u4e0e\u9519\u8bef\u7c7b\u578b\u6709\u5173 console.log(arguments); }, //=================== complete============ complete: function (jqXHR, textStatus) { // jqXHR: jQuery\u589e\u5f3a\u7684xhr // textStatus: \u8bf7\u6c42\u5b8c\u6210\u72b6\u6001 success | error console.log('statusCode: %d, statusText: %s', jqXHR.status, jqXHR.statusText); console.log('textStatus: %s', textStatus); }, //=================== statusCode============ statusCode: { '403': function (jqXHR, textStatus, err) { console.log(arguments); //\u6ce8\u610f\uff1a\u540e\u7aef\u6a21\u62dferrror\u65b9\u5f0f\uff1aHttpResponse.status_code=500 }, '400': function () { } } }) }) </script> </body> </html>","title":"jquery\u5b9e\u73b0\u7684ajax"},{"location":"#view_1","text":"import json,time def index(request): return render(request,\"index.html\") def handle_Ajax(request): username=request.POST.get(\"username\") password=request.POST.get(\"password\") print(username,password) time.sleep(10) return HttpResponse(json.dumps(\"Error Data!\"))","title":"view\uff1a"},{"location":"#ajax_6","text":"","title":"$.ajax\u53c2\u6570"},{"location":"#_83","text":"######################------------data---------################ data: \u5f53\u524dajax\u8bf7\u6c42\u8981\u643a\u5e26\u7684\u6570\u636e\uff0c\u662f\u4e00\u4e2ajson\u7684object\u5bf9\u8c61\uff0cajax\u65b9\u6cd5\u5c31\u4f1a\u9ed8\u8ba4\u5730\u628a\u5b83\u7f16\u7801\u6210\u67d0\u79cd\u683c\u5f0f (urlencoded:?a=1&b=2)\u53d1\u9001\u7ed9\u670d\u52a1\u7aef\uff1b\u6b64\u5916\uff0cajax\u9ed8\u8ba4\u4ee5get\u65b9\u5f0f\u53d1\u9001\u8bf7\u6c42\u3002 function testData() { $.ajax(\"/test\",{ //\u6b64\u65f6\u7684data\u662f\u4e00\u4e2ajson\u5f62\u5f0f\u7684\u5bf9\u8c61 data:{ a:1, b:2 } }); //?a=1&b=2 ######################------------processData---------################ processData\uff1a\u58f0\u660e\u5f53\u524d\u7684data\u6570\u636e\u662f\u5426\u8fdb\u884c\u8f6c\u7801\u6216\u9884\u5904\u7406\uff0c\u9ed8\u8ba4\u4e3atrue\uff0c\u5373\u9884\u5904\u7406\uff1bif\u4e3afalse\uff0c \u90a3\u4e48\u5bf9data\uff1a{a:1,b:2}\u4f1a\u8c03\u7528json\u5bf9\u8c61\u7684toString()\u65b9\u6cd5\uff0c\u5373{a:1,b:2}.toString() ,\u6700\u540e\u5f97\u5230\u4e00\u4e2a\uff3bobject\uff0cObject\uff3d\u5f62\u5f0f\u7684\u7ed3\u679c\u3002 ######################------------contentType---------################ contentType\uff1a\u9ed8\u8ba4\u503c: \"application/x-www-form-urlencoded\"\u3002\u53d1\u9001\u4fe1\u606f\u81f3\u670d\u52a1\u5668\u65f6\u5185\u5bb9\u7f16\u7801\u7c7b\u578b\u3002 \u7528\u6765\u6307\u660e\u5f53\u524d\u8bf7\u6c42\u7684\u6570\u636e\u7f16\u7801\u683c\u5f0f\uff1burlencoded:?a=1&b=2\uff1b\u5982\u679c\u60f3\u4ee5\u5176\u4ed6\u65b9\u5f0f\u63d0\u4ea4\u6570\u636e\uff0c \u6bd4\u5982contentType:\"application/json\"\uff0c\u5373\u5411\u670d\u52a1\u5668\u53d1\u9001\u4e00\u4e2ajson\u5b57\u7b26\u4e32\uff1a $.ajax(\"/ajax_get\",{ data:JSON.stringify({ a:22, b:33 }), contentType:\"application/json\", type:\"POST\", }); //{a: 22, b: 33} \u6ce8\u610f\uff1acontentType:\"application/json\"\u4e00\u65e6\u8bbe\u5b9a\uff0cdata\u5fc5\u987b\u662fjson\u5b57\u7b26\u4e32\uff0c\u4e0d\u80fd\u662fjson\u5bf9\u8c61 views.py: json.loads(request.body.decode(\"utf8\")) ######################------------traditional---------################ traditional\uff1a\u4e00\u822c\u662f\u6211\u4eec\u7684data\u6570\u636e\u6709\u6570\u7ec4\u65f6\u4f1a\u7528\u5230 \uff1adata:{a:22,b:33,c:[\"x\",\"y\"]}, traditional\u4e3afalse\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u6df1\u5c42\u6b21\u8fed\u4ee3\uff1b","title":"\u8bf7\u6c42\u53c2\u6570"},{"location":"#_84","text":"/* dataType\uff1a \u9884\u671f\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u7c7b\u578b,\u670d\u52a1\u5668\u7aef\u8fd4\u56de\u7684\u6570\u636e\u4f1a\u6839\u636e\u8fd9\u4e2a\u503c\u89e3\u6790\u540e\uff0c\u4f20\u9012\u7ed9\u56de\u8c03\u51fd\u6570\u3002 \u9ed8\u8ba4\u4e0d\u9700\u8981\u663e\u6027\u6307\u5b9a\u8fd9\u4e2a\u5c5e\u6027\uff0cajax\u4f1a\u6839\u636e\u670d\u52a1\u5668\u8fd4\u56de\u7684content Type\u6765\u8fdb\u884c\u8f6c\u6362\uff1b \u6bd4\u5982\u6211\u4eec\u7684\u670d\u52a1\u5668\u54cd\u5e94\u7684content Type\u4e3ajson\u683c\u5f0f\uff0c\u8fd9\u65f6ajax\u65b9\u6cd5\u5c31\u4f1a\u5bf9\u54cd\u5e94\u7684\u5185\u5bb9 \u8fdb\u884c\u4e00\u4e2ajson\u683c\u5f0f\u7684\u8f6c\u6362\uff0cif\u8f6c\u6362\u6210\u529f\uff0c\u6211\u4eec\u5728success\u7684\u56de\u8c03\u51fd\u6570\u91cc\u5c31\u4f1a\u5f97\u5230\u4e00\u4e2ajson\u683c\u5f0f \u7684\u5bf9\u8c61\uff1b\u8f6c\u6362\u5931\u8d25\u5c31\u4f1a\u89e6\u53d1error\u8fd9\u4e2a\u56de\u8c03\u51fd\u6570\u3002\u5982\u679c\u6211\u4eec\u660e\u786e\u5730\u6307\u5b9a\u76ee\u6807\u7c7b\u578b\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528 data Type\u3002 dataType\u7684\u53ef\u7528\u503c\uff1ahtml\uff5cxml\uff5cjson\uff5ctext\uff5cscript \u89c1\u4e0bdataType\u5b9e\u4f8b */ \u793a\u4f8b\uff1a from django.shortcuts import render,HttpResponse from django.views.decorators.csrf import csrf_exempt # Create your views here. import json def login(request): return render(request,'Ajax.html') def ajax_get(request): l=['alex','little alex'] dic={\"name\":\"alex\",\"pwd\":123} #return HttpResponse(l) #\u5143\u7d20\u76f4\u63a5\u8f6c\u6210\u5b57\u7b26\u4e32alexlittle alex #return HttpResponse(dic) #\u5b57\u5178\u7684\u952e\u76f4\u63a5\u8f6c\u6210\u5b57\u7b26\u4e32namepwd return HttpResponse(json.dumps(l)) return HttpResponse(json.dumps(dic))# \u4f20\u5230\u524d\u7aef\u7684\u662fjson\u5b57\u7b26\u4e32,\u8981\u60f3\u4f7f\u7528,\u9700\u8981JSON.parse(data) //--------------------------------------------------- function testData() { $.ajax('ajax_get', { success: function (data) { console.log(data); console.log(typeof(data)); //console.log(data.name); //JSON.parse(data); //console.log(data.name); }, //dataType:\"json\", } )} \u6ce8\u89e3:Response Headers\u7684content Type\u4e3atext/html,\u6240\u4ee5\u8fd4\u56de\u7684\u662fString;\u4f46\u5982\u679c\u6211\u4eec\u60f3\u8981\u4e00\u4e2ajson\u5bf9\u8c61 \u8bbe\u5b9adataType:\"json\"\u5373\u53ef,\u76f8\u5f53\u4e8e\u544a\u8bc9ajax\u65b9\u6cd5\u628a\u670d\u52a1\u5668\u8fd4\u56de\u7684\u6570\u636e\u8f6c\u6210json\u5bf9\u8c61\u53d1\u9001\u5230\u524d\u7aef.\u7ed3\u679c\u4e3aobject \u5f53\u7136\uff0c return HttpResponse(json.dumps(a),content_type=\"application/json\") \u8fd9\u6837\u5c31\u4e0d\u9700\u8981\u8bbe\u5b9adataType:\"json\"\u4e86\u3002 content_type=\"application/json\"\u548ccontent_type=\"json\"\u662f\u4e00\u6837\u7684\uff01","title":"\u54cd\u5e94\u53c2\u6570"},{"location":"#csrf","text":"","title":"csrf\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020"},{"location":"#1_9","text":"$.ajaxSetup({ data: {csrfmiddlewaretoken: '{{ csrf_token }}' }, });","title":"\u65b9\u5f0f1"},{"location":"#2_6","text":"<form> {% csrf_token %} </form> <script> $.ajax({ ... data:{ \"csrfmiddlewaretoken\":$(\"[name='csrfmiddlewaretoken']\").val(); } }) </script>","title":"\u65b9\u5f0f2"},{"location":"#3_4","text":"<script src=\"{% static 'js/jquery.cookie.js' %}\"></script> $.ajax({ headers:{\"X-CSRFToken\":$.cookie('csrftoken')}, })","title":"\u65b9\u5f0f3\uff1a"},{"location":"#jsajax","text":"","title":"JS\u5b9e\u73b0\u7684ajax"},{"location":"#ajaxxmlhttprequest","text":"\u5176\u5b9eAJAX\u5c31\u662f\u5728Javascript\u4e2d\u591a\u6dfb\u52a0\u4e86\u4e00\u4e2a\u5bf9\u8c61\uff1aXMLHttpRequest\u5bf9\u8c61\u3002\u6240\u6709\u7684\u5f02\u6b65\u4ea4\u4e92\u90fd\u662f\u4f7f\u7528XMLHttpServlet\u5bf9\u8c61\u5b8c\u6210\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u53ea\u9700\u8981\u5b66\u4e60\u4e00\u4e2aJavascript\u7684\u65b0\u5bf9\u8c61\u5373\u53ef\u3002 var xmlHttp = new XMLHttpRequest()\uff1b\uff08\u5927\u591a\u6570\u6d4f\u89c8\u5668\u90fd\u652f\u6301DOM2\u89c4\u8303\uff09 \u6ce8\u610f\uff0c\u5404\u4e2a\u6d4f\u89c8\u5668\u5bf9XMLHttpRequest\u7684\u652f\u6301\u4e5f\u662f\u4e0d\u540c\u7684\uff01\u4e3a\u4e86\u5904\u7406\u6d4f\u89c8\u5668\u517c\u5bb9\u95ee\u9898\uff0c\u7ed9\u51fa\u4e0b\u9762\u65b9\u6cd5\u6765\u521b\u5efaXMLHttpRequest\u5bf9\u8c61\uff1a function createXMLHttpRequest() { var xmlHttp; // \u9002\u7528\u4e8e\u5927\u591a\u6570\u6d4f\u89c8\u5668\uff0c\u4ee5\u53caIE7\u548cIE\u66f4\u9ad8\u7248\u672c try{ xmlHttp = new XMLHttpRequest(); } catch (e) { // \u9002\u7528\u4e8eIE6 try { xmlHttp = new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e) { // \u9002\u7528\u4e8eIE5.5\uff0c\u4ee5\u53caIE\u66f4\u65e9\u7248\u672c try{ xmlHttp = new ActiveXObject(\"Microsoft.XMLHTTP\"); } catch (e){} } } return xmlHttp; }","title":"AJAX\u6838\u5fc3\uff08XMLHttpRequest\uff09"},{"location":"#_85","text":"","title":"\u4f7f\u7528\u6d41\u7a0b"},{"location":"#1-open","text":"\u5f53\u5f97\u5230XMLHttpRequest\u5bf9\u8c61\u540e\uff0c\u5c31\u53ef\u4ee5\u8c03\u7528\u8be5\u5bf9\u8c61\u7684open()\u65b9\u6cd5\u6253\u5f00\u4e0e\u670d\u52a1\u5668\u7684\u8fde\u63a5\u4e86\u3002open()\u65b9\u6cd5\u7684\u53c2\u6570\u5982\u4e0b\uff1a open(method, url, async)\uff1a method\uff1a\u8bf7\u6c42\u65b9\u5f0f\uff0c\u901a\u5e38\u4e3aGET\u6216POST\uff1b url\uff1a\u8bf7\u6c42\u7684\u670d\u52a1\u5668\u5730\u5740\uff0c\u4f8b\u5982\uff1a/ajaxdemo1/AServlet\uff0c\u82e5\u4e3aGET\u8bf7\u6c42\uff0c\u8fd8\u53ef\u4ee5\u5728URL\u540e\u8ffd\u52a0\u53c2\u6570\uff1b async\uff1a\u8fd9\u4e2a\u53c2\u6570\u53ef\u4ee5\u4e0d\u7ed9\uff0c\u9ed8\u8ba4\u503c\u4e3atrue\uff0c\u8868\u793a\u5f02\u6b65\u8bf7\u6c42\uff1b var xmlHttp = createXMLHttpRequest(); xmlHttp.open(\"GET\", \"/ajax_get/?a=1\", true);","title":"\u6b65\u9aa41:  \u6253\u5f00\u4e0e\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff08open\u65b9\u6cd5\uff09"},{"location":"#2_7","text":"\u5f53\u4f7f\u7528open\u6253\u5f00\u8fde\u63a5\u540e\uff0c\u5c31\u53ef\u4ee5\u8c03\u7528XMLHttpRequest\u5bf9\u8c61\u7684send()\u65b9\u6cd5\u53d1\u9001\u8bf7\u6c42\u4e86\u3002send()\u65b9\u6cd5\u7684\u53c2\u6570\u4e3aPOST\u8bf7\u6c42\u53c2\u6570\uff0c\u5373\u5bf9\u5e94HTTP\u534f\u8bae\u7684\u8bf7\u6c42\u4f53\u5185\u5bb9\uff0c\u82e5\u662fGET\u8bf7\u6c42\uff0c\u9700\u8981\u5728URL\u540e\u8fde\u63a5\u53c2\u6570\u3002 \u6ce8\u610f\uff1a\u82e5\u6ca1\u6709\u53c2\u6570\uff0c\u9700\u8981\u7ed9\u51fanull\u4e3a\u53c2\u6570\uff01\u82e5\u4e0d\u7ed9\u51fanull\u4e3a\u53c2\u6570\uff0c\u53ef\u80fd\u4f1a\u5bfc\u81f4FireFox\u6d4f\u89c8\u5668\u4e0d\u80fd\u6b63\u5e38\u53d1\u9001\u8bf7\u6c42\uff01 xmlHttp.send(null);","title":"\u6b65\u9aa42:  \u53d1\u9001\u8bf7\u6c42"},{"location":"#3_5","text":"\u5f53\u8bf7\u6c42\u53d1\u9001\u51fa\u53bb\u540e\uff0c\u670d\u52a1\u5668\u7aef\u5c31\u5f00\u59cb\u6267\u884c\u4e86\uff0c\u4f46\u670d\u52a1\u5668\u7aef\u7684\u54cd\u5e94\u8fd8\u6ca1\u6709\u63a5\u6536\u5230\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u6765\u63a5\u6536\u670d\u52a1\u5668\u7684\u54cd\u5e94\u3002 XMLHttpRequest\u5bf9\u8c61\u6709\u4e00\u4e2aonreadystatechange\u4e8b\u4ef6\uff0c\u5b83\u4f1a\u5728XMLHttpRequest\u5bf9\u8c61\u7684\u72b6\u6001\u53d1\u751f\u53d8\u5316\u65f6\u88ab\u8c03\u7528\u3002\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e0bXMLHttpRequest\u5bf9\u8c61\u76845\u79cd\u72b6\u6001\uff1a 0\uff1a\u521d\u59cb\u5316\u672a\u5b8c\u6210\u72b6\u6001\uff0c\u53ea\u662f\u521b\u5efa\u4e86XMLHttpRequest\u5bf9\u8c61\uff0c\u8fd8\u672a\u8c03\u7528open()\u65b9\u6cd5\uff1b 1\uff1a\u8bf7\u6c42\u5df2\u5f00\u59cb\uff0copen()\u65b9\u6cd5\u5df2\u8c03\u7528\uff0c\u4f46\u8fd8\u6ca1\u8c03\u7528send()\u65b9\u6cd5\uff1b 2\uff1a\u8bf7\u6c42\u53d1\u9001\u5b8c\u6210\u72b6\u6001\uff0csend()\u65b9\u6cd5\u5df2\u8c03\u7528\uff1b 3\uff1a\u5f00\u59cb\u8bfb\u53d6\u670d\u52a1\u5668\u54cd\u5e94\uff1b 4\uff1a\u8bfb\u53d6\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\u3002 onreadystatechange\u4e8b\u4ef6\u4f1a\u5728\u72b6\u6001\u4e3a1\u30012\u30013\u30014\u65f6\u5f15\u53d1\u3002 \u4e0b\u9762\u4ee3\u7801\u4f1a\u88ab\u6267\u884c\u56db\u6b21\uff01\u5bf9\u5e94XMLHttpRequest\u7684\u56db\u79cd\u72b6\u6001\uff01 xmlHttp.onreadystatechange = function() { alert('hello'); }; \u4f46\u901a\u5e38\u6211\u4eec\u53ea\u5173\u5fc3\u6700\u540e\u4e00\u79cd\u72b6\u6001\uff0c\u5373\u8bfb\u53d6\u670d\u52a1\u5668\u54cd\u5e94\u7ed3\u675f\u65f6\uff0c\u5ba2\u6237\u7aef\u624d\u4f1a\u505a\u51fa\u6539\u53d8\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7XMLHttpRequest\u5bf9\u8c61\u7684readyState\u5c5e\u6027\u6765\u5f97\u5230XMLHttpRequest\u5bf9\u8c61\u7684\u72b6\u6001\u3002 xmlHttp.onreadystatechange = function() { if(xmlHttp.readyState == 4) { alert('hello'); } }; \u5176\u5b9e\u6211\u4eec\u8fd8\u8981\u5173\u5fc3\u670d\u52a1\u5668\u54cd\u5e94\u7684\u72b6\u6001\u7801\u662f\u5426\u4e3a200\uff0c\u5176\u670d\u52a1\u5668\u54cd\u5e94\u4e3a404\uff0c\u6216500\uff0c\u90a3\u4e48\u5c31\u8868\u793a\u8bf7\u6c42\u5931\u8d25\u4e86\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7XMLHttpRequest\u5bf9\u8c61\u7684status\u5c5e\u6027\u5f97\u5230\u670d\u52a1\u5668\u7684\u72b6\u6001\u7801\u3002 \u6700\u540e\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u83b7\u53d6\u5230\u670d\u52a1\u5668\u54cd\u5e94\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u901a\u8fc7XMLHttpRequest\u5bf9\u8c61\u7684responseText\u5f97\u5230\u670d\u52a1\u5668\u54cd\u5e94\u5185\u5bb9\u3002 xmlHttp.onreadystatechange = function() { if(xmlHttp.readyState == 4 && xmlHttp.status == 200) { alert(xmlHttp.responseText); } };","title":"\u6b65\u9aa43:  \u63a5\u6536\u670d\u52a1\u5668\u54cd\u5e94"},{"location":"#if-post","text":"<1>\u9700\u8981\u8bbe\u7f6e\u8bf7\u6c42\u5934\uff1axmlHttp.setRequestHeader(\u201cContent-Type\u201d, \u201capplication/x-www-form-urlencoded\u201d)\uff1b\u6ce8\u610f :form\u8868\u5355\u4f1a\u9ed8\u8ba4\u8fd9\u4e2a\u952e\u503c\u5bf9\u4e0d\u8bbe\u5b9a\uff0cWeb\u670d\u52a1\u5668\u4f1a\u5ffd\u7565\u8bf7\u6c42\u4f53\u7684\u5185\u5bb9\u3002 <2>\u5728\u53d1\u9001\u65f6\u53ef\u4ee5\u6307\u5b9a\u8bf7\u6c42\u4f53\u4e86\uff1axmlHttp.send(\u201cusername=yuan&password=123\u201d)","title":"if \u53d1\u9001POST\u8bf7\u6c42"},{"location":"#jsajax_1","text":"/* \u521b\u5efaXMLHttpRequest\u5bf9\u8c61\uff1b \u8c03\u7528open()\u65b9\u6cd5\u6253\u5f00\u4e0e\u670d\u52a1\u5668\u7684\u8fde\u63a5\uff1b \u8c03\u7528send()\u65b9\u6cd5\u53d1\u9001\u8bf7\u6c42\uff1b \u4e3aXMLHttpRequest\u5bf9\u8c61\u6307\u5b9aonreadystatechange\u4e8b\u4ef6\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u5728 XMLHttpRequest\u76841\u30012\u30013\u30014\uff0c\u56db\u79cd\u72b6\u6001\u65f6\u88ab\u8c03\u7528\uff1b XMLHttpRequest\u5bf9\u8c61\u76845\u79cd\u72b6\u6001\uff0c\u901a\u5e38\u6211\u4eec\u53ea\u5173\u5fc34\u72b6\u6001\u3002 XMLHttpRequest\u5bf9\u8c61\u7684status\u5c5e\u6027\u8868\u793a\u670d\u52a1\u5668\u72b6\u6001\u7801\uff0c\u5b83\u53ea\u6709\u5728readyState\u4e3a4\u65f6\u624d\u80fd\u83b7\u53d6\u5230\u3002 XMLHttpRequest\u5bf9\u8c61\u7684responseText\u5c5e\u6027\u8868\u793a\u670d\u52a1\u5668\u54cd\u5e94\u5185\u5bb9\uff0c\u5b83\u53ea\u6709\u5728 readyState\u4e3a4\u65f6\u624d\u80fd\u83b7\u53d6\u5230\uff01 */ \u6d4b\u8bd5\u4ee3\u7801\uff1a <h1>AJAX</h1> <button onclick=\"send()\">\u6d4b\u8bd5</button> <div id=\"div1\"></div> <script> function createXMLHttpRequest() { try { return new XMLHttpRequest();//\u5927\u591a\u6570\u6d4f\u89c8\u5668 } catch (e) { try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e) { return new ActiveXObject(\"Microsoft.XMLHTTP\"); } } } function send() { var xmlHttp = createXMLHttpRequest(); xmlHttp.onreadystatechange = function() { if(xmlHttp.readyState == 4 && xmlHttp.status == 200) { var div = document.getElementById(\"div1\"); div.innerText = xmlHttp.responseText; div.textContent = xmlHttp.responseText; } }; xmlHttp.open(\"POST\", \"/ajax_post/\", true); //post: xmlHttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\"); xmlHttp.send(null); //post: xmlHttp.send(\"b=B\"); } </script> #--------------------------------views.py from django.views.decorators.csrf import csrf_exempt def login(request): print('hello ajax') return render(request,'index.html') @csrf_exempt \uff03csrf\u9632\u5fa1 def ajax_post(request): print('ok') return HttpResponse('helloyuanhao')","title":"JS\u5b9e\u73b0ajax\u5c0f\u7ed3"},{"location":"#_86","text":"","title":"\u5b9e\u4f8b\uff08\u7528\u6237\u540d\u662f\u5426\u5df2\u88ab\u6ce8\u518c\uff09"},{"location":"#71","text":"\u5728\u6ce8\u518c\u8868\u5355\u4e2d\uff0c\u5f53\u7528\u6237\u586b\u5199\u4e86\u7528\u6237\u540d\u540e\uff0c\u628a\u5149\u6807\u79fb\u5f00\u540e\uff0c\u4f1a\u81ea\u52a8\u5411\u670d\u52a1\u5668\u53d1\u9001\u5f02\u6b65\u8bf7\u6c42\u3002\u670d\u52a1\u5668\u8fd4\u56detrue\u6216false\uff0c\u8fd4\u56detrue\u8868\u793a\u8fd9\u4e2a\u7528\u6237\u540d\u5df2\u7ecf\u88ab\u6ce8\u518c\u8fc7\uff0c\u8fd4\u56defalse\u8868\u793a\u6ca1\u6709\u6ce8\u518c\u8fc7\u3002 \u5ba2\u6237\u7aef\u5f97\u5230\u670d\u52a1\u5668\u8fd4\u56de\u7684\u7ed3\u679c\u540e\uff0c\u786e\u5b9a\u662f\u5426\u5728\u7528\u6237\u540d\u6587\u672c\u6846\u540e\u663e\u793a\u201c\u7528\u6237\u540d\u5df2\u88ab\u6ce8\u518c\u201d\u7684\u9519\u8bef\u4fe1\u606f\uff01","title":"7.1\u3000\u529f\u80fd\u4ecb\u7ecd"},{"location":"#72","text":"\u9875\u9762\u4e2d\u7ed9\u51fa\u6ce8\u518c\u8868\u5355\uff1b \u5728username\u8868\u5355\u5b57\u6bb5\u4e2d\u6dfb\u52a0onblur\u4e8b\u4ef6\uff0c\u8c03\u7528send()\u65b9\u6cd5\uff1b send()\u65b9\u6cd5\u83b7\u53d6username\u8868\u5355\u5b57\u6bb5\u7684\u5185\u5bb9\uff0c\u5411\u670d\u52a1\u5668\u53d1\u9001\u5f02\u6b65\u8bf7\u6c42\uff0c\u53c2\u6570\u4e3ausername\uff1b django \u7684\u89c6\u56fe\u51fd\u6570\uff1a\u83b7\u53d6username\u53c2\u6570\uff0c\u5224\u65ad\u662f\u5426\u4e3a\u201cyuan\u201d\uff0c\u5982\u679c\u662f\u54cd\u5e94true\uff0c\u5426\u5219\u54cd\u5e94false \u53c2\u8003\u4ee3\u7801\uff1a <script type=\"text/javascript\"> function createXMLHttpRequest() { try { return new XMLHttpRequest(); } catch (e) { try { return new ActiveXObject(\"Msxml2.XMLHTTP\"); } catch (e) { return new ActiveXObject(\"Microsoft.XMLHTTP\"); } } } function send() { var xmlHttp = createXMLHttpRequest(); xmlHttp.onreadystatechange = function() { if(xmlHttp.readyState == 4 && xmlHttp.status == 200) { if(xmlHttp.responseText == \"true\") { document.getElementById(\"error\").innerText = \"\u7528\u6237\u540d\u5df2\u88ab\u6ce8\u518c\uff01\"; document.getElementById(\"error\").textContent = \"\u7528\u6237\u540d\u5df2\u88ab\u6ce8\u518c\uff01\"; } else { document.getElementById(\"error\").innerText = \"\"; document.getElementById(\"error\").textContent = \"\"; } } }; xmlHttp.open(\"POST\", \"/ajax_check/\", true, \"json\"); xmlHttp.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\"); var username = document.getElementById(\"username\").value; xmlHttp.send(\"username=\" + username); } </script> //--------------------------------------------------index.html <h1>\u6ce8\u518c</h1> <form action=\"\" method=\"post\"> \u7528\u6237\u540d\uff1a<input id=\"username\" type=\"text\" name=\"username\" onblur=\"send()\"/><span id=\"error\"></span><br/> \u5bc6\u3000\u7801\uff1a<input type=\"text\" name=\"password\"/><br/> <input type=\"submit\" value=\"\u6ce8\u518c\"/> </form> //--------------------------------------------------views.py from django.views.decorators.csrf import csrf_exempt def login(request): print('hello ajax') return render(request,'index.html') # return HttpResponse('helloyuanhao') @csrf_exempt def ajax_check(request): print('ok') username=request.POST.get('username',None) if username=='yuan': return HttpResponse('true') return HttpResponse('false')","title":"7.2\u3000\u6848\u4f8b\u5206\u6790"},{"location":"#jqueryserialize","text":"serialize() \u51fd\u6570\u7528\u4e8e \u5e8f\u5217\u5316\u4e00\u7ec4\u8868\u5355\u5143\u7d20\uff0c\u5c06\u8868\u5355\u5185\u5bb9\u7f16\u7801\u4e3a\u7528\u4e8e\u63d0\u4ea4\u7684\u5b57\u7b26\u4e32 \u3002 serialize() \u51fd\u6570\u5e38\u7528\u4e8e\u5c06\u8868\u5355\u5185\u5bb9\u5e8f\u5217\u5316\uff0c\u4ee5\u4fbf\u7528\u4e8eAJAX\u63d0\u4ea4\u3002 \u8be5\u51fd\u6570\u4e3b\u8981\u6839\u636e \u7528\u4e8e\u63d0\u4ea4 \u7684 \u6709\u6548 \u8868\u5355\u63a7\u4ef6\u7684name\u548cvalue\uff0c\u5c06\u5b83\u4eec\u62fc\u63a5\u4e3a\u4e00\u4e2a\u53ef\u76f4\u63a5\u7528\u4e8e\u8868\u5355\u63d0\u4ea4\u7684\u6587\u672c\u5b57\u7b26\u4e32\uff0c\u8be5\u5b57\u7b26\u4e32\u5df2\u7ecf\u8fc7\u6807\u51c6\u7684URL\u7f16\u7801\u5904\u7406(\u5b57\u7b26\u96c6\u7f16\u7801\u4e3aUTF-8)\u3002 \u8be5\u51fd\u6570\u4e0d\u4f1a\u5e8f\u5217\u5316\u4e0d\u9700\u8981\u63d0\u4ea4\u7684\u8868\u5355\u63a7\u4ef6\uff0c\u8fd9\u548c\u5e38\u89c4\u7684\u8868\u5355\u63d0\u4ea4\u884c\u4e3a\u662f\u4e00\u81f4\u7684\u3002\u4f8b\u5982\uff1a\u4e0d\u5728 \u6807\u7b7e\u5185\u7684\u8868\u5355\u63a7\u4ef6\u4e0d\u4f1a\u88ab\u63d0\u4ea4\u3001\u6ca1\u6709name\u5c5e\u6027\u7684\u8868\u5355\u63a7\u4ef6\u4e0d\u4f1a\u88ab\u63d0\u4ea4\u3001\u5e26\u6709disabled\u5c5e\u6027\u7684\u8868\u5355\u63a7\u4ef6\u4e0d\u4f1a\u88ab\u63d0\u4ea4\u3001\u6ca1\u6709\u88ab\u9009\u4e2d\u7684\u8868\u5355\u63a7\u4ef6\u4e0d\u4f1a\u88ab\u63d0\u4ea4\u3002 \u4e0e\u5e38\u89c4\u8868\u5355\u63d0\u4ea4\u4e0d\u4e00\u6837\u7684\u662f\uff1a\u5e38\u89c4\u8868\u5355\u4e00\u822c\u4f1a\u63d0\u4ea4\u5e26\u6709name\u7684\u6309\u94ae\u63a7\u4ef6\uff0c\u800cserialize()\u51fd\u6570\u4e0d\u4f1a\u5e8f\u5217\u5316\u5e26\u6709name\u7684\u6309\u94ae\u63a7\u4ef6\u3002\u66f4\u591a\u8be6\u60c5\u8bf7\u70b9\u51fb\u8fd9\u91cc\u3002","title":"jQuery.serialize()"},{"location":"#_87","text":"jQuery 1.0 \u65b0\u589e\u8be5\u51fd\u6570\u3002 jQueryObject.serialize( )","title":"\u8bed\u6cd5"},{"location":"#_88","text":"serialize() \u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e3aString\u7c7b\u578b\uff0c\u8fd4\u56de\u5c06\u8868\u5355\u5143\u7d20\u7f16\u7801\u540e\u7684\u53ef\u7528\u4e8e\u8868\u5355\u63d0\u4ea4\u7684\u6587\u672c\u5b57\u7b26\u4e32\u3002 \u8bf7\u53c2\u8003\u4e0b\u9762\u8fd9\u6bb5\u521d\u59cbHTML\u4ee3\u7801\uff1a <form name=\"myForm\" action=\"http://www.365mini.com\" method=\"post\"> <input name=\"uid\" type=\"hidden\" value=\"1\" /> <input name=\"username\" type=\"text\" value=\"\u5f20\u4e09\" /> <input name=\"password\" type=\"text\" value=\"123456\" /> <select name=\"grade\" id=\"grade\"> <option value=\"1\">\u4e00\u5e74\u7ea7</option> <option value=\"2\">\u4e8c\u5e74\u7ea7</option> <option value=\"3\" selected=\"selected\">\u4e09\u5e74\u7ea7</option> <option value=\"4\">\u56db\u5e74\u7ea7</option> <option value=\"5\">\u4e94\u5e74\u7ea7</option> <option value=\"6\">\u516d\u5e74\u7ea7</option> </select> <input name=\"sex\" type=\"radio\" checked=\"checked\" value=\"1\" />\u7537 <input name=\"sex\" type=\"radio\" value=\"0\" />\u5973 <input name=\"hobby\" type=\"checkbox\" checked=\"checked\" value=\"1\" />\u6e38\u6cf3 <input name=\"hobby\" type=\"checkbox\" checked=\"checked\" value=\"2\" />\u8dd1\u6b65 <input name=\"hobby\" type=\"checkbox\" value=\"3\" />\u7fbd\u6bdb\u7403 <input name=\"btn\" id=\"btn\" type=\"button\" value=\"\u70b9\u51fb\" /> \u5bf9 \u5143\u7d20\u8fdb\u884c\u5e8f\u5217\u5316\u53ef\u4ee5\u76f4\u63a5\u5e8f\u5217\u5316\u5176\u5185\u90e8\u7684\u6240\u6709\u8868\u5355\u5143\u7d20\u3002 // \u5e8f\u5217\u5316<form>\u5185\u7684\u6240\u6709\u8868\u5355\u5143\u7d20 // \u5e8f\u5217\u5316\u540e\u7684\u7ed3\u679c\uff1auid=1&username=%E5%BC%A0%E4%B8%89&password=123456&grade=3&sex=1&hobby=1&hobby=2 alert( $(\"form\").serialize() ); \u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5bf9\u90e8\u5206\u8868\u5355\u5143\u7d20\u8fdb\u884c\u5e8f\u5217\u5316\u3002 // \u5e8f\u5217\u5316\u6240\u6709\u7684text\u3001select\u3001checkbox\u8868\u5355\u5143\u7d20 // \u5e8f\u5217\u5316\u540e\u7684\u7ed3\u679c\uff1ausername=%E5%BC%A0%E4%B8%89&password=123456&grade=3&hobby=1&hobby=2 alert( $(\":text, select, :checkbox\").serialize() ); serialize() \u51fd\u6570\u901a\u5e38\u7528\u4e8e\u5c06\u8868\u5355\u5185\u5bb9\u5e8f\u5217\u5316\uff0c\u4ee5\u4fbf\u901a\u8fc7AJAX\u65b9\u5f0f\u63d0\u4ea4\u3002 $(\"#btn\").click( function(){ // \u5c06\u5f53\u524d\u8868\u5355\u5185\u5bb9\u4ee5POST\u8bf7\u6c42\u7684AJAX\u65b9\u5f0f\u63d0\u4ea4\u5230\"http://www.365mini.com\" $.post( \"http://www.365mini.com\", $(\"form\").serialize(), function( data, textStatus, jqXHR ){ alert( \"AJAX\u63d0\u4ea4\u6210\u529f!\" ); } ); } );","title":"\u8fd4\u56de\u503c"},{"location":"#_89","text":"","title":"\u4e0a\u4f20\u6587\u4ef6"},{"location":"#form_4","text":"","title":"form\u8868\u5355\u4e0a\u4f20\u6587\u4ef6"},{"location":"#html","text":"<h3>form\u8868\u5355\u4e0a\u4f20\u6587\u4ef6</h3> <form action=\"/upload_file/\" method=\"post\" enctype=\"multipart/form-data\"> <p><input type=\"file\" name=\"upload_file_form\"></p> <input type=\"submit\"> </form>","title":"html"},{"location":"#view_2","text":"def index(request): return render(request,\"index.html\") def upload_file(request): print(\"FILES:\",request.FILES) print(\"POST:\",request.POST) return HttpResponse(\"\u4e0a\u4f20\u6210\u529f!\")","title":"view"},{"location":"#ajaxformdata","text":"FormData\u662f\u4ec0\u4e48\u5462\uff1f XMLHttpRequest Level 2\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u63a5\u53e3 FormData .\u5229\u7528 FormData\u5bf9\u8c61 ,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7JavaScript\u7528\u4e00\u4e9b\u952e\u503c\u5bf9\u6765\u6a21\u62df\u4e00\u7cfb\u5217\u8868\u5355\u63a7\u4ef6,\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528XMLHttpRequest\u7684 send() \u65b9\u6cd5\u6765\u5f02\u6b65\u7684\u63d0\u4ea4\u8fd9\u4e2a\"\u8868\u5355\".\u6bd4\u8d77\u666e\u901a\u7684ajax,\u4f7f\u7528 FormData \u7684\u6700\u5927\u4f18\u70b9\u5c31\u662f\u6211\u4eec\u53ef\u4ee5\u5f02\u6b65\u4e0a\u4f20\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6. \u6240\u6709\u4e3b\u6d41\u6d4f\u89c8\u5668\u7684\u8f83\u65b0\u7248\u672c\u90fd\u5df2\u7ecf\u652f\u6301\u8fd9\u4e2a\u5bf9\u8c61\u4e86\uff0c\u6bd4\u5982Chrome 7+\u3001Firefox 4+\u3001IE 10+\u3001Opera 12+\u3001Safari 5+\u3002","title":"Ajax(FormData)"},{"location":"#html_1","text":"<h3>Ajax\u4e0a\u4f20\u6587\u4ef6</h3> <p><input type=\"text\" name=\"username\" id=\"username\" placeholder=\"username\"></p> <p><input type=\"file\" name=\"upload_file_ajax\" id=\"upload_file_ajax\"></p> <button id=\"upload_button\">\u63d0\u4ea4</button> {#\u6ce8\u610fbutton\u6807\u7b7e\u4e0d\u8981\u7528\u5728form\u8868\u5355\u4e2d\u4f7f\u7528#} <script> $(\"#upload_button\").click(function(){ var username=$(\"#username\").val(); var upload_file=$(\"#upload_file_ajax\")[0].files[0]; var formData=new FormData(); formData.append(\"username\",username); formData.append(\"upload_file_ajax\",upload_file); $.ajax({ url:\"/upload_file/\", type:\"POST\", data:formData, contentType:false, processData:false, success:function(){ alert(\"\u4e0a\u4f20\u6210\u529f!\") } }); }) </script>","title":"html"},{"location":"#views","text":"def index(request): return render(request,\"index.html\") def upload_file(request): print(\"FILES:\",request.FILES) print(\"POST:\",request.POST) return HttpResponse(\"\u4e0a\u4f20\u6210\u529f!\")","title":"views"},{"location":"#ajax_7","text":"","title":"\u4f2a\u9020Ajax\u4e0a\u4f20\u6587\u4ef6"},{"location":"#iframe","text":"< iframe >\u6807\u7b7e\u89c4\u5b9a\u4e00\u4e2a\u5185\u8054\u6846\u67b6\u3002 \u4e00\u4e2a\u5185\u8054\u6846\u67b6\u88ab\u7528\u6765\u5728\u5f53\u524d HTML \u6587\u6863\u4e2d\u5d4c\u5165\u53e6\u4e00\u4e2a\u6587\u6863\u3002 \u793a\u4f8b\uff1a <iframe src=\"http://www.baidu.com\" width=\"1000px\" height=\"600px\"></iframe>","title":"iframe\u6807\u7b7e"},{"location":"#iframeform","text":"<h3>\u4f2a\u9020Ajax\u4e0a\u4f20\u6587\u4ef6</h3> <form action=\"/upload_file/\" method=\"post\" id=\"form2\" target=\"ifr\" enctype=\"multipart/form-data\"> <p> <iframe name=\"ifr\" id=\"ifr\"></iframe></p> <p><input type=\"file\" name=\"upload_file\"></p> <p><input type=\"text\" name=\"user\"></p> <input type=\"button\" value=\"\u63d0\u4ea4\" id=\"submitBtn\"> </form> <script> $(\"#submitBtn\").click(function(){ $(\"#ifr\").load(iframeLoaded); $(\"#form2\").submit(); }); function iframeLoaded(){ alert(123) } </script> views def index(request): return render(request,\"index.html\") def upload_file(request): print(\"FILES:\",request.FILES) print(\"POST:\",request.POST) return HttpResponse(\"\u4e0a\u4f20\u6210\u529f!\")","title":"iframe+form"},{"location":"#jsonp","text":"","title":"\u540c\u6e90\u7b56\u7565\u4e0eJsonp"},{"location":"#_90","text":"\u540c\u6e90\u7b56\u7565\uff08Same origin policy\uff09\u662f\u4e00\u79cd\u7ea6\u5b9a\uff0c\u5b83\u662f\u6d4f\u89c8\u5668\u6700\u6838\u5fc3\u4e5f\u6700\u57fa\u672c\u7684\u5b89\u5168\u529f\u80fd\uff0c\u5982\u679c\u7f3a\u5c11\u4e86\u540c\u6e90\u7b56\u7565\uff0c\u5219\u6d4f\u89c8\u5668\u7684\u6b63\u5e38\u529f\u80fd\u53ef\u80fd\u90fd\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\u53ef\u4ee5\u8bf4Web\u662f\u6784\u5efa\u5728\u540c\u6e90\u7b56\u7565\u57fa\u7840\u4e4b\u4e0a\u7684\uff0c\u6d4f\u89c8\u5668\u53ea\u662f\u9488\u5bf9\u540c\u6e90\u7b56\u7565\u7684\u4e00\u79cd\u5b9e\u73b0\u3002 \u540c\u6e90\u7b56\u7565\uff0c\u5b83\u662f\u7531Netscape\u63d0\u51fa\u7684\u4e00\u4e2a\u8457\u540d\u7684\u5b89\u5168\u7b56\u7565\u3002\u73b0\u5728\u6240\u6709\u652f\u6301JavaScript \u7684\u6d4f\u89c8\u5668\u90fd\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u7b56\u7565\u3002\u6240\u8c13\u540c\u6e90\u662f\u6307\uff0c\u57df\u540d\uff0c\u534f\u8bae\uff0c\u7aef\u53e3\u76f8\u540c\u3002\u5f53\u4e00\u4e2a\u6d4f\u89c8\u5668\u7684\u4e24\u4e2atab\u9875\u4e2d\u5206\u522b\u6253\u5f00\u6765 \u767e\u5ea6\u548c\u8c37\u6b4c\u7684\u9875\u9762\u5f53\u6d4f\u89c8\u5668\u7684\u767e\u5ea6tab\u9875\u6267\u884c\u4e00\u4e2a\u811a\u672c\u7684\u65f6\u5019\u4f1a\u68c0\u67e5\u8fd9\u4e2a\u811a\u672c\u662f\u5c5e\u4e8e\u54ea\u4e2a\u9875\u9762\u7684\uff0c\u5373\u68c0\u67e5\u662f\u5426\u540c\u6e90\uff0c\u53ea\u6709\u548c\u767e\u5ea6\u540c\u6e90\u7684\u811a\u672c\u624d\u4f1a\u88ab\u6267\u884c\u3002\u5982\u679c\u975e\u540c\u6e90\uff0c\u90a3\u4e48\u5728\u8bf7\u6c42\u6570\u636e\u65f6\uff0c\u6d4f\u89c8\u5668\u4f1a\u5728\u63a7\u5236\u53f0\u4e2d\u62a5\u4e00\u4e2a\u5f02\u5e38\uff0c\u63d0\u793a\u62d2\u7edd\u8bbf\u95ee\u3002","title":"\u540c\u6e90\u7b56\u7565"},{"location":"#_91","text":"\u9879\u76ee1: ==================================http://127.0.0.1:8001\u9879\u76ee\u7684index <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"http://code.jquery.com/jquery-latest.js\"></script> </head> <body> <button>ajax</button> {% csrf_token %} <script> $(\"button\").click(function(){ $.ajax({ url:\"http://127.0.0.1:7766/SendAjax/\", type:\"POST\", data:{\"username\":\"yuan\",\"csrfmiddlewaretoken\":$(\"[name='csrfmiddlewaretoken']\").val()}, success:function(data){ alert(123); alert(data) } }) }) </script> </body> </html> ==================================http://127.0.0.1:8001\u9879\u76ee\u7684views def index(request): return render(request,\"index.html\") def ajax(request): import json print(request.POST,\"+++++++++++\") return HttpResponse(json.dumps(\"hello\")) \u9879\u76ee2: ==================================http://127.0.0.1:8001\u9879\u76ee\u7684index <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <script src=\"http://code.jquery.com/jquery-latest.js\"></script> </head> <body> <button>ajax</button> {% csrf_token %} <script> $(\"button\").click(function(){ $.ajax({ url:\"http://127.0.0.1:7766/SendAjax/\", type:\"POST\", data:{\"username\":\"yuan\",\"csrfmiddlewaretoken\":$(\"[name='csrfmiddlewaretoken']\").val()}, success:function(data){ alert(123); alert(data) } }) }) </script> </body> </html> ==================================http://127.0.0.1:8001\u9879\u76ee\u7684views def index(request): return render(request,\"index.html\") def ajax(request): import json print(request.POST,\"+++++++++++\") return HttpResponse(json.dumps(\"hello\")) \u5f53\u70b9\u51fb\u9879\u76ee1\u7684\u6309\u94ae\u65f6\uff0c\u53d1\u9001\u4e86\u8bf7\u6c42\uff0c\u4f46\u662f\u4f1a\u53d1\u73b0\u62a5\u9519\u5982\u4e0b\uff1a \u5df2\u62e6\u622a\u8de8\u6e90\u8bf7\u6c42\uff1a\u540c\u6e90\u7b56\u7565\u7981\u6b62\u8bfb\u53d6\u4f4d\u4e8e http://127.0.0.1:7766/SendAjax/ \u7684\u8fdc\u7a0b\u8d44\u6e90\u3002 \uff08\u539f\u56e0\uff1aCORS \u5934\u7f3a\u5c11 'Access-Control-Allow-Origin'\uff09\u3002 \u4f46\u662f\u6ce8\u610f\uff0c\u9879\u76ee2\u4e2d\u7684\u8bbf\u95ee\u5df2\u7ecf\u53d1\u751f\u4e86\uff0c\u8bf4\u660e\u662f\u6d4f\u89c8\u5668\u5bf9\u975e\u540c\u6e90\u8bf7\u6c42\u8fd4\u56de\u7684\u7ed3\u679c\u505a\u4e86\u62e6\u622a\u3002","title":"\u793a\u4f8b\uff1a"},{"location":"#jsonp_1","text":"jsonp\u662fjson\u7528\u6765\u8de8\u57df\u7684\u4e00\u4e2a\u4e1c\u897f\u3002\u539f\u7406\u662f\u901a\u8fc7script\u6807\u7b7e\u7684\u8de8\u57df\u7279\u6027\u6765\u7ed5\u8fc7\u540c\u6e90\u7b56\u7565\u3002 \u601d\u8003\uff1a\u8fd9\u7b97\u600e\u4e48\u56de\u4e8b\uff1f <script src=\"http://code.jquery.com/jquery-latest.js\"></script> \u501f\u52a9script\u6807\u7b7e\uff0c\u5b9e\u73b0\u8de8\u57df\u8bf7\u6c42\uff0c\u793a\u4f8b\uff1a # =============================http://127.0.0.1:8001/index <button>ajax</button> {% csrf_token %} <script> function func(name){ alert(name) } </script> <script src=\"http://127.0.0.1:7766/SendAjax/\"></script> # =============================http://127.0.0.1:8002/ from django.views.decorators.csrf import csrf_exempt @csrf_exempt def SendAjax(request): import json print(\"++++++++\") # dic={\"k1\":\"v1\"} return HttpResponse(\"func('yuan')\") # return HttpResponse(\"func('%s')\"%json.dumps(dic)) \u8fd9\u5176\u5b9e\u5c31\u662fJSONP\u7684\u7b80\u5355\u5b9e\u73b0\u6a21\u5f0f\uff0c\u6216\u8005\u8bf4\u662fJSONP\u7684\u539f\u578b\uff1a\u521b\u5efa\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u7136\u540e\u5728\u8fdc\u7a0b\u670d\u52a1\u4e0a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u5e76\u4e14\u5c06JSON \u6570\u636e\u5f62\u5f0f\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\uff0c\u5b8c\u6210\u56de\u8c03\u3002 \u5c06JSON\u6570\u636e\u586b\u5145\u8fdb\u56de\u8c03\u51fd\u6570\uff0c\u8fd9\u5c31\u662fJSONP\u7684JSON+Padding\u7684\u542b\u4e49\u3002 \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u8fd9\u4e2ascript\u6807\u7b7e\u80fd\u591f\u52a8\u6001\u7684\u8c03\u7528\uff0c\u800c\u4e0d\u662f\u50cf\u4e0a\u9762\u56e0\u4e3a\u56fa\u5b9a\u5728html\u91cc\u9762\u6240\u4ee5\u6ca1\u7b49\u9875\u9762\u663e\u793a\u5c31\u6267\u884c\u4e86\uff0c\u5f88\u4e0d\u7075\u6d3b\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7javascript\u52a8\u6001\u7684\u521b\u5efascript\u6807\u7b7e\uff0c\u8fd9\u6837\u6211\u4eec\u5c31\u53ef\u4ee5\u7075\u6d3b\u8c03\u7528\u8fdc\u7a0b\u670d\u52a1\u4e86\u3002 <button onclick=\"f()\">sendAjax</button> <script> function addScriptTag(src){ var script = document.createElement('script'); script.setAttribute(\"type\",\"text/javascript\"); script.src = src; document.body.appendChild(script); document.body.removeChild(script); } function func(name){ alert(\"hello\"+name) } function f(){ addScriptTag(\"http://127.0.0.1:7766/SendAjax/\") } </script> \u4e3a\u4e86\u66f4\u52a0\u7075\u6d3b\uff0c\u73b0\u5728\u5c06\u4f60\u81ea\u5df1\u5728\u5ba2\u6237\u7aef\u5b9a\u4e49\u7684\u56de\u8c03\u51fd\u6570\u7684\u51fd\u6570\u540d\u4f20\u9001\u7ed9\u670d\u52a1\u7aef\uff0c\u670d\u52a1\u7aef\u5219\u4f1a\u8fd4\u56de\u4ee5\u4f60\u5b9a\u4e49\u7684\u56de\u8c03\u51fd\u6570\u540d\u7684\u65b9\u6cd5\uff0c\u5c06\u83b7\u53d6\u7684json\u6570\u636e\u4f20\u5165\u8fd9\u4e2a\u65b9\u6cd5\u5b8c\u6210\u56de\u8c03\uff1a \u5c068001\u7684f()\u6539\u5199\u4e3a\uff1a function f(){ addScriptTag(\"http://127.0.0.1:7766/SendAjax/?callbacks=func\") } 8002\u7684views\u6539\u4e3a\uff1a def SendAjax(request): import json dic={\"k1\":\"v1\"} print(\"callbacks:\",request.GET.get(\"callbacks\")) callbacks=request.GET.get(\"callbacks\") return HttpResponse(\"%s('%s')\"%(callbacks,json.dumps(dic)))","title":"Jsonp"},{"location":"#jqueryjsonp","text":"","title":"jQuery\u5bf9JSONP\u7684\u5b9e\u73b0"},{"location":"#getjson","text":"jQuery\u6846\u67b6\u4e5f\u5f53\u7136\u652f\u6301JSONP\uff0c\u53ef\u4ee5\u4f7f\u7528$.getJSON(url,[data],[callback])\u65b9\u6cd5 8001\u7684html\u6539\u4e3a\uff1a <button onclick=\"f()\">sendAjax</button> <script> function f(){ $.getJSON(\"http://127.0.0.1:7766/SendAjax/?callbacks=?\",function(arg){ alert(\"hello\"+arg) }); } </script> 8002\u7684views\u4e0d\u6539\u52a8\u3002 \u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u8981\u6ce8\u610f\u7684\u662f\u5728url\u7684\u540e\u9762\u5fc5\u987b\u6dfb\u52a0\u4e00\u4e2acallback\u53c2\u6570\uff0c\u8fd9\u6837getJSON\u65b9\u6cd5\u624d\u4f1a\u77e5\u9053\u662f\u7528JSONP\u65b9\u5f0f\u53bb\u8bbf\u95ee\u670d\u52a1\uff0ccallback\u540e\u9762\u7684\u90a3\u4e2a\u95ee\u53f7\u662f\u5185\u90e8\u81ea\u52a8\u751f\u6210\u7684\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u540d\u3002 \u6b64\u5916\uff0c\u5982\u679c\u8bf4\u6211\u4eec\u60f3\u6307\u5b9a\u81ea\u5df1\u7684\u56de\u8c03\u51fd\u6570\u540d\uff0c\u6216\u8005\u8bf4\u670d\u52a1\u4e0a\u89c4\u5b9a\u4e86\u56fa\u5b9a\u56de\u8c03\u51fd\u6570\u540d\u8be5\u600e\u4e48\u529e\u5462\uff1f\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528$.ajax\u65b9\u6cd5\u6765\u5b9e\u73b0","title":"getJSON"},{"location":"#ajax_8","text":"8001\u7684html\u6539\u4e3a\uff1a <script> function f(){ $.ajax({ url:\"http://127.0.0.1:7766/SendAjax/\", dataType:\"jsonp\", jsonp: 'callbacks', jsonpCallback:\"SayHi\" }); } function SayHi(arg){ alert(arg); } </script> 8002\u7684views\u4e0d\u6539\u52a8\u3002 \u5f53\u7136\uff0c\u6700\u7b80\u5355\u7684\u5f62\u5f0f\u8fd8\u662f\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\uff1a <script> function f(){ $.ajax({ url:\"http://127.0.0.1:7766/SendAjax/\", dataType:\"jsonp\", //\u5fc5\u987b\u6709\uff0c\u544a\u8bc9server\uff0c\u8fd9\u6b21\u8bbf\u95ee\u8981\u7684\u662f\u4e00\u4e2ajsonp\u7684\u7ed3\u679c\u3002 jsonp: 'callbacks', //jQuery\u5e2e\u52a9\u968f\u673a\u751f\u6210\u7684\uff1acallbacks=\"wner\" success:function(data){ alert(\"hi \"+data) } }); } </script> jsonp: 'callbacks'\u5c31\u662f\u5b9a\u4e49\u4e00\u4e2a\u5b58\u653e\u56de\u8c03\u51fd\u6570\u7684\u952e\uff0cjsonpCallback\u662f\u524d\u7aef\u5b9a\u4e49\u597d\u7684\u56de\u8c03\u51fd\u6570\u65b9\u6cd5\u540d'SayHi'\uff0cserver\u7aef\u63a5\u53d7callback\u952e\u5bf9\u5e94\u503c\u540e\u5c31\u53ef\u4ee5\u5728\u5176\u4e2d\u586b\u5145\u6570\u636e\u6253\u5305\u8fd4\u56de\u4e86; jsonpCallback\u53c2\u6570\u53ef\u4ee5\u4e0d\u5b9a\u4e49\uff0cjquery\u4f1a\u81ea\u52a8\u5b9a\u4e49\u4e00\u4e2a\u968f\u673a\u540d\u53d1\u8fc7\u53bb\uff0c\u90a3\u524d\u7aef\u5c31\u5f97\u7528\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u5bf9\u5e94\u6570\u636e\u4e86\u3002\u5229\u7528jQuery\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5b9e\u73b0JSONP\u6765\u8fdb\u884c\u8de8\u57df\u8bbf\u95ee\u3002\u3000\u3000 \u6ce8\u610f JSONP\u4e00\u5b9a\u662fGET\u8bf7\u6c42","title":"$.ajax"},{"location":"#_92","text":"<input type=\"button\" onclick=\"AjaxRequest()\" value=\"\u8de8\u57dfAjax\" /> <div id=\"container\"></div> <script type=\"text/javascript\"> function AjaxRequest() { $.ajax({ url: 'http://www.jxntv.cn/data/jmd-jxtv2.html?callback=list&_=1454376870403', type: 'GET', dataType: 'jsonp', jsonp: 'callback', jsonpCallback: 'list', success: function (data) { $.each(data.data,function(i){ var item = data.data[i]; var str = \"<p>\"+ item.week +\"</p>\"; $('#container').append(str); $.each(item.list,function(j){ var temp = \"<a href='\" + item.list[j].link +\"'>\" + item.list[j].name +\" </a><br/>\"; $('#container').append(temp); }); $('#container').append(\"<hr/>\"); }) } }); } </script>","title":"\u5e94\u7528"},{"location":"#cors","text":"","title":"CORS"},{"location":"#_93","text":"CORS\u9700\u8981\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u540c\u65f6\u652f\u6301\u3002\u76ee\u524d\uff0c\u6240\u6709\u6d4f\u89c8\u5668\u90fd\u652f\u6301\u8be5\u529f\u80fd\uff0cIE\u6d4f\u89c8\u5668\u4e0d\u80fd\u4f4e\u4e8eIE10\u3002 \u6574\u4e2aCORS\u901a\u4fe1\u8fc7\u7a0b\uff0c\u90fd\u662f\u6d4f\u89c8\u5668\u81ea\u52a8\u5b8c\u6210\uff0c\u4e0d\u9700\u8981\u7528\u6237\u53c2\u4e0e\u3002\u5bf9\u4e8e\u5f00\u53d1\u8005\u6765\u8bf4\uff0cCORS\u901a\u4fe1\u4e0e\u540c\u6e90\u7684AJAX\u901a\u4fe1\u6ca1\u6709\u5dee\u522b\uff0c\u4ee3\u7801\u5b8c\u5168\u4e00\u6837\u3002\u6d4f\u89c8\u5668\u4e00\u65e6\u53d1\u73b0AJAX\u8bf7\u6c42\u8de8\u6e90\uff0c\u5c31\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e9b\u9644\u52a0\u7684\u5934\u4fe1\u606f\uff0c\u6709\u65f6\u8fd8\u4f1a\u591a\u51fa\u4e00\u6b21\u9644\u52a0\u7684\u8bf7\u6c42\uff0c\u4f46\u7528\u6237\u4e0d\u4f1a\u6709\u611f\u89c9\u3002 \u56e0\u6b64\uff0c\u5b9e\u73b0CORS\u901a\u4fe1\u7684\u5173\u952e\u662f\u670d\u52a1\u5668\u3002\u53ea\u8981\u670d\u52a1\u5668\u5b9e\u73b0\u4e86CORS\u63a5\u53e3\uff0c\u5c31\u53ef\u4ee5\u8de8\u6e90\u901a\u4fe1\u3002","title":"\u4e00\u3001\u7b80\u4ecb"},{"location":"#_94","text":"\u6d4f\u89c8\u5668\u5c06CORS\u8bf7\u6c42\u5206\u6210\u4e24\u7c7b\uff1a\u7b80\u5355\u8bf7\u6c42\uff08simple request\uff09\u548c\u975e\u7b80\u5355\u8bf7\u6c42\uff08not-so-simple request\uff09\u3002 \u53ea\u8981\u540c\u65f6\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u5927\u6761\u4ef6\uff0c\u5c31\u5c5e\u4e8e\u7b80\u5355\u8bf7\u6c42\u3002 \uff081) \u8bf7\u6c42\u65b9\u6cd5\u662f\u4ee5\u4e0b\u4e09\u79cd\u65b9\u6cd5\u4e4b\u4e00\uff1a HEAD GET POST \uff082\uff09HTTP\u7684\u5934\u4fe1\u606f\u4e0d\u8d85\u51fa\u4ee5\u4e0b\u51e0\u79cd\u5b57\u6bb5\uff1a Accept Accept-Language Content-Language Last-Event-ID Content-Type\uff1a\u53ea\u9650\u4e8e\u4e09\u4e2a\u503capplication/x-www-form-urlencoded\u3001multipart/form-data\u3001text/plain \u51e1\u662f\u4e0d\u540c\u65f6\u6ee1\u8db3\u4e0a\u9762\u4e24\u4e2a\u6761\u4ef6\uff0c\u5c31\u5c5e\u4e8e\u975e\u7b80\u5355\u8bf7\u6c42\u3002 \u6d4f\u89c8\u5668\u5bf9\u8fd9\u4e24\u79cd\u8bf7\u6c42\u7684\u5904\u7406\uff0c\u662f\u4e0d\u4e00\u6837\u7684\u3002 * \u7b80\u5355\u8bf7\u6c42\u548c\u975e\u7b80\u5355\u8bf7\u6c42\u7684\u533a\u522b\uff1f \u7b80\u5355\u8bf7\u6c42\uff1a\u4e00\u6b21\u8bf7\u6c42 \u975e\u7b80\u5355\u8bf7\u6c42\uff1a\u4e24\u6b21\u8bf7\u6c42\uff0c\u5728\u53d1\u9001\u6570\u636e\u4e4b\u524d\u4f1a\u5148\u53d1\u4e00\u6b21\u8bf7\u6c42\u7528\u4e8e\u505a\u201c\u9884\u68c0\u201d\uff0c\u53ea\u6709\u201c\u9884\u68c0\u201d\u901a\u8fc7\u540e\u624d\u518d\u53d1\u9001\u4e00\u6b21\u8bf7\u6c42\u7528\u4e8e\u6570\u636e\u4f20\u8f93\u3002 * \u5173\u4e8e\u201c\u9884\u68c0\u201d - \u8bf7\u6c42\u65b9\u5f0f\uff1aOPTIONS - \u201c\u9884\u68c0\u201d\u5176\u5b9e\u505a\u68c0\u67e5\uff0c\u68c0\u67e5\u5982\u679c\u901a\u8fc7\u5219\u5141\u8bb8\u4f20\u8f93\u6570\u636e\uff0c\u68c0\u67e5\u4e0d\u901a\u8fc7\u5219\u4e0d\u518d\u53d1\u9001\u771f\u6b63\u60f3\u8981\u53d1\u9001\u7684\u6d88\u606f - \u5982\u4f55\u201c\u9884\u68c0\u201d => \u5982\u679c\u590d\u6742\u8bf7\u6c42\u662fPUT\u7b49\u8bf7\u6c42\uff0c\u5219\u670d\u52a1\u7aef\u9700\u8981\u8bbe\u7f6e\u5141\u8bb8\u67d0\u8bf7\u6c42\uff0c\u5426\u5219\u201c\u9884\u68c0\u201d\u4e0d\u901a\u8fc7 Access-Control-Request-Method => \u5982\u679c\u590d\u6742\u8bf7\u6c42\u8bbe\u7f6e\u4e86\u8bf7\u6c42\u5934\uff0c\u5219\u670d\u52a1\u7aef\u9700\u8981\u8bbe\u7f6e\u5141\u8bb8\u67d0\u8bf7\u6c42\u5934\uff0c\u5426\u5219\u201c\u9884\u68c0\u201d\u4e0d\u901a\u8fc7 Access-Control-Request-Headers \u652f\u6301\u8de8\u57df\uff0c\u7b80\u5355\u8bf7\u6c42 \u670d\u52a1\u5668\u8bbe\u7f6e\u54cd\u5e94\u5934\uff1aAccess-Control-Allow-Origin = '\u57df\u540d' \u6216 '*' \u652f\u6301\u8de8\u57df\uff0c\u590d\u6742\u8bf7\u6c42 \u7531\u4e8e\u590d\u6742\u8bf7\u6c42\u65f6\uff0c\u9996\u5148\u4f1a\u53d1\u9001\u201c\u9884\u68c0\u201d\u8bf7\u6c42\uff0c\u5982\u679c\u201c\u9884\u68c0\u201d\u6210\u529f\uff0c\u5219\u53d1\u9001\u771f\u5b9e\u6570\u636e\u3002 \u201c\u9884\u68c0\u201d\u8bf7\u6c42\u65f6\uff0c\u5141\u8bb8\u8bf7\u6c42\u65b9\u5f0f\u5219\u9700\u670d\u52a1\u5668\u8bbe\u7f6e\u54cd\u5e94\u5934\uff1aAccess-Control-Request-Method \u201c\u9884\u68c0\u201d\u8bf7\u6c42\u65f6\uff0c\u5141\u8bb8\u8bf7\u6c42\u5934\u5219\u9700\u670d\u52a1\u5668\u8bbe\u7f6e\u54cd\u5e94\u5934\uff1aAccess-Control-Request-Headers","title":"\u4e8c\u3001\u4e24\u79cd\u8bf7\u6c42"},{"location":"#django-model","text":"\u77e5\u8bc6\u9884\u89c8 ORM \u521b\u5efa\u8868(\u5efa\u7acb\u6a21\u578b) \u6dfb\u52a0\u8868\u8bb0\u5f55 \u67e5\u8be2\u8868\u8bb0\u5f55 \u4fee\u6539\u8868\u8bb0\u5f55 \u5220\u9664\u8868\u8bb0\u5f55","title":"Django-model\u57fa\u7840"},{"location":"#orm_1","text":"\u6620\u5c04\u5173\u7cfb\uff1a \u3000\u3000\u3000 \u8868\u540d <\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d> \u7c7b\u540d \u5b57\u6bb5 <\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d> \u5c5e\u6027 \u3000\u3000\u3000\u3000\u8868\u8bb0\u5f55 <\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d\uff0d>\u7c7b\u5b9e\u4f8b\u5bf9\u8c61","title":"ORM"},{"location":"#_95","text":"\u5b9e\u4f8b\uff1a\u6211\u4eec\u6765\u5047\u5b9a\u4e0b\u9762\u8fd9\u4e9b\u6982\u5ff5\uff0c\u5b57\u6bb5\u548c\u5173\u7cfb \u4f5c\u8005\u6a21\u578b\uff1a\u4e00\u4e2a\u4f5c\u8005\u6709\u59d3\u540d\u548c\u5e74\u9f84\u3002 \u4f5c\u8005\u8be6\u7ec6\u6a21\u578b\uff1a\u628a\u4f5c\u8005\u7684\u8be6\u60c5\u653e\u5230\u8be6\u60c5\u8868\uff0c\u5305\u542b\u751f\u65e5\uff0c\u624b\u673a\u53f7\uff0c\u5bb6\u5ead\u4f4f\u5740\u7b49\u4fe1\u606f\u3002\u4f5c\u8005\u8be6\u60c5\u6a21\u578b\u548c\u4f5c\u8005\u6a21\u578b\u4e4b\u95f4\u662f\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb\uff08one-to-one\uff09 \u51fa\u7248\u5546\u6a21\u578b\uff1a\u51fa\u7248\u5546\u6709\u540d\u79f0\uff0c\u6240\u5728\u57ce\u5e02\u4ee5\u53caemail\u3002 \u4e66\u7c4d\u6a21\u578b\uff1a \u4e66\u7c4d\u6709\u4e66\u540d\u548c\u51fa\u7248\u65e5\u671f\uff0c\u4e00\u672c\u4e66\u53ef\u80fd\u4f1a\u6709\u591a\u4e2a\u4f5c\u8005\uff0c\u4e00\u4e2a\u4f5c\u8005\u4e5f\u53ef\u4ee5\u5199\u591a\u672c\u4e66\uff0c\u6240\u4ee5\u4f5c\u8005\u548c\u4e66\u7c4d\u7684\u5173\u7cfb\u5c31\u662f\u591a\u5bf9\u591a\u7684\u5173\u8054\u5173\u7cfb(many-to-many);\u4e00\u672c\u4e66\u53ea\u5e94\u8be5\u7531\u4e00\u4e2a\u51fa\u7248\u5546\u51fa\u7248\uff0c\u6240\u4ee5\u51fa\u7248\u5546\u548c\u4e66\u7c4d\u662f\u4e00\u5bf9\u591a\u5173\u8054\u5173\u7cfb(one-to-many)\u3002 \u6a21\u578b\u5efa\u7acb\u5982\u4e0b\uff1a class Author(models.Model): nid = models.AutoField(primary_key=True) name=models.CharField( max_length=32) age=models.IntegerField() # \u4e0eAuthorDetail\u5efa\u7acb\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb authorDetail=models.OneToOneField(to=\"AuthorDetail\") class AuthorDetail(models.Model): nid = models.AutoField(primary_key=True) birthday=models.DateField() telephone=models.BigIntegerField() addr=models.CharField( max_length=64) class Publish(models.Model): nid = models.AutoField(primary_key=True) name=models.CharField( max_length=32) city=models.CharField( max_length=32) email=models.EmailField() class Book(models.Model): nid = models.AutoField(primary_key=True) title = models.CharField( max_length=32) publishDate=models.DateField() price=models.DecimalField(max_digits=5,decimal_places=2) keepNum=models.IntegerField()<br> commentNum=models.IntegerField() # \u4e0ePublish\u5efa\u7acb\u4e00\u5bf9\u591a\u7684\u5173\u7cfb,\u5916\u952e\u5b57\u6bb5\u5efa\u7acb\u5728\u591a\u7684\u4e00\u65b9 publish=models.ForeignKey(to=\"Publish\",to_field=\"nid\") # \u4e0eAuthor\u8868\u5efa\u7acb\u591a\u5bf9\u591a\u7684\u5173\u7cfb,ManyToManyField\u53ef\u4ee5\u5efa\u5728\u4e24\u4e2a\u6a21\u578b\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\uff0c\u81ea\u52a8\u521b\u5efa\u7b2c\u4e09\u5f20\u8868 authors=models.ManyToManyField(to='Author')\u3000\u3000 \u901a\u8fc7logging\u53ef\u4ee5\u67e5\u770b\u7ffb\u8bd1\u6210\u7684sql\u8bed\u53e5 LOGGING = { 'version': 1, 'disable_existing_loggers': False, 'handlers': { 'console':{ 'level':'DEBUG', 'class':'logging.StreamHandler', }, }, 'loggers': { 'django.db.backends': { 'handlers': ['console'], 'propagate': True, 'level':'DEBUG', }, } }\u3000\u3000 \u6ce8\u610f\u4e8b\u9879\uff1a 1\u3001 \u8868\u7684\u540d\u79f0 myapp_modelName \uff0c\u662f\u6839\u636e \u6a21\u578b\u4e2d\u7684\u5143\u6570\u636e\u81ea\u52a8\u751f\u6210\u7684\uff0c\u4e5f\u53ef\u4ee5\u8986\u5199\u4e3a\u522b\u7684\u540d\u79f0\u3000\u3000 2\u3001 id \u5b57\u6bb5\u662f\u81ea\u52a8\u6dfb\u52a0\u7684 3\u3001\u5bf9\u4e8e\u5916\u952e\u5b57\u6bb5\uff0cDjango \u4f1a\u5728\u5b57\u6bb5\u540d\u4e0a\u6dfb\u52a0 \"_id\" \u6765\u521b\u5efa\u6570\u636e\u5e93\u4e2d\u7684\u5217\u540d 4\u3001\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u7684 CREATE TABLE SQL \u8bed\u53e5\u4f7f\u7528PostgreSQL \u8bed\u6cd5\u683c\u5f0f\uff0c\u8981\u6ce8\u610f\u7684\u662fDjango \u4f1a\u6839\u636esettings \u4e2d\u6307\u5b9a\u7684\u6570\u636e\u5e93\u7c7b\u578b\u6765\u4f7f\u7528\u76f8\u5e94\u7684SQL \u8bed\u53e5\u3002 5\u3001\u5b9a\u4e49\u597d\u6a21\u578b\u4e4b\u540e\uff0c\u4f60\u9700\u8981\u544a\u8bc9Django _\u4f7f\u7528_\u8fd9\u4e9b\u6a21\u578b\u3002\u4f60\u8981\u505a\u7684\u5c31\u662f\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684INSTALL_APPSZ\u4e2d\u8bbe\u7f6e\uff0c\u5728\u5176\u4e2d\u6dfb\u52a0 models.py \u6240\u5728\u5e94\u7528\u7684\u540d\u79f0\u3002 6\u3001\u5916\u952e\u5b57\u6bb5 ForeignKey \u6709\u4e00\u4e2a null=True \u7684\u8bbe\u7f6e(\u5b83\u5141\u8bb8\u5916\u952e\u63a5\u53d7\u7a7a\u503c NULL)\uff0c\u4f60\u53ef\u4ee5\u8d4b\u7ed9\u5b83\u7a7a\u503c None \u3002","title":"\u521b\u5efa\u8868(\u5efa\u7acb\u6a21\u578b)"},{"location":"#_96","text":"\u6bcf\u4e2a\u5b57\u6bb5\u6709\u4e00\u4e9b\u7279\u6709\u7684\u53c2\u6570\uff0c\u4f8b\u5982\uff0cCharField\u9700\u8981max_length\u53c2\u6570\u6765\u6307\u5b9a VARCHAR \u6570\u636e\u5e93\u5b57\u6bb5\u7684\u5927\u5c0f\u3002\u8fd8\u6709\u4e00\u4e9b\u9002\u7528\u4e8e\u6240\u6709\u5b57\u6bb5\u7684\u901a\u7528\u53c2\u6570\u3002 \u8fd9\u4e9b\u53c2\u6570\u5728\u6587\u6863\u4e2d\u6709\u8be6\u7ec6\u5b9a\u4e49\uff0c\u8fd9\u91cc\u6211\u4eec\u53ea\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e9b\u6700\u5e38\u7528\u7684\uff1a (1)null \u5982\u679c\u4e3aTrue\uff0cDjango \u5c06\u7528NULL \u6765\u5728\u6570\u636e\u5e93\u4e2d\u5b58\u50a8\u7a7a\u503c\u3002 \u9ed8\u8ba4\u503c\u662f False. (1)blank \u5982\u679c\u4e3aTrue\uff0c\u8be5\u5b57\u6bb5\u5141\u8bb8\u4e0d\u586b\u3002\u9ed8\u8ba4\u4e3aFalse\u3002 \u8981\u6ce8\u610f\uff0c\u8fd9\u4e0e null \u4e0d\u540c\u3002null\u7eaf\u7cb9\u662f\u6570\u636e\u5e93\u8303\u7574\u7684\uff0c\u800c blank \u662f\u6570\u636e\u9a8c\u8bc1\u8303\u7574\u7684\u3002 \u5982\u679c\u4e00\u4e2a\u5b57\u6bb5\u7684blank=True\uff0c\u8868\u5355\u7684\u9a8c\u8bc1\u5c06\u5141\u8bb8\u8be5\u5b57\u6bb5\u662f\u7a7a\u503c\u3002\u5982\u679c\u5b57\u6bb5\u7684blank=False\uff0c\u8be5\u5b57\u6bb5\u5c31\u662f\u5fc5\u586b\u7684\u3002 (2)default \u5b57\u6bb5\u7684\u9ed8\u8ba4\u503c\u3002\u53ef\u4ee5\u662f\u4e00\u4e2a\u503c\u6216\u8005\u53ef\u8c03\u7528\u5bf9\u8c61\u3002\u5982\u679c\u53ef\u8c03\u7528 \uff0c\u6bcf\u6709\u65b0\u5bf9\u8c61\u88ab\u521b\u5efa\u5b83\u90fd\u4f1a\u88ab\u8c03\u7528\u3002 (3)primary_key \u5982\u679c\u4e3aTrue\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5b57\u6bb5\u5c31\u662f\u6a21\u578b\u7684\u4e3b\u952e\u3002\u5982\u679c\u4f60\u6ca1\u6709\u6307\u5b9a\u4efb\u4f55\u4e00\u4e2a\u5b57\u6bb5\u7684primary_key=True\uff0c Django \u5c31\u4f1a\u81ea\u52a8\u6dfb\u52a0\u4e00\u4e2aIntegerField\u5b57\u6bb5\u505a\u4e3a\u4e3b\u952e\uff0c\u6240\u4ee5\u9664\u975e\u4f60\u60f3\u8986\u76d6\u9ed8\u8ba4\u7684\u4e3b\u952e\u884c\u4e3a\uff0c \u5426\u5219\u6ca1\u5fc5\u8981\u8bbe\u7f6e\u4efb\u4f55\u4e00\u4e2a\u5b57\u6bb5\u7684primary_key=True\u3002 (4)unique \u5982\u679c\u8be5\u503c\u8bbe\u7f6e\u4e3a True, \u8fd9\u4e2a\u6570\u636e\u5b57\u6bb5\u7684\u503c\u5728\u6574\u5f20\u8868\u4e2d\u5fc5\u987b\u662f\u552f\u4e00\u7684 (5)choices \u7531\u4e8c\u5143\u7ec4\u7ec4\u6210\u7684\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08\u4f8b\u5982\uff0c\u5217\u8868\u6216\u5143\u7ec4\uff09\uff0c\u7528\u6765\u7ed9\u5b57\u6bb5\u63d0\u4f9b\u9009\u62e9\u9879\u3002 \u5982\u679c\u8bbe\u7f6e\u4e86choices \uff0c\u9ed8\u8ba4\u7684\u8868\u5355\u5c06\u662f\u4e00\u4e2a\u9009\u62e9\u6846\u800c\u4e0d\u662f\u6807\u51c6\u7684\u6587\u672c\u6846\uff0c\u800c\u4e14\u8fd9\u4e2a\u9009\u62e9\u6846\u7684\u9009\u9879\u5c31\u662fchoices \u4e2d\u7684\u9009\u9879\u3002 \u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e choices \u5217\u8868\u7684\u4f8b\u5b50\uff1a YEAR_IN_SCHOOL_CHOICES = ( ('FR', 'Freshman'), ('SO', 'Sophomore'), ('JR', 'Junior'), ('SR', 'Senior'), ('GR', 'Graduate'), ) \u6bcf\u4e2a\u5143\u7ec4\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\uff0c\u662f\u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\u7684\u503c\uff1b\u7b2c\u4e8c\u4e2a\u5143\u7d20\u662f\u5728\u7ba1\u7406\u754c\u9762\u6216 ModelChoiceField \u4e2d\u7528\u4f5c\u663e\u793a\u7684\u5185\u5bb9\u3002 \u5728\u4e00\u4e2a\u7ed9\u5b9a\u7684 model \u7c7b\u7684\u5b9e\u4f8b\u4e2d\uff0c\u60f3\u5f97\u5230\u67d0\u4e2a choices \u5b57\u6bb5\u7684\u663e\u793a\u503c\uff0c\u5c31\u8c03\u7528 get_FOO_display \u65b9\u6cd5(\u8fd9\u91cc\u7684 FOO \u5c31\u662f choices \u5b57\u6bb5\u7684\u540d\u79f0 )\u3002\u4f8b\u5982\uff1a from django.db import models class Person(models.Model): SHIRT_SIZES = ( ('S', 'Small'), ('M', 'Medium'), ('L', 'Large'), ) name = models.CharField(max_length=60) shirt_size = models.CharField(max_length=1, choices=SHIRT_SIZES) >>> p = Person(name=\"Fred Flintstone\", shirt_size=\"L\") >>> p.save() >>> p.shirt_size 'L' >>> p.get_shirt_size_display() 'Large' \u66f4\u591a\u8be6\u89c1 \u6a21\u578b\u5b57\u6bb5\u53c2\u8003 \u4e00\u65e6\u4f60\u5efa\u7acb\u597d\u6570\u636e\u6a21\u578b\u4e4b\u540e\uff0cdjango\u4f1a\u81ea\u52a8\u751f\u6210\u4e00\u5957\u6570\u636e\u5e93\u62bd\u8c61\u7684API\uff0c\u53ef\u4ee5\u8ba9\u4f60\u6267\u884c\u5173\u4e8e\u8868\u8bb0\u5f55\u7684\u589e\u5220\u6539\u67e5\u7684\u64cd\u4f5c\u3002","title":"\u5b57\u6bb5\u9009\u9879"},{"location":"#_97","text":"","title":"\u6dfb\u52a0\u8868\u8bb0\u5f55"},{"location":"#_98","text":"\u65b9\u5f0f1 publish_obj=Publish(name=\"\u4eba\u6c11\u51fa\u7248\u793e\",city=\"\u5317\u4eac\",email=\"renMin@163.com\") publish_obj.save() # \u5c06\u6570\u636e\u4fdd\u5b58\u5230\u6570\u636e\u5e93 \u65b9\u5f0f2 # \u8fd4\u56de\u503cpublish_obj\u662f\u6dfb\u52a0\u7684\u8bb0\u5f55\u5bf9\u8c61 publish_obj=Publish.objects.create(name=\"\u4eba\u6c11\u51fa\u7248\u793e\",city=\"\u5317\u4eac\",email=\"renMin@163.com\") \u65b9\u5f0f3 \u8868.objects.create(**request.POST.dict())","title":"\u666e\u901a\u5b57\u6bb5"},{"location":"#_99","text":"\u65b9\u5f0f1: publish_obj=Publish.objects.get(nid=1) Book.objects.create(title=\"\u91d1\u74f6\u7709\",publishDate=\"2012-12-12\",price=665,pageNum=334,publish=publish_obj) \u65b9\u5f0f2: Book.objects.create(title=\"\u91d1\u74f6\u7709\",publishDate=\"2012-12-12\",price=665,pageNum=334,publish_id=1)\u3000\u3000 \u5173\u952e\u70b9\uff1abook_obj.publish\u662f\u4ec0\u4e48\uff1f","title":"\u5916\u952e\u5b57\u6bb5"},{"location":"#_100","text":"book_obj=Book.objects.create(title=\"\u8ffd\u98ce\u7b5d\u7684\u4eba\",publishDate=\"2012-11-12\",price=69,pageNum=314,publish_id=1) author_yuan=Author.objects.create(name=\"yuan\",age=23,authorDetail_id=1) author_egon=Author.objects.create(name=\"egon\",age=32,authorDetail_id=2) book_obj.authors.add(author_egon,author_yuan) # \u5c06\u67d0\u4e2a\u7279\u5b9a\u7684 model \u5bf9\u8c61\u6dfb\u52a0\u5230\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408\u4e2d\u3002 ======= book_obj.authors.add(*[]) book_obj.authors.create() #\u521b\u5efa\u5e76\u4fdd\u5b58\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u8fd9\u4e2a\u5bf9\u8c61\u52a0\u88ab\u5173\u8054\u5bf9\u8c61\u7684\u96c6\u5408\u4e2d\uff0c\u7136\u540e\u8fd4\u56de\u8fd9\u4e2a\u65b0\u5bf9\u8c61\u3002 \u5173\u952e\u70b9\uff1abook_obj.authors\u662f\u4ec0\u4e48\uff1f\u3000\u3000 \u89e3\u9664\u5173\u7cfb\uff1a book_obj.authors.remove() # \u5c06\u67d0\u4e2a\u7279\u5b9a\u7684\u5bf9\u8c61\u4ece\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408\u4e2d\u53bb\u9664\u3002====== book_obj.authors.remove(*[]) book_obj.authors.clear() #\u6e05\u7a7a\u88ab\u5173\u8054\u5bf9\u8c61\u96c6\u5408\u3002","title":"\u591a\u5bf9\u591a\u5b57\u6bb5"},{"location":"#class-relatedmanager_1","text":"\"\u5173\u8054\u7ba1\u7406\u5668\"\u662f\u5728\u4e00\u5bf9\u591a\u6216\u8005\u591a\u5bf9\u591a\u7684\u5173\u8054\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u7684\u7ba1\u7406\u5668\u3002\u5b83\u5b58\u5728\u4e8e\u4e0b\u9762\u4e24\u79cd\u60c5\u51b5\uff1a ForeignKey\u5173\u7cfb\u7684\u201c\u53e6\u4e00\u8fb9\u201d\u3002\u50cf\u8fd9\u6837\uff1a from django.db import models class Reporter(models.Model): # ... pass class Article(models.Model): reporter = models.ForeignKey(Reporter) \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u7ba1\u7406\u5668reporter.article_set\u62e5\u6709\u4e0b\u9762\u7684\u65b9\u6cd5\u3002 ManyToManyField\u5173\u7cfb\u7684\u4e24\u8fb9\uff1a class Topping(models.Model): # ... pass class Pizza(models.Model): toppings = models.ManyToManyField(Topping) \u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0ctopping.pizza_set \u548cpizza.toppings\u90fd\u62e5\u6709\u4e0b\u9762\u7684\u65b9\u6cd5\u3002 add(obj1[, obj2, ...]) \u628a\u6307\u5b9a\u7684\u6a21\u578b\u5bf9\u8c61\u6dfb\u52a0\u5230\u5173\u8054\u5bf9\u8c61\u96c6\u4e2d\u3002 \u4f8b\u5982\uff1a >>> b = Blog.objects.get(id=1) >>> e = Entry.objects.get(id=234) >>> b.entry_set.add(e) # Associates Entry e with Blog b. \u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5bf9\u4e8eForeignKey\u5173\u7cfb\uff0ce.save()\u7531\u5173\u8054\u7ba1\u7406\u5668\u8c03\u7528\uff0c\u6267\u884c\u66f4\u65b0\u64cd\u4f5c\u3002\u7136\u800c\uff0c\u5728\u591a\u5bf9\u591a\u5173\u7cfb\u4e2d\u4f7f\u7528add()\u5e76\u4e0d\u4f1a\u8c03\u7528\u4efb\u4f55 save()\u65b9\u6cd5\uff0c\u800c\u662f\u7531QuerySet.bulk_create()\u521b\u5efa\u5173\u7cfb\u3002 \u5ef6\u4f38\uff1a # 1 *[]\u7684\u4f7f\u7528 >>> book_obj = Book.objects.get(id=1) >>> author_list = Author.objects.filter(id__gt=2) >>> book_obj.authors.add(*author_list) # 2 \u76f4\u63a5\u7ed1\u5b9a\u4e3b\u952e book_obj.authors.add(*[1,3]) # \u5c06id=1\u548cid=3\u7684\u4f5c\u8005\u5bf9\u8c61\u6dfb\u52a0\u5230\u8fd9\u672c\u4e66\u7684\u4f5c\u8005\u96c6\u5408\u4e2d # \u5e94\u7528: \u6dfb\u52a0\u6216\u8005\u7f16\u8f91\u65f6,\u63d0\u4ea4\u4f5c\u8005\u4fe1\u606f\u65f6\u53ef\u4ee5\u7528\u5230. create(**kwargs) \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff0c\u4fdd\u5b58\u5bf9\u8c61\uff0c\u5e76\u5c06\u5b83\u6dfb\u52a0\u5230\u5173\u8054\u5bf9\u8c61\u96c6\u4e4b\u4e2d\u3002\u8fd4\u56de\u65b0\u521b\u5efa\u7684\u5bf9\u8c61\uff1a >>> b = Blog.objects.get(id=1) >>> e = b.entry_set.create( ... headline='Hello', ... body_text='Hi', ... pub_date=datetime.date(2005, 1, 1) ... ) # No need to call e.save() at this point -- it's already been saved. \u8fd9\u5b8c\u5168\u7b49\u4ef7\u4e8e\uff08\u4e0d\u8fc7\u66f4\u52a0\u7b80\u6d01\u4e8e\uff09\uff1a >>> b = Blog.objects.get(id=1) >>> e = Entry( ... blog=b, ... headline='Hello', ... body_text='Hi', ... pub_date=datetime.date(2005, 1, 1) ... ) >>> e.save(force_insert=True) \u8981\u6ce8\u610f\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6307\u5b9a\u6a21\u578b\u4e2d\u7528\u4e8e\u5b9a\u4e49\u5173\u7cfb\u7684\u5173\u952e\u8bcd\u53c2\u6570\u3002\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5e76\u6ca1\u6709\u4f20\u5165blog\u53c2\u6570\u7ed9create()\u3002Django\u4f1a\u660e\u767d\u65b0\u7684 Entry\u5bf9\u8c61blog \u5e94\u8be5\u6dfb\u52a0\u5230b\u4e2d\u3002 remove(obj1[, obj2, ...]) \u4ece\u5173\u8054\u5bf9\u8c61\u96c6\u4e2d\u79fb\u9664\u6267\u884c\u7684\u6a21\u578b\u5bf9\u8c61\uff1a >>> b = Blog.objects.get(id=1) >>> e = Entry.objects.get(id=234) >>> b.entry_set.remove(e) # Disassociates Entry e from Blog b. \u5bf9\u4e8eForeignKey\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4ec5\u5728null=True\u65f6\u5b58\u5728\u3002 clear() \u4ece\u5173\u8054\u5bf9\u8c61\u96c6\u4e2d\u79fb\u9664\u4e00\u5207\u5bf9\u8c61\u3002 >>> b = Blog.objects.get(id=1) >>> b.entry_set.clear() \u6ce8\u610f\u8fd9\u6837\u4e0d\u4f1a\u5220\u9664\u5bf9\u8c61 \u2014\u2014 \u53ea\u4f1a\u5220\u9664\u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u8054\u3002 \u5c31\u50cf remove() \u65b9\u6cd5\u4e00\u6837\uff0cclear()\u53ea\u80fd\u5728 null=True\u7684ForeignKey\u4e0a\u88ab\u8c03\u7528\u3002 set()\u65b9\u6cd5 \u5148\u6e05\u7a7a\uff0c\u5728\u8bbe\u7f6e\uff0c\u7f16\u8f91\u4e66\u7c4d\u65f6\u5373\u53ef\u7528\u5230 \u6ce8\u610f \u5bf9\u4e8e\u6240\u6709\u7c7b\u578b\u7684\u5173\u8054\u5b57\u6bb5\uff0cadd()\u3001create()\u3001remove()\u548cclear(),set()\u90fd\u4f1a\u9a6c\u4e0a\u66f4\u65b0\u6570\u636e\u5e93\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5728\u5173\u8054\u7684\u4efb\u4f55\u4e00\u7aef\uff0c\u90fd\u4e0d\u9700\u8981\u518d\u8c03\u7528save()\u65b9\u6cd5\u3002 \u76f4\u63a5\u8d4b\u503c\uff1a \u901a\u8fc7\u8d4b\u503c\u4e00\u4e2a\u65b0\u7684\u53ef\u8fed\u4ee3\u7684\u5bf9\u8c61\uff0c\u5173\u8054\u5bf9\u8c61\u96c6\u53ef\u4ee5\u88ab\u6574\u4f53\u66ff\u6362\u6389\u3002 >>> new_list = [obj1, obj2, obj3] >>> e.related_set = new_list \u5982\u679c\u5916\u952e\u5173\u7cfb\u6ee1\u8db3null=True\uff0c\u5173\u8054\u7ba1\u7406\u5668\u4f1a\u5728\u6dfb\u52a0new_list\u4e2d\u7684\u5185\u5bb9\u4e4b\u524d\uff0c\u9996\u5148\u8c03\u7528clear()\u65b9\u6cd5\u6765\u89e3\u9664\u5173\u8054\u96c6\u4e2d\u4e00\u5207\u5df2\u5b58\u5728\u5bf9\u8c61\u7684\u5173\u8054\u3002\u5426\u5219\uff0c new_list\u4e2d\u7684\u5bf9\u8c61\u4f1a\u5728\u5df2\u5b58\u5728\u7684\u5173\u8054\u7684\u57fa\u7840\u4e0a\u88ab\u6dfb\u52a0\u3002","title":"class RelatedManager"},{"location":"#_101","text":"","title":"\u67e5\u8be2\u8868\u8bb0\u5f55"},{"location":"#api_1","text":"<1> all(): \u67e5\u8be2\u6240\u6709\u7ed3\u679c <2> filter(**kwargs): \u5b83\u5305\u542b\u4e86\u4e0e\u6240\u7ed9\u7b5b\u9009\u6761\u4ef6\u76f8\u5339\u914d\u7684\u5bf9\u8c61 <3> get(**kwargs): \u8fd4\u56de\u4e0e\u6240\u7ed9\u7b5b\u9009\u6761\u4ef6\u76f8\u5339\u914d\u7684\u5bf9\u8c61\uff0c\u8fd4\u56de\u7ed3\u679c\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\uff0c \u5982\u679c\u7b26\u5408\u7b5b\u9009\u6761\u4ef6\u7684\u5bf9\u8c61\u8d85\u8fc7\u4e00\u4e2a\u6216\u8005\u6ca1\u6709\u90fd\u4f1a\u629b\u51fa\u9519\u8bef\u3002 <5> exclude(**kwargs): \u5b83\u5305\u542b\u4e86\u4e0e\u6240\u7ed9\u7b5b\u9009\u6761\u4ef6\u4e0d\u5339\u914d\u7684\u5bf9\u8c61 <4> values(*field): \u8fd4\u56de\u4e00\u4e2aValueQuerySet\u2014\u2014\u4e00\u4e2a\u7279\u6b8a\u7684QuerySet\uff0c\u8fd0\u884c\u540e\u5f97\u5230\u7684\u5e76\u4e0d\u662f\u4e00\u7cfb\u5217 model\u7684\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u800c\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684\u5b57\u5178\u5e8f\u5217 <9> values_list(*field): \u5b83\u4e0evalues()\u975e\u5e38\u76f8\u4f3c\uff0c\u5b83\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5143\u7ec4\u5e8f\u5217\uff0cvalues\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u5b57\u5178\u5e8f\u5217 <6> order_by(*field): \u5bf9\u67e5\u8be2\u7ed3\u679c\u6392\u5e8f <7> reverse(): \u5bf9\u67e5\u8be2\u7ed3\u679c\u53cd\u5411\u6392\u5e8f <8> distinct(): \u4ece\u8fd4\u56de\u7ed3\u679c\u4e2d\u5254\u9664\u91cd\u590d\u7eaa\u5f55 <10> count(): \u8fd4\u56de\u6570\u636e\u5e93\u4e2d\u5339\u914d\u67e5\u8be2(QuerySet)\u7684\u5bf9\u8c61\u6570\u91cf\u3002 <11> first(): \u8fd4\u56de\u7b2c\u4e00\u6761\u8bb0\u5f55 <12> last(): \u8fd4\u56de\u6700\u540e\u4e00\u6761\u8bb0\u5f55 <13> exists(): \u5982\u679cQuerySet\u5305\u542b\u6570\u636e\uff0c\u5c31\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse \u6ce8\u610f\uff1a\u4e00\u5b9a\u533a\u5206object\u4e0equerySet\u7684\u533a\u522b \uff01\uff01\uff01","title":"\u67e5\u8be2\u76f8\u5173API"},{"location":"#_102","text":"models.Tb1.objects.filter(id__lt=10, id__gt=1) # \u83b7\u53d6id\u5927\u4e8e1 \u4e14 \u5c0f\u4e8e10\u7684\u503c models.Tb1.objects.filter(id__in=[11, 22, 33]) # \u83b7\u53d6id\u7b49\u4e8e11\u300122\u300133\u7684\u6570\u636e models.Tb1.objects.exclude(id__in=[11, 22, 33]) # not in models.Tb1.objects.filter(name__contains=\"ven\") models.Tb1.objects.filter(name__icontains=\"ven\") # icontains\u5927\u5c0f\u5199\u4e0d\u654f\u611f models.Tb1.objects.filter(id__range=[1, 2]) # \u8303\u56f4bettwen and startswith\uff0cistartswith, endswith, iendswith","title":"\u53cc\u4e0b\u5212\u7ebf\u4e4b\u5355\u8868\u67e5\u8be2"},{"location":"#_103","text":"","title":"\u57fa\u4e8e\u5bf9\u8c61\u7684\u8de8\u8868\u67e5\u8be2"},{"location":"#publish-book_1","text":"\u6b63\u5411\u67e5\u8be2(\u6309\u5b57\u6bb5\uff1apublish)\uff1a # \u67e5\u8be2nid=1\u7684\u4e66\u7c4d\u7684\u51fa\u7248\u793e\u6240\u5728\u7684\u57ce\u5e02<br> book_obj=Book.objects.get(nid=1)<br>print(book_obj.publish.city) # book_obj.publish \u662fnid=1\u7684\u4e66\u7c4d\u5bf9\u8c61\u5173\u8054\u7684\u51fa\u7248\u793e\u5bf9\u8c61\u3000\u3000 \u53cd\u5411\u67e5\u8be2(\u6309\u8868\u540d\uff1abook_set)\uff1a # \u67e5\u8be2 \u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d publish=Publish.objects.get(name=\"\u4eba\u6c11\u51fa\u7248\u793e\") book_list=publish.book_set.all() # \u4e0e\u4eba\u6c11\u51fa\u7248\u793e\u5173\u8054\u7684\u6240\u6709\u4e66\u7c4d\u5bf9\u8c61\u96c6\u5408 for book_obj in book_list: print(book_obj.title)","title":"\u4e00\u5bf9\u591a\u67e5\u8be2\uff08Publish \u4e0e Book\uff09"},{"location":"#author-authordetail_1","text":"\u6b63\u5411\u67e5\u8be2(\u6309\u5b57\u6bb5\uff1aauthorDetail)\uff1a # \u67e5\u8be2egon\u4f5c\u8005\u7684\u624b\u673a\u53f7 author_egon=Author.objects.get(name=\"egon\") print(author_egon.authorDetail.telephone) \u53cd\u5411\u67e5\u8be2(\u6309\u8868\u540d\uff1aauthor)\uff1a # \u67e5\u8be2\u6240\u6709\u4f4f\u5740\u5728\u5317\u4eac\u7684\u4f5c\u8005\u7684\u59d3\u540d authorDetail_list=AuthorDetail.objects.filter(addr=\"beijing\") for obj in authorDetail_list: print(obj.author.name)","title":"\u4e00\u5bf9\u4e00\u67e5\u8be2(Author \u4e0e AuthorDetail)"},{"location":"#author-book_1","text":"\u6b63\u5411\u67e5\u8be2(\u6309\u5b57\u6bb5\uff1aauthors)\uff1a # \u91d1\u74f6\u7709\u6240\u6709\u4f5c\u8005\u7684\u540d\u5b57\u4ee5\u53ca\u624b\u673a\u53f7 book_obj=Book.objects.filter(title=\"\u91d1\u74f6\u7709\").first() authors=book_obj.authors.all() for author_obj in authors: print(author_obj.name,author_obj.authorDetail.telephone) \u53cd\u5411\u67e5\u8be2(\u6309\u8868\u540d\uff1abook_set)\uff1a # \u67e5\u8be2egon\u51fa\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57 author_obj=Author.objects.get(name=\"egon\") book_list=author_obj.book_set.all() #\u4e0eegon\u4f5c\u8005\u76f8\u5173\u7684\u6240\u6709\u4e66\u7c4d for book_obj in book_list: print(book_obj.title) \u6ce8\u610f\uff1a \u4f60\u53ef\u4ee5\u901a\u8fc7\u5728 ForeignKey() \u548cManyToManyField\u7684\u5b9a\u4e49\u4e2d\u8bbe\u7f6e related_name \u7684\u503c\u6765\u8986\u5199 FOO_set \u7684\u540d\u79f0\u3002\u4f8b\u5982\uff0c\u5982\u679c Article model \u4e2d\u505a\u4e00\u4e0b\u66f4\u6539\uff1a publish = ForeignKey(Blog, related_name='bookList')\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u5c31\u4f1a\u5982\u6211\u4eec\u770b\u5230\u8fd9\u822c\uff1a # \u67e5\u8be2 \u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d publish=Publish.objects.get(name=\"\u4eba\u6c11\u51fa\u7248\u793e\") book_list=publish.bookList.all() # \u4e0e\u4eba\u6c11\u51fa\u7248\u793e\u5173\u8054\u7684\u6240\u6709\u4e66\u7c4d\u5bf9\u8c61\u96c6\u5408","title":"\u591a\u5bf9\u591a\u67e5\u8be2 (Author \u4e0e Book)"},{"location":"#_104","text":"Django \u8fd8\u63d0\u4f9b\u4e86\u4e00\u79cd\u76f4\u89c2\u800c\u9ad8\u6548\u7684\u65b9\u5f0f\u5728\u67e5\u8be2(lookups)\u4e2d\u8868\u793a\u5173\u8054\u5173\u7cfb\uff0c\u5b83\u80fd\u81ea\u52a8\u786e\u8ba4 SQL JOIN \u8054\u7cfb\u3002\u8981\u505a\u8de8\u5173\u7cfb\u67e5\u8be2\uff0c\u5c31\u4f7f\u7528\u4e24\u4e2a\u4e0b\u5212\u7ebf\u6765\u94fe\u63a5\u6a21\u578b(model)\u95f4\u5173\u8054\u5b57\u6bb5\u7684\u540d\u79f0\uff0c\u76f4\u5230\u6700\u7ec8\u94fe\u63a5\u5230\u4f60\u60f3\u8981\u7684 model \u4e3a\u6b62\u3002 \u5173\u952e\u70b9\uff1a\u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\uff0c\u53cd\u5411\u67e5\u8be2\u6309\u8868\u660e\u3002 # \u7ec3\u4e601: \u67e5\u8be2\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4e0e\u4ef7\u683c(\u4e00\u5bf9\u591a) # \u6b63\u5411\u67e5\u8be2 \u6309\u5b57\u6bb5:publish queryResult=Book.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(publish__name=\"\u4eba\u6c11\u51fa\u7248\u793e\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\",\"price\") # \u53cd\u5411\u67e5\u8be2 \u6309\u8868\u540d:book queryResult=Publish.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"\u4eba\u6c11\u51fa\u7248\u793e\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"book__title\",\"book__price\") # \u7ec3\u4e602: \u67e5\u8be2egon\u51fa\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57(\u591a\u5bf9\u591a) # \u6b63\u5411\u67e5\u8be2 \u6309\u5b57\u6bb5:authors: queryResult=Book.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(authors__name=\"yuan\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\") # \u53cd\u5411\u67e5\u8be2 \u6309\u8868\u540d:book queryResult=Author.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"yuan\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"book__title\",\"book__price\") # \u7ec3\u4e603: \u67e5\u8be2\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4ee5\u53ca\u4f5c\u8005\u7684\u59d3\u540d # \u6b63\u5411\u67e5\u8be2 queryResult=Book.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(publish__name=\"\u4eba\u6c11\u51fa\u7248\u793e\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\",\"authors__name\") # \u53cd\u5411\u67e5\u8be2 queryResult=Publish.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"\u4eba\u6c11\u51fa\u7248\u793e\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"book__title\",\"book__authors__age\",\"book__authors__name\") # \u7ec3\u4e604: \u624b\u673a\u53f7\u4ee5151\u5f00\u5934\u7684\u4f5c\u8005\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u540d\u79f0\u4ee5\u53ca\u51fa\u7248\u793e\u540d\u79f0 queryResult=Book.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(authors__authorDetail__telephone__regex=\"151\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"title\",\"publish__name\") \u6ce8\u610f\uff1a \u53cd\u5411\u67e5\u8be2\u65f6\uff0c\u5982\u679c\u5b9a\u4e49\u4e86related_name \uff0c\u5219\u7528related_name\u66ff\u6362\u8868\u540d\uff0c\u4f8b\u5982\uff1a publish = ForeignKey(Blog, related_name='bookList')\uff1a # \u7ec3\u4e601: \u67e5\u8be2\u4eba\u6c11\u51fa\u7248\u793e\u51fa\u7248\u8fc7\u7684\u6240\u6709\u4e66\u7c4d\u7684\u540d\u5b57\u4e0e\u4ef7\u683c(\u4e00\u5bf9\u591a) # \u53cd\u5411\u67e5\u8be2 \u4e0d\u518d\u6309\u8868\u540d:book,\u800c\u662frelated_name:bookList queryResult=Publish.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(name=\"\u4eba\u6c11\u51fa\u7248\u793e\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"bookList__title\",\"bookList__price\")","title":"\u57fa\u4e8e\u53cc\u4e0b\u5212\u7ebf\u7684\u8de8\u8868\u67e5\u8be2"},{"location":"#_105","text":"\u5148\u4e86\u89e3sql\u4e2d\u7684\u805a\u5408\u4e0e\u5206\u7ec4\u6982\u5ff5","title":"\u805a\u5408\u67e5\u8be2\u4e0e\u5206\u7ec4\u67e5\u8be2"},{"location":"#aggregateargs-kwargs","text":"# \u8ba1\u7b97\u6240\u6709\u56fe\u4e66\u7684\u5e73\u5747\u4ef7\u683c >>> from django.db.models import Avg >>> Book.objects.all().aggregate(Avg('price')) {'price__avg': 34.35} aggregate() \u662f QuerySet \u7684\u4e00\u4e2a\u7ec8\u6b62\u5b50\u53e5\uff0c\u610f\u601d\u662f\u8bf4\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u4e00\u4e9b\u952e\u503c\u5bf9\u7684\u5b57\u5178\u3002\u952e\u7684\u540d\u79f0\u662f\u805a\u5408\u503c\u7684\u6807\u8bc6\u7b26\uff0c\u503c\u662f\u8ba1\u7b97\u51fa\u6765\u7684\u805a\u5408\u503c\u3002\u952e\u7684\u540d\u79f0\u662f\u6309\u7167\u5b57\u6bb5\u548c\u805a\u5408\u51fd\u6570\u7684\u540d\u79f0\u81ea\u52a8\u751f\u6210\u51fa\u6765\u7684\u3002\u5982\u679c\u4f60\u60f3\u8981\u4e3a\u805a\u5408\u503c\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0\uff0c\u53ef\u4ee5\u5411\u805a\u5408\u5b50\u53e5\u63d0\u4f9b\u5b83\u3002 >>> Book.objects.aggregate(average_price=Avg('price')) {'average_price': 34.35} \u5982\u679c\u4f60\u5e0c\u671b\u751f\u6210\u4e0d\u6b62\u4e00\u4e2a\u805a\u5408\uff0c\u4f60\u53ef\u4ee5\u5411 aggregate() \u5b50\u53e5\u4e2d\u6dfb\u52a0\u53e6\u4e00\u4e2a\u53c2\u6570\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u4e5f\u60f3\u77e5\u9053\u6240\u6709\u56fe\u4e66\u4ef7\u683c\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\uff0c\u53ef\u4ee5\u8fd9\u6837\u67e5\u8be2\uff1a >>> from django.db.models import Avg, Max, Min >>> Book.objects.aggregate(Avg('price'), Max('price'), Min('price')) {'price__avg': 34.35, 'price__max': Decimal('81.20'), 'price__min': Decimal('12.99')}","title":"\u805a\u5408\uff1aaggregate(args, *kwargs)"},{"location":"#annotate","text":"\u4e3a\u8c03\u7528\u7684 QuerySet \u4e2d\u6bcf\u4e00\u4e2a\u5bf9\u8c61\u90fd\u751f\u6210\u4e00\u4e2a\u72ec\u7acb\u7684\u7edf\u8ba1\u503c\uff08\u7edf\u8ba1\u65b9\u6cd5\u7528\u805a\u5408\u51fd\u6570\uff09\u3002\u3000 (1) \u7ec3\u4e60\uff1a\u7edf\u8ba1\u6bcf\u4e00\u672c\u4e66\u7684\u4f5c\u8005\u4e2a\u6570 bookList=Book.objects.annotate(authorsNum=Count('authors')) for book_obj in bookList: print(book_obj.title,book_obj.authorsNum) SELECT \"app01_book\".\"nid\", \"app01_book\".\"title\", \"app01_book\".\"publishDate\", \"app01_book\".\"price\", \"app01_book\".\"pageNum\", \"app01_book\".\"publish_id\", COUNT(\"app01_book_authors\".\"author_id\") AS \"authorsNum\" FROM \"app01_book\" LEFT OUTER JOIN \"app01_book_authors\" ON (\"app01_book\".\"nid\" = \"app01_book_authors\".\"book_id\") GROUP BY \"app01_book\".\"nid\", \"app01_book\".\"title\", \"app01_book\".\"publishDate\", \"app01_book\".\"price\", \"app01_book\".\"pageNum\", \"app01_book\".\"publish_id\" \u89e3\u6790\uff1a ''' Book.objects.annotate(authorsNum=Count('authors')) \u62c6\u5206\u89e3\u6790\uff1a Book.objects\u7b49\u540c\u4e8eBook.objects.all(),\u7ffb\u8bd1\u6210\u7684sql\u7c7b\u4f3c\u4e8e\uff1a select id,name,.. from Book \u8fd9\u6837\u5f97\u5230\u7684\u5bf9\u8c61\u4e00\u5b9a\u662f\u6bcf\u4e00\u672c\u4e66\u5bf9\u8c61\uff0c\u6709n\u672c\u4e66\u7c4d\u8bb0\u5f55\uff0c\u5c31\u5206n\u4e2a\u7ec4\uff0c\u4e0d\u4f1a\u6709\u91cd\u590d\u5bf9\u8c61\uff0c\u6bcf\u4e00\u7ec4\u518d\u7531annotate\u5206\u7ec4\u7edf\u8ba1\u3002''' (2) \u5982\u679c\u60f3\u5bf9\u6240\u67e5\u8be2\u5bf9\u8c61\u7684\u5173\u8054\u5bf9\u8c61\u8fdb\u884c\u805a\u5408\uff1a \u7ec3\u4e60\uff1a\u7edf\u8ba1\u6bcf\u4e00\u4e2a\u51fa\u7248\u793e\u7684\u6700\u4fbf\u5b9c\u7684\u4e66 publishList=Publish.objects.annotate(MinPrice=Min(\"book__price\")) for publish_obj in publishList: print(publish_obj.name,publish_obj.MinPrice) annotate\u7684\u8fd4\u56de\u503c\u662fquerySet\uff0c\u5982\u679c\u4e0d\u60f3\u904d\u5386\u5bf9\u8c61\uff0c\u53ef\u4ee5\u7528\u4e0avaluelist\uff1a queryResult= Publish.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.annotate(MinPrice=Min(\"book__price\")) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"name\",\"MinPrice\") print(queryResult) \u89e3\u6790\u540c\u4e0a\u3002 \u65b9\u5f0f2:\u3000 queryResult=Book.objects.values(\"publish__name\").annotate(MinPrice=Min('price')) \uff03 \u601d\u8003\uff1a if \u6709\u4e00\u4e2a\u51fa\u7248\u793e\u6ca1\u6709\u51fa\u7248\u8fc7\u4e66\u4f1a\u600e\u6837\uff1f \u89e3\u6790\uff1a ''' \u67e5\u770b Book.objects.values(\"publish__name\")\u7684\u7ed3\u679c\u548c\u5bf9\u5e94\u7684sql\u8bed\u53e5 \u53ef\u4ee5\u7406\u89e3\u4e3avalues\u5185\u7684\u5b57\u6bb5\u5373group by\u7684\u5b57\u6bb5''' (3) \u7edf\u8ba1\u6bcf\u4e00\u672c\u4ee5py\u5f00\u5934\u7684\u4e66\u7c4d\u7684\u4f5c\u8005\u4e2a\u6570\uff1a queryResult=Book.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 .filter(title__startswith=\"Py\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 \u3000.annotate(num_authors=Count('authors')) (4) \u7edf\u8ba1\u4e0d\u6b62\u4e00\u4e2a\u4f5c\u8005\u7684\u56fe\u4e66\uff1a queryResult=Book.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.annotate(num_authors=Count('authors')) \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.filter(num_authors__gt=1) (5) \u6839\u636e\u4e00\u672c\u56fe\u4e66\u4f5c\u8005\u6570\u91cf\u7684\u591a\u5c11\u5bf9\u67e5\u8be2\u96c6 QuerySet \u8fdb\u884c\u6392\u5e8f: Book.objects.annotate(num_authors=Count('authors')).order_by('num_authors') (6) \u67e5\u8be2\u5404\u4e2a\u4f5c\u8005\u51fa\u7684\u4e66\u7684\u603b\u4ef7\u683c: # \u6309author\u8868\u7684\u6240\u6709\u5b57\u6bb5 group by queryResult=Author.objects\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.annotate(SumPrice=Sum(\"book__price\"))\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"name\",\"SumPrice\") print(queryResult) # \u6309authors__name group by queryResult2=Book.objects.values(\"authors__name\")\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.annotate(SumPrice=Sum(\"price\"))\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.values_list(\"authors__name\",\"SumPrice\") print(queryResult2)","title":"\u5206\u7ec4\uff1aannotate()"},{"location":"#fq_1","text":"","title":"F\u67e5\u8be2\u4e0eQ\u67e5\u8be2"},{"location":"#f_1","text":"\u5728\u4e0a\u9762\u6240\u6709\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6784\u9020\u7684\u8fc7\u6ee4\u5668\u90fd\u53ea\u662f\u5c06\u5b57\u6bb5\u503c\u4e0e\u67d0\u4e2a\u5e38\u91cf\u505a\u6bd4\u8f83\u3002\u5982\u679c\u6211\u4eec\u8981\u5bf9\u4e24\u4e2a\u5b57\u6bb5\u7684\u503c\u505a\u6bd4\u8f83\uff0c\u90a3\u8be5\u600e\u4e48\u505a\u5462\uff1f Django \u63d0\u4f9b F() \u6765\u505a\u8fd9\u6837\u7684\u6bd4\u8f83\u3002F() \u7684\u5b9e\u4f8b\u53ef\u4ee5\u5728\u67e5\u8be2\u4e2d\u5f15\u7528\u5b57\u6bb5\uff0c\u6765\u6bd4\u8f83\u540c\u4e00\u4e2a model \u5b9e\u4f8b\u4e2d\u4e24\u4e2a\u4e0d\u540c\u5b57\u6bb5\u7684\u503c\u3002 # \u67e5\u8be2\u8bc4\u8bba\u6570\u5927\u4e8e\u6536\u85cf\u6570\u7684\u4e66\u7c4d from django.db.models import F Book.objects.filter(commnetNum__lt=F('keepNum')) Django \u652f\u6301 F() \u5bf9\u8c61\u4e4b\u95f4\u4ee5\u53ca F() \u5bf9\u8c61\u548c\u5e38\u6570\u4e4b\u95f4\u7684\u52a0\u51cf\u4e58\u9664\u548c\u53d6\u6a21\u7684\u64cd\u4f5c\u3002 # \u67e5\u8be2\u8bc4\u8bba\u6570\u5927\u4e8e\u6536\u85cf\u65702\u500d\u7684\u4e66\u7c4d Book.objects.filter(commnetNum__lt=F('keepNum')*2) \u4fee\u6539\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u4f7f\u7528F\u51fd\u6570,\u6bd4\u5982\u5c06\u6bcf\u4e00\u672c\u4e66\u7684\u4ef7\u683c\u63d0\u9ad830\u5143\uff1a Book.objects.all().update(price=F(\"price\")+30)","title":"F\u67e5\u8be2"},{"location":"#q_1","text":"filter() \u7b49\u65b9\u6cd5\u4e2d\u7684\u5173\u952e\u5b57\u53c2\u6570\u67e5\u8be2\u90fd\u662f\u4e00\u8d77\u8fdb\u884c\u201cAND\u201d \u7684\u3002 \u5982\u679c\u4f60\u9700\u8981\u6267\u884c\u66f4\u590d\u6742\u7684\u67e5\u8be2\uff08\u4f8b\u5982 OR \u8bed\u53e5\uff09\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 Q \u5bf9\u8c61 \u3002 from django.db.models import Q Q(title__startswith='Py') Q \u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 & \u548c | \u64cd\u4f5c\u7b26\u7ec4\u5408\u8d77\u6765\u3002\u5f53\u4e00\u4e2a\u64cd\u4f5c\u7b26\u5728\u4e24\u4e2a Q \u5bf9\u8c61\u4e0a\u4f7f\u7528\u65f6\uff0c\u5b83\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684 Q \u5bf9\u8c61\u3002 bookList=Book.objects.filter(Q(authors__name=\"yuan\")|Q(authors__name=\"egon\")) \u7b49\u540c\u4e8e\u4e0b\u9762\u7684SQL WHERE \u5b50\u53e5\uff1a WHERE name =\"yuan\" OR name =\"egon\" \u4f60\u53ef\u4ee5\u7ec4\u5408 & \u548c | \u64cd\u4f5c\u7b26\u4ee5\u53ca\u4f7f\u7528\u62ec\u53f7\u8fdb\u884c\u5206\u7ec4\u6765\u7f16\u5199\u4efb\u610f\u590d\u6742\u7684 Q \u5bf9\u8c61\u3002\u540c\u65f6\uff0c Q \u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 ~ \u64cd\u4f5c\u7b26\u53d6\u53cd\uff0c\u8fd9\u5141\u8bb8\u7ec4\u5408\u6b63\u5e38\u7684\u67e5\u8be2\u548c\u53d6\u53cd( NOT ) \u67e5\u8be2\uff1a bookList=Book.objects.filter(Q(authors__name=\"yuan\") & ~Q(publishDate__year=2017)).values_list(\"title\") \u67e5\u8be2\u51fd\u6570\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528 Q \u5bf9\u8c61 \u548c\u5173\u952e\u5b57\u53c2\u6570\u3002\u6240\u6709\u63d0\u4f9b\u7ed9\u67e5\u8be2\u51fd\u6570\u7684\u53c2\u6570\uff08\u5173\u952e\u5b57\u53c2\u6570\u6216 Q \u5bf9\u8c61\uff09\u90fd\u5c06\"AND\u201d\u5728\u4e00\u8d77\u3002\u4f46\u662f\uff0c\u5982\u679c\u51fa\u73b0 Q \u5bf9\u8c61\uff0c\u5b83\u5fc5\u987b\u4f4d\u4e8e\u6240\u6709\u5173\u952e\u5b57\u53c2\u6570\u7684\u524d\u9762\u3002\u4f8b\u5982\uff1a bookList=Book.objects.filter(Q(publishDate__year=2016) | Q(publishDate__year=2017),title__icontains=\"python\")","title":"Q\u67e5\u8be2"},{"location":"#_106","text":"\u6ce8\u610f\uff1a <1> \u7b2c\u4e8c\u79cd\u65b9\u5f0f\u4fee\u6539\u4e0d\u80fd\u7528get\u7684\u539f\u56e0\u662f\uff1aupdate\u662fQuerySet\u5bf9\u8c61\u7684\u65b9\u6cd5\uff0cget\u8fd4\u56de\u7684\u662f\u4e00\u4e2amodel\u5bf9\u8c61\uff0c\u5b83\u6ca1\u6709update\u65b9\u6cd5\uff0c\u800cfilter\u8fd4\u56de\u7684\u662f\u4e00\u4e2aQuerySet\u5bf9\u8c61(filter\u91cc\u9762\u7684\u6761\u4ef6\u53ef\u80fd\u6709\u591a\u4e2a\u6761\u4ef6\u7b26\u5408\uff0c\u6bd4\u5982name\uff1d'alvin',\u53ef\u80fd\u6709\u4e24\u4e2aname\uff1d'alvin'\u7684\u884c\u6570\u636e)\u3002 <2>\u5728\u201c\u63d2\u5165\u548c\u66f4\u65b0\u6570\u636e\u201d\u5c0f\u8282\u4e2d\uff0c\u6211\u4eec\u6709\u63d0\u5230\u6a21\u578b\u7684save()\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u66f4\u65b0\u4e00\u884c\u91cc\u7684\u6240\u6709\u5217\u3002 \u800c\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u53ea\u9700\u8981\u66f4\u65b0\u884c\u91cc\u7684\u67d0\u51e0\u5217\u3002 \u6b64\u5916\uff0cupdate()\u65b9\u6cd5\u5bf9\u4e8e\u4efb\u4f55\u7ed3\u679c\u96c6\uff08QuerySet\uff09\u5747\u6709\u6548\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u540c\u65f6\u66f4\u65b0\u591a\u6761\u8bb0\u5f55update()\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u6574\u578b\u6570\u503c\uff0c\u8868\u793a\u53d7\u5f71\u54cd\u7684\u8bb0\u5f55\u6761\u6570\u3002 \u6ce8\u610f\uff0c\u8fd9\u91cc\u56e0\u4e3aupdate\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u6574\u5f62\uff0c\u6240\u4ee5\u6ca1\u6cd5\u7528query\u5c5e\u6027\uff1b\u5bf9\u4e8e\u6bcf\u6b21\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u60f3\u663e\u793a\u5bf9\u5e94\u7684raw sql\uff0c\u9700\u8981\u5728settings\u52a0\u4e0a\u65e5\u5fd7\u8bb0\u5f55\u90e8\u5206","title":"\u4fee\u6539\u8868\u8bb0\u5f55"},{"location":"#_107","text":"\u5220\u9664\u65b9\u6cd5\u5c31\u662f delete()\u3002\u5b83\u8fd0\u884c\u65f6\u7acb\u5373\u5220\u9664\u5bf9\u8c61\u800c\u4e0d\u8fd4\u56de\u4efb\u4f55\u503c\u3002\u4f8b\u5982\uff1a e.delete() \u4f60\u4e5f\u53ef\u4ee5\u4e00\u6b21\u6027\u5220\u9664\u591a\u4e2a\u5bf9\u8c61\u3002\u6bcf\u4e2a QuerySet \u90fd\u6709\u4e00\u4e2a delete() \u65b9\u6cd5\uff0c\u5b83\u4e00\u6b21\u6027\u5220\u9664 QuerySet \u4e2d\u6240\u6709\u7684\u5bf9\u8c61\u3002 \u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u4ee3\u7801\u5c06\u5220\u9664 pub_date \u662f2005\u5e74\u7684 Entry \u5bf9\u8c61\uff1a Entry.objects.filter(pub_date__year=2005).delete() \u8981\u7262\u8bb0\u8fd9\u4e00\u70b9\uff1a\u65e0\u8bba\u5728\u4ec0\u4e48\u60c5\u51b5\u4e0b\uff0cQuerySet \u4e2d\u7684 delete() \u65b9\u6cd5\u90fd\u53ea\u4f7f\u7528\u4e00\u6761 SQL \u8bed\u53e5\u4e00\u6b21\u6027\u5220\u9664\u6240\u6709\u5bf9\u8c61\uff0c\u800c\u5e76\u4e0d\u662f\u5206\u522b\u5220\u9664\u6bcf\u4e2a\u5bf9\u8c61\u3002\u5982\u679c\u4f60\u60f3\u4f7f\u7528\u5728 model \u4e2d\u81ea\u5b9a\u4e49\u7684 delete() \u65b9\u6cd5\uff0c\u5c31\u8981\u81ea\u884c\u8c03\u7528\u6bcf\u4e2a\u5bf9\u8c61\u7684delete \u65b9\u6cd5\u3002(\u4f8b\u5982\uff0c\u904d\u5386 QuerySet\uff0c\u5728\u6bcf\u4e2a\u5bf9\u8c61\u4e0a\u8c03\u7528 delete()\u65b9\u6cd5)\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 QuerySet \u4e2d\u7684 delete()\u65b9\u6cd5\u3002 \u5728 Django \u5220\u9664\u5bf9\u8c61\u65f6\uff0c\u4f1a\u6a21\u4eff SQL \u7ea6\u675f ON DELETE CASCADE \u7684\u884c\u4e3a\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5220\u9664\u4e00\u4e2a\u5bf9\u8c61\u65f6\u4e5f\u4f1a\u5220\u9664\u4e0e\u5b83\u76f8\u5173\u8054\u7684\u5916\u952e\u5bf9\u8c61\u3002\u4f8b\u5982\uff1a b = Blog.objects.get(pk=1) # This will delete the Blog and all of its Entry objects. b.delete() \u8981\u6ce8\u610f\u7684\u662f\uff1a delete() \u65b9\u6cd5\u662f QuerySet \u4e0a\u7684\u65b9\u6cd5\uff0c\u4f46\u5e76\u4e0d\u9002\u7528\u4e8e Manager \u672c\u8eab\u3002\u8fd9\u662f\u4e00\u79cd\u4fdd\u62a4\u673a\u5236\uff0c\u662f\u4e3a\u4e86\u907f\u514d\u610f\u5916\u5730\u8c03\u7528 Entry.objects.delete() \u65b9\u6cd5\u5bfc\u81f4 \u6240\u6709\u7684 \u8bb0\u5f55\u88ab\u8bef\u5220\u9664\u3002\u5982\u679c\u4f60\u786e\u8ba4\u8981\u5220\u9664\u6240\u6709\u7684\u5bf9\u8c61\uff0c\u90a3\u4e48\u4f60\u5fc5\u987b\u663e\u5f0f\u5730\u8c03\u7528\uff1a Entry.objects.all().delete()\u3000\u3000 \u5982\u679c\u4e0d\u60f3\u7ea7\u8054\u5220\u9664\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\uff1a pubHouse = models.ForeignKey(to='Publisher', on_delete=models.SET_NULL, blank=True, null=True)","title":"\u5220\u9664\u8868\u8bb0\u5f55"},{"location":"#django-model_1","text":"\u77e5\u8bc6\u9884\u89c8 QuerySet \u4e2d\u4ecb\u6a21\u578b \u67e5\u8be2\u4f18\u5316 extra \u6574\u4f53\u63d2\u5165","title":"Django-model\u8fdb\u9636"},{"location":"#queryset","text":"","title":"QuerySet"},{"location":"#_108","text":"\u4f7f\u7528Python \u7684\u5207\u7247\u8bed\u6cd5\u6765\u9650\u5236 \u67e5\u8be2\u96c6 \u8bb0\u5f55\u7684\u6570\u76ee \u3002\u5b83\u7b49\u540c\u4e8eSQL \u7684 LIMIT \u548c OFFSET \u5b50\u53e5\u3002 >>> Entry.objects.all()[:5] # (LIMIT 5) >>> Entry.objects.all()[5:10] # (OFFSET 5 LIMIT 5) \u4e0d\u652f\u6301\u8d1f\u7684\u7d22\u5f15\uff08\u4f8b\u5982 Entry.objects.all()[-1] \uff09\u3002\u901a\u5e38\uff0c \u67e5\u8be2\u96c6 \u7684\u5207\u7247\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 \u67e5\u8be2\u96c6 \u2014\u2014 \u5b83\u4e0d\u4f1a\u6267\u884c\u67e5\u8be2\u3002","title":"\u53ef\u5207\u7247"},{"location":"#_109","text":"articleList=models.Article.objects.all() for article in articleList: print(article.title)","title":"\u53ef\u8fed\u4ee3"},{"location":"#_110","text":"\u67e5\u8be2\u96c6 \u662f\u60f0\u6027\u6267\u884c\u7684 \u2014\u2014 \u521b\u5efa \u67e5\u8be2\u96c6 \u4e0d\u4f1a\u5e26\u6765\u4efb\u4f55\u6570\u636e\u5e93\u7684\u8bbf\u95ee\u3002\u4f60\u53ef\u4ee5\u5c06\u8fc7\u6ee4\u5668\u4fdd\u6301\u4e00\u6574\u5929\uff0c\u76f4\u5230 \u67e5\u8be2\u96c6 \u9700\u8981\u6c42\u503c\u65f6\uff0cDjango \u624d\u4f1a\u771f\u6b63\u8fd0\u884c\u8fd9\u4e2a\u67e5\u8be2\u3002 queryResult=models.Article.objects.all() # not hits database print(queryResult) # hits database for article in queryResult: print(article.title) # hits database \u4e00\u822c\u6765\u8bf4\uff0c\u53ea\u6709\u5728\u201c\u8bf7\u6c42\u201d \u67e5\u8be2\u96c6 \u7684\u7ed3\u679c\u65f6\u624d\u4f1a\u5230\u6570\u636e\u5e93\u4e2d\u53bb\u83b7\u53d6\u5b83\u4eec\u3002\u5f53\u4f60\u786e\u5b9e\u9700\u8981\u7ed3\u679c\u65f6\uff0c \u67e5\u8be2\u96c6 \u901a\u8fc7\u8bbf\u95ee\u6570\u636e\u5e93\u6765 \u6c42\u503c \u3002 \u5173\u4e8e\u6c42\u503c\u53d1\u751f\u7684\u51c6\u786e\u65f6\u95f4\uff0c\u53c2\u89c1 \u4f55\u65f6\u8ba1\u7b97\u67e5\u8be2\u96c6 \u3002","title":"\u60f0\u6027\u67e5\u8be2"},{"location":"#_111","text":"\u6bcf\u4e2a \u67e5\u8be2\u96c6 \u90fd\u5305\u542b\u4e00\u4e2a\u7f13\u5b58\u6765\u6700\u5c0f\u5316\u5bf9\u6570\u636e\u5e93\u7684\u8bbf\u95ee\u3002\u7406\u89e3\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u5c06\u8ba9\u4f60\u7f16\u5199\u6700\u9ad8\u6548\u7684\u4ee3\u7801\u3002 \u5728\u4e00\u4e2a\u65b0\u521b\u5efa\u7684 \u67e5\u8be2\u96c6 \u4e2d\uff0c\u7f13\u5b58\u4e3a\u7a7a\u3002\u9996\u6b21\u5bf9 \u67e5\u8be2\u96c6 \u8fdb\u884c\u6c42\u503c \u2014\u2014 \u540c\u65f6\u53d1\u751f\u6570\u636e\u5e93\u67e5\u8be2 \u2014\u2014Django \u5c06\u4fdd\u5b58\u67e5\u8be2\u7684\u7ed3\u679c\u5230 \u67e5\u8be2\u96c6 \u7684\u7f13\u5b58\u4e2d\u5e76\u8fd4\u56de\u660e\u786e\u8bf7\u6c42\u7684\u7ed3\u679c\uff08\u4f8b\u5982\uff0c\u5982\u679c\u6b63\u5728\u8fed\u4ee3 \u67e5\u8be2\u96c6 \uff0c\u5219\u8fd4\u56de\u4e0b\u4e00\u4e2a\u7ed3\u679c\uff09\u3002\u63a5\u4e0b\u6765\u5bf9\u8be5 \u67e5\u8be2\u96c6 \u7684\u6c42\u503c\u5c06\u91cd\u7528\u7f13\u5b58\u7684\u7ed3\u679c\u3002 \u8bf7\u7262\u8bb0\u8fd9\u4e2a\u7f13\u5b58\u884c\u4e3a\uff0c\u56e0\u4e3a\u5bf9 \u67e5\u8be2\u96c6 \u4f7f\u7528\u4e0d\u5f53\u7684\u8bdd\uff0c\u5b83\u4f1a\u5751\u4f60\u7684\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u8bed\u53e5\u521b\u5efa\u4e24\u4e2a \u67e5\u8be2\u96c6 \uff0c\u5bf9\u5b83\u4eec\u6c42\u503c\uff0c\u7136\u540e\u6254\u6389\u5b83\u4eec\uff1a print([a.title for a in models.Article.objects.all()]) print([a.create_time for a in models.Article.objects.all()]) \u8fd9\u610f\u5473\u7740\u76f8\u540c\u7684\u6570\u636e\u5e93\u67e5\u8be2\u5c06\u6267\u884c\u4e24\u6b21\uff0c\u663e\u7136\u500d\u589e\u4e86\u4f60\u7684\u6570\u636e\u5e93\u8d1f\u8f7d\u3002\u540c\u65f6\uff0c\u8fd8\u6709\u53ef\u80fd\u4e24\u4e2a\u7ed3\u679c\u5217\u8868\u5e76\u4e0d\u5305\u542b\u76f8\u540c\u7684\u6570\u636e\u5e93\u8bb0\u5f55\uff0c\u56e0\u4e3a\u5728\u4e24\u6b21\u8bf7\u6c42\u671f\u95f4\u6709\u53ef\u80fd\u6709Article\u88ab\u6dfb\u52a0\u8fdb\u6765\u6216\u5220\u9664\u6389\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c\u53ea\u9700\u4fdd\u5b58 \u67e5\u8be2\u96c6 \u5e76\u91cd\u65b0\u4f7f\u7528\u5b83\uff1a queryResult=models.Article.objects.all() print([a.title for a in queryResult]) print([a.create_time for a in queryResult])","title":"\u7f13\u5b58\u673a\u5236"},{"location":"#_112","text":"\u67e5\u8be2\u96c6\u4e0d\u4f1a\u6c38\u8fdc\u7f13\u5b58\u5b83\u4eec\u7684\u7ed3\u679c\u3002\u5f53\u53ea\u5bf9\u67e5\u8be2\u96c6\u7684\u90e8\u5206\u8fdb\u884c\u6c42\u503c\u65f6\u4f1a\u68c0\u67e5\u7f13\u5b58\uff0c \u5982\u679c\u8fd9\u4e2a\u90e8\u5206\u4e0d\u5728\u7f13\u5b58\u4e2d\uff0c\u90a3\u4e48\u63a5\u4e0b\u6765\u67e5\u8be2\u8fd4\u56de\u7684\u8bb0\u5f55\u90fd\u5c06\u4e0d\u4f1a\u88ab\u7f13\u5b58\u3002\u6240\u4ee5\uff0c\u8fd9\u610f\u5473\u7740\u4f7f\u7528\u5207\u7247\u6216\u7d22\u5f15\u6765\u9650\u5236\u67e5\u8be2\u96c6\u5c06\u4e0d\u4f1a\u586b\u5145\u7f13\u5b58\u3002 \u4f8b\u5982\uff0c\u91cd\u590d\u83b7\u53d6\u67e5\u8be2\u96c6\u5bf9\u8c61\u4e2d\u4e00\u4e2a\u7279\u5b9a\u7684\u7d22\u5f15\u5c06\u6bcf\u6b21\u90fd\u67e5\u8be2\u6570\u636e\u5e93\uff1a >>> queryset = Entry.objects.all() >>> print queryset[5] # Queries the database >>> print queryset[5] # Queries the database again \u7136\u800c\uff0c\u5982\u679c\u5df2\u7ecf\u5bf9\u5168\u90e8\u67e5\u8be2\u96c6\u6c42\u503c\u8fc7\uff0c\u5219\u5c06\u68c0\u67e5\u7f13\u5b58\uff1a >>> queryset = Entry.objects.all() >>> [entry for entry in queryset] # Queries the database >>> print queryset[5] # Uses cache >>> print queryset[5] # Uses cache \u4e0b\u9762\u662f\u4e00\u4e9b\u5176\u5b83\u4f8b\u5b50\uff0c\u5b83\u4eec\u4f1a\u4f7f\u5f97\u5168\u90e8\u7684\u67e5\u8be2\u96c6\u88ab\u6c42\u503c\u5e76\u586b\u5145\u5230\u7f13\u5b58\u4e2d\uff1a >>> [entry for entry in queryset] >>> bool(queryset) >>> entry in queryset >>> list(queryset) \u6ce8\uff1a\u7b80\u5355\u5730\u6253\u5370\u67e5\u8be2\u96c6\u4e0d\u4f1a\u586b\u5145\u7f13\u5b58\u3002 queryResult=models.Article.objects.all() print(queryResult) # hits database print(queryResult) # hits database","title":"\u4f55\u65f6\u67e5\u8be2\u96c6\u4e0d\u4f1a\u88ab\u7f13\u5b58?"},{"location":"#existsiterator","text":"","title":"exists()\u4e0eiterator()\u65b9\u6cd5"},{"location":"#exists","text":"\u7b80\u5355\u7684\u4f7f\u7528if\u8bed\u53e5\u8fdb\u884c\u5224\u65ad\u4e5f\u4f1a\u5b8c\u5168\u6267\u884c\u6574\u4e2aqueryset\u5e76\u4e14\u628a\u6570\u636e\u653e\u5165cache\uff0c\u867d\u7136\u4f60\u5e76\u4e0d\u9700\u8981\u8fd9\u4e9b \u6570\u636e\uff01\u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\uff0c\u53ef\u4ee5\u7528exists()\u65b9\u6cd5\u6765\u68c0\u67e5\u662f\u5426\u6709\u6570\u636e\uff1a if queryResult.exists(): #SELECT (1) AS \"a\" FROM \"blog_article\" LIMIT 1; args=() print(\"exists...\")","title":"exists\uff1a"},{"location":"#iterator","text":"\u5f53queryset\u975e\u5e38\u5de8\u5927\u65f6\uff0ccache\u4f1a\u6210\u4e3a\u95ee\u9898\u3002 \u5904\u7406\u6210\u5343\u4e0a\u4e07\u7684\u8bb0\u5f55\u65f6\uff0c\u5c06\u5b83\u4eec\u4e00\u6b21\u88c5\u5165\u5185\u5b58\u662f\u5f88\u6d6a\u8d39\u7684\u3002\u66f4\u7cdf\u7cd5\u7684\u662f\uff0c\u5de8\u5927\u7684queryset\u53ef\u80fd\u4f1a\u9501\u4f4f\u7cfb\u7edf \u8fdb\u7a0b\uff0c\u8ba9\u4f60\u7684\u7a0b\u5e8f\u6fd2\u4e34\u5d29\u6e83\u3002\u8981\u907f\u514d\u5728\u904d\u5386\u6570\u636e\u7684\u540c\u65f6\u4ea7\u751fqueryset cache\uff0c\u53ef\u4ee5\u4f7f\u7528iterator()\u65b9\u6cd5 \u6765\u83b7\u53d6\u6570\u636e\uff0c\u5904\u7406\u5b8c\u6570\u636e\u5c31\u5c06\u5176\u4e22\u5f03\u3002 objs = Book.objects.all().iterator() # iterator()\u53ef\u4ee5\u4e00\u6b21\u53ea\u4ece\u6570\u636e\u5e93\u83b7\u53d6\u5c11\u91cf\u6570\u636e\uff0c\u8fd9\u6837\u53ef\u4ee5\u8282\u7701\u5185\u5b58 for obj in objs: print(obj.title) #BUT,\u518d\u6b21\u904d\u5386\u6ca1\u6709\u6253\u5370,\u56e0\u4e3a\u8fed\u4ee3\u5668\u5df2\u7ecf\u5728\u4e0a\u4e00\u6b21\u904d\u5386(next)\u5230\u6700\u540e\u4e00\u6b21\u4e86,\u6ca1\u5f97\u904d\u5386\u4e86 for obj in objs: print(obj.title) \u5f53\u7136\uff0c\u4f7f\u7528iterator()\u65b9\u6cd5\u6765\u9632\u6b62\u751f\u6210cache\uff0c\u610f\u5473\u7740\u904d\u5386\u540c\u4e00\u4e2aqueryset\u65f6\u4f1a\u91cd\u590d\u6267\u884c\u67e5\u8be2\u3002\u6240\u4ee5\u4f7f #\u7528iterator()\u7684\u65f6\u5019\u8981\u5f53\u5fc3\uff0c\u786e\u4fdd\u4f60\u7684\u4ee3\u7801\u5728\u64cd\u4f5c\u4e00\u4e2a\u5927\u7684queryset\u65f6\u6ca1\u6709\u91cd\u590d\u6267\u884c\u67e5\u8be2\u3002 \u603b\u7ed3: queryset\u7684cache\u662f\u7528\u4e8e\u51cf\u5c11\u7a0b\u5e8f\u5bf9\u6570\u636e\u5e93\u7684\u67e5\u8be2\uff0c\u5728\u901a\u5e38\u7684\u4f7f\u7528\u4e0b\u4f1a\u4fdd\u8bc1\u53ea\u6709\u5728\u9700\u8981\u7684\u65f6\u5019\u624d\u4f1a\u67e5\u8be2\u6570\u636e\u5e93\u3002 \u4f7f\u7528exists()\u548citerator()\u65b9\u6cd5\u53ef\u4ee5\u4f18\u5316\u7a0b\u5e8f\u5bf9\u5185\u5b58\u7684\u4f7f\u7528\u3002\u4e0d\u8fc7\uff0c\u7531\u4e8e\u5b83\u4eec\u5e76\u4e0d\u4f1a\u751f\u6210queryset cache\uff0c\u53ef\u80fd \u4f1a\u9020\u6210\u989d\u5916\u7684\u6570\u636e\u5e93\u67e5\u8be2\u3002","title":"iterator:"},{"location":"#_113","text":"\u5904\u7406\u7c7b\u4f3c\u642d\u914d pizza \u548c topping \u8fd9\u6837\u7b80\u5355\u7684\u591a\u5bf9\u591a\u5173\u7cfb\u65f6\uff0c\u4f7f\u7528\u6807\u51c6\u7684 ManyToManyField \u5c31\u53ef\u4ee5\u4e86\u3002\u4f46\u662f\uff0c\u6709\u65f6\u4f60\u53ef\u80fd\u9700\u8981\u5173\u8054\u6570\u636e\u5230\u4e24\u4e2a\u6a21\u578b\u4e4b\u95f4\u7684\u5173\u7cfb\u4e0a\u3002 \u4f8b\u5982\uff0c\u6709\u8fd9\u6837\u4e00\u4e2a\u5e94\u7528\uff0c\u5b83\u8bb0\u5f55\u97f3\u4e50\u5bb6\u6240\u5c5e\u7684\u97f3\u4e50\u5c0f\u7ec4\u3002\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a ManyToManyField \u8868\u793a\u5c0f\u7ec4\u548c\u6210\u5458\u4e4b\u95f4\u7684\u591a\u5bf9\u591a\u5173\u7cfb\u3002\u4f46\u662f\uff0c\u6709\u65f6\u4f60\u53ef\u80fd\u60f3\u77e5\u9053\u66f4\u591a\u6210\u5458\u5173\u7cfb\u7684\u7ec6\u8282\uff0c\u6bd4\u5982\u6210\u5458\u662f\u4f55\u65f6\u52a0\u5165\u5c0f\u7ec4\u7684\u3002 \u5bf9\u4e8e\u8fd9\u4e9b\u60c5\u51b5\uff0cDjango \u5141\u8bb8\u4f60\u6307\u5b9a\u4e00\u4e2a\u4e2d\u4ecb\u6a21\u578b\u6765\u5b9a\u4e49\u591a\u5bf9\u591a\u5173\u7cfb\u3002 \u4f60\u53ef\u4ee5\u5c06\u5176\u4ed6\u5b57\u6bb5\u653e\u5728\u4e2d\u4ecb\u6a21\u578b\u91cc\u9762\u3002\u6e90\u6a21\u578b\u7684 ManyToManyField \u5b57\u6bb5\u5c06\u4f7f\u7528 through \u53c2\u6570\u6307\u5411\u4e2d\u4ecb\u6a21\u578b\u3002\u5bf9\u4e8e\u4e0a\u9762\u7684\u97f3\u4e50\u5c0f\u7ec4\u7684\u4f8b\u5b50\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a from django.db import models class Person(models.Model): name = models.CharField(max_length=128) def __str__(self): # __unicode__ on Python 2 return self.name class Group(models.Model): name = models.CharField(max_length=128) members = models.ManyToManyField(Person, through='Membership') def __str__(self): # __unicode__ on Python 2 return self.name class Membership(models.Model): person = models.ForeignKey(Person) group = models.ForeignKey(Group) date_joined = models.DateField() invite_reason = models.CharField(max_length=64) \u65e2\u7136\u4f60\u5df2\u7ecf\u8bbe\u7f6e\u597d ManyToManyField \u6765\u4f7f\u7528\u4e2d\u4ecb\u6a21\u578b\uff08\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u5c31\u662f Membership \uff09\uff0c\u63a5\u4e0b\u6765\u4f60\u8981\u5f00\u59cb\u521b\u5efa\u591a\u5bf9\u591a\u5173\u7cfb\u3002\u4f60\u8981\u505a\u7684\u5c31\u662f\u521b\u5efa\u4e2d\u4ecb\u6a21\u578b\u7684\u5b9e\u4f8b\uff1a >>> ringo = Person.objects.create(name=\"Ringo Starr\") >>> paul = Person.objects.create(name=\"Paul McCartney\") >>> beatles = Group.objects.create(name=\"The Beatles\") >>> m1 = Membership(person=ringo, group=beatles, ... date_joined=date(1962, 8, 16), ... invite_reason=\"Needed a new drummer.\") >>> m1.save() >>> beatles.members.all() [<Person: Ringo Starr>] >>> ringo.group_set.all() [<Group: The Beatles>] >>> m2 = Membership.objects.create(person=paul, group=beatles, ... date_joined=date(1960, 8, 1), ... invite_reason=\"Wanted to form a band.\") >>> beatles.members.all() [<Person: Ringo Starr>, <Person: Paul McCartney>] \u4e0e\u666e\u901a\u7684\u591a\u5bf9\u591a\u5b57\u6bb5\u4e0d\u540c\uff0c\u4f60\u4e0d\u80fd\u4f7f\u7528 add \u3001 create \u548c\u8d4b\u503c\u8bed\u53e5\uff08\u6bd4\u5982\uff0c beatles.members = [...] \uff09\u6765\u521b\u5efa\u5173\u7cfb\uff1a # THIS WILL NOT WORK >>> beatles.members.add(john) # NEITHER WILL THIS >>> beatles.members.create(name=\"George Harrison\") # AND NEITHER WILL THIS >>> beatles.members = [john, paul, ringo, george] \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u8fd9\u6837\u505a\uff1f \u8fd9\u662f\u56e0\u4e3a\u4f60\u4e0d\u80fd\u53ea\u521b\u5efa Person \u548c Group \u4e4b\u95f4\u7684\u5173\u8054\u5173\u7cfb\uff0c\u4f60\u8fd8\u8981\u6307\u5b9a Membership \u6a21\u578b\u4e2d\u6240\u9700\u8981\u7684\u6240\u6709\u4fe1\u606f\uff1b\u800c\u7b80\u5355\u7684 add \u3001 create \u548c\u8d4b\u503c\u8bed\u53e5\u662f\u505a\u4e0d\u5230\u8fd9\u4e00\u70b9\u7684\u3002\u6240\u4ee5\u5b83\u4eec\u4e0d\u80fd\u5728\u4f7f\u7528\u4e2d\u4ecb\u6a21\u578b\u7684\u591a\u5bf9\u591a\u5173\u7cfb\u4e2d\u4f7f\u7528\u3002\u6b64\u65f6\uff0c\u552f\u4e00\u7684\u529e\u6cd5\u5c31\u662f\u521b\u5efa\u4e2d\u4ecb\u6a21\u578b\u7684\u5b9e\u4f8b\u3002 remove() \u65b9\u6cd5\u88ab\u7981\u7528\u4e5f\u662f\u51fa\u4e8e\u540c\u6837\u7684\u539f\u56e0\u3002\u4f46\u662f clear() \u65b9\u6cd5\u5374\u662f\u53ef\u7528\u7684\u3002\u5b83\u53ef\u4ee5\u6e05\u7a7a\u67d0\u4e2a\u5b9e\u4f8b\u6240\u6709\u7684\u591a\u5bf9\u591a\u5173\u7cfb\uff1a >>> # Beatles have broken up >>> beatles.members.clear() >>> # Note that this deletes the intermediate model instances >>> Membership.objects.all() []","title":"\u4e2d\u4ecb\u6a21\u578b"},{"location":"#_114","text":"","title":"\u67e5\u8be2\u4f18\u5316"},{"location":"#_115","text":"class UserInfo(AbstractUser): \"\"\" \u7528\u6237\u4fe1\u606f \"\"\" nid = models.BigAutoField(primary_key=True) nickname = models.CharField(verbose_name='\u6635\u79f0', max_length=32) telephone = models.CharField(max_length=11, blank=True, null=True, unique=True, verbose_name='\u624b\u673a\u53f7\u7801') avatar = models.FileField(verbose_name='\u5934\u50cf',upload_to = 'avatar/',default=\"/avatar/default.png\") create_time = models.DateTimeField(verbose_name='\u521b\u5efa\u65f6\u95f4', auto_now_add=True) fans = models.ManyToManyField(verbose_name='\u7c89\u4e1d\u4eec', to='UserInfo', through='UserFans', related_name='f', through_fields=('user', 'follower')) def __str__(self): return self.username class UserFans(models.Model): \"\"\" \u4e92\u7c89\u5173\u7cfb\u8868 \"\"\" nid = models.AutoField(primary_key=True) user = models.ForeignKey(verbose_name='\u535a\u4e3b', to='UserInfo', to_field='nid', related_name='users') follower = models.ForeignKey(verbose_name='\u7c89\u4e1d', to='UserInfo', to_field='nid', related_name='followers') class Blog(models.Model): \"\"\" \u535a\u5ba2\u4fe1\u606f \"\"\" nid = models.BigAutoField(primary_key=True) title = models.CharField(verbose_name='\u4e2a\u4eba\u535a\u5ba2\u6807\u9898', max_length=64) site = models.CharField(verbose_name='\u4e2a\u4eba\u535a\u5ba2\u540e\u7f00', max_length=32, unique=True) theme = models.CharField(verbose_name='\u535a\u5ba2\u4e3b\u9898', max_length=32) user = models.OneToOneField(to='UserInfo', to_field='nid') def __str__(self): return self.title class Category(models.Model): \"\"\" \u535a\u4e3b\u4e2a\u4eba\u6587\u7ae0\u5206\u7c7b\u8868 \"\"\" nid = models.AutoField(primary_key=True) title = models.CharField(verbose_name='\u5206\u7c7b\u6807\u9898', max_length=32) blog = models.ForeignKey(verbose_name='\u6240\u5c5e\u535a\u5ba2', to='Blog', to_field='nid') class Article(models.Model): nid = models.BigAutoField(primary_key=True) title = models.CharField(max_length=50, verbose_name='\u6587\u7ae0\u6807\u9898') desc = models.CharField(max_length=255, verbose_name='\u6587\u7ae0\u63cf\u8ff0') read_count = models.IntegerField(default=0) comment_count= models.IntegerField(default=0) up_count = models.IntegerField(default=0) down_count = models.IntegerField(default=0) category = models.ForeignKey(verbose_name='\u6587\u7ae0\u7c7b\u578b', to='Category', to_field='nid', null=True) create_time = models.DateField(verbose_name='\u521b\u5efa\u65f6\u95f4') blog = models.ForeignKey(verbose_name='\u6240\u5c5e\u535a\u5ba2', to='Blog', to_field='nid') tags = models.ManyToManyField( to=\"Tag\", through='Article2Tag', through_fields=('article', 'tag'), ) class ArticleDetail(models.Model): \"\"\" \u6587\u7ae0\u8be6\u7ec6\u8868 \"\"\" nid = models.AutoField(primary_key=True) content = models.TextField(verbose_name='\u6587\u7ae0\u5185\u5bb9', ) article = models.OneToOneField(verbose_name='\u6240\u5c5e\u6587\u7ae0', to='Article', to_field='nid') class Comment(models.Model): \"\"\" \u8bc4\u8bba\u8868 \"\"\" nid = models.BigAutoField(primary_key=True) article = models.ForeignKey(verbose_name='\u8bc4\u8bba\u6587\u7ae0', to='Article', to_field='nid') content = models.CharField(verbose_name='\u8bc4\u8bba\u5185\u5bb9', max_length=255) create_time = models.DateTimeField(verbose_name='\u521b\u5efa\u65f6\u95f4', auto_now_add=True) parent_comment = models.ForeignKey('self', blank=True, null=True, verbose_name='\u7236\u7ea7\u8bc4\u8bba') user = models.ForeignKey(verbose_name='\u8bc4\u8bba\u8005', to='UserInfo', to_field='nid') up_count = models.IntegerField(default=0) def __str__(self): return self.content class ArticleUpDown(models.Model): \"\"\" \u70b9\u8d5e\u8868 \"\"\" nid = models.AutoField(primary_key=True) user = models.ForeignKey('UserInfo', null=True) article = models.ForeignKey(\"Article\", null=True) models.BooleanField(verbose_name='\u662f\u5426\u8d5e') class CommentUp(models.Model): \"\"\" \u70b9\u8d5e\u8868 \"\"\" nid = models.AutoField(primary_key=True) user = models.ForeignKey('UserInfo', null=True) comment = models.ForeignKey(\"Comment\", null=True) class Tag(models.Model): nid = models.AutoField(primary_key=True) title = models.CharField(verbose_name='\u6807\u7b7e\u540d\u79f0', max_length=32) blog = models.ForeignKey(verbose_name='\u6240\u5c5e\u535a\u5ba2', to='Blog', to_field='nid') class Article2Tag(models.Model): nid = models.AutoField(primary_key=True) article = models.ForeignKey(verbose_name='\u6587\u7ae0', to=\"Article\", to_field='nid') tag = models.ForeignKey(verbose_name='\u6807\u7b7e', to=\"Tag\", to_field='nid')","title":"\u8868\u6570\u636e"},{"location":"#select_related","text":"","title":"select_related"},{"location":"#_116","text":"\u5bf9\u4e8e\u4e00\u5bf9\u4e00\u5b57\u6bb5\uff08OneToOneField\uff09\u548c\u5916\u952e\u5b57\u6bb5\uff08ForeignKey\uff09\uff0c\u53ef\u4ee5\u4f7f\u7528select_related \u6765\u5bf9QuerySet\u8fdb\u884c\u4f18\u5316\u3002 select_related \u8fd4\u56de\u4e00\u4e2a QuerySet \uff0c\u5f53\u6267\u884c\u5b83\u7684\u67e5\u8be2\u65f6\u5b83\u6cbf\u7740\u5916\u952e\u5173\u7cfb\u67e5\u8be2\u5173\u8054\u7684\u5bf9\u8c61\u7684\u6570\u636e\u3002\u5b83\u4f1a\u751f\u6210\u4e00\u4e2a\u590d\u6742\u7684\u67e5\u8be2\u5e76\u5f15\u8d77\u6027\u80fd\u7684\u635f\u8017\uff0c\u4f46\u662f\u5728\u4ee5\u540e\u4f7f\u7528\u5916\u952e\u5173\u7cfb\u65f6\u5c06\u4e0d\u9700\u8981\u6570\u636e\u5e93\u67e5\u8be2\u3002 \u7b80\u5355\u8bf4\uff0c\u5728\u5bf9QuerySet\u4f7f\u7528select_related()\u51fd\u6570\u540e\uff0cDjango\u4f1a\u83b7\u53d6\u76f8\u5e94\u5916\u952e\u5bf9\u5e94\u7684\u5bf9\u8c61\uff0c\u4ece\u800c\u5728\u4e4b\u540e\u9700\u8981\u7684\u65f6\u5019\u4e0d\u5fc5\u518d\u67e5\u8be2\u6570\u636e\u5e93\u4e86\u3002 \u4e0b\u9762\u7684\u4f8b\u5b50\u89e3\u91ca\u4e86\u666e\u901a\u67e5\u8be2\u548c select_related() \u67e5\u8be2\u7684\u533a\u522b\u3002 \u67e5\u8be2id=2\u7684\u6587\u7ae0\u7684\u5206\u7c7b\u540d\u79f0,\u4e0b\u9762\u662f\u4e00\u4e2a\u6807\u51c6\u7684\u67e5\u8be2\uff1a # Hits the database. article=models.Article.objects.get(nid=2) # Hits the database again to get the related Blog object. print(article.category.title) ''' SELECT \"blog_article\".\"nid\", \"blog_article\".\"title\", \"blog_article\".\"desc\", \"blog_article\".\"read_count\", \"blog_article\".\"comment_count\", \"blog_article\".\"up_count\", \"blog_article\".\"down_count\", \"blog_article\".\"category_id\", \"blog_article\".\"create_time\", \"blog_article\".\"blog_id\", \"blog_article\".\"article_type_id\" FROM \"blog_article\" WHERE \"blog_article\".\"nid\" = 2; args=(2,) SELECT \"blog_category\".\"nid\", \"blog_category\".\"title\", \"blog_category\".\"blog_id\" FROM \"blog_category\" WHERE \"blog_category\".\"nid\" = 4; args=(4,) ''' \u5982\u679c\u6211\u4eec\u4f7f\u7528select_related()\u51fd\u6570\uff1a articleList=models.Article.objects.select_related(\"category\").all() for article_obj in articleList: # Doesn't hit the database, because article_obj.category # has been prepopulated in the previous query. print(article_obj.category.title) SELECT \"blog_article\".\"nid\", \"blog_article\".\"title\", \"blog_article\".\"desc\", \"blog_article\".\"read_count\", \"blog_article\".\"comment_count\", \"blog_article\".\"up_count\", \"blog_article\".\"down_count\", \"blog_article\".\"category_id\", \"blog_article\".\"create_time\", \"blog_article\".\"blog_id\", \"blog_article\".\"article_type_id\", \"blog_category\".\"nid\", \"blog_category\".\"title\", \"blog_category\".\"blog_id\" FROM \"blog_article\" LEFT OUTER JOIN \"blog_category\" ON (\"blog_article\".\"category_id\" = \"blog_category\".\"nid\");","title":"\u7b80\u5355\u4f7f\u7528"},{"location":"#_117","text":"\u8fd9\u662f\u9488\u5bf9category\u7684\u5916\u952e\u67e5\u8be2\uff0c\u5982\u679c\u662f\u53e6\u5916\u4e00\u4e2a\u5916\u952e\u5462\uff1f\u8ba9\u6211\u4eec\u4e00\u8d77\u770b\u4e0b\uff1a article=models.Article.objects.select_related(\"category\").get(nid=1) print(article.articledetail) \u89c2\u5bdflogging\u7ed3\u679c\uff0c\u53d1\u73b0\u4f9d\u7136\u9700\u8981\u67e5\u8be2\u4e24\u6b21\uff0c\u6240\u4ee5\u9700\u8981\u6539\u4e3a\uff1a article=models.Article.objects.select_related(\"category\",\"articledetail\").get(nid=1) print(article.articledetail) \u6216\u8005\uff1a article=models.Article.objects \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.select_related(\"category\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.select_related(\"articledetail\") \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.get(nid=1) # django 1.7 \u652f\u6301\u94fe\u5f0f\u64cd\u4f5c print(article.articledetail) SELECT \"blog_article\".\"nid\", \"blog_article\".\"title\", ...... \"blog_category\".\"nid\", \"blog_category\".\"title\", \"blog_category\".\"blog_id\", \"blog_articledetail\".\"nid\", \"blog_articledetail\".\"content\", \"blog_articledetail\".\"article_id\" FROM \"blog_article\" LEFT OUTER JOIN \"blog_category\" ON (\"blog_article\".\"category_id\" = \"blog_category\".\"nid\") LEFT OUTER JOIN \"blog_articledetail\" ON (\"blog_article\".\"nid\" = \"blog_articledetail\".\"article_id\") WHERE \"blog_article\".\"nid\" = 1; args=(1,)","title":"\u591a\u5916\u952e\u67e5\u8be2"},{"location":"#_118","text":"# \u67e5\u8be2id=1\u7684\u6587\u7ae0\u7684\u7528\u6237\u59d3\u540d article=models.Article.objects.select_related(\"blog\").get(nid=1) print(article.blog.user.username) \u4f9d\u7136\u9700\u8981\u67e5\u8be2\u4e24\u6b21\uff1a SELECT \"blog_article\".\"nid\", \"blog_article\".\"title\", ...... \"blog_blog\".\"nid\", \"blog_blog\".\"title\", FROM \"blog_article\" INNER JOIN \"blog_blog\" ON (\"blog_article\".\"blog_id\" = \"blog_blog\".\"nid\") WHERE \"blog_article\".\"nid\" = 1; SELECT \"blog_userinfo\".\"password\", \"blog_userinfo\".\"last_login\", ...... FROM \"blog_userinfo\" WHERE \"blog_userinfo\".\"nid\" = 1; \u8fd9\u662f\u56e0\u4e3a\u7b2c\u4e00\u6b21\u67e5\u8be2\u6ca1\u6709query\u5230userInfo\u8868\uff0c\u6240\u4ee5\uff0c\u4fee\u6539\u5982\u4e0b\uff1a article=models.Article.objects.select_related(\"blog__user\").get(nid=1) print(article.blog.user.username) SELECT \"blog_article\".\"nid\", \"blog_article\".\"title\", ...... \"blog_blog\".\"nid\", \"blog_blog\".\"title\", ...... \"blog_userinfo\".\"password\", \"blog_userinfo\".\"last_login\", ...... FROM \"blog_article\" INNER JOIN \"blog_blog\" ON (\"blog_article\".\"blog_id\" = \"blog_blog\".\"nid\") INNER JOIN \"blog_userinfo\" ON (\"blog_blog\".\"user_id\" = \"blog_userinfo\".\"nid\") WHERE \"blog_article\".\"nid\" = 1;","title":"\u6df1\u5c42\u67e5\u8be2"},{"location":"#_119","text":"select_related\u4e3b\u8981\u9488\u4e00\u5bf9\u4e00\u548c\u591a\u5bf9\u4e00\u5173\u7cfb\u8fdb\u884c\u4f18\u5316\u3002 select_related\u4f7f\u7528SQL\u7684JOIN\u8bed\u53e5\u8fdb\u884c\u4f18\u5316\uff0c\u901a\u8fc7\u51cf\u5c11SQL\u67e5\u8be2\u7684\u6b21\u6570\u6765\u8fdb\u884c\u4f18\u5316\u3001\u63d0\u9ad8\u6027\u80fd\u3002 \u53ef\u4ee5\u901a\u8fc7\u53ef\u53d8\u957f\u53c2\u6570\u6307\u5b9a\u9700\u8981select_related\u7684\u5b57\u6bb5\u540d\u3002\u4e5f\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u53cc\u4e0b\u5212\u7ebf\u201c__\u201d\u8fde\u63a5\u5b57\u6bb5\u540d\u6765\u5b9e\u73b0\u6307\u5b9a\u7684\u9012\u5f52\u67e5\u8be2\u3002 \u6ca1\u6709\u6307\u5b9a\u7684\u5b57\u6bb5\u4e0d\u4f1a\u7f13\u5b58\uff0c\u6ca1\u6709\u6307\u5b9a\u7684\u6df1\u5ea6\u4e0d\u4f1a\u7f13\u5b58\uff0c\u5982\u679c\u8981\u8bbf\u95ee\u7684\u8bddDjango\u4f1a\u518d\u6b21\u8fdb\u884cSQL\u67e5\u8be2\u3002 \u4e5f\u53ef\u4ee5\u901a\u8fc7depth\u53c2\u6570\u6307\u5b9a\u9012\u5f52\u7684\u6df1\u5ea6\uff0cDjango\u4f1a\u81ea\u52a8\u7f13\u5b58\u6307\u5b9a\u6df1\u5ea6\u5185\u6240\u6709\u7684\u5b57\u6bb5\u3002\u5982\u679c\u8981\u8bbf\u95ee\u6307\u5b9a\u6df1\u5ea6\u5916\u7684\u5b57\u6bb5\uff0cDjango\u4f1a\u518d\u6b21\u8fdb\u884cSQL\u67e5\u8be2\u3002 \u4e5f\u63a5\u53d7\u65e0\u53c2\u6570\u7684\u8c03\u7528\uff0cDjango\u4f1a\u5c3d\u53ef\u80fd\u6df1\u7684\u9012\u5f52\u67e5\u8be2\u6240\u6709\u7684\u5b57\u6bb5\u3002\u4f46\u6ce8\u610f\u6709Django\u9012\u5f52\u7684\u9650\u5236\u548c\u6027\u80fd\u7684\u6d6a\u8d39\u3002 Django >= 1.7\uff0c\u94fe\u5f0f\u8c03\u7528\u7684select_related\u76f8\u5f53\u4e8e\u4f7f\u7528\u53ef\u53d8\u957f\u53c2\u6570\u3002Django < 1.7\uff0c\u94fe\u5f0f\u8c03\u7528\u4f1a\u5bfc\u81f4\u524d\u8fb9\u7684select_related\u5931\u6548\uff0c\u53ea\u4fdd\u7559\u6700\u540e\u4e00\u4e2a\u3002","title":"\u603b\u7ed3"},{"location":"#prefetch_related","text":"\u5bf9\u4e8e\u591a\u5bf9\u591a\u5b57\u6bb5\uff08ManyToManyField\uff09\u548c\u4e00\u5bf9\u591a\u5b57\u6bb5\uff0c\u53ef\u4ee5\u4f7f\u7528prefetch_related()\u6765\u8fdb\u884c\u4f18\u5316\u3002 prefetch_related()\u548cselect_related()\u7684\u8bbe\u8ba1\u76ee\u7684\u5f88\u76f8\u4f3c\uff0c\u90fd\u662f\u4e3a\u4e86\u51cf\u5c11SQL\u67e5\u8be2\u7684\u6570\u91cf\uff0c\u4f46\u662f\u5b9e\u73b0\u7684\u65b9\u5f0f\u4e0d\u4e00\u6837\u3002\u540e\u8005\u662f\u901a\u8fc7JOIN\u8bed\u53e5\uff0c\u5728SQL\u67e5\u8be2\u5185\u89e3\u51b3\u95ee\u9898\u3002\u4f46\u662f\u5bf9\u4e8e\u591a\u5bf9\u591a\u5173\u7cfb\uff0c\u4f7f\u7528SQL\u8bed\u53e5\u89e3\u51b3\u5c31\u663e\u5f97\u6709\u4e9b\u4e0d\u592a\u660e\u667a\uff0c\u56e0\u4e3aJOIN\u5f97\u5230\u7684\u8868\u5c06\u4f1a\u5f88\u957f\uff0c\u4f1a\u5bfc\u81f4SQL\u8bed\u53e5\u8fd0\u884c\u65f6\u95f4\u7684\u589e\u52a0\u548c\u5185\u5b58\u5360\u7528\u7684\u589e\u52a0\u3002\u82e5\u6709n\u4e2a\u5bf9\u8c61\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u7684\u591a\u5bf9\u591a\u5b57\u6bb5\u5bf9\u5e94Mi\u6761\uff0c\u5c31\u4f1a\u751f\u6210\u03a3(n)Mi \u884c\u7684\u7ed3\u679c\u8868\u3002 prefetch_related()\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u5206\u522b\u67e5\u8be2\u6bcf\u4e2a\u8868\uff0c\u7136\u540e\u7528Python\u5904\u7406\u4ed6\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb\u3002 # \u67e5\u8be2\u6240\u6709\u6587\u7ae0\u5173\u8054\u7684\u6240\u6709\u6807\u7b7e article_obj=models.Article.objects.all() for i in article_obj: print(i.tags.all()) #4\u7bc7\u6587\u7ae0: hits database 5 \u6539\u4e3aprefetch_related\uff1a # \u67e5\u8be2\u6240\u6709\u6587\u7ae0\u5173\u8054\u7684\u6240\u6709\u6807\u7b7e article_obj=models.Article.objects.prefetch_related(\"tags\").all() for i in article_obj: print(i.tags.all()) #4\u7bc7\u6587\u7ae0: hits database 2 SELECT \"blog_article\".\"nid\", \"blog_article\".\"title\", ...... FROM \"blog_article\"; SELECT (\"blog_article2tag\".\"article_id\") AS \"_prefetch_related_val_article_id\", \"blog_tag\".\"nid\", \"blog_tag\".\"title\", \"blog_tag\".\"blog_id\" FROM \"blog_tag\" INNER JOIN \"blog_article2tag\" ON (\"blog_tag\".\"nid\" = \"blog_article2tag\".\"tag_id\") WHERE \"blog_article2tag\".\"article_id\" IN (1, 2, 3, 4);","title":"prefetch_related()"},{"location":"#extra","text":"extra(select=None, where=None, params=None, tables=None, order_by=None, select_params=None) \u6709\u4e9b\u60c5\u51b5\u4e0b\uff0cDjango\u7684\u67e5\u8be2\u8bed\u6cd5\u96be\u4ee5\u7b80\u5355\u7684\u8868\u8fbe\u590d\u6742\u7684 WHERE \u5b50\u53e5\uff0c\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5, Django \u63d0\u4f9b\u4e86 extra() QuerySet \u4fee\u6539\u673a\u5236 \u2014 \u5b83\u80fd\u5728 QuerySet \u751f\u6210\u7684SQL\u4ece\u53e5\u4e2d\u6ce8\u5165\u65b0\u5b50\u53e5 extra\u53ef\u4ee5\u6307\u5b9a\u4e00\u4e2a\u6216\u591a\u4e2a \u53c2\u6570 ,\u4f8b\u5982 select , where or tables . \u8fd9\u4e9b\u53c2\u6570\u90fd\u4e0d\u662f\u5fc5\u987b\u7684\uff0c\u4f46\u662f\u4f60\u81f3\u5c11\u8981\u4f7f\u7528\u4e00\u4e2a!\u8981\u6ce8\u610f\u8fd9\u4e9b\u989d\u5916\u7684\u65b9\u5f0f\u5bf9\u4e0d\u540c\u7684\u6570\u636e\u5e93\u5f15\u64ce\u53ef\u80fd\u5b58\u5728\u79fb\u690d\u6027\u95ee\u9898.(\u56e0\u4e3a\u4f60\u5728\u663e\u5f0f\u7684\u4e66\u5199SQL\u8bed\u53e5),\u9664\u975e\u4e07\u4e0d\u5f97\u5df2,\u5c3d\u91cf\u907f\u514d\u8fd9\u6837\u505a","title":"extra"},{"location":"#select","text":"The select \u53c2\u6570\u53ef\u4ee5\u8ba9\u4f60\u5728 SELECT \u4ece\u53e5\u4e2d\u6dfb\u52a0\u5176\u4ed6\u5b57\u6bb5\u4fe1\u606f\uff0c\u5b83\u5e94\u8be5\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u5b58\u653e\u7740\u5c5e\u6027\u540d\u5230 SQL \u4ece\u53e5\u7684\u6620\u5c04\u3002 queryResult=models.Article \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.objects.extra(select={'is_recent': \"create_time > '2017-09-05'\"}) \u7ed3\u679c\u96c6\u4e2d\u6bcf\u4e2a Entry \u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u989d\u5916\u7684\u5c5e\u6027is_recent, \u5b83\u662f\u4e00\u4e2a\u5e03\u5c14\u503c\uff0c\u8868\u793a Article\u5bf9\u8c61\u7684create_time \u662f\u5426\u665a\u4e8e2017-09-05. \u7ec3\u4e60\uff1a # in sqlite: article_obj=models.Article.objects.filter(nid=1).extra(select={\"standard_time\":\"strftime('%%Y-%%m-%%d',create_time)\"}).values(\"standard_time\",\"nid\",\"title\") print(article_obj) # <QuerySet [{'title': 'MongoDb \u5165\u95e8\u6559\u7a0b', 'standard_time': '2017-09-03', 'nid': 1}]>","title":"\u53c2\u6570\u4e4bselect"},{"location":"#where-tables","text":"\u60a8\u53ef\u4ee5\u4f7f\u7528 where \u5b9a\u4e49\u663e\u5f0fSQL WHERE \u5b50\u53e5 - \u4e5f\u8bb8\u6267\u884c\u975e\u663e\u5f0f\u8fde\u63a5\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528 tables \u624b\u52a8\u5c06\u8868\u6dfb\u52a0\u5230SQL FROM \u5b50\u53e5\u3002 where \u548c tables \u90fd\u63a5\u53d7\u5b57\u7b26\u4e32\u5217\u8868\u3002\u6240\u6709 where \u53c2\u6570\u5747\u4e3a\u201c\u4e0e\u201d\u4efb\u4f55\u5176\u4ed6\u641c\u7d22\u6761\u4ef6\u3002 \u4e3e\u4f8b\u6765\u8bb2\uff1a queryResult=models.Article \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000.objects.extra(where=['nid in (1,3) OR title like \"py%\" ','nid>2'])","title":"\u53c2\u6570\u4e4bwhere / tables"},{"location":"#_120","text":"\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u5c3d\u53ef\u80fd\u4f7f\u7528bulk_create()\u6765\u51cf\u5c11SQL\u67e5\u8be2\u7684\u6570\u91cf\u3002\u4f8b\u5982\uff1a Entry.objects.bulk_create([ Entry(headline=\"Python 3.0 Released\"), Entry(headline=\"Python 3.1 Planned\") ]) ...\u66f4\u4f18\u4e8e\uff1a Entry.objects.create(headline=\"Python 3.0 Released\") Entry.objects.create(headline=\"Python 3.1 Planned\") \u6ce8\u610f\u8be5\u65b9\u6cd5\u6709\u5f88\u591a\u6ce8\u610f\u4e8b\u9879\uff0c\u6240\u4ee5\u786e\u4fdd\u5b83\u9002\u7528\u4e8e\u4f60\u7684\u60c5\u51b5\u3002 \u8fd9\u4e5f\u53ef\u4ee5\u7528\u5728ManyToManyFields\u4e2d\uff0c\u6240\u4ee5\uff1a my_band.members.add(me, my_friend) ...\u66f4\u4f18\u4e8e\uff1a my_band.members.add(me) my_band.members.add(my_friend) ...\u5176\u4e2dBands\u548cArtists\u5177\u6709\u591a\u5bf9\u591a\u5173\u8054\u3002","title":"\u6574\u4f53\u63d2\u5165"},{"location":"#django-admin","text":"\u77e5\u8bc6\u9884\u89c8 admin\u7ec4\u4ef6\u4f7f\u7528 admin\u6e90\u7801\u89e3\u6790","title":"Django-admin\u7ba1\u7406\u5de5\u5177"},{"location":"#admin","text":"Django \u63d0\u4f9b\u4e86\u57fa\u4e8e web \u7684\u7ba1\u7406\u5de5\u5177\u3002 Django \u81ea\u52a8\u7ba1\u7406\u5de5\u5177\u662f django.contrib \u7684\u4e00\u90e8\u5206\u3002\u4f60\u53ef\u4ee5\u5728\u9879\u76ee\u7684 settings.py \u4e2d\u7684 INSTALLED_APPS \u770b\u5230\u5b83\uff1a # Application definition INSTALLED_APPS = [ 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', \"app01\" ] django.contrib\u662f\u4e00\u5957\u5e9e\u5927\u7684\u529f\u80fd\u96c6\uff0c\u5b83\u662fDjango\u57fa\u672c\u4ee3\u7801\u7684\u7ec4\u6210\u90e8\u5206\u3002","title":"admin\u7ec4\u4ef6\u4f7f\u7528"},{"location":"#_121","text":"\u901a\u5e38\u6211\u4eec\u5728\u751f\u6210\u9879\u76ee\u65f6\u4f1a\u5728 urls.py \u4e2d\u81ea\u52a8\u8bbe\u7f6e\u597d\uff0c from django.conf.urls import url from django.contrib import admin urlpatterns = [ url(r'^admin/', admin.site.urls), ] \u5f53\u8fd9\u4e00\u5207\u90fd\u914d\u7f6e\u597d\u540e\uff0cDjango \u7ba1\u7406\u5de5\u5177\u5c31\u53ef\u4ee5\u8fd0\u884c\u4e86\u3002","title":"\u6fc0\u6d3b\u7ba1\u7406\u5de5\u5177"},{"location":"#_122","text":"\u542f\u52a8\u5f00\u53d1\u670d\u52a1\u5668\uff0c\u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u8bbf\u95ee http://127.0.0.1:8000/admin/\uff0c\u5f97\u5230\u767b\u9646\u754c\u9762\uff0c \u4f60\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4 python manage.py createsuperuser \u6765\u521b\u5efa\u8d85\u7ea7\u7528\u6237\u3002 \u4e3a\u4e86\u8ba9 admin \u754c\u9762\u7ba1\u7406\u67d0\u4e2a\u6570\u636e\u6a21\u578b\uff0c\u6211\u4eec\u9700\u8981\u5148\u6ce8\u518c\u8be5\u6570\u636e\u6a21\u578b\u5230 admin from django.db import models # Create your models here. class Author(models.Model): name=models.CharField( max_length=32) age=models.IntegerField() def __str__(self): return self.name class Publish(models.Model): name=models.CharField( max_length=32) email=models.EmailField() def __str__(self): return self.name class Book(models.Model): title = models.CharField( max_length=32) publishDate=models.DateField() price=models.DecimalField(max_digits=5,decimal_places=2) publisher=models.ForeignKey(to=\"Publish\") authors=models.ManyToManyField(to='Author') def __str__(self): return self.title","title":"\u4f7f\u7528\u7ba1\u7406\u5de5\u5177"},{"location":"#admin_1","text":"\u5728admin.py\u4e2d\u53ea\u9700\u8981\u8bb2Mode\u4e2d\u7684\u67d0\u4e2a\u7c7b\u6ce8\u518c\uff0c\u5373\u53ef\u5728Admin\u4e2d\u5b9e\u73b0\u589e\u5220\u6539\u67e5\u7684\u529f\u80fd\uff0c\u5982\uff1a admin.site.register(models.UserInfo) \u4f46\u662f\uff0c\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u8f83\u7b80\u5355\uff0c\u5982\u679c\u60f3\u8981\u8fdb\u884c\u66f4\u591a\u7684\u5b9a\u5236\u64cd\u4f5c\uff0c\u9700\u8981\u5229\u7528ModelAdmin\u8fdb\u884c\u64cd\u4f5c\uff0c\u5982\uff1a \u65b9\u5f0f\u4e00\uff1a class UserAdmin(admin.ModelAdmin): list_display = ('user', 'pwd',) admin.site.register(models.UserInfo, UserAdmin) # \u7b2c\u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u662f\u5217\u8868 \u65b9\u5f0f\u4e8c\uff1a @admin.register(models.UserInfo) # \u7b2c\u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u662f\u5217\u8868 class UserAdmin(admin.ModelAdmin): list_display = ('user', 'pwd',) ModelAdmin\u4e2d\u63d0\u4f9b\u4e86\u5927\u91cf\u7684\u53ef\u5b9a\u5236\u529f\u80fd\uff0c\u5982 list_display\uff0c\u5217\u8868\u65f6\uff0c\u5b9a\u5236\u663e\u793a\u7684\u5217\u3002 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): list_display = ('user', 'pwd', 'xxxxx') def xxxxx(self, obj): return \"xxxxx\" list_display_links\uff0c\u5217\u8868\u65f6\uff0c\u5b9a\u5236\u5217\u53ef\u4ee5\u70b9\u51fb\u8df3\u8f6c\u3002 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): list_display = ('user', 'pwd', 'xxxxx') list_display_links = ('pwd',) list_filter\uff0c\u5217\u8868\u65f6\uff0c\u5b9a\u5236\u53f3\u4fa7\u5feb\u901f\u7b5b\u9009\u3002 list_select_related\uff0c\u5217\u8868\u65f6\uff0c\u8fde\u8868\u67e5\u8be2\u662f\u5426\u81ea\u52a8select_related list_editable\uff0c\u5217\u8868\u65f6\uff0c\u53ef\u4ee5\u7f16\u8f91\u7684\u5217 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): list_display = ('user', 'pwd','ug',) list_editable = ('ug',) search_fields\uff0c\u5217\u8868\u65f6\uff0c\u6a21\u7cca\u641c\u7d22\u7684\u529f\u80fd @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): search_fields = ('user', 'pwd') date_hierarchy\uff0c\u5217\u8868\u65f6\uff0c\u5bf9Date\u548cDateTime\u7c7b\u578b\u8fdb\u884c\u641c\u7d22 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): date_hierarchy = 'ctime' 8 inlines\uff0c\u8be6\u7ec6\u9875\u9762\uff0c\u5982\u679c\u6709\u5176\u4ed6\u8868\u548c\u5f53\u524d\u8868\u505aFK\uff0c\u90a3\u4e48\u8be6\u7ec6\u9875\u9762\u53ef\u4ee5\u8fdb\u884c\u52a8\u6001\u589e\u52a0\u548c\u5220\u9664 class UserInfoInline(admin.StackedInline): # TabularInline extra = 0 model = models.UserInfo class GroupAdminMode(admin.ModelAdmin): list_display = ('id', 'title',) inlines = [UserInfoInline, ] 9 action\uff0c\u5217\u8868\u65f6\uff0c\u5b9a\u5236action\u4e2d\u7684\u64cd\u4f5c @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): # \u5b9a\u5236Action\u884c\u4e3a\u5177\u4f53\u65b9\u6cd5 def func(self, request, queryset): print(self, request, queryset) print(request.POST.getlist('_selected_action')) func.short_description = \"\u4e2d\u6587\u663e\u793a\u81ea\u5b9a\u4e49Actions\" actions = [func, ] # Action\u9009\u9879\u90fd\u662f\u5728\u9875\u9762\u4e0a\u65b9\u663e\u793a actions_on_top = True # Action\u9009\u9879\u90fd\u662f\u5728\u9875\u9762\u4e0b\u65b9\u663e\u793a actions_on_bottom = False # \u662f\u5426\u663e\u793a\u9009\u62e9\u4e2a\u6570 actions_selection_counter = True 10 \u5b9a\u5236HTML\u6a21\u677f add_form_template = None change_form_template = None change_list_template = None delete_confirmation_template = None delete_selected_confirmation_template = None object_history_template = None 11 raw_id_fields\uff0c\u8be6\u7ec6\u9875\u9762\uff0c\u9488\u5bf9FK\u548cM2M\u5b57\u6bb5\u53d8\u6210\u4ee5Input\u6846\u5f62\u5f0f @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): raw_id_fields = ('FK\u5b57\u6bb5', 'M2M\u5b57\u6bb5',) 12 fields\uff0c\u8be6\u7ec6\u9875\u9762\u65f6\uff0c\u663e\u793a\u5b57\u6bb5\u7684\u5b57\u6bb5 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): fields = ('user',) 13 exclude\uff0c\u8be6\u7ec6\u9875\u9762\u65f6\uff0c\u6392\u9664\u7684\u5b57\u6bb5 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): exclude = ('user',) 14 readonly_fields\uff0c\u8be6\u7ec6\u9875\u9762\u65f6\uff0c\u53ea\u8bfb\u5b57\u6bb5 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): readonly_fields = ('user',) 15 fieldsets\uff0c\u8be6\u7ec6\u9875\u9762\u65f6\uff0c\u4f7f\u7528fieldsets\u6807\u7b7e\u5bf9\u6570\u636e\u8fdb\u884c\u5206\u5272\u663e\u793a @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): fieldsets = ( ('\u57fa\u672c\u6570\u636e', { 'fields': ('user', 'pwd', 'ctime',) }), ('\u5176\u4ed6', { 'classes': ('collapse', 'wide', 'extrapretty'), # 'collapse','wide', 'extrapretty' 'fields': ('user', 'pwd'), }), ) 16 \u8be6\u7ec6\u9875\u9762\u65f6\uff0cM2M\u663e\u793a\u65f6\uff0c\u6570\u636e\u79fb\u52a8\u9009\u62e9\uff08\u65b9\u5411\uff1a\u4e0a\u4e0b\u548c\u5de6\u53f3\uff09 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): filter_vertical = (\"m2m\u5b57\u6bb5\",) # \u6216filter_horizontal = (\"m2m\u5b57\u6bb5\",) 17 ordering\uff0c\u5217\u8868\u65f6\uff0c\u6570\u636e\u6392\u5e8f\u89c4\u5219 @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): ordering = ('-id',) \u6216 def get_ordering(self, request): return ['-id', ] radio_fields\uff0c\u8be6\u7ec6\u9875\u9762\u65f6\uff0c\u4f7f\u7528radio\u663e\u793a\u9009\u9879\uff08FK\u9ed8\u8ba4\u4f7f\u7528select\uff09 radio_fields = {\"ug\": admin.VERTICAL} # \u6216admin.HORIZONTAL 19 form = ModelForm\uff0c\u7528\u4e8e\u5b9a\u5236\u7528\u6237\u8bf7\u6c42\u65f6\u5019\u8868\u5355\u9a8c\u8bc1 from app01 import models from django.forms import ModelForm from django.forms import fields class MyForm(ModelForm): others = fields.CharField() class Meta: model = models = models.UserInfo fields = \"__all__\" @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): form = MyForm 20 empty_value_display = \"\u5217\u6570\u636e\u4e3a\u7a7a\u65f6\uff0c\u663e\u793a\u9ed8\u8ba4\u503c\" @admin.register(models.UserInfo) class UserAdmin(admin.ModelAdmin): empty_value_display = \"\u5217\u6570\u636e\u4e3a\u7a7a\u65f6\uff0c\u9ed8\u8ba4\u663e\u793a\" list_display = ('user','pwd','up') def up(self,obj): return obj.user up.empty_value_display = \"\u6307\u5b9a\u5217\u6570\u636e\u4e3a\u7a7a\u65f6\uff0c\u9ed8\u8ba4\u663e\u793a\" from django.contrib import admin # Register your models here. from .models import * class BookInline(admin.StackedInline): # TabularInline extra = 0 model = Book class BookAdmin(admin.ModelAdmin): list_display = (\"title\",'publishDate', 'price',\"foo\",\"publisher\") list_display_links = ('publishDate',\"price\") list_filter = ('price',) list_editable=(\"title\",\"publisher\") search_fields = ('title',) date_hierarchy = 'publishDate' preserve_filters=False def foo(self,obj): return obj.title+str(obj.price) # \u5b9a\u5236Action\u884c\u4e3a\u5177\u4f53\u65b9\u6cd5 def func(self, request, queryset): print(self, request, queryset) print(request.POST.getlist('_selected_action')) func.short_description = \"\u4e2d\u6587\u663e\u793a\u81ea\u5b9a\u4e49Actions\" actions = [func, ] # Action\u9009\u9879\u90fd\u662f\u5728\u9875\u9762\u4e0a\u65b9\u663e\u793a actions_on_top = True # Action\u9009\u9879\u90fd\u662f\u5728\u9875\u9762\u4e0b\u65b9\u663e\u793a actions_on_bottom = False # \u662f\u5426\u663e\u793a\u9009\u62e9\u4e2a\u6570 actions_selection_counter = True change_list_template=\"my_change_list_template.html\" class PublishAdmin(admin.ModelAdmin): list_display = ('name', 'email',) inlines = [BookInline, ] admin.site.register(Book, BookAdmin) # \u7b2c\u4e00\u4e2a\u53c2\u6570\u53ef\u4ee5\u662f\u5217\u8868 admin.site.register(Publish,PublishAdmin) admin.site.register(Author)","title":"admin\u7684\u5b9a\u5236"},{"location":"#admin_2","text":"","title":"admin\u6e90\u7801\u89e3\u6790"},{"location":"#_123","text":"\u5355\u4f8b\u6a21\u5f0f\uff08Singleton Pattern\uff09 \u662f\u4e00\u79cd\u5e38\u7528\u7684\u8f6f\u4ef6\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u8be5\u6a21\u5f0f\u7684\u4e3b\u8981\u76ee\u7684\u662f\u786e\u4fdd \u67d0\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\u5b58\u5728 \u3002\u5f53\u4f60\u5e0c\u671b\u5728\u6574\u4e2a\u7cfb\u7edf\u4e2d\uff0c\u67d0\u4e2a\u7c7b\u53ea\u80fd\u51fa\u73b0\u4e00\u4e2a\u5b9e\u4f8b\u65f6\uff0c\u5355\u4f8b\u5bf9\u8c61\u5c31\u80fd\u6d3e\u4e0a\u7528\u573a\u3002 \u6bd4\u5982\uff0c\u67d0\u4e2a\u670d\u52a1\u5668\u7a0b\u5e8f\u7684\u914d\u7f6e\u4fe1\u606f\u5b58\u653e\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u5ba2\u6237\u7aef\u901a\u8fc7\u4e00\u4e2a AppConfig \u7684\u7c7b\u6765\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u7684\u4fe1\u606f\u3002\u5982\u679c\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\uff0c\u6709\u5f88\u591a\u5730\u65b9\u90fd\u9700\u8981\u4f7f\u7528\u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5f88\u591a\u5730\u65b9\u90fd\u9700\u8981\u521b\u5efa AppConfig \u5bf9\u8c61\u7684\u5b9e\u4f8b\uff0c\u8fd9\u5c31\u5bfc\u81f4\u7cfb\u7edf\u4e2d\u5b58\u5728\u591a\u4e2a AppConfig \u7684\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u800c\u8fd9\u6837\u4f1a\u4e25\u91cd\u6d6a\u8d39\u5185\u5b58\u8d44\u6e90\uff0c\u5c24\u5176\u662f\u5728\u914d\u7f6e\u6587\u4ef6\u5185\u5bb9\u5f88\u591a\u7684\u60c5\u51b5\u4e0b\u3002\u4e8b\u5b9e\u4e0a\uff0c\u7c7b\u4f3c AppConfig \u8fd9\u6837\u7684\u7c7b\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u7a0b\u5e8f\u8fd0\u884c\u671f\u95f4\u53ea\u5b58\u5728\u4e00\u4e2a\u5b9e\u4f8b\u5bf9\u8c61\u3002 \u5728 Python \u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u591a\u79cd\u65b9\u6cd5\u6765\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\uff1a \u4f7f\u7528\u6a21\u5757 \u4f7f\u7528 __new__ \u4f7f\u7528\u88c5\u9970\u5668\uff08decorator\uff09 \u4f7f\u7528\u5143\u7c7b\uff08metaclass\uff09","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"#1-__new__","text":"\u4e3a\u4e86\u4f7f\u7c7b\u53ea\u80fd\u51fa\u73b0\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 __new__ \u6765\u63a7\u5236\u5b9e\u4f8b\u7684\u521b\u5efa\u8fc7\u7a0b\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a class Singleton(object): _instance = None def __new__(cls, *args, **kw): if not cls._instance: cls._instance = super(Singleton, cls).__new__(cls, *args, **kw) return cls._instance class MyClass(Singleton): a = 1 \u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5c06\u7c7b\u7684\u5b9e\u4f8b\u548c\u4e00\u4e2a\u7c7b\u53d8\u91cf _instance \u5173\u8054\u8d77\u6765\uff0c\u5982\u679c cls._instance \u4e3a None \u5219\u521b\u5efa\u5b9e\u4f8b\uff0c\u5426\u5219\u76f4\u63a5\u8fd4\u56de cls._instance \u3002 \u6267\u884c\u60c5\u51b5\u5982\u4e0b\uff1a >>> one = MyClass() >>> two = MyClass() >>> one == two True >>> one is two True >>> id(one), id(two) (4303862608, 4303862608)","title":"\uff081\uff09\u4f7f\u7528 __new__"},{"location":"#2_8","text":"\u5176\u5b9e\uff0c Python \u7684\u6a21\u5757\u5c31\u662f\u5929\u7136\u7684\u5355\u4f8b\u6a21\u5f0f \uff0c\u56e0\u4e3a\u6a21\u5757\u5728\u7b2c\u4e00\u6b21\u5bfc\u5165\u65f6\uff0c\u4f1a\u751f\u6210 .pyc \u6587\u4ef6\uff0c\u5f53\u7b2c\u4e8c\u6b21\u5bfc\u5165\u65f6\uff0c\u5c31\u4f1a\u76f4\u63a5\u52a0\u8f7d .pyc \u6587\u4ef6\uff0c\u800c\u4e0d\u4f1a\u518d\u6b21\u6267\u884c\u6a21\u5757\u4ee3\u7801\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u628a\u76f8\u5173\u7684\u51fd\u6570\u548c\u6570\u636e\u5b9a\u4e49\u5728\u4e00\u4e2a\u6a21\u5757\u4e2d\uff0c\u5c31\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a\u5355\u4f8b\u5bf9\u8c61\u4e86\u3002\u5982\u679c\u6211\u4eec\u771f\u7684\u60f3\u8981\u4e00\u4e2a\u5355\u4f8b\u7c7b\uff0c\u53ef\u4ee5\u8003\u8651\u8fd9\u6837\u505a\uff1a # mysingleton.py class My_Singleton(object): def foo(self): pass my_singleton = My_Singleton() \u5c06\u4e0a\u9762\u7684\u4ee3\u7801\u4fdd\u5b58\u5728\u6587\u4ef6 mysingleton.py \u4e2d\uff0c\u7136\u540e\u8fd9\u6837\u4f7f\u7528\uff1a from mysingleton import my_singleton my_singleton.foo()","title":"\uff082\uff09\u4f7f\u7528\u6a21\u5757"},{"location":"#admin_3","text":"<1> \u5faa\u73af\u52a0\u8f7d\u6267\u884c\u6240\u6709\u5df2\u7ecf\u6ce8\u518c\u7684app\u4e2d\u7684admin.py\u6587\u4ef6 def autodiscover(): autodiscover_modules('admin', register_to=site) <2> \u6267\u884c\u4ee3\u7801 \uff03admin.py class BookAdmin(admin.ModelAdmin): list_display = (\"title\",'publishDate', 'price') admin.site.register(Book, BookAdmin) admin.site.register(Publish) <3> admin.site \u8fd9\u91cc\u5e94\u7528\u7684\u662f\u4e00\u4e2a\u5355\u4f8b\u6a21\u5f0f\uff0c\u5bf9\u4e8eAdminSite\u7c7b\u7684\u4e00\u4e2a\u5355\u4f8b\u6a21\u5f0f\uff0c\u6267\u884c\u7684\u6bcf\u4e00\u4e2aapp\u4e2d\u7684\u6bcf\u4e00\u4e2aadmin.site\u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61 <4> \u6267\u884cregister\u65b9\u6cd5 admin.site.register(Book, BookAdmin) admin.site.register(Publish) class ModelAdmin(BaseModelAdmin):pass def register(self, model_or_iterable, admin_class=None, **options): if not admin_class: admin_class = ModelAdmin # Instantiate the admin class to save in the registry self._registry[model] = admin_class(model, self) \u601d\u8003\uff1a\u5728\u6bcf\u4e00\u4e2aapp\u7684admin .py\u4e2d\u52a0\u4e0a print(admin.site._registry) \uff03 \u6267\u884c\u7ed3\u679c\uff1f \u5230\u8fd9\u91cc\uff0c\u6ce8\u518c\u7ed3\u675f\uff01 <5> admin\u7684URL\u914d\u7f6e urlpatterns = [ url(r'^admin/', admin.site.urls), ] class AdminSite(object): def get_urls(self): from django.conf.urls import url, include urlpatterns = [] # Add in each model's views, and create a list of valid URLS for the # app_index valid_app_labels = [] for model, model_admin in self._registry.items(): urlpatterns += [ url(r'^%s/%s/' % (model._meta.app_label, model._meta.model_name), include(model_admin.urls)), ] if model._meta.app_label not in valid_app_labels: valid_app_labels.append(model._meta.app_label) return urlpatterns @property def urls(self): return self.get_urls(), 'admin', self.name <6> url()\u65b9\u6cd5\u7684\u6269\u5c55\u5e94\u7528 from django.shortcuts import HttpResponse def test01(request): return HttpResponse(\"test01\") def test02(request): return HttpResponse(\"test02\") urlpatterns = [ url(r'^admin/', admin.site.urls), url(r'^yuan/', ([ url(r'^test01/', test01), url(r'^test02/', test02), ],None,None)), ] \u6269\u5c55\u4f18\u5316 from django.conf.urls import url,include from django.contrib import admin from django.shortcuts import HttpResponse def change_list_view(request): return HttpResponse(\"change_list_view\") def add_view(request): return HttpResponse(\"add_view\") def delete_view(request): return HttpResponse(\"delete_view\") def change_view(request): return HttpResponse(\"change_view\") def get_urls(): temp=[ url(r\"^$\".format(app_name,model_name),change_list_view), url(r\"^add/$\".format(app_name,model_name),add_view), url(r\"^\\d+/del/$\".format(app_name,model_name),delete_view), url(r\"^\\d+/change/$\".format(app_name,model_name),change_view), ] return temp url_list=[] for model_class,obj in admin.site._registry.items(): model_name=model_class._meta.model_name app_name=model_class._meta.app_label # temp=url(r\"{0}/{1}/\".format(app_name,model_name),(get_urls(),None,None)) temp=url(r\"{0}/{1}/\".format(app_name,model_name),include(get_urls())) url_list.append(temp) urlpatterns = [ url(r'^admin/', admin.site.urls), url(r'^yuan/', (url_list,None,None)), ]","title":"admin\u6267\u884c\u6d41\u7a0b"},{"location":"#django-_2","text":"\u77e5\u8bc6\u9884\u89c8 \u5206\u9875 \u4e2d\u95f4\u4ef6","title":"Django-\u8fdb\u9636"},{"location":"#_124","text":"","title":"\u5206\u9875"},{"location":"#djangopaginator_1","text":"","title":"Django\u7684\u5206\u9875\u5668\uff08paginator\uff09"},{"location":"#view_3","text":"from django.shortcuts import render,HttpResponse # Create your views here. from app01.models import * from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger def index(request): ''' \u6279\u91cf\u5bfc\u5165\u6570\u636e: Booklist=[] for i in range(100): Booklist.append(Book(title=\"book\"+str(i),price=30+i*i)) Book.objects.bulk_create(Booklist) ''' ''' \u5206\u9875\u5668\u7684\u4f7f\u7528: book_list=Book.objects.all() paginator = Paginator(book_list, 10) print(\"count:\",paginator.count) #\u6570\u636e\u603b\u6570 print(\"num_pages\",paginator.num_pages) #\u603b\u9875\u6570 print(\"page_range\",paginator.page_range) #\u9875\u7801\u7684\u5217\u8868 page1=paginator.page(1) #\u7b2c1\u9875\u7684page\u5bf9\u8c61 for i in page1: #\u904d\u5386\u7b2c1\u9875\u7684\u6240\u6709\u6570\u636e\u5bf9\u8c61 print(i) print(page1.object_list) #\u7b2c1\u9875\u7684\u6240\u6709\u6570\u636e page2=paginator.page(2) print(page2.has_next()) #\u662f\u5426\u6709\u4e0b\u4e00\u9875 print(page2.next_page_number()) #\u4e0b\u4e00\u9875\u7684\u9875\u7801 print(page2.has_previous()) #\u662f\u5426\u6709\u4e0a\u4e00\u9875 print(page2.previous_page_number()) #\u4e0a\u4e00\u9875\u7684\u9875\u7801 # \u629b\u9519 #page=paginator.page(12) # error:EmptyPage #page=paginator.page(\"z\") # error:PageNotAnInteger ''' book_list=Book.objects.all() paginator = Paginator(book_list, 10) page = request.GET.get('page',1) currentPage=int(page) try: print(page) book_list = paginator.page(page) except PageNotAnInteger: book_list = paginator.page(1) except EmptyPage: book_list = paginator.page(paginator.num_pages) return render(request,\"index.html\",{\"book_list\":book_list,\"paginator\":paginator,\"currentPage\":currentPage})","title":"view"},{"location":"#indexhtml_1","text":"<!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> <link rel=\"stylesheet\" href=\"https://cdn.bootcss.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\"> </head> <body> <div class=\"container\"> <h4>\u5206\u9875\u5668</h4> <ul> {% for book in book_list %} <li>{{ book.title }} -----{{ book.price }}</li> {% endfor %} </ul> <ul class=\"pagination\" id=\"pager\"> {% if book_list.has_previous %} <li class=\"previous\"><a href=\"/index/?page={{ book_list.previous_page_number }}\">\u4e0a\u4e00\u9875</a></li> {% else %} <li class=\"previous disabled\"><a href=\"#\">\u4e0a\u4e00\u9875</a></li> {% endif %} {% for num in paginator.page_range %} {% if num == currentPage %} <li class=\"item active\"><a href=\"/index/?page={{ num }}\">{{ num }}</a></li> {% else %} <li class=\"item\"><a href=\"/index/?page={{ num }}\">{{ num }}</a></li> {% endif %} {% endfor %} {% if book_list.has_next %} <li class=\"next\"><a href=\"/index/?page={{ book_list.next_page_number }}\">\u4e0b\u4e00\u9875</a></li> {% else %} <li class=\"next disabled\"><a href=\"#\">\u4e0b\u4e00\u9875</a></li> {% endif %} </ul> </div> </body> </html>","title":"index.html:"},{"location":"#_125","text":"def index(request): book_list=Book.objects.all() paginator = Paginator(book_list, 15) page = request.GET.get('page',1) currentPage=int(page) # \u5982\u679c\u9875\u6570\u5341\u5206\u591a\u65f6\uff0c\u6362\u53e6\u5916\u4e00\u79cd\u663e\u793a\u65b9\u5f0f if paginator.num_pages>30: if currentPage-5<1: pageRange=range(1,11) elif currentPage+5>paginator.num_pages: pageRange=range(currentPage-5,paginator.num_pages+1) else: pageRange=range(currentPage-5,currentPage+5) else: pageRange=paginator.page_range try: print(page) book_list = paginator.page(page) except PageNotAnInteger: book_list = paginator.page(1) except EmptyPage: book_list = paginator.page(paginator.num_pages) return render(request,\"index.html\",locals())","title":"\u6269\u5c55"},{"location":"#_126","text":"\"\"\" \u5206\u9875\u7ec4\u4ef6\u4f7f\u7528\u793a\u4f8b\uff1a obj = Pagination(request.GET.get('page',1),len(USER_LIST),request.path_info) page_user_list = USER_LIST[obj.start:obj.end] page_html = obj.page_html() return render(request,'index.html',{'users':page_user_list,'page_html':page_html}) \"\"\" class Pagination(object): def __init__(self,current_page,all_count,base_url,per_page_num=2,pager_count=11): \"\"\" \u5c01\u88c5\u5206\u9875\u76f8\u5173\u6570\u636e :param current_page: \u5f53\u524d\u9875 :param all_count: \u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u603b\u6761\u6570 :param per_page_num: \u6bcf\u9875\u663e\u793a\u7684\u6570\u636e\u6761\u6570 :param base_url: \u5206\u9875\u4e2d\u663e\u793a\u7684URL\u524d\u7f00 :param pager_count: \u6700\u591a\u663e\u793a\u7684\u9875\u7801\u4e2a\u6570 \"\"\" try: current_page = int(current_page) except Exception as e: current_page = 1 if current_page <1: current_page = 1 self.current_page = current_page self.all_count = all_count self.per_page_num = per_page_num self.base_url = base_url # \u603b\u9875\u7801 all_pager, tmp = divmod(all_count, per_page_num) if tmp: all_pager += 1 self.all_pager = all_pager self.pager_count = pager_count self.pager_count_half = int((pager_count - 1) / 2) @property def start(self): return (self.current_page - 1) * self.per_page_num @property def end(self): return self.current_page * self.per_page_num def page_html(self): # \u5982\u679c\u603b\u9875\u7801 < 11\u4e2a\uff1a if self.all_pager <= self.pager_count: pager_start = 1 pager_end = self.all_pager + 1 # \u603b\u9875\u7801 > 11 else: # \u5f53\u524d\u9875\u5982\u679c<=\u9875\u9762\u4e0a\u6700\u591a\u663e\u793a11/2\u4e2a\u9875\u7801 if self.current_page <= self.pager_count_half: pager_start = 1 pager_end = self.pager_count + 1 # \u5f53\u524d\u9875\u5927\u4e8e5 else: # \u9875\u7801\u7ffb\u5230\u6700\u540e if (self.current_page + self.pager_count_half) > self.all_pager: pager_end = self.all_pager + 1 pager_start = self.all_pager - self.pager_count + 1 else: pager_start = self.current_page - self.pager_count_half pager_end = self.current_page + self.pager_count_half + 1 page_html_list = [] first_page = '<li><a href=\"%s?page=%s\">\u9996\u9875</a></li>' % (self.base_url,1,) page_html_list.append(first_page) if self.current_page <= 1: prev_page = '<li class=\"disabled\"><a href=\"#\">\u4e0a\u4e00\u9875</a></li>' else: prev_page = '<li><a href=\"%s?page=%s\">\u4e0a\u4e00\u9875</a></li>' % (self.base_url,self.current_page - 1,) page_html_list.append(prev_page) for i in range(pager_start, pager_end): if i == self.current_page: temp = '<li class=\"active\"><a href=\"%s?page=%s\">%s</a></li>' % (self.base_url,i, i,) else: temp = '<li><a href=\"%s?page=%s\">%s</a></li>' % (self.base_url,i, i,) page_html_list.append(temp) if self.current_page >= self.all_pager: next_page = '<li class=\"disabled\"><a href=\"#\">\u4e0b\u4e00\u9875</a></li>' else: next_page = '<li><a href=\"%s?page=%s\">\u4e0b\u4e00\u9875</a></li>' % (self.base_url,self.current_page + 1,) page_html_list.append(next_page) last_page = '<li><a href=\"%s?page=%s\">\u5c3e\u9875</a></li>' % (self.base_url,self.all_pager,) page_html_list.append(last_page) return ''.join(page_html_list)","title":"\u81ea\u5b9a\u4e49\u5206\u9875\u5668"},{"location":"#_127","text":"","title":"\u4e2d\u95f4\u4ef6"},{"location":"#_128","text":"\u4e2d\u95f4\u4ef6\u987e\u540d\u601d\u4e49\uff0c\u662f\u4ecb\u4e8erequest\u4e0eresponse\u5904\u7406\u4e4b\u95f4\u7684\u4e00\u9053\u5904\u7406\u8fc7\u7a0b\uff0c\u76f8\u5bf9\u6bd4\u8f83\u8f7b\u91cf\u7ea7\uff0c\u5e76\u4e14\u5728\u5168\u5c40\u4e0a\u6539\u53d8django\u7684\u8f93\u5165\u4e0e\u8f93\u51fa\u3002\u56e0\u4e3a\u6539\u53d8\u7684\u662f\u5168\u5c40\uff0c\u6240\u4ee5\u9700\u8981\u8c28\u614e\u5b9e\u7528\uff0c\u7528\u4e0d\u597d\u4f1a\u5f71\u54cd\u5230\u6027\u80fd\u3002 Django\u7684\u4e2d\u95f4\u4ef6\u7684\u5b9a\u4e49\uff1a Middleware is a framework of hooks into Django\u2019s request/response processing. <br>It\u2019s a light, low-level \u201cplugin\u201d system for globally altering Django\u2019s input or output. \u5982\u679c\u4f60\u60f3\u4fee\u6539\u8bf7\u6c42\uff0c\u4f8b\u5982\u88ab\u4f20\u9001\u5230view\u4e2d\u7684 HttpRequest \u5bf9\u8c61\u3002 \u6216\u8005\u4f60\u60f3\u4fee\u6539view\u8fd4\u56de\u7684 HttpResponse \u5bf9\u8c61\uff0c\u8fd9\u4e9b\u90fd\u53ef\u4ee5\u901a\u8fc7\u4e2d\u95f4\u4ef6\u6765\u5b9e\u73b0\u3002 \u53ef\u80fd\u4f60\u8fd8\u60f3\u5728view\u6267\u884c\u4e4b\u524d\u505a\u4e00\u4e9b\u64cd\u4f5c\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u53ef\u4ee5\u7528 middleware\u6765\u5b9e\u73b0\u3002 \u5927\u5bb6\u53ef\u80fd\u9891\u7e41\u5728view\u4f7f\u7528 request.user \u5427\u3002 Django\u60f3\u5728\u6bcf\u4e2aview\u6267\u884c\u4e4b\u524d\u628auser\u8bbe\u7f6e\u4e3arequest\u7684\u5c5e\u6027\uff0c\u4e8e\u662f\u5c31\u7528\u4e86\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u6807\u3002\u6240\u4ee5Django\u63d0\u4f9b\u4e86\u53ef\u4ee5\u4fee\u6539request \u5bf9\u8c61\u7684\u4e2d\u95f4\u4ef6 AuthenticationMiddleware \u3002 Django\u9ed8\u8ba4\u7684 Middleware \uff1a MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', ] \u6bcf\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u90fd\u6709\u5177\u4f53\u7684\u529f\u80fd\u3002","title":"\u4e2d\u95f4\u4ef6\u7684\u6982\u5ff5"},{"location":"#_129","text":"\u4e2d\u95f4\u4ef6\u4e2d\u4e00\u5171\u6709\u56db\u4e2a\u65b9\u6cd5\uff1a process_request process_view process_exception process_response","title":"\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6"},{"location":"#process_requestprocess_response_1","text":"\u5f53\u7528\u6237\u53d1\u8d77\u8bf7\u6c42\u7684\u65f6\u5019\u4f1a\u4f9d\u6b21\u7ecf\u8fc7\u6240\u6709\u7684\u7684\u4e2d\u95f4\u4ef6\uff0c\u8fd9\u4e2a\u65f6\u5019\u7684\u8bf7\u6c42\u65f6process_request,\u6700\u540e\u5230\u8fbeviews\u7684\u51fd\u6570\u4e2d\uff0cviews\u51fd\u6570\u5904\u7406\u540e\uff0c\u5728\u4f9d\u6b21\u7a7f\u8fc7\u4e2d\u95f4\u4ef6\uff0c\u8fd9\u4e2a\u65f6\u5019\u662fprocess_response,\u6700\u540e\u8fd4\u56de\u7ed9\u8bf7\u6c42\u8005\u3002 \u4e0a\u8ff0\u622a\u56fe\u4e2d\u7684\u4e2d\u95f4\u4ef6\u90fd\u662fdjango\u4e2d\u7684\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\u4e00\u4e2a\u4e2d\u95f4\u4ef6\uff0c\u6211\u4eec\u53ef\u4ee5\u81ea\u5df1\u5199\u4e00\u4e2a\u7c7b\uff0c\u4f46\u662f\u5fc5\u987b\u7ee7\u627fMiddlewareMixin \u9700\u8981\u5bfc\u5165 from django.utils.deprecation import MiddlewareMixin in views: def index(request): print(\"view\u51fd\u6570...\") return HttpResponse(\"OK\") in Mymiddlewares.py\uff1a from django.utils.deprecation import MiddlewareMixin from django.shortcuts import HttpResponse class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response class Md2(MiddlewareMixin): def process_request(self,request): print(\"Md2\u8bf7\u6c42\") #return HttpResponse(\"Md2\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md2\u8fd4\u56de\") return response \u7ed3\u679c\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u6ce8\u610f\uff1a \u5982\u679c\u5f53\u8bf7\u6c42\u5230\u8fbe\u8bf7\u6c422\u7684\u65f6\u5019\u76f4\u63a5\u4e0d\u7b26\u5408\u6761\u4ef6\u8fd4\u56de\uff0c\u5373return HttpResponse(\"Md2\u4e2d\u65ad\")\uff0c\u7a0b\u5e8f\u5c06\u628a\u8bf7\u6c42\u76f4\u63a5\u53d1\u7ed9\u4e2d\u95f4\u4ef62\u8fd4\u56de\uff0c\u7136\u540e\u4f9d\u6b21\u8fd4\u56de\u5230\u8bf7\u6c42\u8005\uff0c\u7ed3\u679c\u5982\u4e0b\uff1a \u8fd4\u56deMd2\u4e2d\u65ad\u7684\u9875\u9762\uff0c\u540e\u53f0\u6253\u5370\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 Md2\u8fd4\u56de Md1\u8fd4\u56de \u6d41\u7a0b\u56fe\u5982\u4e0b\uff1a","title":"process_request\uff0cprocess_response"},{"location":"#process_view_1","text":"process_view(self, request, callback, callback_args, callback_kwargs) Mymiddlewares.py \u4fee\u6539\u5982\u4e0b from django.utils.deprecation import MiddlewareMixin from django.shortcuts import HttpResponse class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") #return HttpResponse(\"Md1\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): print(\"Md1view\") class Md2(MiddlewareMixin): def process_request(self,request): print(\"Md2\u8bf7\u6c42\") return HttpResponse(\"Md2\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md2\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): print(\"Md2view\") \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 Md1view Md2view view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u4e0b\u56fe\u8fdb\u884c\u5206\u6790\u4e0a\u9762\u7684\u8fc7\u7a0b\uff1a \u5f53\u6700\u540e\u4e00\u4e2a\u4e2d\u95f4\u7684process_request\u5230\u8fbe\u8def\u7531\u5173\u7cfb\u6620\u5c04\u4e4b\u540e\uff0c\u8fd4\u56de\u5230\u4e2d\u95f4\u4ef61\u7684process_view\uff0c\u7136\u540e\u4f9d\u6b21\u5f80\u4e0b\uff0c\u5230\u8fbeviews\u51fd\u6570\uff0c\u6700\u540e\u901a\u8fc7process_response\u4f9d\u6b21\u8fd4\u56de\u5230\u8fbe\u7528\u6237\u3002 process_view\u53ef\u4ee5\u7528\u6765\u8c03\u7528\u89c6\u56fe\u51fd\u6570\uff1a class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") #return HttpResponse(\"Md1\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): # return HttpResponse(\"hello\") response=callback(request,*callback_args,**callback_kwargs) return response \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u6ce8\u610f\uff1aprocess_view\u5982\u679c\u6709\u8fd4\u56de\u503c\uff0c\u4f1a\u8d8a\u8fc7\u5176\u4ed6\u7684process_view\u4ee5\u53ca\u89c6\u56fe\u51fd\u6570\uff0c\u4f46\u662f\u6240\u6709\u7684process_response\u90fd\u8fd8\u4f1a\u6267\u884c\u3002","title":"process_view"},{"location":"#process_exception_1","text":"process_exception(self, request, exception) \u793a\u4f8b\u4fee\u6539\u5982\u4e0b\uff1a class Md1(MiddlewareMixin): def process_request(self,request): print(\"Md1\u8bf7\u6c42\") #return HttpResponse(\"Md1\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md1\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): # return HttpResponse(\"hello\") # response=callback(request,*callback_args,**callback_kwargs) # return response print(\"md1 process_view...\") def process_exception(self): print(\"md1 process_exception...\") class Md2(MiddlewareMixin): def process_request(self,request): print(\"Md2\u8bf7\u6c42\") # return HttpResponse(\"Md2\u4e2d\u65ad\") def process_response(self,request,response): print(\"Md2\u8fd4\u56de\") return response def process_view(self, request, callback, callback_args, callback_kwargs): print(\"md2 process_view...\") def process_exception(self): print(\"md1 process_exception...\") \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 md1 process_view... md2 process_view... view\u51fd\u6570... Md2\u8fd4\u56de Md1\u8fd4\u56de \u6d41\u7a0b\u56fe\u5982\u4e0b\uff1a \u5f53views\u51fa\u73b0\u9519\u8bef\u65f6\uff1a \u5c06md2\u7684process_exception\u4fee\u6539\u5982\u4e0b\uff1a def process_exception(self,request,exception): print(\"md2 process_exception...\") return HttpResponse(\"error\") \u7ed3\u679c\u5982\u4e0b\uff1a Md1\u8bf7\u6c42 Md2\u8bf7\u6c42 md1 process_view... md2 process_view... view\u51fd\u6570... md2 process_exception... Md2\u8fd4\u56de Md1\u8fd4\u56de","title":"process_exception"}]}